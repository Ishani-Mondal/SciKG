{"title": [{"text": "Automatic Set Instance Extraction using the Web", "labels": [], "entities": [{"text": "Automatic Set Instance Extraction", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.6621648967266083}]}], "abstractContent": [{"text": "An important and well-studied problem is the production of semantic lexicons from a large corpus.", "labels": [], "entities": []}, {"text": "In this paper, we present a system named ASIA (Automatic Set Instance Acquirer), which takes in the name of a semantic class as input (e.g., \"car makers\") and automatically outputs its instances (e.g., \"ford\", \"nissan\", \"toyota\").", "labels": [], "entities": []}, {"text": "ASIA is based on recent advances in web-based set expansion-the problem of finding all instances of a set given a small number of \"seed\" instances.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.8780338168144226}, {"text": "web-based set expansion-the", "start_pos": 36, "end_pos": 63, "type": "TASK", "confidence": 0.7263699173927307}]}, {"text": "This approach effectively exploits web resources and can be easily adapted to different languages.", "labels": [], "entities": []}, {"text": "In brief, we use language-dependent hyponym patterns to find a noisy set of initial seeds, and then use a state-of-the-art language-independent set expansion system to expand these seeds.", "labels": [], "entities": []}, {"text": "The proposed approach matches or outper-forms prior systems on several English-language benchmarks.", "labels": [], "entities": []}, {"text": "It also shows excellent performance on three dozen additional benchmark problems from English, Chinese and Japanese, thus demonstrating language-independence.", "labels": [], "entities": []}], "introductionContent": [{"text": "An important and well-studied problem is the production of semantic lexicons for classes of interest; that is, the generation of all instances of a set (e.g., \"apple\", \"orange\", \"banana\") given a name of that set (e.g., \"fruits\").", "labels": [], "entities": []}, {"text": "This task is often addressed by linguistically analyzing very large collections of text), often using hand-constructed or machine-learned shallow linguistic patterns to detect hyponym instances.", "labels": [], "entities": []}, {"text": "A hyponym is a word or phrase whose semantic range is included within that of another word.", "labels": [], "entities": []}, {"text": "For example, x is a hyponym of y if x is a (kind of) y.", "labels": [], "entities": []}, {"text": "The opposite of hyponym is hypernym.", "labels": [], "entities": [{"text": "hyponym", "start_pos": 16, "end_pos": 23, "type": "METRIC", "confidence": 0.8980843424797058}, {"text": "hypernym", "start_pos": 27, "end_pos": 35, "type": "METRIC", "confidence": 0.9232523441314697}]}, {"text": "In this paper, we evaluate a novel approach to this problem, embodied in a system called ASIA 1 (Automatic Set Instance Acquirer).", "labels": [], "entities": []}, {"text": "ASIA takes a semantic class name as input (e.g., \"car makers\") and automatically outputs instances (e.g., \"ford\", \"nissan\", \"toyota\").", "labels": [], "entities": [{"text": "ASIA", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.8248025178909302}]}, {"text": "Unlike prior methods, ASIA makes heavy use of tools for web-based set expansion.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 22, "end_pos": 26, "type": "TASK", "confidence": 0.9255796670913696}, {"text": "web-based set expansion", "start_pos": 56, "end_pos": 79, "type": "TASK", "confidence": 0.724859376748403}]}, {"text": "Set expansion is the task of finding all instances of a set given a small number of example (seed) instances.", "labels": [], "entities": [{"text": "Set expansion", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.7359616905450821}]}, {"text": "ASIA uses SEAL (, a language-independent web-based system that performed extremely well on a large number of benchmark sets -given three correct seeds, SEAL obtained average MAP scores in the high 90's for 36 benchmark problems, including a dozen test problems each for English, Chinese and Japanese.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8574241995811462}, {"text": "MAP", "start_pos": 174, "end_pos": 177, "type": "METRIC", "confidence": 0.9570540189743042}]}, {"text": "SEAL works well in part because it can efficiently find and process many semi-structured web documents containing instances of the set being expanded.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.7722980976104736}]}, {"text": "shows some examples of SEAL's input and output.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 23, "end_pos": 27, "type": "TASK", "confidence": 0.9070454835891724}]}, {"text": "SEAL has been recently extended to be robust to errors in its initial set of seeds ( , and to use bootstrapping to iteratively improve its performance ( . These extensions allow ASIA to extract instances of sets from the Web, as follows.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.6866965889930725}]}, {"text": "First, given a semantic class name (e.g., \"fruits\"), ASIA uses a small set of language-dependent hyponym patterns (e.g., \"fruits such as \") to find a large but noisy set of seed instances.", "labels": [], "entities": []}, {"text": "Second, ASIA uses the extended version of SEAL to expand the noisy set of seeds.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 8, "end_pos": 12, "type": "TASK", "confidence": 0.8105359673500061}, {"text": "SEAL", "start_pos": 42, "end_pos": 46, "type": "METRIC", "confidence": 0.45483025908470154}]}, {"text": "ASIA's approach is motivated by the conjecture that for many natural classes, the amount of information available in semi-structured documents on the Web is much larger than the amount of information available in free-text documents; hence, it is natural to attempt to augment search for set instances in free-text with semi-structured document analysis.", "labels": [], "entities": []}, {"text": "We show that ASIA performs extremely well experimentally.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 13, "end_pos": 17, "type": "TASK", "confidence": 0.7869516015052795}]}, {"text": "On the 36 benchmarks used in (, which are relatively small closed sets (e.g., countries, constellations, NBA teams), ASIA has excellent performance for both recall and precision.", "labels": [], "entities": [{"text": "recall", "start_pos": 157, "end_pos": 163, "type": "METRIC", "confidence": 0.9981973767280579}, {"text": "precision", "start_pos": 168, "end_pos": 177, "type": "METRIC", "confidence": 0.9970274567604065}]}, {"text": "On four additional English-language benchmark problems (US states, countries, singers, and common fish), we compare to recent work by, and show comparable or better performance on each of these benchmarks; this is notable because ASIA requires less information than the work of Kozareva et al (their system requires a concept name and a seed).", "labels": [], "entities": [{"text": "ASIA", "start_pos": 230, "end_pos": 234, "type": "TASK", "confidence": 0.8487545847892761}]}, {"text": "We also compare ASIA on twelve additional benchmarks to the extended Wordnet 2.1 produced by Snow et al (), and show that for these twelve sets, ASIA produces more than five times as many set instances with much higher precision (98% versus 70%).", "labels": [], "entities": [{"text": "Wordnet 2.1 produced by Snow et al", "start_pos": 69, "end_pos": 103, "type": "DATASET", "confidence": 0.9439865606171745}, {"text": "precision", "start_pos": 219, "end_pos": 228, "type": "METRIC", "confidence": 0.997550904750824}]}, {"text": "Another advantage of ASIA's approach is that it is nearly language-independent: since the underlying set-expansion tools are language-independent, all that is needed to support anew target language is anew set of hyponym patterns for that language.", "labels": [], "entities": []}, {"text": "In this paper, we present experimental results for Chinese and Japanese, as well as English, to demonstrate this language-independence.", "labels": [], "entities": []}, {"text": "We present related work in Section 2, and explain our proposed approach for ASIA in Section 3.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 76, "end_pos": 80, "type": "TASK", "confidence": 0.9607266783714294}]}, {"text": "Section 4 presents the details of our experiments, as well as the experimental results.", "labels": [], "entities": []}, {"text": "A comparison of results are illustrated in Section 5, and the paper concludes in Section 6.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluated our approach using the evaluation set presented in (, which contains 36 manually constructed lists across three different languages: English, Chinese, and Japanese (12 lists per language).", "labels": [], "entities": []}, {"text": "Each list contains all instances of a particular semantic class in a certain language, and each instance contains a set of synonyms (e.g., USA, America).", "labels": [], "entities": []}, {"text": "There area total of 2515 instances, with an average of 70 instances per semantic class.", "labels": [], "entities": []}, {"text": "shows the datasets and their corresponding semantic class names that we use in our experiments.", "labels": [], "entities": []}, {"text": "Since the output of ASIA is a ranked list of extracted instances, we choose mean average precision (MAP) as our evaluation metric.", "labels": [], "entities": [{"text": "mean average precision (MAP)", "start_pos": 76, "end_pos": 104, "type": "METRIC", "confidence": 0.9443847139676412}]}, {"text": "MAP is commonly used in the field of Information Retrieval for evaluating ranked lists because it is sensitive to the entire ranking and it contains both recall and precision-oriented aspects.", "labels": [], "entities": [{"text": "Information Retrieval", "start_pos": 37, "end_pos": 58, "type": "TASK", "confidence": 0.7258021682500839}, {"text": "recall", "start_pos": 154, "end_pos": 160, "type": "METRIC", "confidence": 0.9968469738960266}, {"text": "precision-oriented", "start_pos": 165, "end_pos": 183, "type": "METRIC", "confidence": 0.9799255728721619}]}, {"text": "The MAP for multiple ranked lists is simply the mean value of average precisions calculated separately for each ranked list.", "labels": [], "entities": [{"text": "MAP", "start_pos": 4, "end_pos": 7, "type": "METRIC", "confidence": 0.9776157736778259}, {"text": "mean value of average precisions", "start_pos": 48, "end_pos": 80, "type": "METRIC", "confidence": 0.6405371308326722}]}, {"text": "We define the average precision of a single ranked list as: where L is a ranked list of extracted instances, r is the rank ranging from 1 to |L|, Prec(r) is the precision at rank r.", "labels": [], "entities": [{"text": "precision", "start_pos": 22, "end_pos": 31, "type": "METRIC", "confidence": 0.8584732413291931}, {"text": "Prec(r)", "start_pos": 146, "end_pos": 153, "type": "METRIC", "confidence": 0.9593111127614975}, {"text": "precision", "start_pos": 161, "end_pos": 170, "type": "METRIC", "confidence": 0.9931830763816833}]}, {"text": "isFresh(r) is a binary function for ensuring that, if a list contains multiple synonyms of the same instance, we do not evaluate that instance more than once.", "labels": [], "entities": []}, {"text": "More specifically, the function returns 1 if a) the synonym at r is correct, and b) it is the highest-ranked synonym of its instance in the list; it returns 0 otherwise.", "labels": [], "entities": []}, {"text": "For each semantic class in our dataset, the Provider first produces a noisy list of candidate instances, using its corresponding class name shown in.", "labels": [], "entities": []}, {"text": "This list is then expanded by the Expander and further improved by the Bootstrapper.", "labels": [], "entities": [{"text": "Bootstrapper", "start_pos": 71, "end_pos": 83, "type": "DATASET", "confidence": 0.9310963153839111}]}, {"text": "We present our experimental results in.", "labels": [], "entities": []}, {"text": "As illustrated, although the Provider performs badly, the Expander substantially improves the  quality of the initial list, and the Bootstrapper then enhances it furthermore.", "labels": [], "entities": []}, {"text": "On average, the Expander improves the performance of the Provider from 37% to 80% for English, 24% to 82% for Chinese, and 12% to 89% for Japanese.", "labels": [], "entities": []}, {"text": "The Bootstrapper then further improves the performance of the Expander to 82%, 87% and 91% respectively.", "labels": [], "entities": [{"text": "Bootstrapper", "start_pos": 4, "end_pos": 16, "type": "DATASET", "confidence": 0.6738964915275574}, {"text": "Expander", "start_pos": 62, "end_pos": 70, "type": "DATASET", "confidence": 0.7874006032943726}]}, {"text": "In addition, the results illustrate that the Bootstrapper is also effective even without the Expander; it directly improves the performance of the Provider from 37% to 77% for English, 24% to 52% for Chinese, and 12% to 39% for Japanese.", "labels": [], "entities": []}, {"text": "The simple back-off strategy seems to be effective as well.", "labels": [], "entities": []}, {"text": "There are five datasets (marked with * in) of which their hyponym phrases return zero web documents.", "labels": [], "entities": []}, {"text": "For those datasets, ASIA automatically uses the back-off strategy described in Section 3.1.", "labels": [], "entities": [{"text": "ASIA", "start_pos": 20, "end_pos": 24, "type": "TASK", "confidence": 0.9423722624778748}]}, {"text": "Considering only those five datasets, the Expander, on average, improves the performance of the Provider from 2% to 53% and the Bootstrapper then improves it to 55%.", "labels": [], "entities": [{"text": "Bootstrapper", "start_pos": 128, "end_pos": 140, "type": "DATASET", "confidence": 0.7442514896392822}]}], "tableCaptions": [{"text": " Table 1: Performance of set instance extraction for each dataset measured in MAP. NP is the Noisy  Instance Provider, NE is the Noisy Instance Expander, and BS is the Bootstrapper.", "labels": [], "entities": [{"text": "set instance extraction", "start_pos": 25, "end_pos": 48, "type": "TASK", "confidence": 0.7508516907691956}]}, {"text": " Table 2: Set instance extraction performance com- pared to Kozareva et al. We report our precision  for all semantic classes and at the same ranks re- ported in their work.", "labels": [], "entities": [{"text": "Set instance extraction", "start_pos": 10, "end_pos": 33, "type": "TASK", "confidence": 0.6571385264396667}, {"text": "precision", "start_pos": 90, "end_pos": 99, "type": "METRIC", "confidence": 0.9991748929023743}]}, {"text": " Table 3: Set instance extraction performance com- pared to Pasca. We report our precision for all se- mantic classes and at the same ranks reported in  his work.", "labels": [], "entities": [{"text": "precision", "start_pos": 81, "end_pos": 90, "type": "METRIC", "confidence": 0.9994866847991943}]}, {"text": " Table 4: Set instance extraction performance compared to Snow et al.", "labels": [], "entities": [{"text": "Set instance extraction", "start_pos": 10, "end_pos": 33, "type": "TASK", "confidence": 0.835986336072286}]}]}