{"title": [], "abstractContent": [{"text": "Large scale efforts are underway to create dependency treebanks and parsers for Hindi and other Indian languages.", "labels": [], "entities": []}, {"text": "Hindi, being a morphologically rich, flexible word order language, brings challenges such as handling non-projectivity in parsing.", "labels": [], "entities": []}, {"text": "In this work, we look at non-projectivity in Hyderabad Dependency Treebank (HyDT) for Hindi.", "labels": [], "entities": [{"text": "Hyderabad Dependency Treebank (HyDT)", "start_pos": 45, "end_pos": 81, "type": "DATASET", "confidence": 0.7733488331238428}]}, {"text": "Non-projectivity has been analysed from two perspectives: graph properties that restrict non-projectivity and linguistic phenomenon behind non-projectivity in HyDT.", "labels": [], "entities": []}, {"text": "Since Hindi has ample instances of non-projectivity (14% of all structures in HyDT are non-projective), it presents a case for an in depth study of this phenomenon fora better insight, from both of these perspectives.", "labels": [], "entities": []}, {"text": "We have looked at graph constriants like planarity, gap degree, edge degree and well-nestedness on structures in HyDT.", "labels": [], "entities": []}, {"text": "We also analyse non-projectivity in Hindi in terms of various linguistic parameters such as the causes of non-projectivity, its rigidity (possibility of reordering) and whether the reordered construction is the natural one.", "labels": [], "entities": []}], "introductionContent": [{"text": "Non-projectivity occurs when dependents do not either immediately follow or precede their heads in a sentence.", "labels": [], "entities": []}, {"text": "These dependents maybe spread out over a discontinuous region of the sentence.", "labels": [], "entities": []}, {"text": "It is well known that this poses problems for both theoretical grammar formalisms as well as parsing systems.", "labels": [], "entities": []}, {"text": "( Hindi is a verb final, flexible word order language and therefore, has frequent occurrences of non-projectivity in its dependency structures.", "labels": [], "entities": []}, {"text": "showed that a major chunk of errors in their parser is due to non-projectivity.", "labels": [], "entities": []}, {"text": "So, there is a need to analyse non-projectivity in Hindi fora better insight into such constructions.", "labels": [], "entities": []}, {"text": "We would like to say here, that as far as we are aware, there hasn't been any attempt to study nonprojectivity in Hindi before this work.", "labels": [], "entities": []}, {"text": "Our work is a step forward in this direction.", "labels": [], "entities": []}, {"text": "Non-projectivity can be analysed from two aspects.", "labels": [], "entities": []}, {"text": "a) In terms of graph properties which restrict non-projectivity and b) in terms of linguistic phenomenon giving rise to non-projectivity.", "labels": [], "entities": []}, {"text": "While a) gives an idea of the kind of grammar formalisms and parsing algorithms required to handle non-projective cases in a language, b) gives an insight into the linguistic cues necessary to identify non-projective sentences in a language.", "labels": [], "entities": []}, {"text": "Parsing systems can explore algorithms and make approximations based on the coverage of these graph properties on the treebank and linguistic cues can be used as features to restrict the generation of non-projective constructions.", "labels": [], "entities": []}, {"text": "Similarly, the analyses based on these aspects can also be used to come up with broad coverage grammar formalisms for the language.", "labels": [], "entities": []}, {"text": "Graph constraints such as projectivity, planarity, gap degree, edge degree and wellnestedness have been used in previous works to look at non-projective constructions in treebanks like PDT and DDT ().", "labels": [], "entities": []}, {"text": "We employ these constraints in our work too.", "labels": [], "entities": []}, {"text": "Apart from these graph constraints, we also look at non-projective constructions in terms of various parameters like factors leading to nonprojectivity, its rigidity (see Section 4), its approximate projective construction and whether its the natural one.", "labels": [], "entities": []}, {"text": "In this paper, we analyse dependency structures in Hyderabad Dependency Treebank (HyDT).", "labels": [], "entities": [{"text": "Hyderabad Dependency Treebank (HyDT)", "start_pos": 51, "end_pos": 87, "type": "DATASET", "confidence": 0.8754229346911112}]}, {"text": "HyDT is a pilot treebank containing dependency annotations for 1865 Hindi sentences.", "labels": [], "entities": [{"text": "HyDT", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9182993173599243}]}, {"text": "It uses the annotation scheme proposed by, based on the Paninian grammar formalism.", "labels": [], "entities": [{"text": "Paninian grammar formalism", "start_pos": 56, "end_pos": 82, "type": "DATASET", "confidence": 0.8131554325421652}]}, {"text": "This paper is organised as follows: In section 2, we give an overview of HyDT and the annotation scheme used.", "labels": [], "entities": [{"text": "HyDT", "start_pos": 73, "end_pos": 77, "type": "DATASET", "confidence": 0.8514980673789978}]}, {"text": "Section 3 discusses the graph properties that are used in our analysis and section 4 reports the experimental results on the coverage of these properties on HyDT.", "labels": [], "entities": [{"text": "HyDT", "start_pos": 157, "end_pos": 161, "type": "DATASET", "confidence": 0.9763903617858887}]}, {"text": "The linguistic analysis of non-projective constructions is discussed case by casein Section 5.", "labels": [], "entities": [{"text": "linguistic analysis of non-projective constructions", "start_pos": 4, "end_pos": 55, "type": "TASK", "confidence": 0.7099962115287781}]}, {"text": "The conclusions of this work are presented in section 6.", "labels": [], "entities": []}, {"text": "Section 7 gives directions for future works on non-projectivity for Hindi.", "labels": [], "entities": []}], "datasetContent": [{"text": "We report the percentage of structures that satisfy various graph properties in table 1.", "labels": [], "entities": []}, {"text": "In HyDT, we see that 14% of all structures are nonprojective.", "labels": [], "entities": []}, {"text": "The highest gap degree for structures in HyDT is 3 and in case of edge degree, it is 4.", "labels": [], "entities": []}, {"text": "Only 3 structures (1.5% approx.) have gap degree of more than 1 in a total of 262 non-projective sentences.", "labels": [], "entities": [{"text": "gap degree", "start_pos": 38, "end_pos": 48, "type": "METRIC", "confidence": 0.9690942466259003}]}, {"text": "When it comes to edge degree, only 8 structures (3%) have edge degree more than 1.", "labels": [], "entities": []}, {"text": "The difference in the coverage of gap degree 1 & 2 (and the fact that gap degree 1 accounts for 13.9% of the structures) shows that a parser should handle non-projective constructions at least till gap degree 1 for good coverage.", "labels": [], "entities": []}, {"text": "The same can be said about edge degree.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Results on HyDT", "labels": [], "entities": [{"text": "HyDT", "start_pos": 21, "end_pos": 25, "type": "DATASET", "confidence": 0.6355876326560974}]}, {"text": " Table 2: Non-projectivity class distribution in HyDT", "labels": [], "entities": [{"text": "HyDT", "start_pos": 49, "end_pos": 53, "type": "DATASET", "confidence": 0.8563690185546875}]}]}