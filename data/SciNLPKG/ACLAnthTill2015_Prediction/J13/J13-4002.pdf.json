{"title": [{"text": "Divisible Transition Systems and Multiplanar Dependency Parsing", "labels": [], "entities": []}], "abstractContent": [{"text": "Transition-based parsing is a widely used approach for dependency parsing that combines high efficiency with expressive feature models.", "labels": [], "entities": [{"text": "Transition-based parsing", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.6170363426208496}, {"text": "dependency parsing", "start_pos": 55, "end_pos": 73, "type": "TASK", "confidence": 0.847672164440155}]}, {"text": "Many different transition systems have been proposed, often formalized in slightly different frameworks.", "labels": [], "entities": []}, {"text": "In this article, we show that a large number of the known systems for projective dependency parsing can be viewed as variants of the same stack-based system with a small set of elementary transitions that can be composed into complex transitions and restricted in different ways.", "labels": [], "entities": [{"text": "projective dependency parsing", "start_pos": 70, "end_pos": 99, "type": "TASK", "confidence": 0.6490699350833893}]}, {"text": "We call these systems divisible transition systems and prove a number of theoretical results about their expressivity and complexity.", "labels": [], "entities": []}, {"text": "In particular, we characterize an important subclass called efficient divisible transition systems that parse planar dependency graphs in linear time.", "labels": [], "entities": []}, {"text": "We goon to show, first, how this system can be restricted to capture exactly the set of planar dependency trees and, secondly, how the system can be generalized to k-planar trees by making use of multiple stacks.", "labels": [], "entities": []}, {"text": "Using the first known efficient test for k-planarity, we investigate the coverage of k-planar trees in available dependency treebanks and find a very good fit for 2-planar trees.", "labels": [], "entities": []}, {"text": "We end with an experimental evaluation showing that our 2-planar parser gives significant improvements in parsing accuracy over the corresponding 1-planar and projective parsers for data sets with non-projective dependency trees and performs on a par with the widely used arc-eager pseudo-projective parser.", "labels": [], "entities": [{"text": "parsing", "start_pos": 106, "end_pos": 113, "type": "TASK", "confidence": 0.9540019631385803}, {"text": "accuracy", "start_pos": 114, "end_pos": 122, "type": "METRIC", "confidence": 0.9446873068809509}]}], "introductionContent": [{"text": "Syntactic parsing using dependency-based representations has attracted considerable interest in computational linguistics in recent years, both because it appears to provide a useful interface to downstream applications of parsing and because many dependency parsers combine competitive parsing accuracy with highly efficient processing.", "labels": [], "entities": [{"text": "Syntactic parsing", "start_pos": 0, "end_pos": 17, "type": "TASK", "confidence": 0.9259502291679382}, {"text": "dependency parsers", "start_pos": 248, "end_pos": 266, "type": "TASK", "confidence": 0.7069759368896484}]}, {"text": "Among the most efficient systems available are transition-based dependency parsers, which perform a greedy search through a transition system, or abstract state machines, that map sentences to dependency trees, guided by statistical models trained on treebank data (.", "labels": [], "entities": []}, {"text": "Transition systems for dependency parsing come in many different varieties, and our aim in the first part of this article is to deepen our understanding of these systems by analyzing them in a uniform framework.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 23, "end_pos": 41, "type": "TASK", "confidence": 0.8655756115913391}]}, {"text": "More precisely, we demonstrate that a number of well-known systems from the literature can all be viewed as variants of a stack-based system with five elementary transitions, where different variants are obtained by composing elementary transitions into complex transitions and by adding restrictions on their applicability.", "labels": [], "entities": []}, {"text": "We call such systems divisible transition systems and prove a number of theoretical results about their expressivity (which classes of dependency graphs they can handle) and their complexity (what upper bounds exist on the length of transition sequences).", "labels": [], "entities": []}, {"text": "In particular, we show that an important subclass called efficient divisible transition systems derive planar dependency graphs in time that is linear in the length of the sentence using standard inference methods for transition-based dependency parsing.", "labels": [], "entities": [{"text": "transition-based dependency parsing", "start_pos": 218, "end_pos": 253, "type": "TASK", "confidence": 0.6418402592341105}]}, {"text": "Even though many of these results were already known for particular systems, the general framework allows us to derive these results from more general principles and thereby to establish connections between previously unrelated systems.", "labels": [], "entities": []}, {"text": "We then goon to show that there are interesting cases of efficient divisible transition systems that have not yet been explored, notably a system that is sound and complete for planar dependency trees, a mild extension to the class of projective trees that are assumed inmost existing systems.", "labels": [], "entities": []}, {"text": "In the second part of the article, we take the planar parsing system as our point of departure for addressing the problem of non-projective dependency parsing.", "labels": [], "entities": [{"text": "non-projective dependency parsing", "start_pos": 125, "end_pos": 158, "type": "TASK", "confidence": 0.6508360306421915}]}, {"text": "Despite the impressive results obtained with dependency parsers limited to strictly projective dependency trees-that is, trees where every subtree has a contiguous yield-it is clear that most if not all languages have syntactic constructions whose analysis requires nonprojective trees.", "labels": [], "entities": []}, {"text": "It is also clear, however, that allowing arbitrary non-projective trees makes parsing computationally hard and does not seem justified by the data in available treebanks (.", "labels": [], "entities": [{"text": "parsing computationally", "start_pos": 78, "end_pos": 101, "type": "TASK", "confidence": 0.8771093487739563}]}, {"text": "This suggests that we should try to find a superset of projective trees that is permissive enough to encompass constructions found in natural language yet restricted enough to permit efficient parsing.", "labels": [], "entities": []}, {"text": "Proposals for such a set include trees with bounded arc degree, well-nested trees with bounded gap degree (, as well as trees parsable by a particular transition system such as that proposed by.", "labels": [], "entities": []}, {"text": "In the same vein, introduced the concept of multiplanarity, which generalizes the simple notion of planarity by saying that a dependency tree is k-planar if it can be decomposed into at most k planar subgraphs, a proposal that remains largely unexplored because an efficient test for k-planarity has been lacking.", "labels": [], "entities": []}, {"text": "In this article, we construct a test for k-planarity by reducing it to a graph coloring problem.", "labels": [], "entities": []}, {"text": "Applying this test to a wide range of dependency treebanks, we show that, although simple planarity (or 1-planarity) is clearly insufficient (), the set of 2-planar dependency trees gives a very good fit with the available data, better than many of the previously proposed superclasses of projective trees.", "labels": [], "entities": []}, {"text": "We then demonstrate how the transition system for planar dependency parsing can be generalized to k-planarity by introducing additional stacks.", "labels": [], "entities": [{"text": "planar dependency parsing", "start_pos": 50, "end_pos": 75, "type": "TASK", "confidence": 0.7182372808456421}]}, {"text": "In particular, we define a two-stack system for 2-planar dependency parsing that is provably correct and has linear complexity.", "labels": [], "entities": [{"text": "2-planar dependency parsing", "start_pos": 48, "end_pos": 75, "type": "TASK", "confidence": 0.6776557962099711}]}, {"text": "Finally, we show that the 2-planar parser, when evaluated on data sets with a non-negligible proportion of non-projective trees, gives significant improvements in parsing accuracy over the corresponding 1-planar and projective parsers, and provides comparable accuracy to the widely used arc-eager pseudo-projective parser.", "labels": [], "entities": [{"text": "parsing", "start_pos": 163, "end_pos": 170, "type": "TASK", "confidence": 0.9394161105155945}, {"text": "accuracy", "start_pos": 171, "end_pos": 179, "type": "METRIC", "confidence": 0.8837605118751526}, {"text": "accuracy", "start_pos": 260, "end_pos": 268, "type": "METRIC", "confidence": 0.9980290532112122}]}], "datasetContent": [{"text": "In this section, we present an experimental evaluation of the novel 1-planar and 2-planar transition systems in comparison to the widely used arc-eager projective system of Nivre (2003) (analyzed earlier in Example (4)).", "labels": [], "entities": []}, {"text": "Besides being the default parsing algorithm in MaltParser ), this system is also the basis of the ISBN Dependency Parser ( and.", "labels": [], "entities": []}, {"text": "In addition to a strictly projective arc-eager parser, we also include aversion that uses pseudo-projective parsing to recover non-projective arcs.", "labels": [], "entities": []}, {"text": "This is the most widely used method for nonprojective transition-based parsing and as such a competitive baseline for the 2-planar parser.", "labels": [], "entities": []}, {"text": "In order to make the comparison as exact as possible, we have chosen to implement all four systems in the MaltParser framework and use the same type of classifiers and feature models.", "labels": [], "entities": []}, {"text": "For the arc-eager baselines, we copy the set-up from the CoNLL-X shared task on dependency parsing, which includes the use of support vector machines with a polynomial kernel, history-based feature models tuned separately for each language, and pseudo-projective parsing with the Head encoding ( ).", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 80, "end_pos": 98, "type": "TASK", "confidence": 0.774060070514679}, {"text": "pseudo-projective parsing", "start_pos": 245, "end_pos": 270, "type": "TASK", "confidence": 0.6875962018966675}]}, {"text": "For the 1-planar and 2-planar parsers, we use the same type of classifier but modify the feature model to take into account the following systematic differences between the transition systems: r In both the 1-planar and 2-planar parser, we need to add features over the arc connecting the top node of the stack and the first node of the buffer (if any).", "labels": [], "entities": []}, {"text": "No such arc can exist in the arc-eager system used by the projective and pseudo-projective baseline systems.", "labels": [], "entities": []}, {"text": "r In the 2-planar parser, we need to add features over the top nodes of the inactive stack.", "labels": [], "entities": []}, {"text": "No such nodes exist in the 1-planar and arc-eager systems.", "labels": [], "entities": []}, {"text": "We did not perform extensive feature optimization experiments for the new systems, so it is likely that there is room for further improvement.", "labels": [], "entities": []}, {"text": "For replicability, the complete experimental settings are available at http://stp.lingfil.uu.se/\u223cnivre/exp.", "labels": [], "entities": [{"text": "replicability", "start_pos": 4, "end_pos": 17, "type": "TASK", "confidence": 0.983308732509613}]}, {"text": "shows parsing results for the same eight data sets from the CoNLL-X shared task that were investigated with respect to k-planarity in Section 4.2: Arabic, Czech, Danish, Dutch, German, Portuguese, Swedish, and Turkish.", "labels": [], "entities": []}, {"text": "The overall accuracy metric is labeled attachment score (LAS), the percentage of tokens that are assigned both the Parsing accuracy for projective, 1-planar, pseudo-projective, and 2-planar transition systems in MaltParser.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 12, "end_pos": 20, "type": "METRIC", "confidence": 0.9985023736953735}, {"text": "attachment score (LAS)", "start_pos": 39, "end_pos": 61, "type": "METRIC", "confidence": 0.9283350110054016}, {"text": "Parsing accuracy", "start_pos": 115, "end_pos": 131, "type": "METRIC", "confidence": 0.941331148147583}]}, {"text": "LAS = labeled attachment score; LP-NP = labeled precision on non-projective arcs; LR-NP = labeled recall on non-projective arcs.", "labels": [], "entities": [{"text": "LAS = labeled attachment score", "start_pos": 0, "end_pos": 30, "type": "METRIC", "confidence": 0.7576060175895691}, {"text": "precision", "start_pos": 48, "end_pos": 57, "type": "METRIC", "confidence": 0.6266119480133057}, {"text": "LR-NP", "start_pos": 82, "end_pos": 87, "type": "METRIC", "confidence": 0.9642658829689026}, {"text": "recall", "start_pos": 98, "end_pos": 104, "type": "METRIC", "confidence": 0.8653268814086914}]}, {"text": "Statistical significance of LAS differences reported at the 0.05 level using McNemar's test: \ud97b\udf59 = significantly better than one other system; \ud97b\udf59 \ud97b\udf59 = significantly better than two other systems; \ud97b\udf59 \ud97b\udf59 \ud97b\udf59 = significantly better than three other systems.", "labels": [], "entities": [{"text": "LAS", "start_pos": 28, "end_pos": 31, "type": "TASK", "confidence": 0.6047306656837463}, {"text": "McNemar's test", "start_pos": 77, "end_pos": 91, "type": "DATASET", "confidence": 0.7933728893597921}]}, {"text": "correct head and the correct label.", "labels": [], "entities": [{"text": "head", "start_pos": 8, "end_pos": 12, "type": "METRIC", "confidence": 0.9612752795219421}]}, {"text": "In addition, we report labeled precision (LP-NP) and recall (LR-NP) specifically on non-projective dependency arcs, where an arc (i, j) is taken to be non-projective if and only if there is some node k such that min(i, j) < k < max(i, j) and not i \u2192 * k.", "labels": [], "entities": [{"text": "precision", "start_pos": 31, "end_pos": 40, "type": "METRIC", "confidence": 0.8062713742256165}, {"text": "recall", "start_pos": 53, "end_pos": 59, "type": "METRIC", "confidence": 0.9994755387306213}]}, {"text": "Precision is the percentage of non-projective arcs output by the system that are correct, and recall is the percentage of non-projective arcs in the gold standard that are output by the system.", "labels": [], "entities": [{"text": "Precision", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.9937111139297485}, {"text": "recall", "start_pos": 94, "end_pos": 100, "type": "METRIC", "confidence": 0.9996390342712402}]}, {"text": "Note that, although precision is undefined for the projective parser because it does not output any non-projective arcs, recall may nevertheless be greater than zero because arcs that are non-projective in the gold standard can be projective in the output of the parser.", "labels": [], "entities": [{"text": "precision", "start_pos": 20, "end_pos": 29, "type": "METRIC", "confidence": 0.99919193983078}, {"text": "recall", "start_pos": 121, "end_pos": 127, "type": "METRIC", "confidence": 0.9996504783630371}]}, {"text": "Looking first at the overall LAS results, we see that the 2-planar parser outperforms both the 1-planar and the projective parser for languages with a high proportion of non-projective trees (\u2265 19%): Czech, Dutch, German, and Portuguese.", "labels": [], "entities": [{"text": "LAS", "start_pos": 29, "end_pos": 32, "type": "TASK", "confidence": 0.5289698243141174}]}, {"text": "This is inline with our expectations, given the substantially higher coverage of the 2-planar parser for non-projective structures, and the difference is statistically significant at the 0.05 level for all languages in this group (McNemar's test).", "labels": [], "entities": []}, {"text": "For three of these languages, the 2-planar parser also outperforms the pseudo-projective parser, although the differences are not statistically significant, and only in the case of Dutch is the pseudo-projective parser significantly better.", "labels": [], "entities": []}, {"text": "Given the relatively small difference in coverage between the projective and 1-planar parser, one would expect these systems to have very similar performance, and this is also what we find except for Portuguese where the 1-planar parser is significantly better than the projective arc-eager parser.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1  Proportion of dependency trees classified by projectivity, planarity, k-planarity, and  ill-nestedness in a sample of treebanks.", "labels": [], "entities": []}, {"text": " Table 2  Parsing accuracy for projective, 1-planar, pseudo-projective, and 2-planar transition systems  in MaltParser. LAS = labeled attachment score; LP-NP = labeled precision on non-projective  arcs; LR-NP = labeled recall on non-projective arcs. Statistical significance of LAS differences  reported at the 0.05 level using McNemar's test: \ud97b\udf59 = significantly better than one other system;  \ud97b\udf59 \ud97b\udf59 = significantly better than two other systems; \ud97b\udf59 \ud97b\udf59 \ud97b\udf59 = significantly better than three other systems.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9817636609077454}, {"text": "LAS", "start_pos": 120, "end_pos": 123, "type": "METRIC", "confidence": 0.9774909019470215}, {"text": "labeled attachment score", "start_pos": 126, "end_pos": 150, "type": "METRIC", "confidence": 0.7694279352823893}, {"text": "precision", "start_pos": 168, "end_pos": 177, "type": "METRIC", "confidence": 0.4951545298099518}, {"text": "recall", "start_pos": 219, "end_pos": 225, "type": "METRIC", "confidence": 0.8016306757926941}, {"text": "McNemar's test", "start_pos": 328, "end_pos": 342, "type": "DATASET", "confidence": 0.779433012008667}]}]}