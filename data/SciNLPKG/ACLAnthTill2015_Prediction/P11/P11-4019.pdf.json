{"title": [{"text": "SystemT: A Declarative Information Extraction System", "labels": [], "entities": [{"text": "SystemT", "start_pos": 0, "end_pos": 7, "type": "TASK", "confidence": 0.7390245199203491}]}], "abstractContent": [{"text": "Emerging text-intensive enterprise applications such as social analytics and semantic search pose new challenges of scalability and usability to Information Extraction (IE) systems.", "labels": [], "entities": []}, {"text": "This paper presents SystemT, a declarative IE system that addresses these challenges and has been deployed in a wide range of enterprise applications.", "labels": [], "entities": []}, {"text": "SystemT facilitates the development of high quality complex annota-tors by providing a highly expressive language and an advanced development environment.", "labels": [], "entities": []}, {"text": "It also includes a cost-based optimizer and a high-performance, flexible runtime with minimum memory footprint.", "labels": [], "entities": []}, {"text": "We present SystemT as a useful resource that is freely available, and as an opportunity to promote research in building scalable and usable IE systems.", "labels": [], "entities": []}], "introductionContent": [{"text": "Information extraction (IE) refers to the extraction of structured information from text documents.", "labels": [], "entities": [{"text": "Information extraction (IE)", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.8730784773826599}, {"text": "extraction of structured information from text documents", "start_pos": 42, "end_pos": 98, "type": "TASK", "confidence": 0.6342784677233014}]}, {"text": "In recent years, text analytics have become the driving force for many emerging enterprise applications such as compliance and data redaction.", "labels": [], "entities": [{"text": "text analytics", "start_pos": 17, "end_pos": 31, "type": "TASK", "confidence": 0.7644041478633881}, {"text": "data redaction", "start_pos": 127, "end_pos": 141, "type": "TASK", "confidence": 0.7392722964286804}]}, {"text": "In addition, the inclusion of text has also been increasingly important for many traditional enterprise applications such as business intelligence.", "labels": [], "entities": []}, {"text": "Not surprisingly, the use of information extraction has dramatically increased within the enterprise over the years.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 29, "end_pos": 51, "type": "TASK", "confidence": 0.8263703286647797}]}, {"text": "While the traditional requirement of extraction quality remains critical, enterprise applications pose several two challenges to IE systems: 1.Scalability: Enterprise applications operate overlarge volumes of data, often orders of magnitude larger than classical IE corpora.", "labels": [], "entities": [{"text": "IE", "start_pos": 129, "end_pos": 131, "type": "TASK", "confidence": 0.9614364504814148}]}, {"text": "An IE system should be able to operate at those scales without compromising its execution efficiency or memory consumption.", "labels": [], "entities": []}, {"text": "2.Usability: Building an accurate IE system is an inherently labor intensive process.", "labels": [], "entities": [{"text": "IE", "start_pos": 34, "end_pos": 36, "type": "TASK", "confidence": 0.9650189876556396}]}, {"text": "Therefore, the usability of an enterprise IE system in terms of ease of development and maintenance is crucial for ensuring healthy product cycle and timely handling of customer complains.", "labels": [], "entities": [{"text": "IE", "start_pos": 42, "end_pos": 44, "type": "TASK", "confidence": 0.8286533355712891}]}, {"text": "Traditionally, IE systems have been built from individual extraction components consisting of rules or machine learning models.", "labels": [], "entities": [{"text": "IE", "start_pos": 15, "end_pos": 17, "type": "TASK", "confidence": 0.9892277717590332}]}, {"text": "These individual components are then connected procedurally in a programming language such as C++, Perl or Java.", "labels": [], "entities": []}, {"text": "Such procedural logic towards IE cannot meet the increasing scalability and usability requirements in the enterprise (.", "labels": [], "entities": [{"text": "IE", "start_pos": 30, "end_pos": 32, "type": "TASK", "confidence": 0.9572195410728455}]}, {"text": "Three decades ago, the database community faced similar scalability and expressivity challenges in accessing structured information.", "labels": [], "entities": []}, {"text": "The community addressed these problems by introducing a relational algebra formalism and an associated declarative query language SQL.", "labels": [], "entities": []}, {"text": "Borrowing ideas from the database community, several systems ( have been builtin recent years taking an alternative declarative approach to information extraction.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 140, "end_pos": 162, "type": "TASK", "confidence": 0.7906104326248169}]}, {"text": "Instead of using procedural logic to implement the extraction task, declarative IE systems separate the description of what to extract from how to extract it, allowing the IE developer to build complex extrac- In this demonstration, we showcase one such declarative IE system called SystemT, designed to address the scalability and usability challenges.", "labels": [], "entities": []}, {"text": "We illustrate how SystemT, currently deployed in a multitude of real-world applications and commercial products, can be used to develop and maintain IE annotators for enterprise applications.", "labels": [], "entities": []}, {"text": "A free version of SystemT is available at http://www.alphaworks.ibm.com/tech/systemt.", "labels": [], "entities": []}, {"text": "depicts the architecture of SystemT.", "labels": [], "entities": []}, {"text": "The system consists of two major components: the Development Environment and the Runtime Environment.", "labels": [], "entities": []}, {"text": "The SystemT Development Environment supports the iterative process of constructing and refining rules for information extraction.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 106, "end_pos": 128, "type": "TASK", "confidence": 0.8190477192401886}]}, {"text": "The rules are specified in a declarative language called AQL (F..", "labels": [], "entities": []}, {"text": "The Development Environment provides facilities for executing rules over a given corpus of representative documents and visualizing the results of the execution.", "labels": [], "entities": []}, {"text": "Once a developer is satisfied with the results that her rules produce on these documents, she can publish her annotator.", "labels": [], "entities": []}], "datasetContent": [{"text": "As discussed in Section 1, our goal in building SystemT was to address the scalability and usability Application Type Type of Platform brand management server-side business insights server-side client-side mashups client-side compliance server-side search (email, web, patent) server-side security server-side server-side mashups server-side: Types of applications using SystemT challenges posed by enterprise applications.", "labels": [], "entities": [{"text": "Platform brand management server-side business insights server-side client-side mashups client-side compliance server-side search (email, web, patent) server-side security server-side server-side mashups server-side", "start_pos": 126, "end_pos": 341, "type": "TASK", "confidence": 0.7535355870540326}]}, {"text": "As such, our evaluation focuses on these two dimensions.", "labels": [], "entities": []}, {"text": "presents a diverse set of enterprise applications currently using SystemT.", "labels": [], "entities": []}, {"text": "SystemT has been deployed in both client-side applications with strict memory constraints, as well as on applications on the cloud, where it can process petabytes of data in parallel.", "labels": [], "entities": []}, {"text": "The focus on scalability in the design of SystemT is essential for its flexible execution model.", "labels": [], "entities": []}, {"text": "First of all, efficient execution plans are generated automatically by the SystemT Optimizer based on sample document collections.", "labels": [], "entities": []}, {"text": "This ensures that the same annotator can be executed efficiently for different types of document collections.", "labels": [], "entities": []}, {"text": "In fact, our previous experimental study shows that the execution plan generated by the SystemT optimizer can be 20 times or more faster than a manually constructed plan (F..", "labels": [], "entities": []}, {"text": "Furthermore, the Runtime Environment of SystemT results in compact memory footprint and allows SystemT to be embedded in applications with strict memory requirements as small as 10MB.", "labels": [], "entities": []}], "tableCaptions": []}