{"title": [{"text": "Parsing Free Word Order Languages in the Paninian Framework", "labels": [], "entities": [{"text": "Parsing Free Word Order Languages", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.8401647210121155}, {"text": "Paninian Framework", "start_pos": 41, "end_pos": 59, "type": "DATASET", "confidence": 0.9839448034763336}]}], "abstractContent": [{"text": "There is a need to develop a suitable computational grammar formalism for free word order languages for two reasons: First, a suitably designed formalism is likely to be more efficient.", "labels": [], "entities": []}, {"text": "Second, such a formalism is also likely to be linguistically more elegant and satisfying.", "labels": [], "entities": []}, {"text": "In this paper, we describe such a formalism, called the Paninian framework, that has been successfully applied to Indian languages.", "labels": [], "entities": []}, {"text": "This paper shows that the Paninian framework applied to modern Indian languages gives an elegant account of the relation between surface form (vib-hakti) and semantic (karaka) roles.", "labels": [], "entities": []}, {"text": "The mapping is elegant and compact.", "labels": [], "entities": []}, {"text": "The same basic account also explains active-passives and complex sentences.", "labels": [], "entities": []}, {"text": "This suggests that the solution is not just adhoc but has a deeper underlying unity.", "labels": [], "entities": []}, {"text": "A constraint based parser is described for the framework.", "labels": [], "entities": []}, {"text": "The constraints problem reduces to bi-partite graph matching problem because of the nature of constraints.", "labels": [], "entities": []}, {"text": "Efficient solutions are known for these problems.", "labels": [], "entities": []}, {"text": "It is interesting to observe that such a parser (de-signed for free word order languages) compares well in asymptotic time complexity with the parser for context free grammars (CFGs) which are basically designed for positional languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "A majority of human languages including Indian and other languages have relatively free word order.", "labels": [], "entities": []}, {"text": "tn free word order languages, order of words contains only secondary information such as emphasis etc.", "labels": [], "entities": []}, {"text": "Primary information relating to 'gross' meaning (e.g., one that includes semantic relationships) is contained elsewhere.", "labels": [], "entities": []}, {"text": "Most existing computational grammars are based on context free grammars which are basically positional grammars.", "labels": [], "entities": []}, {"text": "It is important to develop a suitable computational grammar formalism for free word order languages for two reasons: 1.", "labels": [], "entities": []}, {"text": "A suitably designed formalism will be more efficient because it will be able to make use of primary sources of information directly.", "labels": [], "entities": []}, {"text": "2. Such a formalism is also likely to be linguistically more elegant and satisfying.", "labels": [], "entities": []}, {"text": "Since it will be able to relate to primary sources of information, the grammar is likely to be more economical and easier to write.", "labels": [], "entities": []}, {"text": "In this paper, we describe such a formalism, called the Paninian framework, that has been successfully applied to Indian languages.", "labels": [], "entities": []}, {"text": "1 It uses the notion of karaka relations between verbs and nouns in a sentence.", "labels": [], "entities": []}, {"text": "The notion of karaka relations is central to the Paninian model.", "labels": [], "entities": []}, {"text": "The karaka relations are syntactico-semantic (or semantico-syntactic) relations between the verbals and other related constituents in a sentence.", "labels": [], "entities": []}, {"text": "They by themselves do not give the semantics.", "labels": [], "entities": []}, {"text": "Instead they specify relations which mediate between vibhakti of nominals and verb forms on one hand and semantic relations on the other,).", "labels": [], "entities": []}, {"text": "Two of the important karakas are karta karaka and karma karaka.", "labels": [], "entities": []}, {"text": "Frequently, the karta karaka maps to agent theta role, and the karma to theme or goal theta role.", "labels": [], "entities": []}, {"text": "Here we will not argue for the linguistic significance of karaka relations and differences with theta relations, as that has been done elsewhere ().", "labels": [], "entities": []}, {"text": "In summary, karta karaka is that participant in the action that is most independent.", "labels": [], "entities": []}, {"text": "At times, it turns out to be the agent.", "labels": [], "entities": []}, {"text": "But that need not be so.", "labels": [], "entities": []}, {"text": "Thus, 'boy' and 'key' are respectively the karta karakas in the following sentences 1The Paninian framework was originally designed more than two millennia ago for writing a grammar of Sanskrit; it has been adapted by us to deal with modern Indian languages.", "labels": [], "entities": []}, {"text": "The key opened the lock.", "labels": [], "entities": []}, {"text": "Note that in the first sentence, the karta (boy) maps to agent theta role, while in the second, karta (key) maps to instrument theta role.", "labels": [], "entities": []}, {"text": "As part of this framework, a mapping is specified between karaka relations and vibhakti (which covers A.", "labels": [], "entities": []}, {"text": "2 collectively case endings, post-positional markers, etc.).", "labels": [], "entities": []}, {"text": "This mapping between karakas and vibhakti depends on the verb and its tense aspect modality (TAM) label.", "labels": [], "entities": []}, {"text": "The mapping is represented by two structures: default karaka charts and karaka chart transformations.", "labels": [], "entities": []}, {"text": "The default karaka chart fora verb or a class of verbs gives the mapping for the TAM label tA_hE called basic.", "labels": [], "entities": [{"text": "TAM label tA_hE", "start_pos": 81, "end_pos": 96, "type": "METRIC", "confidence": 0.6919674396514892}]}, {"text": "It specifies the vibhakti permitted for the applicable karaka relations fora verb when the verb has the basic TAM label.", "labels": [], "entities": [{"text": "TAM", "start_pos": 110, "end_pos": 113, "type": "METRIC", "confidence": 0.86491459608078}]}, {"text": "This basic TAM label roughly corresponds to present indefinite tense and is purely syntactic in nature.", "labels": [], "entities": []}, {"text": "1 TAM labels there are karaka chart transformation rules.", "labels": [], "entities": [{"text": "TAM", "start_pos": 2, "end_pos": 5, "type": "METRIC", "confidence": 0.9393119215965271}, {"text": "karaka chart transformation", "start_pos": 23, "end_pos": 50, "type": "TASK", "confidence": 0.5730984409650167}]}, {"text": "Thus, fora given verb with some TAM label, appropriate karaka chart can be obtained using its basic karaka chart and the transformation rule B.2 depending on its TAM label.", "labels": [], "entities": [{"text": "TAM", "start_pos": 32, "end_pos": 35, "type": "METRIC", "confidence": 0.9306963086128235}]}, {"text": "2 In Hindi for instance, the basic TAM label is tA_hE (which roughly stands for the present indefinite).", "labels": [], "entities": [{"text": "TAM", "start_pos": 35, "end_pos": 38, "type": "METRIC", "confidence": 0.6743146181106567}]}, {"text": "The default karaka chart for three of the B.3 karakas is given in.", "labels": [], "entities": []}, {"text": "This explains the vibhaktis in sentences A.1 to A.2.", "labels": [], "entities": []}, {"text": "In A.1 and A.2, 'Ram' is karta and 'Mohan' is karma, because of their vibhakti markers \u00a2 and ko, respectively.", "labels": [], "entities": []}, {"text": "3 (Note that B.4 'rAma' is followed by \u00a2 or empty postposition, and 'mohana' by 'ko' postposition.)", "labels": [], "entities": []}, {"text": "A.I rAma mohana ko pltatA hE.", "labels": [], "entities": []}, {"text": "2The transformation rules area device to represent the karaka charts more compactly.", "labels": [], "entities": []}, {"text": "However, as is obvious, they affect the karaka charts and not the parse structure.", "labels": [], "entities": []}, {"text": "Therefore, they are different from transformational granmlars.", "labels": [], "entities": []}, {"text": "Formally, these rules can be eliminated by having separate karaka charts for each TAM label.", "labels": [], "entities": []}, {"text": "But one would miss the liguistic generalization of relating the karaka charts based on TAM labels in a systematic manner.", "labels": [], "entities": []}, {"text": "3In the present examples karta and karma tm'n out to be agent and theme, respectively.", "labels": [], "entities": []}, {"text": "In general, the transformations affect not only the vibhakti of karta but also that of other karakas.", "labels": [], "entities": []}, {"text": "They also 'delete' karaka roles at times, that is, the 'deleted' karaka roles must not occur in the sentence.", "labels": [], "entities": []}, {"text": "The Paninian framework is similar to the broad class of case based grammars.", "labels": [], "entities": []}, {"text": "What distinguishes the Paninian framework is the use of karaka relations rather than theta roles, and the neat dependence of the karaka vibhakti mapping on TAMs and the transformation rules, in case of Indian languages.", "labels": [], "entities": []}, {"text": "The same principle also solves the problem of karaka assignment for complex sentences (Discussed later in Sec. 3.)", "labels": [], "entities": [{"text": "karaka assignment", "start_pos": 46, "end_pos": 63, "type": "TASK", "confidence": 0.7669672667980194}]}], "datasetContent": [], "tableCaptions": []}