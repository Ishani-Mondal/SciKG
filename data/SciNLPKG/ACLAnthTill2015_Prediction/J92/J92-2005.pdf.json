{"title": [{"text": "Incremental Processing and the Hierarchical Lexicon", "labels": [], "entities": [{"text": "Incremental Processing", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.9021486639976501}]}], "abstractContent": [{"text": "Hierarchical lexicon structures are not only of great importance for the nonredundant representation of lexical information, they may also contribute to the efficiency of the actual processing of natural language.", "labels": [], "entities": []}, {"text": "Two parsing techniques that render the parsing process efficient are presented.", "labels": [], "entities": [{"text": "parsing", "start_pos": 4, "end_pos": 11, "type": "TASK", "confidence": 0.9714239239692688}, {"text": "parsing process", "start_pos": 39, "end_pos": 54, "type": "TASK", "confidence": 0.8923631310462952}]}, {"text": "Windowing is a technique for incrementally accessing the hierarchical lexicon.", "labels": [], "entities": []}, {"text": "Lexical preferencing implements preferences within the parsing process as a natural consequence of the hierarchical structure of the lexicon.", "labels": [], "entities": [{"text": "Lexical preferencing", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.854748547077179}]}, {"text": "Within a proof-theoretic approach to Categorial Grammar it is possible to implement these techniques in a formal and principled way.", "labels": [], "entities": [{"text": "Categorial Grammar", "start_pos": 37, "end_pos": 55, "type": "TASK", "confidence": 0.8587387204170227}]}, {"text": "Special attention is paid to idiomatic expressions.", "labels": [], "entities": []}], "introductionContent": [{"text": "The main reasons mentioned for the considerable attention paid to hierarchical lexicon structures are the fact that redundancy in the lexicon is avoided, and that structuring the lexicon facilitates the development of large and complex lexicons.", "labels": [], "entities": []}, {"text": "No attention has, however, been paid to the role the hierarchical lexicon could play in natural language processing.", "labels": [], "entities": [{"text": "natural language processing", "start_pos": 88, "end_pos": 115, "type": "TASK", "confidence": 0.6375589072704315}]}, {"text": "Categorial Grammar (CG) has an interest in efficient and psychologically plausible, at least incremental, processing.", "labels": [], "entities": [{"text": "Categorial Grammar (CG)", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.8414812386035919}]}, {"text": "Although CG is a radically lexicalist grammatical theory, little attention has been paid to the structure of the lexicon.", "labels": [], "entities": []}, {"text": "The aim of the present article is to bring CG, the hierarchical lexicon, and incremental processing together, to investigate the role of the hierarchical lexicon during incremental parsing with categorial grammars.", "labels": [], "entities": []}, {"text": "The rules and derivations of a categorial grammar do not describe syntactic structures, but represent the proceedings of the parser while constructing a semantic representation of a sentence.", "labels": [], "entities": []}, {"text": "This property of CG is referred to as representational nonautonomy.", "labels": [], "entities": []}, {"text": "It will be shown that especially in the case of ambiguity, the combination of a hierarchical lexicon structure and representational nonautonomy provides efficient ways of dealing with ambiguities: within a proof-theoretic approach to CG, rules that allow the parser to reason about the structure of the lexicon are presented.", "labels": [], "entities": []}, {"text": "Two parsing techniques are presented.", "labels": [], "entities": []}, {"text": "Windowing is a technique for incrementally accessing the hierarchical lexicon.", "labels": [], "entities": []}, {"text": "While incrementally parsing the sentence, the parser commits itself to lexical information it can commit to, leaving other choices implicit in the hierarchical lexical structure of the elements in the input.", "labels": [], "entities": []}, {"text": "Lexical preferencing implements preferences in the parsing process as a natural consequence of the hierarchical structure of the lexicon: information lower on in the hierarchical lexicon is preferred over more general information.", "labels": [], "entities": [{"text": "Lexical preferencing", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.8510593175888062}]}, {"text": "Idiomatic expressions are presented as an example of these preferences: an idiomatic expression is preferably interpreted as such, and not in the nonidiomatic interpretation of which the head of the idiom is apart.", "labels": [], "entities": []}, {"text": "where + is a noncommutative, nonassociative concatenation operator.", "labels": [], "entities": []}, {"text": "Concatenation of some \u00a2~ with the empty prosodic element c results in 4.", "labels": [], "entities": []}, {"text": "The L-calculus extends the power of categorial grammar basically because it adds so-called introduction rules to the proof-theoretic complements of categorial reduction rules, elimination rules.", "labels": [], "entities": []}, {"text": "For each category-forming connective, introduction and elimination rules can be formulated.", "labels": [], "entities": []}, {"text": "With respect to semantics, elimination corresponds to functional application and introduction to lambda abstraction.", "labels": [], "entities": []}, {"text": "Various approaches have been proposed for deduction in L.", "labels": [], "entities": []}, {"text": "In its standard representation the L-calculus is a sequent calculus.", "labels": [], "entities": []}, {"text": "More recently, natural deduction has been applied to the calculus (, as well as proof procedures from linear logic).", "labels": [], "entities": []}, {"text": "1 Throughout this article the sequent format is used.", "labels": [], "entities": []}, {"text": "In definition (1), W and X are categories, Y and Z are signs, and P, T, Q, U and V are sequences of signs, where P, T, and Q are nonempty.", "labels": [], "entities": []}, {"text": "A sequent in L represents a derivability relation, =~, between a nonempty finite sequence of signs, the antecedent, and a sign, the succedent.", "labels": [], "entities": []}, {"text": "A sequent states that the string denoted by the antecedent is in the set of strings denoted by the succedent.", "labels": [], "entities": []}, {"text": "The axioms and inference rules of the calculus define the theorems of the calculus with respect to this derivability relation.", "labels": [], "entities": []}, {"text": "Recursive application of the inference rules on a sequent may result in the derivation of a sequent as a theorem of the calculus.", "labels": [], "entities": []}, {"text": "In definition (1) the calculus is presented.", "labels": [], "entities": []}, {"text": "The elimination of a type constructor is denoted by E; introduction by I. (X, qS,a) :::> (X,~,a) The uppersequent of an inference rule is a theorem of the calculus if all of its subsequents are theorems.", "labels": [], "entities": []}, {"text": "In Example 1 a sentence containing a transitive verb is parsed by proving that it reduces to s.", "labels": [], "entities": []}, {"text": "To the sequence of lexical signs associated with the strings in the input, the inference rules are recursively applied until all leaves of the proof tree are axioms.", "labels": [], "entities": []}, {"text": "The derivation results in the instantiation of the semantics of the sentence.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}