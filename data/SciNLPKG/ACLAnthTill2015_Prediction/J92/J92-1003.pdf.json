{"title": [{"text": "Languages Generated by Two-Level Morphological Rules", "labels": [], "entities": []}], "abstractContent": [{"text": "The two-level model .of morphology and phonology arose from work on finite-state machine descriptions of phonological phenomena.", "labels": [], "entities": []}, {"text": "However, the two-level rule notation can be given a precise declarative semantics in terms of the segmentation of sequences of pairs of symbols, quite independently of any computational representation as sets of finite-state transducers.", "labels": [], "entities": []}, {"text": "Thus defined, the two-level model can be shown to be less powerful, in terms of weak generative capacity, than parallel intersections of arbitrary finite-state transducers without empty transitions (the usual computational representation).", "labels": [], "entities": []}, {"text": "However, if a special boundary symbol is permitted, the full family of regular languages can be generated.", "labels": [], "entities": []}, {"text": "Two-level morphological grammars may, without loss of generality, be written in a simplified normal form.", "labels": [], "entities": []}, {"text": "The set of two-level generated languages can be shown to be closed under intersection, but not under union or complementation.", "labels": [], "entities": []}, {"text": "1. Background Koskenniemi (1983a, 1983b, 1984) proposed a rule-system for describing morphological regularities in a language, depending centrally on the idea of matching two sequences of symbols-a lexical string (made up of the lexical forms of morphemes) and a surface string (the sequence of characters in the normal, inflected, form of the word).", "labels": [], "entities": []}, {"text": "(In general, symbols could be orthographic or phonological; here we shall abstract from this linguistic issue, and merely consider strings of atomic symbols, which could be phonemes, typewritten characters, or any other separate entities).", "labels": [], "entities": []}, {"text": "Koskenniemi (1983a) originally described the rules in two alternative forms-high-level rules and finite-state transducers.", "labels": [], "entities": []}, {"text": "The high-level rules were given only an informal interpretation, and were used as an expository device to state the linguistic regularities more perspicuously.", "labels": [], "entities": []}, {"text": "The formalism that was actually used to write and implement two-level morphological grammars was parallel combinations of finite-state transducers.", "labels": [], "entities": []}, {"text": "Koskenniemi's own implementation was an interpreter for parallel transducers , which were directly written by the linguist as rules in their own right.", "labels": [], "entities": []}, {"text": "Also, various linguistic analyses presented in Dalrymple et al.", "labels": [], "entities": []}, {"text": "(1983) follow this approach, expressing rules as transition tables for transducers, and Antworth (1990) describes a recent implementation based wholly on transducers being written directly.", "labels": [], "entities": [{"text": "Antworth", "start_pos": 88, "end_pos": 96, "type": "METRIC", "confidence": 0.800711989402771}]}, {"text": "Nevertheless , Koskenniemi conjectured that an automatic compilation procedure could be", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}