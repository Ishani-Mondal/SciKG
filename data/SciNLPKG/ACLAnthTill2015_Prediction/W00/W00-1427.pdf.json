{"title": [], "abstractContent": [{"text": "In practical natural language generation systems it is often advantageous to have a separate component that deals purely with morphological processing.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 13, "end_pos": 40, "type": "TASK", "confidence": 0.714415450890859}]}, {"text": "We present such a component: a fast and robust morphological generator for En-glish based on finite-state techniques that generates a word form given a specification of the lemma, part-of-speech, and the type of inflection required.", "labels": [], "entities": []}, {"text": "We describe how this morphological generator is used in a prototype system for automatic simplification of English newspaper text, and discuss practical morphological and orthographic issues we have encountered in generation of unrestricted text within this application .", "labels": [], "entities": [{"text": "automatic simplification of English newspaper text", "start_pos": 79, "end_pos": 129, "type": "TASK", "confidence": 0.7298637876907984}]}], "introductionContent": [{"text": "Most approaches to natural language generation (NLG) ignore morphological variation during word choice, postponing the computation of the actual word forms to be output to a final stage, sometimes termed 'linearisation'.", "labels": [], "entities": [{"text": "natural language generation (NLG)", "start_pos": 19, "end_pos": 52, "type": "TASK", "confidence": 0.8185065189997355}]}, {"text": "The advantage of this setup is that the syntactic/lexical realisation component does not have to consider all possible word forms corresponding to each lemma ().", "labels": [], "entities": []}, {"text": "In practice, it is advantageous to have morphological generation as a postprocessing component that is separate from the rest of the NLG system.", "labels": [], "entities": []}, {"text": "A benefit is that since there are no competing claims on the representation framework from other types of linguistic and non-linguistic knowledge, the developer of the morphological generator is fl'ee to express morphological information in a perspicuous and elegant manner.", "labels": [], "entities": []}, {"text": "A further benefit is that localising morphological knowledge in a single component facilitates more systematic and reliable updating.", "labels": [], "entities": []}, {"text": "From a software engineering perspective, modularisntion is likely to reduce system development costs and increase system reliability.", "labels": [], "entities": []}, {"text": "As an individual module, the morphological generator will be more easily shareable between several different NLG applications, and integrated into new ones.", "labels": [], "entities": []}, {"text": "Finally, such a generator can be used on its own in other types of applications that do not contain a standard NLG syntactic/lexical realisation component, such as text simplification (see.", "labels": [], "entities": [{"text": "NLG syntactic/lexical realisation", "start_pos": 111, "end_pos": 144, "type": "TASK", "confidence": 0.5569913446903229}, {"text": "text simplification", "start_pos": 164, "end_pos": 183, "type": "TASK", "confidence": 0.802746593952179}]}, {"text": "In this paper we describe a fast and robust generator for the inflectional morphology of English that generates a word form given a specification of a lemma, a part-of-speech (PoS) label, and an inflectional type.", "labels": [], "entities": []}, {"text": "The morphological generator was built using data from several large corpora and machine readable dictionaries.", "labels": [], "entities": []}, {"text": "It does not contain an explicit lexicon or word-list, but instead comprises a set of morphological generalisations together with a list of exceptions for specific (irregular) word forms.", "labels": [], "entities": []}, {"text": "This organisation into generalisations and exceptions can save time and effort in system development since the addition of new vocabulary that has regular morphology does not require any changes to the generator.", "labels": [], "entities": []}, {"text": "In addition, the generalisation-exception architecture can be used to specify--and also override--preferences in cases where a lemma has more than one possible surface word form given a particular inflectional type and PoS label.", "labels": [], "entities": []}, {"text": "The generator is packaged up as a Unix 'filter', making it easy to integrate into applications.", "labels": [], "entities": []}, {"text": "It is based on efficient finite-state techniques, and is implemented using the widely available Unix Flex utility (a reimplementation of the AT&T Unix Lex tool) ().", "labels": [], "entities": [{"text": "AT&T Unix Lex tool)", "start_pos": 141, "end_pos": 160, "type": "DATASET", "confidence": 0.8455493109566825}]}, {"text": "The generator is freely available to the NLG research comnmnity (see Section 5 below).", "labels": [], "entities": [{"text": "NLG research comnmnity", "start_pos": 41, "end_pos": 63, "type": "DATASET", "confidence": 0.9738107323646545}]}, {"text": "The paper is structured ms follows.", "labels": [], "entities": []}, {"text": "Section 2 describes the morphological generator and eval-uates its accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 67, "end_pos": 75, "type": "METRIC", "confidence": 0.9986733198165894}]}, {"text": "Section 3 outlines how the (1) {h}+\"s+s_.N\" generator is put ..to use in.a prototy.p~.system for.:.: ...........", "labels": [], "entities": []}, {"text": ":...: ~-.:=..{a=e..tnxnfnp_~ord_:form (1, !~es\"-) ).; } automatic simplification of text, and discusses a number of practical morphological and orthographic issues that we have encountered.", "labels": [], "entities": []}, {"text": "Section 4 relates our work to that of others, and we conclude (Section 5) with directions for future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "Minnen and Carroll (Under review) report an evaluation of the accuracy of the morphological generator with respect to the CELEX lexical database (version 2.5;.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 62, "end_pos": 70, "type": "METRIC", "confidence": 0.9993351101875305}, {"text": "CELEX lexical database", "start_pos": 122, "end_pos": 144, "type": "DATASET", "confidence": 0.9462193449338278}]}, {"text": "This threw up a small number of errors which we have now fixed.", "labels": [], "entities": [{"text": "errors", "start_pos": 32, "end_pos": 38, "type": "METRIC", "confidence": 0.9764428734779358}]}, {"text": "We have rerun the CELEXbased evaluation: against the past tense, past and present participle, and third person singular present tense inflections of verbs, and all plural nouns.", "labels": [], "entities": [{"text": "CELEXbased", "start_pos": 18, "end_pos": 28, "type": "DATASET", "confidence": 0.6286855340003967}]}, {"text": "After excluding multi-word entries (phrasal verbs, etc.) we were left with 38,882 out of the original 160,595 word forms.", "labels": [], "entities": []}, {"text": "For each of these word forms we fed the corresponding input (derived automatically from the lemmatisation and inflection specification provided by CELEX) to the generator.", "labels": [], "entities": [{"text": "CELEX", "start_pos": 147, "end_pos": 152, "type": "DATASET", "confidence": 0.9445351958274841}]}, {"text": "We compared the generator output with the original CELEX word forms, producing a list of mistakes apparently made by the generator, which we then checked by hand.", "labels": [], "entities": [{"text": "CELEX word forms", "start_pos": 51, "end_pos": 67, "type": "DATASET", "confidence": 0.8858470519383749}]}, {"text": "Ina number of cases either the CELEX lemmatisation was wrong in that it disagreed with the relevant entry in the Cambridge International Dictionary of English, or the output of the generator was correct even though it was not identical to the word form given in CELEX.", "labels": [], "entities": [{"text": "CELEX lemmatisation", "start_pos": 31, "end_pos": 50, "type": "DATASET", "confidence": 0.902137041091919}, {"text": "Cambridge International Dictionary of English", "start_pos": 113, "end_pos": 158, "type": "DATASET", "confidence": 0.925682270526886}]}, {"text": "We did not count these cases as mistakes.", "labels": [], "entities": []}, {"text": "We also found that CELEX is inconsistent with respect to consonant doubling.", "labels": [], "entities": [{"text": "CELEX", "start_pos": 19, "end_pos": 24, "type": "METRIC", "confidence": 0.9027601480484009}, {"text": "consonant doubling", "start_pos": 57, "end_pos": 75, "type": "TASK", "confidence": 0.7498953938484192}]}, {"text": "For example, it includes the word form pettifogged, 4 whereas it omits many consonant doubled words that are much more common (according to counts from the BNC).", "labels": [], "entities": [{"text": "BNC", "start_pos": 156, "end_pos": 159, "type": "DATASET", "confidence": 0.9444730877876282}]}, {"text": "For example, the BNC contains around 850 occurrences of the word form programming tagged as a verb, but this form is not present in CELEX.", "labels": [], "entities": [{"text": "BNC", "start_pos": 17, "end_pos": 20, "type": "DATASET", "confidence": 0.9166358709335327}, {"text": "CELEX", "start_pos": 132, "end_pos": 137, "type": "DATASET", "confidence": 0.961885929107666}]}, {"text": "The form programing does occur in CELEX, but does not in the BNC.", "labels": [], "entities": [{"text": "CELEX", "start_pos": 34, "end_pos": 39, "type": "DATASET", "confidence": 0.9630404114723206}, {"text": "BNC", "start_pos": 61, "end_pos": 64, "type": "DATASET", "confidence": 0.9699540734291077}]}, {"text": "4A rare word, meaning to be overly concerned with small, unimportant details.", "labels": [], "entities": []}, {"text": "We did not count these cases as mistakes either.", "labels": [], "entities": []}, {"text": ":Of~he :r~m~i.ning: 359'.mist~kes(:346:~c0neern6d word forms that do not occur at all in the 100M words of the BNC.", "labels": [], "entities": [{"text": "BNC", "start_pos": 111, "end_pos": 114, "type": "DATASET", "confidence": 0.9020687341690063}]}, {"text": "We categorised these as irrelevant for practical applications and so discarded them.", "labels": [], "entities": []}, {"text": "Thus the type accuracy of the morphological analyser with respect to the CELEX lexical database is 99.97%.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 14, "end_pos": 22, "type": "METRIC", "confidence": 0.9397681355476379}, {"text": "CELEX lexical database", "start_pos": 73, "end_pos": 95, "type": "DATASET", "confidence": 0.960771401723226}]}, {"text": "The token accuracy is 99.98% with respect to the 14,825,661 relevant .tokens .i.mthe BNC .(i.e. ,at.rate ,of two errors per ten thousand words).", "labels": [], "entities": [{"text": "accuracy", "start_pos": 10, "end_pos": 18, "type": "METRIC", "confidence": 0.9845414161682129}, {"text": "BNC", "start_pos": 85, "end_pos": 88, "type": "DATASET", "confidence": 0.8637303709983826}]}, {"text": "We tested the processing speed of the generator on a Sun Ultra 10 workstation.", "labels": [], "entities": [{"text": "Sun Ultra 10 workstation", "start_pos": 53, "end_pos": 77, "type": "DATASET", "confidence": 0.8686261177062988}]}, {"text": "In order to discount program startup times (which are anyway only of the order of 0.05 seconds) we used input files of 400K and 800K tokens and recorded the difference in timings; we took the averages of 10 runs.", "labels": [], "entities": [{"text": "timings", "start_pos": 171, "end_pos": 178, "type": "METRIC", "confidence": 0.9515412449836731}]}, {"text": "Despite its wide coverage the morphological generator is very fast: it generates at a rate of more than 80,000 words per second.", "labels": [], "entities": []}], "tableCaptions": []}