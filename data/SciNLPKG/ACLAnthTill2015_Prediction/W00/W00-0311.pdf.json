{"title": [{"text": "A Compact Architecture for Dialogue Management Based on Scripts and Meta-Outputs", "labels": [], "entities": [{"text": "Dialogue Management", "start_pos": 27, "end_pos": 46, "type": "TASK", "confidence": 0.7896841466426849}]}], "abstractContent": [{"text": "We describe an architecture for spoken dialogue interfaces to semi-autonomous systems that transforms speech~signals through successive representations of linguistic, dialogue, and domain knowledge.", "labels": [], "entities": []}, {"text": "Each step produces an output, and a meta-output describing the transformation, with an executable program in a simple scripting language as the final result.", "labels": [], "entities": []}, {"text": "The output/meta-output distinction permits perspicuous treatment of diverse tasks such as resolving pronouns, correcting user misconceptions, and optimizing scripts.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [{"text": "Recall that the DM simulates evaluation of the plan before running it, in order to obtain relevant metainformation.", "labels": [], "entities": []}, {"text": "At plan execution time, plan actions result in changes to the world; at plan evaluation time, they result in simulated changes to the world and/or produce meta-outputs.", "labels": [], "entities": []}, {"text": "Conceptualizing plans as scripts rather than logical formulas permits an elegant treatment of the execution/evaluation dichotomy.", "labels": [], "entities": []}, {"text": "There is one script interpreter, which functions both as a script executive and a script evaluator, and one set of rules which defines the procedural semantics of script actions.", "labels": [], "entities": []}, {"text": "Rules are parameterized by execution type which is either \"execute\" or \"evaluate\".", "labels": [], "entities": []}, {"text": "In \"evaluate\" mode, primitive actions modify a state vector which is threaded through the interpreter; in \"execute\" mode, they result in commands being sent to (real or simulated) effector agents.", "labels": [], "entities": []}, {"text": "Conversely, \"meta-information\" actions, such as presupposition failures, result in output being sent to the metaoutput stream in \"evaluate\" mode, and in a null action in \"execute\" mode.", "labels": [], "entities": []}, {"text": "The upshot is that a simple semantics can be assigned to rules like the following one, which defines the action of attempting to open a door which may already be open: 4.2 Using meta-outputs to choose between interpretations As described in the preceding section, the resolution step is in general non-deterministic and gives rise to meta-outputs which describe the type of resolution carried out.", "labels": [], "entities": []}, {"text": "For example, consider a command involving a definite description, like \"open the door\".", "labels": [], "entities": []}, {"text": "Depending on the preceding context, resolution will produce a number of possible interpretations; \"the door\" maybe resolved to one or more contextually available doors, or the expression maybe left unresolved.", "labels": [], "entities": [{"text": "resolution", "start_pos": 36, "end_pos": 46, "type": "TASK", "confidence": 0.9716328978538513}]}, {"text": "In each case, the type of resolution used appears as a meta-output, and is available to the dialogue manager when it decides which interpretation is most felicitous.", "labels": [], "entities": []}, {"text": "By default, the DM's strategy is to attempt to~pply antecedents for referring expressions, preferring gh~ most recently occurring sortally appropriate candidate.", "labels": [], "entities": []}, {"text": "In some cases, however, it is desirable to allow the default strategy to be overridden: for instance, it may result in a script which produces a presupposition failure during plan evaluation.", "labels": [], "entities": []}, {"text": "Treating resolution choices and plan evaluation problems as similar types of objects makes it easy to implement this kind of idea.", "labels": [], "entities": []}], "tableCaptions": []}