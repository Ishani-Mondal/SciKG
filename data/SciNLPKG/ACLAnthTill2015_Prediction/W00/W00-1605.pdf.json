{"title": [{"text": "Some Experiments on Indicators of Parsing Complexity for Lexicalized Grammars", "labels": [], "entities": []}], "abstractContent": [{"text": "In this paper, we identify syntactic lexical ambiguity and sentence complexity as factors that contribute to parsing complexity in fully lexicalized grammar formalisms such as Lexicalized Tree Adjoining Grammars.", "labels": [], "entities": [{"text": "Lexicalized Tree Adjoining Grammars", "start_pos": 176, "end_pos": 211, "type": "TASK", "confidence": 0.7065086662769318}]}, {"text": "We also report on experiments that explore the effects of these factors on parsing complexity.", "labels": [], "entities": [{"text": "parsing complexity", "start_pos": 75, "end_pos": 93, "type": "TASK", "confidence": 0.8976345956325531}]}, {"text": "We discuss how these constraints can be exploited in improving efficiency of parsers for such grammar formalisms.", "labels": [], "entities": []}], "introductionContent": [{"text": "The time taken by a parser to produce derivations for input sentences is typically associated with the length of those sentences.", "labels": [], "entities": []}, {"text": "The longer the sentence, the more time the parser is expected to take.", "labels": [], "entities": []}, {"text": "However, complex algorithms like parsers are typically affected by several factors.", "labels": [], "entities": []}, {"text": "A common experience is that parsing algorithms differ in the number of edges inserted into the chart while parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 28, "end_pos": 35, "type": "TASK", "confidence": 0.9780392050743103}]}, {"text": "In this paper, we explore some of these constraints from the perspective of lexicalized grammars and explore how these constraints might be exploited to improve parser efficiency.", "labels": [], "entities": []}, {"text": "We concentrate on the problem of parsing using fully lexicalized grammars by looking at parsers for Lexicalized Tree Adjoining Grammar (LTAG).", "labels": [], "entities": [{"text": "parsing", "start_pos": 33, "end_pos": 40, "type": "TASK", "confidence": 0.9758396148681641}, {"text": "Lexicalized Tree Adjoining Grammar (LTAG)", "start_pos": 100, "end_pos": 141, "type": "TASK", "confidence": 0.7388276415211814}]}, {"text": "By a fully lexicalized grammar we mean a grammar in which there are one or more syntactic structures associated with each lexical item.", "labels": [], "entities": []}, {"text": "In the case of LTAG each structure is a tree (or, in general, a directed acyclic graph).", "labels": [], "entities": []}, {"text": "For each structure there is an explicit structural slot for each of the arguments of the lexical item.", "labels": [], "entities": []}, {"text": "The various advantages of defining a lexicalized grammar formalism in this way are discussed in).", "labels": [], "entities": []}, {"text": "An example LTAG is shown in.", "labels": [], "entities": []}, {"text": "To parse the sentence Ms.", "labels": [], "entities": []}, {"text": "Haag plays Elianti the parser has to combine the trees selected by each word in the sentence by using the operations of substitution and adjunction (the two composition operations in LTAG) producing a valid derivation for the sentence.", "labels": [], "entities": []}, {"text": "Notice that as a consequence of this kind of lexicalized grammatical description there might be several different factors that affect parsing complexity.", "labels": [], "entities": [{"text": "parsing complexity", "start_pos": 134, "end_pos": 152, "type": "TASK", "confidence": 0.881642609834671}]}, {"text": "Each word can select many different trees; for example, the word plays in might select several trees for each syntactic context in which it can occur.", "labels": [], "entities": []}, {"text": "The verb plays can be used in a relative clause, a wh-extraction clause, among others.", "labels": [], "entities": []}, {"text": "While grammatical notions of argument structure and syntax can be processed in abstract terms just as in other kinds of formalisms, the crucial difference in LTAG is that all of this information is compiled into a finite set of trees before parsing.", "labels": [], "entities": []}, {"text": "Each of these separate lexicalized trees is now considered by the parser.", "labels": [], "entities": []}, {"text": "This compilation is repeated for other argument structures, e.g. the verb plays could also select trees which are intransitive thus increasing the set of lexicalized trees it can select.", "labels": [], "entities": []}, {"text": "The set of trees selected by different lexical items is what we term in this paper as lexical syntactic ambiguity.", "labels": [], "entities": []}, {"text": "The importance of this compilation into a set of lexicalized trees is that each predicate-argument structure across each syntactic context has its own lexicalized tree.", "labels": [], "entities": []}, {"text": "Most grammar formalisms use feature structures to capture the same grammatical and predicate-argument information.", "labels": [], "entities": []}, {"text": "In LTAG, this larger set of lexicalized trees directly corresponds to the fact that recursive feature structures are not needed for linguistic description.", "labels": [], "entities": []}, {"text": "Feature structures are typically atomic with a few instances of re-entrant features.", "labels": [], "entities": []}, {"text": "Thus, in contrast with LTAG parsing, parsing for formalisms like HPSG or LFG concentrates on efficiently managing the unification of large feature structures and also the packing of ambiguities when these feature structures subsume each other (see) and references cited there).", "labels": [], "entities": [{"text": "LTAG parsing", "start_pos": 23, "end_pos": 35, "type": "TASK", "confidence": 0.6962976455688477}, {"text": "HPSG", "start_pos": 65, "end_pos": 69, "type": "DATASET", "confidence": 0.904741644859314}]}, {"text": "We argue in this paper that the result of having compiled out abstract grammatical descriptions into a set of lexicalized trees allows us to predict the number of edges that will be proposed by the parser even before parsing begins.", "labels": [], "entities": []}, {"text": "This allows us to explore novel methods of dealing with parsing complexity that are difficult to consider in formalisms that are not fully lexicalized.", "labels": [], "entities": []}, {"text": "Furthermore, as the sentence length increases, the number of lexicalized trees increase proportionally increasing the attachment ambiguity.", "labels": [], "entities": []}, {"text": "Each sentence is composed of several clauses.", "labels": [], "entities": []}, {"text": "Ina lexicalized grammar, each clause can be seen as headed by a single predicate tree with its arguments and associated adjuncts.", "labels": [], "entities": []}, {"text": "We shall see that empirically the number of clauses grow with increasing sentence length only up to a certain point.", "labels": [], "entities": []}, {"text": "For sentences greater than a certain length the number of clauses do not keep increasing.", "labels": [], "entities": []}, {"text": "Based on these intuitions we identify the following factors that affect parsing complexity for lexicalized grammars: Syntactic Lexical Ambiguity The number of trees selected by the words in the sentence being parsed.", "labels": [], "entities": [{"text": "Syntactic Lexical Ambiguity", "start_pos": 117, "end_pos": 144, "type": "TASK", "confidence": 0.7122517228126526}]}, {"text": "We show that this is a better indicator of parsing time than sentence length.", "labels": [], "entities": [{"text": "parsing", "start_pos": 43, "end_pos": 50, "type": "TASK", "confidence": 0.9708996415138245}]}, {"text": "This is also a predictor of the number of edges that will be proposed by a parser, allowing us to better handle difficult cases before parsing.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}