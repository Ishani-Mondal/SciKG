{"title": [{"text": "Precompilation of HPSG in ALE into a CFG For Fast Parsing", "labels": [], "entities": []}], "abstractContent": [{"text": "Context free grammars parse faster than TFS grammars, but have disadvantages.", "labels": [], "entities": [{"text": "Context free grammars parse", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6464956551790237}]}, {"text": "On our test TFS grammar, precompilation into CFG results in a speedup of 16 times for parsing without taking into account additional mechanisms for increasing parsing efficiency.", "labels": [], "entities": [{"text": "CFG", "start_pos": 45, "end_pos": 48, "type": "DATASET", "confidence": 0.8636515736579895}, {"text": "parsing", "start_pos": 86, "end_pos": 93, "type": "TASK", "confidence": 0.9827227592468262}]}, {"text": "A formal overview is given of precompilation and parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 49, "end_pos": 56, "type": "TASK", "confidence": 0.9610183238983154}]}, {"text": "Modifications to ALE rules permit a closure over the rules from the lexicon, and analysis leading to a fast treatment of semantic structure.", "labels": [], "entities": []}, {"text": "The closure algorithm, and retrieval of full semantic structure are described.", "labels": [], "entities": []}], "introductionContent": [{"text": "Head Driven Phrase Structure Grammar (HPSG), is expressed in Typed Feature Structures (TFSs).", "labels": [], "entities": [{"text": "Head Driven Phrase Structure Grammar (HPSG)", "start_pos": 0, "end_pos": 43, "type": "TASK", "confidence": 0.7434675581753254}]}, {"text": "Context Free Grammar (CFG) without features supports much faster parsing, but a TFS grammar has many advantages.", "labels": [], "entities": [{"text": "Context Free Grammar (CFG)", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.7758221824963888}]}, {"text": "Fast parsing can be obtained by precompiling a CFG approximation, with TFSs converted into CF near-equivalents.", "labels": [], "entities": [{"text": "parsing", "start_pos": 5, "end_pos": 12, "type": "TASK", "confidence": 0.9634490013122559}]}, {"text": "CFG parsing eliminates impossible trees, and TFS unification over the remainder eliminates more, and instantiates path values.", "labels": [], "entities": [{"text": "CFG parsing", "start_pos": 0, "end_pos": 11, "type": "TASK", "confidence": 0.7765097618103027}, {"text": "TFS unification", "start_pos": 45, "end_pos": 60, "type": "TASK", "confidence": 0.8529565930366516}]}, {"text": "Our method treats slashes separately in a precompiled table, and careful allocation of categories to TFSs makes TFS unification unnecessary: instead skeleton semantic structures are formed in parsing, and full structures retrieved afterwards.", "labels": [], "entities": [{"text": "TFS unification", "start_pos": 112, "end_pos": 127, "type": "TASK", "confidence": 0.8661691248416901}]}, {"text": "A prototype precompiler and fast parser 1 were builtin Prolog, and tested with an HPSG grammar of English by, written in the ALE formalism, by.", "labels": [], "entities": [{"text": "Prolog", "start_pos": 55, "end_pos": 61, "type": "DATASET", "confidence": 0.9559553861618042}, {"text": "HPSG", "start_pos": 82, "end_pos": 86, "type": "DATASET", "confidence": 0.888405978679657}]}, {"text": "This has the 6 schemas and 5 principles of HPSG, with 184 lexemes.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 43, "end_pos": 47, "type": "DATASET", "confidence": 0.8810561895370483}]}, {"text": "A complex sentence,\"kim can believe sandy can expect sandy to persuade kim to promise sandy to try to expect sandy to persuade kim to promise kim to give sandy a happy happy book\", parsed in 3.3s. with retrieval, 5.6 times faster than with TFSs,.", "labels": [], "entities": []}, {"text": "An 11 word sentence was 18 times faster at 87ms., or 16 times counting retrieval.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}