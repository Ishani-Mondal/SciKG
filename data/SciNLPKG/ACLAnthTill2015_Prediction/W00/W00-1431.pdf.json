{"title": [{"text": "The.,CLEF= semi-~recursive generation algori:thm", "labels": [], "entities": [{"text": "CLEF", "start_pos": 5, "end_pos": 9, "type": "METRIC", "confidence": 0.9158369898796082}]}], "abstractContent": [], "introductionContent": [{"text": "GTAG is a multilingual text generation formalism derived from the Tree Adjoining Grammar model,).", "labels": [], "entities": []}, {"text": "This formalism, which is still evolving, uses slightly enriched TAG grammars as its syntactic back-end.", "labels": [], "entities": []}, {"text": "GTAG only deals with the << How to say it ?>> aspect of the generation process.", "labels": [], "entities": [{"text": "GTAG", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.7808651924133301}]}, {"text": "It takes as input a partly computed symbolic representation of the discourse, and defines the processing and the data necessary to produce the final text.GTAG is widely described in,, and (Danlos1999).", "labels": [], "entities": []}, {"text": "Flaubert was the first GTAG implementation, conducted by Cora SA,).", "labels": [], "entities": [{"text": "Flaubert", "start_pos": 0, "end_pos": 8, "type": "METRIC", "confidence": 0.8960151076316833}]}, {"text": "This implementation validated the first versions of the formalism, and yielded a stable version of GTAG.", "labels": [], "entities": [{"text": "GTAG", "start_pos": 99, "end_pos": 103, "type": "DATASET", "confidence": 0.8551375865936279}]}, {"text": "A new implementation has been initiated by,), using the Java language, with a strong emphasis on research and applications.", "labels": [], "entities": []}, {"text": "We will give firstly a short insight of the GTAG formalism, then introduce the semi-recursive algorithm in comparison with the recursive \u2022 approach.", "labels": [], "entities": []}, {"text": "Then, we will give a presentation of the CLEF generation algorithm that yields a nearly-surfacic syntactic representation from the conceptual representation (a post-processing phase takes care of the final output).", "labels": [], "entities": [{"text": "CLEF generation", "start_pos": 41, "end_pos": 56, "type": "TASK", "confidence": 0.7297737300395966}]}, {"text": "as well as the linguistics data and processing necessary to generate texts.", "labels": [], "entities": []}, {"text": "GTAG uses a firstorder logic formalism for its domain model, and a lexicalized TAG grammar as its syntactic model.", "labels": [], "entities": [{"text": "GTAG", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.893707811832428}]}, {"text": "We introduce hereafter both sub-formalisms, and the manner in which GTAG links them.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}