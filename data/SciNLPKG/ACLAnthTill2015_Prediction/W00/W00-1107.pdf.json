{"title": [{"text": "REXTOR: A System for Generating Relations from Natural Language", "labels": [], "entities": [{"text": "REXTOR", "start_pos": 0, "end_pos": 6, "type": "TASK", "confidence": 0.7783596515655518}, {"text": "Generating Relations from Natural Language", "start_pos": 21, "end_pos": 63, "type": "TASK", "confidence": 0.6661779344081878}]}], "abstractContent": [{"text": "This paper argues that a finite-state language model with a ternary expression representation is currently the most practical and suitable bridge between natural language processing and information retrieval.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 186, "end_pos": 207, "type": "TASK", "confidence": 0.7585414946079254}]}, {"text": "Despite the theoretical computational inadequacies of finite-state grammars, they are very cost effective (in time and space requirements) and adequate for practical purposes.", "labels": [], "entities": []}, {"text": "The ternary expressions that we use are not only linguistically-motivated, but also amenable to rapid large-scale indexing.", "labels": [], "entities": []}, {"text": "REXTOR (Relations EXtracTOR) is an implementation of this model; in one uniform framework, the system provides two separate grammars for extracting arbitrary patterns of text and building ternary expressions from them.", "labels": [], "entities": [{"text": "REXTOR", "start_pos": 0, "end_pos": 6, "type": "METRIC", "confidence": 0.8806182146072388}]}, {"text": "These content representational structures serve as the input to our ternary expressions indexer.", "labels": [], "entities": []}, {"text": "This approach to natural language information retrieval promises to significantly raise the performance of current systems.", "labels": [], "entities": [{"text": "natural language information retrieval", "start_pos": 17, "end_pos": 55, "type": "TASK", "confidence": 0.600963681936264}]}], "introductionContent": [{"text": "Traditional information retrieval (IR) has been built on the \"bag-of-words\" assumption, which equates the weighted component keywords of a document with its semantic content.", "labels": [], "entities": [{"text": "information retrieval (IR)", "start_pos": 12, "end_pos": 38, "type": "TASK", "confidence": 0.8832982182502747}]}, {"text": "Obviously, a document is much more than the sum of its individual keywords.", "labels": [], "entities": []}, {"text": "Although keywords may offer some indication of \"meaning,\" they alone cannot capture the richness and expressiveness of natural language.", "labels": [], "entities": []}, {"text": "Consider the following sets of sentences/phrases that have similar word content, but (dramatically) different meanings: 1 IExamples taken from (1) The big man ate the dog.", "labels": [], "entities": [{"text": "IExamples", "start_pos": 122, "end_pos": 131, "type": "METRIC", "confidence": 0.933488130569458}]}, {"text": "(1') The big dog ate the man.", "labels": [], "entities": []}, {"text": "Due to the inability of keywords to capture the \"meaning\" of documents, a traditional information retrieval system (i.e., one using the bag-ofwords paradigm) will suffer from poor precision in response to a user query accurately and precisely formulated in natural language.", "labels": [], "entities": [{"text": "precision", "start_pos": 180, "end_pos": 189, "type": "METRIC", "confidence": 0.9943846464157104}]}, {"text": "The application of natural language processing (NLP) techniques to information retrieval promises to generate representational structures that better capture the semantic content of documents.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 67, "end_pos": 88, "type": "TASK", "confidence": 0.7401744723320007}]}, {"text": "In particular, syntactic analysis can highlight the relationships between various terms and phrases in a sentence, which will allow us to distinguish between the example pairs given above and answer queries with higher precision than traditional IR systems.", "labels": [], "entities": [{"text": "precision", "start_pos": 219, "end_pos": 228, "type": "METRIC", "confidence": 0.9901512861251831}]}, {"text": "However, a syntactically-informed representational structure faces the problem of Hnguistic variations, the phenomenon in which similar semantic content maybe expressed in different surface forms.", "labels": [], "entities": []}, {"text": "Consider the following sets of sentences that express the same meaning using different constructions: (4) What is Bill Gates' net worth?", "labels": [], "entities": []}, {"text": "(4')What is the net worth of Bill Gates?", "labels": [], "entities": []}, {"text": "(5) John gave the book to Mary.", "labels": [], "entities": []}, {"text": "(5') John gave Mary the book.", "labels": [], "entities": []}, {"text": "(5\") Mary was given the book by John.", "labels": [], "entities": []}, {"text": "An effective linguistically-motivated information retrieval system must not only handle rel-atively simple syntactic variations (e.g., and), alternate realization of verb arguments (e.g., (6) and (6')), but also more complicated semantic variations (e.g., (7) and).", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 38, "end_pos": 59, "type": "TASK", "confidence": 0.6907399594783783}]}, {"text": "This can be accomplished by linguistic normalization, a process by which linguistic variants that contain the same semantic content are mapped onto the same representational structure.", "labels": [], "entities": [{"text": "linguistic normalization", "start_pos": 28, "end_pos": 52, "type": "TASK", "confidence": 0.709351509809494}]}, {"text": "The precision of information retrieval systems can be dramatically improved if they index not only single terms, but normelized representational structures derived from language.", "labels": [], "entities": [{"text": "precision", "start_pos": 4, "end_pos": 13, "type": "METRIC", "confidence": 0.997883141040802}, {"text": "information retrieval", "start_pos": 17, "end_pos": 38, "type": "TASK", "confidence": 0.6757176071405411}]}, {"text": "However, the optimal structure of this representation and the efficient generation of these structures remains an open research problem.", "labels": [], "entities": []}, {"text": "This paper argues that, for the purposes of information retrieval systems, the most suitable representational structure of document content is ternary expressions (compared to, for example, keywords, trees or case frames).", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 44, "end_pos": 65, "type": "TASK", "confidence": 0.7286490499973297}]}, {"text": "Ternary (threeplace) expressions maybe thought of as typed binary relations (e.g., subject-relation-object) or two-place predicates (e.g., transitive verbs like 'hit'); they are linguistically-motivated and efficient to index.", "labels": [], "entities": []}, {"text": "Also, for information retrieval, a finite-state grammar is the most practical and cost effective method by which to extract these ternary expressions from documents.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 10, "end_pos": 31, "type": "TASK", "confidence": 0.8208417594432831}]}, {"text": "Combined together, a finite-state language model and ternary expression representation provide a convenient and powerful framework for integrating natural language processing with information retrieval.", "labels": [], "entities": []}, {"text": "REXTOR (Relations EXtracTOR) is a document content analysis system designed to unify and generalize many previous natural language information retrieval techniques into one single framework.", "labels": [], "entities": [{"text": "REXTOR", "start_pos": 0, "end_pos": 6, "type": "METRIC", "confidence": 0.8706626296043396}, {"text": "document content analysis", "start_pos": 34, "end_pos": 59, "type": "TASK", "confidence": 0.6499408086140951}]}, {"text": "The system provides two separate grammars: one for extracting arbitrary entities from documents, and the other for building relations from the extracted items.", "labels": [], "entities": []}, {"text": "REXTOI~ also provides a playground and testbed for future experimentation in linguistically-motivated indexing schemes.", "labels": [], "entities": [{"text": "REXTOI", "start_pos": 0, "end_pos": 6, "type": "METRIC", "confidence": 0.47845855355262756}]}], "datasetContent": [], "tableCaptions": []}