{"title": [{"text": "Learning Multi Character Alignment Rules and Classification of training data for Transliteration", "labels": [], "entities": [{"text": "Learning Multi Character Alignment", "start_pos": 0, "end_pos": 34, "type": "TASK", "confidence": 0.5315310284495354}, {"text": "Transliteration", "start_pos": 81, "end_pos": 96, "type": "TASK", "confidence": 0.9516270756721497}]}], "abstractContent": [{"text": "We address the issues of transliteration between Indian languages and English, especially for named entities.", "labels": [], "entities": [{"text": "transliteration between Indian languages and English", "start_pos": 25, "end_pos": 77, "type": "TASK", "confidence": 0.8287212948004404}]}, {"text": "We use an EM algorithm to learn the alignment between the languages.", "labels": [], "entities": []}, {"text": "We find that there are lot of ambiguities in the rules mapping the characters in the source language to the corresponding characters in the target language.", "labels": [], "entities": []}, {"text": "Some of these ambiguities can be handled by capturing context by learning multi-character based alignments and use of character n-gram models.", "labels": [], "entities": []}, {"text": "We observed that a word in the source script may have actually originated from different languages.", "labels": [], "entities": []}, {"text": "Instead of learning one model for the language pair, we propose that one may use multiple models and a classifier to decide which model to use.", "labels": [], "entities": []}, {"text": "A contribution of this work is that the models and classifiers are learned in a completely unsupervised manner.", "labels": [], "entities": []}, {"text": "Using our system we were able to get quite accurate translit-eration models.", "labels": [], "entities": []}], "introductionContent": [{"text": "Transliteration is the practice of transcribing a word or text written in one writing system into another writing system which may have a different script (wikipedia 1 ).", "labels": [], "entities": []}, {"text": "The rules are often quite ambiguous, and they are often related with the pronunciation of the word.", "labels": [], "entities": []}, {"text": "Many applications like Machine Translation (MT), Cross Language Information Retrieval (CLIR), Question Answering (QA) require http://www.wikipedia.org transliteration of named entities, which are the major component of out-of-vocabulary (OOV) words, and they are most often transliterated and not translated, in any cross language system.", "labels": [], "entities": [{"text": "Machine Translation (MT)", "start_pos": 23, "end_pos": 47, "type": "TASK", "confidence": 0.8602616667747498}, {"text": "Cross Language Information Retrieval (CLIR)", "start_pos": 49, "end_pos": 92, "type": "TASK", "confidence": 0.7523357995918819}, {"text": "Question Answering (QA)", "start_pos": 94, "end_pos": 117, "type": "TASK", "confidence": 0.8594700455665588}]}, {"text": "For example ,'Europe' is transliterated as 'iuropa' and 'Michael' transliterates to 'maaikela' in Bengali.", "labels": [], "entities": []}, {"text": "In this paper we develop a scheme of transliteration, which captures context by creating a dictionary of multi-character transliteration rules.", "labels": [], "entities": []}, {"text": "We have tested our system for English and several Indian languages.", "labels": [], "entities": []}, {"text": "For Indian Languages, we have an additional preprocessor which enhances the performance.", "labels": [], "entities": []}, {"text": "have come up with their revolutionary IBM alignment models, and the Giza++) is a well appreciated implementation which work with parallel data in two languages.", "labels": [], "entities": [{"text": "IBM alignment", "start_pos": 38, "end_pos": 51, "type": "TASK", "confidence": 0.42957018315792084}]}, {"text": "Though originally designed for machine translation, the package can as well be used for transliteration, where the alignment is between the characters in the languages.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 31, "end_pos": 50, "type": "TASK", "confidence": 0.7147682458162308}]}, {"text": "Moses further enhances the accuracy by using phrase based decoding, which can capture context.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 27, "end_pos": 35, "type": "METRIC", "confidence": 0.9986388087272644}]}, {"text": "We have Moses 3 as our baseline system.", "labels": [], "entities": []}, {"text": "have pointed out the problems of using language information.", "labels": [], "entities": []}, {"text": "Apart from the difficulty of collecting the language information, they pointed out that, although written in the same script, the origin of the source names may vary widely.", "labels": [], "entities": []}, {"text": "For example French and English names may vary a lot.", "labels": [], "entities": []}, {"text": "But it is difficult to collect information for each and every language.", "labels": [], "entities": []}, {"text": "They came up with a joint source chan-nel model, to transliterate foreign names to Chinese, Korean, and Japanese, which uses, direct orthographic mapping (DOM), between two different languages, to find out how the source and target words can be generated simultaneously.", "labels": [], "entities": []}, {"text": "also used this model for EnglishBengali Transliteration.", "labels": [], "entities": []}, {"text": "used Hidden Markov Model (HMM) alignment and Conditional Random Field (CRF), a discriminative model together.", "labels": [], "entities": [{"text": "Conditional Random Field (CRF)", "start_pos": 45, "end_pos": 75, "type": "METRIC", "confidence": 0.7453487366437912}]}, {"text": "used fuzzy string matching algorithms to identify the origin of the source word, and then apply rules of transliteration accordingly.", "labels": [], "entities": [{"text": "fuzzy string matching", "start_pos": 5, "end_pos": 26, "type": "TASK", "confidence": 0.6798572738965353}]}, {"text": "However the classifier makes use of labeled training data, which is often not available.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Transliteration Accuracies. En2Ta: English to Tamil, En2Hi: English to Hindi, En2Ka: English  to Kannada", "labels": [], "entities": []}]}