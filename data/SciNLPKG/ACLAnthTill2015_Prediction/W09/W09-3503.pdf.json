{"title": [{"text": "Automata for Transliteration and Machine Translation", "labels": [], "entities": [{"text": "Machine Translation", "start_pos": 33, "end_pos": 52, "type": "TASK", "confidence": 0.725695326924324}]}], "abstractContent": [{"text": "Automata theory, transliteration, and machine translation (MT) have an interesting and intertwined history.", "labels": [], "entities": [{"text": "Automata theory", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.8818752765655518}, {"text": "machine translation (MT)", "start_pos": 38, "end_pos": 62, "type": "TASK", "confidence": 0.8558060765266419}]}, {"text": "Finite-state string automata theory became a powerful tool for speech and language after the introduction of the AT&T's FSM software.", "labels": [], "entities": [{"text": "Finite-state string automata theory", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.6534847766160965}]}, {"text": "For example, string transducers can convert between word sequences and phoneme sequences, or between phoneme sequences and acoustic sequences ; furthermore, these machines can be pipelined to attack complex problems like speech recognition.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 221, "end_pos": 239, "type": "TASK", "confidence": 0.7543682754039764}]}, {"text": "Likewise, n-gram models can be captured by finite-state acceptors, which can be re-used across applications.", "labels": [], "entities": []}, {"text": "It is possible to mix, match, and compose transducers to flexibly solve all kinds of problems.", "labels": [], "entities": []}, {"text": "One such problem is transliteration, which can be mod-eled as a pipeline of string transformations.", "labels": [], "entities": []}, {"text": "MT has also been modeled with transducers, and descendants of the FSM toolkit are now used to implement phrase-based machine translation.", "labels": [], "entities": [{"text": "MT", "start_pos": 0, "end_pos": 2, "type": "TASK", "confidence": 0.9215535521507263}, {"text": "FSM toolkit", "start_pos": 66, "end_pos": 77, "type": "DATASET", "confidence": 0.8782711923122406}, {"text": "phrase-based machine translation", "start_pos": 104, "end_pos": 136, "type": "TASK", "confidence": 0.6816950837771097}]}, {"text": "Even speech recognizers and MT systems can themselves be composed to deliver speech-to-speech MT.", "labels": [], "entities": [{"text": "speech recognizers", "start_pos": 5, "end_pos": 23, "type": "TASK", "confidence": 0.6876141130924225}, {"text": "MT", "start_pos": 28, "end_pos": 30, "type": "TASK", "confidence": 0.9726818799972534}, {"text": "MT", "start_pos": 94, "end_pos": 96, "type": "TASK", "confidence": 0.8254469037055969}]}, {"text": "The main rub with finite-state string MT is word reordering.", "labels": [], "entities": [{"text": "MT", "start_pos": 38, "end_pos": 40, "type": "TASK", "confidence": 0.8118162155151367}, {"text": "word reordering", "start_pos": 44, "end_pos": 59, "type": "TASK", "confidence": 0.752220630645752}]}, {"text": "Tree transducers offer a natural mechanism to solve this problem, and they have recently been employed with some success.", "labels": [], "entities": []}, {"text": "In this talk, we will survey these ideas (and their origins), and we will finish with a discussion of how transliteration and MT can work together.", "labels": [], "entities": [{"text": "MT", "start_pos": 126, "end_pos": 128, "type": "TASK", "confidence": 0.9911860823631287}]}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}