{"title": [{"text": "Revisiting multi-tape automata for Semitic morphological analysis and generation", "labels": [], "entities": [{"text": "Semitic morphological analysis", "start_pos": 35, "end_pos": 65, "type": "TASK", "confidence": 0.6926078597704569}]}], "abstractContent": [{"text": "Various methods have been devised to produce morphological analyzers and generators for Semitic languages, ranging from methods based on widely used finite-state technologies to very specific solutions designed fora specific language or problem.", "labels": [], "entities": []}, {"text": "Since the earliest proposals of how to adopt the elsewhere successful finite-state methods to root-and-pattern morphologies, the solution of encoding Semitic grammars using multi-tape automata has resurfaced on a regular basis.", "labels": [], "entities": []}, {"text": "Multi-tape automata, however, require specific algorithms and reimplementation of finite-state operators across the board, and hence such technology has not been readily available to linguists.", "labels": [], "entities": []}, {"text": "This paper, using an actual Arabic grammar as a case study, describes an approach to encoding multi-tape automata on a single tape that can be implemented using any standard finite-automaton toolkit.", "labels": [], "entities": []}], "introductionContent": [{"text": "1.1 Root-and-pattern morphology and finite-state systems The special problems and challenges embodied by Semitic languages have been recognized from the early days of applying finite-state methods to natural language morphological analysis.", "labels": [], "entities": [{"text": "natural language morphological analysis", "start_pos": 200, "end_pos": 239, "type": "TASK", "confidence": 0.7105817794799805}]}, {"text": "The language model which finite-state methods have been most successful in describing-a model where morphemes concatenate in mostly strict linear order-does not translate congenially to the type of root-and-pattern morphology found in e.g. Arabic and Hebrew ().", "labels": [], "entities": []}, {"text": "In Arabic, as inmost Semitic languages, verbs have fora longtime been analyzed as consisting of three elements: a (most often) triconsonantal root, such as ktb ( ), a vowel pattern containing grammatical information such as voice (e.g. the vowel a) and a derivational template, such as CVCVC indicating the class of the verb, all of which are interdigitated to build a stem, such as katab ( ).", "labels": [], "entities": []}, {"text": "1 This stem is in turn subject to more familiar morphological constructions including prefixation and suffixation, yielding information such as number, person, etc, such as kataba ( ), the third person singular masculine perfect form.", "labels": [], "entities": []}, {"text": "The difficulty of capturing this interdigitation process is not an inherent shortcoming of finitestate automata or transducers per se, but rather a result of the methods that are commonly used to construct automata.", "labels": [], "entities": []}, {"text": "Regular expressions that contain operations such as concatenation, union, intersection, as well as morphotactic descriptions through right-linear grammars offer an unwieldy functionality when it comes to interleaving strings with one another in a regulated way.", "labels": [], "entities": []}, {"text": "But, one could argue, since large scale morphological analyzers as finite-state automata/transducers have indeed been built (see e.g.), the question of how to do it becomes one of construction, not feasibility.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}