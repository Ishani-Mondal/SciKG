{"title": [{"text": "Workshop Adaptation of Language Resources and Technology to New Domains", "labels": [], "entities": []}], "abstractContent": [{"text": "A flexible construction kit is presented compiling various forms of finite state replacement rules.", "labels": [], "entities": [{"text": "finite state replacement", "start_pos": 68, "end_pos": 92, "type": "TASK", "confidence": 0.6230399906635284}]}, {"text": "The approach is simpler and more declarative than algorithms in the tradition of Kaplan & Kay.", "labels": [], "entities": []}, {"text": "Simple constraints can be combined to achieve complex effects, including effects based on Optimality Theory.", "labels": [], "entities": []}], "introductionContent": [{"text": "Traditional finite state algorithms for compiling replacement rules have a very procedural flavor.", "labels": [], "entities": []}, {"text": "The general approach originated by involves steps for introducing markers, constraining the markers in various ways, making the actual replacement, constraining the markers again after the replacement and finally removing the markers.", "labels": [], "entities": []}, {"text": "Several variants of Kaplan & Kay's algorithm have been presented (,,) with the goals being either to improve efficiency or to provide slightly different semantics.", "labels": [], "entities": []}, {"text": "In this paper, I present an alternative, more declarative approach.", "labels": [], "entities": []}, {"text": "Rather than being based on a sequence of steps that are composed together, this approach is based on intersection.", "labels": [], "entities": []}, {"text": "A basic, unconstrained replacement is represented by a transducer, which can then be constrained by intersecting this transducer with automata representing a variety of constraints.", "labels": [], "entities": []}, {"text": "The obvious objection to this approach is that transducers are not closed under intersection.", "labels": [], "entities": []}, {"text": "1 It turns out, however, that a rather limited form of intersection is sufficient for implementing the various forms of replacement rules that have appeared in the literature, along with a wide variety of replacement rules that have not appeared in the literature.", "labels": [], "entities": []}, {"text": "One of the advantages of finite state technology is reusability.", "labels": [], "entities": []}, {"text": "An implementation designed for one finite state toolbox can easily be redeployed with a different toolbox.", "labels": [], "entities": []}, {"text": "At least that is the theory.", "labels": [], "entities": []}, {"text": "In practice, toolboxes tend to provide a number of incompatible features.", "labels": [], "entities": []}, {"text": "Replacement rules, in particular, occur in many variations: optional/obligatory, left-to-right/right-to-left/simultaneous, longestmatching/shortest-matching, etc.", "labels": [], "entities": []}, {"text": "Sometimes a rather small variation has required introducing some new syntax.", "labels": [], "entities": []}, {"text": "The widely used Xfst system, for example, has special syntax (dotted brackets) used to enforce a constraint against repeated epenthesis.", "labels": [], "entities": []}, {"text": "While this is certainly a useful option, it is also an impediment to users who wish to transfer their Xfst implementation to another toolbox.", "labels": [], "entities": []}, {"text": "Clearly such users would benefit more from a kind of replacement rule construction kit, allowing such variant replacement rules to be put together as needed.", "labels": [], "entities": [{"text": "replacement rule construction", "start_pos": 53, "end_pos": 82, "type": "TASK", "confidence": 0.8075806697209676}]}, {"text": "But the procedural style of Kaplan & Kay-inspired algorithms makes the development of such a construction kit very difficult.", "labels": [], "entities": []}, {"text": "Given the declarative approach developed in this paper, the construction kit approach can be implemented in any standard finite-state toolkit.", "labels": [], "entities": []}, {"text": "The declarative approach to replacement rules is very flexible, allowing for example, variants of finitestate Optimality Theory ( [5]) to be incorporated into the rules.", "labels": [], "entities": []}, {"text": "In some sense, this is not new, as Karttunen's approach to longest match replacement, was already a kind of optimization.", "labels": [], "entities": [{"text": "longest match replacement", "start_pos": 59, "end_pos": 84, "type": "TASK", "confidence": 0.6548631886641184}]}, {"text": "The declarative, mix-and-match approach, however, allows for the easy incorporation of various optimality constraints.", "labels": [], "entities": []}, {"text": "For example, a constraint against repeated epenthesis could be loosened to allow the minimal amount of epenthesis consistent with some other constraints.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}