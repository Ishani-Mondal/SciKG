{"title": [{"text": "Improving transliteration accuracy using word-origin detection and lexicon lookup", "labels": [], "entities": [{"text": "Improving transliteration accuracy", "start_pos": 0, "end_pos": 34, "type": "TASK", "confidence": 0.7898692687352499}, {"text": "word-origin detection", "start_pos": 41, "end_pos": 62, "type": "TASK", "confidence": 0.7843272089958191}]}], "abstractContent": [{"text": "We propose a framework for translit-eration which uses (i) a word-origin detection engine (pre-processing) (ii) a CRF based transliteration engine and (iii) a re-ranking model based on lexicon-lookup (post-processing).", "labels": [], "entities": [{"text": "word-origin detection", "start_pos": 61, "end_pos": 82, "type": "TASK", "confidence": 0.7333663105964661}]}, {"text": "The results obtained for English-Hindi and English-Kannada transliteration show that the pre-processing and post-processing modules improve the top-1 accuracy by 7.1%.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 150, "end_pos": 158, "type": "METRIC", "confidence": 0.9874605536460876}]}], "introductionContent": [{"text": "Machine transliteration is the method of automatically converting Out-Of-Vocabulary (OOV) words in one language to their phonetic equivalents in another language.", "labels": [], "entities": [{"text": "Machine transliteration", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.7205296158790588}]}, {"text": "An attempt is made to retain the original pronunciation of the source word to as great an extent as allowed by the orthographic and phonological rules of the target language.", "labels": [], "entities": []}, {"text": "This is not a great challenge for language pairs like Hindi-Marathi which have very similar alphabetic and phonetic sets.", "labels": [], "entities": []}, {"text": "However, the problem becomes non-trivial for language pairs like English-Hindi and English-Kannada which have reasonably different alphabet sets and sound systems.", "labels": [], "entities": []}, {"text": "Machine transliteration find its application in Cross-Lingual Information Retrieval (CLIR) and Machine Translation (MT).", "labels": [], "entities": [{"text": "Machine transliteration", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.7804507613182068}, {"text": "Cross-Lingual Information Retrieval (CLIR)", "start_pos": 48, "end_pos": 90, "type": "TASK", "confidence": 0.7784691502650579}, {"text": "Machine Translation (MT)", "start_pos": 95, "end_pos": 119, "type": "TASK", "confidence": 0.8561604619026184}]}, {"text": "In CLIR, machine transliteration can help in translating the OOV terms like proper names and technical terms which frequently appear in the source language queries (e.g. Jaipur in \"Jaipur palace\").", "labels": [], "entities": []}, {"text": "Similarly it can help improve the performance of MT by translating proper names and technical terms which are not present in the translation dictionary.", "labels": [], "entities": [{"text": "MT", "start_pos": 49, "end_pos": 51, "type": "TASK", "confidence": 0.992094099521637}]}, {"text": "Current models for transliteration can be classified as grapheme-based models, phoneme-based models and hybrid models.", "labels": [], "entities": []}, {"text": "Grapheme-based models like source channel model (, Maximum Entropy Model (, Conditional Random Fields ( and Decision Trees) treat transliteration as an orthographic process and try to map the source graphemes directly to the target graphemes.", "labels": [], "entities": []}, {"text": "Phoneme based models like the ones based on Weighted Finite State Transducers (WFST)) and extended Markov window () treat transliteration as a phonetic process rather than an orthographic process.", "labels": [], "entities": []}, {"text": "Under this framework, transliteration is treated as a conversion from source grapheme to source phoneme followed by a conversion from source phoneme to target grapheme.", "labels": [], "entities": []}, {"text": "Hybrid models either use a combination of a grapheme based model and a phoneme based model or capture the correspondence between source graphemes and source phonemes to produce target language graphemes).", "labels": [], "entities": []}, {"text": "Combining any of the above transliteration engines with pre-processing modules like wordorigin detection) and/or post-processing modules like re-ranking using clues from monolingual resources) can enhance the performance of the system.", "labels": [], "entities": [{"text": "wordorigin detection", "start_pos": 84, "end_pos": 104, "type": "TASK", "confidence": 0.7838155925273895}]}, {"text": "We propose such a framework which uses (i) language model based word-origin detection (ii) CRF based transliteration engine and (iii) a re-ranking model based on lexicon lookup on the target language (Hindi and Kannada in our case).", "labels": [], "entities": [{"text": "word-origin detection", "start_pos": 64, "end_pos": 85, "type": "TASK", "confidence": 0.7224402278661728}]}, {"text": "The roadmap of the paper is as follows.", "labels": [], "entities": []}, {"text": "In section 2 we describe the 3 components of the proposed framework.", "labels": [], "entities": []}, {"text": "In section 3 we present the results for English-Hindi and English-Kannada transliteration on the datasets () released for NEWS 2009 Machine Transliteration Shared Task 1 ().", "labels": [], "entities": [{"text": "NEWS 2009 Machine Transliteration Shared Task 1", "start_pos": 122, "end_pos": 169, "type": "TASK", "confidence": 0.687568758215223}]}, {"text": "Section 4 concludes the paper.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Results for English-Kannada transliteration.", "labels": [], "entities": [{"text": "English-Kannada transliteration", "start_pos": 22, "end_pos": 53, "type": "TASK", "confidence": 0.661228358745575}]}, {"text": " Table 2: Results for English-Kannada transliteration.", "labels": [], "entities": [{"text": "English-Kannada transliteration", "start_pos": 22, "end_pos": 53, "type": "TASK", "confidence": 0.652577206492424}]}]}