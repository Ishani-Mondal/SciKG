{"title": [{"text": "Name Matching Between Chinese and Roman Scripts: Machine Complements Human", "labels": [], "entities": [{"text": "Name Matching Between Chinese and Roman Scripts", "start_pos": 0, "end_pos": 47, "type": "TASK", "confidence": 0.8400513018880572}]}], "abstractContent": [{"text": "There are generally many ways to translite-rate a name from one language script into another.", "labels": [], "entities": []}, {"text": "The resulting ambiguity can make it very difficult to \"untransliterate\" a name by reverse engineering the process.", "labels": [], "entities": []}, {"text": "In this paper, we present a highly successful cross-script name matching system that we developed by combining the creativity of human intuition with the power of machine learning.", "labels": [], "entities": [{"text": "cross-script name matching", "start_pos": 46, "end_pos": 72, "type": "TASK", "confidence": 0.6240488588809967}]}, {"text": "Our system determines whether a name in Roman script and a name in Chinese script match each other with an F-score of 96%.", "labels": [], "entities": [{"text": "F-score", "start_pos": 107, "end_pos": 114, "type": "METRIC", "confidence": 0.9993776679039001}]}, {"text": "In addition , for name pairs that satisfy a computational test, the F-score is 98%.", "labels": [], "entities": [{"text": "F-score", "start_pos": 68, "end_pos": 75, "type": "METRIC", "confidence": 0.9995504021644592}]}], "introductionContent": [{"text": "There are generally many ways to transliterate a person\"s name from one language script into another.", "labels": [], "entities": []}, {"text": "For example, writers have transliterated the Arabic name, \u202b,\u0627\u0644\u0634\u0643\u0631\u064a\u202c into Roman characters in at least 13 ways, such as Al Choukri, Ashshukri, and al-Schoukri.", "labels": [], "entities": []}, {"text": "This ambiguity can make it very difficult to \"untransliterate\" a name by reverse engineering the process.", "labels": [], "entities": []}, {"text": "We focused on a task that is related to transliteration.", "labels": [], "entities": []}, {"text": "Cross-script name matching aims to determine whether a given name part in Roman script matches a given name part in Chinese (Mandarin) script, 1 where a name part is a single \"word\" in a person\"s name (such as a surname), and two names match if one is a transliteration of the other.", "labels": [], "entities": [{"text": "Cross-script name matching", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.656581868728002}]}, {"text": "Cross-script name matching has many applications, such as identity matching, improving search engines, and aligning parallel corpora.", "labels": [], "entities": [{"text": "Cross-script name matching", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.7031024297078451}, {"text": "identity matching", "start_pos": 58, "end_pos": 75, "type": "TASK", "confidence": 0.8617942333221436}]}, {"text": "We combine a) the creative power of human intuition, which can come up with clever ideas and b) the computational power of machine learning, which can analyze large quantities of data.", "labels": [], "entities": []}, {"text": "provided the human intuition by designing an algorithm to divide names into pieces that are just the rightsize for Roman-Chinese name matching (Section 2.2.).", "labels": [], "entities": [{"text": "Roman-Chinese name matching", "start_pos": 115, "end_pos": 142, "type": "TASK", "confidence": 0.6976875265439352}]}, {"text": "Armed with Wan and Verspoor\"s algorithm, a machine learning approach analyzes hundreds of thousands of matched name pairs to build a Roman-Chinese name matching system (Section 3).", "labels": [], "entities": []}, {"text": "Our experimental results are in Section 4.", "labels": [], "entities": []}, {"text": "The system correctly determines whether a Roman name and a Chinese name match each other with F = 96.5%.", "labels": [], "entities": [{"text": "F", "start_pos": 94, "end_pos": 95, "type": "METRIC", "confidence": 0.9992067217826843}]}, {"text": "And F = 97.6% for name pairs that satisfy the Perfect Alignment hypothesis condition, which is defined in Section 2.2.", "labels": [], "entities": [{"text": "F", "start_pos": 4, "end_pos": 5, "type": "METRIC", "confidence": 0.9983634352684021}, {"text": "Perfect Alignment", "start_pos": 46, "end_pos": 63, "type": "TASK", "confidence": 0.601727232336998}]}, {"text": "work had a great impact on our research, and we explain how we use it in Section 2.2.", "labels": [], "entities": []}, {"text": "In Section 2.1, we identify other related work.", "labels": [], "entities": []}, {"text": "wrote a paper about the challenges of matching names across Roman and Chinese scripts.", "labels": [], "entities": []}, {"text": "In Section 6 of their paper, they offered an overview of several papers related to Roman-Chinese name matching.", "labels": [], "entities": [{"text": "name matching", "start_pos": 97, "end_pos": 110, "type": "TASK", "confidence": 0.7221430689096451}]}, {"text": "(; The Levenshtein algorithm is a popular way to compute string edit distance.", "labels": [], "entities": []}, {"text": "It can quantify the similarity between two names.", "labels": [], "entities": []}, {"text": "However, this algorithm does notwork when the names are written in different scripts.", "labels": [], "entities": []}, {"text": "(2006) developed a strategy for Roman-Arabic string matching that uses equivalence classes of characters to normalize the names so that Levenshtein\"s method can be applied.", "labels": [], "entities": [{"text": "Roman-Arabic string matching", "start_pos": 32, "end_pos": 60, "type": "TASK", "confidence": 0.7080182433128357}]}, {"text": "Later, transformed that system from Roman-Arabic to Roman-Chinese name matching and extended the Levenshtein approach, attaining F = 85.2%.", "labels": [], "entities": [{"text": "name matching", "start_pos": 66, "end_pos": 79, "type": "TASK", "confidence": 0.7343243509531021}, {"text": "F = 85.2", "start_pos": 129, "end_pos": 137, "type": "METRIC", "confidence": 0.9765284856160482}]}, {"text": "Then when they trained a machine learning algorithm on the output, the performance improved to F = 93.1%", "labels": [], "entities": [{"text": "F", "start_pos": 95, "end_pos": 96, "type": "METRIC", "confidence": 0.9996243715286255}]}], "datasetContent": [{"text": "We ran several experiments to test our system under a variety of different conditions.", "labels": [], "entities": []}, {"text": "After describing our data and experimental method, we present some of our most interesting experimental results.", "labels": [], "entities": []}, {"text": "We used a set of nearly 500,000 RomanChinese person name pairs collected from Xinhua News Agency newswire texts.", "labels": [], "entities": [{"text": "RomanChinese person name pairs collected from Xinhua News Agency newswire texts", "start_pos": 32, "end_pos": 111, "type": "DATASET", "confidence": 0.9518814737146551}]}, {"text": "shows the distribution of the data based on alignment.", "labels": [], "entities": [{"text": "alignment", "start_pos": 44, "end_pos": 53, "type": "METRIC", "confidence": 0.9391400218009949}]}, {"text": "Note that the PA hypothesis applies to more than 60% of the data.", "labels": [], "entities": [{"text": "PA", "start_pos": 14, "end_pos": 16, "type": "METRIC", "confidence": 0.5369670987129211}]}, {"text": "We used the popular 10-fold cross validation approach to obtain ten different evaluation scores.", "labels": [], "entities": []}, {"text": "For each experiment we present the average of these scores.", "labels": [], "entities": []}, {"text": "Our system\"s precision (P), recall (R), and Fscore (F) are: P = 98.19%, R = 94.83%, and F = 96.48%.", "labels": [], "entities": [{"text": "precision (P)", "start_pos": 13, "end_pos": 26, "type": "METRIC", "confidence": 0.9494806081056595}, {"text": "recall (R)", "start_pos": 28, "end_pos": 38, "type": "METRIC", "confidence": 0.949604868888855}, {"text": "Fscore (F)", "start_pos": 44, "end_pos": 54, "type": "METRIC", "confidence": 0.9631764590740204}, {"text": "F", "start_pos": 88, "end_pos": 89, "type": "METRIC", "confidence": 0.997890055179596}]}, {"text": "These scores are much better than we originally expected to see for the challenging task of Roman-Chinese name matching.", "labels": [], "entities": [{"text": "name matching", "start_pos": 106, "end_pos": 119, "type": "TASK", "confidence": 0.7503208816051483}]}, {"text": "shows P, R, and F for subsets of the test data, organized by the number of SSUs mi- Unfortunately, there is no standard way to generate negative examples.", "labels": [], "entities": []}, {"text": "The data is divided into ten subsets of approximately the same size, testing the system on each subset when trained on the other nine.", "labels": [], "entities": []}, {"text": "1.62% #SSUs -#CCs = 2 6.66% #SSUs -#CCs = 1 20.00% #SSUs -#CCs = 0 60.60% #SSUs -#CCs = -1 10.48% #SSUs -#CCs = -2 0.61% #SSUs -#CCs \u2264 -3 0.02%.", "labels": [], "entities": []}, {"text": "Statistics of the Data nus the number of CCs in the name pairs.", "labels": [], "entities": []}, {"text": "The differences between scores in adjacent rows of each column are statistically significant.", "labels": [], "entities": []}, {"text": "Perfectly aligned name pairs proved to be the easiest, with F = 97.55%, but the system was also very successful on the examples with the number of SSUs and the number of CCs differing by one (F = 96.08% and F = 97.37%).", "labels": [], "entities": [{"text": "F", "start_pos": 60, "end_pos": 61, "type": "METRIC", "confidence": 0.9982105493545532}, {"text": "F", "start_pos": 192, "end_pos": 193, "type": "METRIC", "confidence": 0.9818080067634583}, {"text": "F", "start_pos": 207, "end_pos": 208, "type": "METRIC", "confidence": 0.993556559085846}]}, {"text": "These three cases account for more than 91% of the positive examples in our data set.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2. SSU-CC Matrix #1", "labels": [], "entities": []}, {"text": " Table 4. (For in- stance, the last row represents the case where G  is deleted -the SSU-CC pairs are <KAA,\u5361>,  <R,\u5c14>, <L,\u8d1d>, <BER,\u91cc>, and <G,\u00d8>. 11 )", "labels": [], "entities": [{"text": "BER", "start_pos": 127, "end_pos": 130, "type": "METRIC", "confidence": 0.9951778650283813}]}, {"text": " Table 5. SSU-CC Matrix #2", "labels": [], "entities": [{"text": "SSU-CC Matrix", "start_pos": 10, "end_pos": 23, "type": "DATASET", "confidence": 0.7249723672866821}]}, {"text": " Table 10. For the  second row, we used no contextual information.  Row 5 corresponds to the case where we gave  the system access to the SSU immediately fol- lowing the SSU-CC pair being analyzed. In row", "labels": [], "entities": []}, {"text": " Table 8. Varying Alignment of Name Pairs", "labels": [], "entities": [{"text": "Varying Alignment of Name Pairs", "start_pos": 10, "end_pos": 41, "type": "TASK", "confidence": 0.8692268848419189}]}, {"text": " Table 10. Evaluation with Context", "labels": [], "entities": []}, {"text": " Table 9. Varying the Training Data", "labels": [], "entities": [{"text": "Training Data", "start_pos": 22, "end_pos": 35, "type": "DATASET", "confidence": 0.6356802731752396}]}, {"text": " Table 10.) The t test tells us that \"No  Context\" is the only curve that does not increase  significantly on the right end. This suggests that  all of the other curves might continue increasing  if we used more training data. So even the \"Both  SSUs\" case could potentially achieve a competi- tive score, given enough training examples. Also, more training data could produce higher scores  than 96.48%.", "labels": [], "entities": []}, {"text": " Table 11. Num. SSU-CC Pairs per Matrix Cell", "labels": [], "entities": []}]}