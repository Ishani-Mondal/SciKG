{"title": [{"text": "Automatic Generation of Tamil Lyrics for Melodies", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper presents our on\u00adgoing work to automatically generate lyrics fora given melody, for phonetic languages such as Tamil.", "labels": [], "entities": []}, {"text": "We approach the task of identifying the required syllable pattern for the lyric as a sequence labeling problem and hence use the popular CRF++ toolkit for learning.", "labels": [], "entities": [{"text": "sequence labeling", "start_pos": 85, "end_pos": 102, "type": "TASK", "confidence": 0.7476967871189117}]}, {"text": "A corpus comprising of 10 melodies was used to train the system to understand the syllable patterns.", "labels": [], "entities": []}, {"text": "The trained model is then used to guess the syllabic pattern fora new melody to produce an optimal sequence of syllables.", "labels": [], "entities": []}, {"text": "This sequence is presented to the Sentence Generation module which uses the Dijkstra's shortest path algorithm to come up with a meaningful phrase matching the syllabic pattern.", "labels": [], "entities": [{"text": "Sentence Generation", "start_pos": 34, "end_pos": 53, "type": "TASK", "confidence": 0.9327178299427032}]}], "introductionContent": [{"text": "In an attempt to define poetry), provides three properties fora natural language arti\u00ad fact to be considered a poetic work, viz., Meaning\u00ad fulness (M), Grammaticality (G) and Poeticness (P).", "labels": [], "entities": []}, {"text": "A complete poetry generation system must generate texts that adhere to all the three properties.", "labels": [], "entities": [{"text": "poetry generation", "start_pos": 11, "end_pos": 28, "type": "TASK", "confidence": 0.7323655188083649}]}, {"text": "In this work, our attempt would be to generate meaningful lyrics that match the melody and the poetic aspects of the lyric will be tackled in future works.", "labels": [], "entities": []}, {"text": "According to on\u00adline resources such as How to write lyrics, the generated lyric must have Rhythm, Rhyme and Repetition.", "labels": [], "entities": [{"text": "Rhythm", "start_pos": 90, "end_pos": 96, "type": "METRIC", "confidence": 0.9963633418083191}]}, {"text": "One of the recent attempts for automatically gen\u00ad erating lyrics fora given melody is the Tra\u00adla\u00ad Lyrics system ( . This system uses the ABC notation for repre\u00ad senting melody and the corresponding suite of tools for analyzing the melodies.", "labels": [], "entities": [{"text": "gen\u00ad erating lyrics", "start_pos": 45, "end_pos": 64, "type": "TASK", "confidence": 0.8169742524623871}, {"text": "Tra\u00adla\u00ad Lyrics", "start_pos": 90, "end_pos": 104, "type": "DATASET", "confidence": 0.7886079152425131}, {"text": "repre\u00ad senting melody", "start_pos": 154, "end_pos": 175, "type": "TASK", "confidence": 0.777205765247345}]}, {"text": "The key aspect of the system is its attempt to detect the strong beats present in the given melody and associating words with stressed syllables in the corresponding posi\u00ad tions.", "labels": [], "entities": []}, {"text": "It also evaluates three lyric generation strate\u00ad gies ( ) -random words+rhymes, sentence templates+rhymes and grammar+rhymes.", "labels": [], "entities": []}, {"text": "Of these strategies, the sentence templates+rhymes approach attempts for syntactical coherence and the grammar+rhymes approach uses a grammar to derive Portuguese sentence templates.", "labels": [], "entities": []}, {"text": "From the demo runs presented, we see that the sys\u00ad tem can generate grammatical sentences (when us\u00ad ing an appropriate strategy).", "labels": [], "entities": []}, {"text": "However, there is no attempt to bring Meaningfulness in the lyrics.", "labels": [], "entities": []}], "datasetContent": [{"text": "We conducted the experiments as two separate steps, one for the CRF engine and another for the Sentence Generation module.", "labels": [], "entities": [{"text": "Sentence Generation", "start_pos": 95, "end_pos": 114, "type": "TASK", "confidence": 0.92943474650383}]}, {"text": "For the CRF engine, we collected and used Tamil film songs' tune and lyrics, as they were easily available from the web.", "labels": [], "entities": [{"text": "CRF", "start_pos": 8, "end_pos": 11, "type": "TASK", "confidence": 0.807247519493103}]}, {"text": "The tunes were converted to the ABC notation and their lyrics were converted to the KNM representation scheme.", "labels": [], "entities": []}, {"text": "The notes from the tune and the syllables in the corresponding lyric (in their respective representation schemes) were manually mapped with each other.", "labels": [], "entities": []}, {"text": "An example training file for the CRF engine for learning the KNM representation scheme is presented below:  For sentence boundary identification, the output from the word boundary identification is used and hence it is run after the word boundary identifica\u00ad tion is complete.", "labels": [], "entities": [{"text": "sentence boundary identification", "start_pos": 112, "end_pos": 144, "type": "TASK", "confidence": 0.6889310777187347}]}, {"text": "Thus, the input to the CRF engine in this case would be like the one in, with labels corresponding to sentence boundary such as S\u00adB (sentence beginning) and S\u00adI (sentence interme\u00ad diate):  For the Sentence Generation module, we used short stories, poems and Tamil lyrics across various themes such as love, appreciation of nature, patrio\u00ad tism, etc.", "labels": [], "entities": [{"text": "Sentence Generation", "start_pos": 197, "end_pos": 216, "type": "TASK", "confidence": 0.9295842349529266}]}, {"text": "From this, all the special characters were removed and the list of Unigram and Bigram Words were collected along with their frequencies.", "labels": [], "entities": []}, {"text": "Based on the limited experiments performed on the trained CRF model, we observe that the feature set presented for Syllable identification seem to per\u00ad form reasonably and identifies the syllables with 70% accuracy for manually tagged melodies.", "labels": [], "entities": [{"text": "Syllable identification", "start_pos": 115, "end_pos": 138, "type": "TASK", "confidence": 0.9548739790916443}, {"text": "accuracy", "start_pos": 206, "end_pos": 214, "type": "METRIC", "confidence": 0.9976981282234192}]}, {"text": "How\u00ad ever, we could not objectively evaluate the Word and Sentence Boundary identification process as the resulting boundaries can also be considered as valid boundaries.", "labels": [], "entities": [{"text": "Word and Sentence Boundary identification", "start_pos": 49, "end_pos": 90, "type": "TASK", "confidence": 0.6311448574066162}]}, {"text": "In general, the word and sentence boundaries are the choice of the lyricist and hence the results can be considered as another valid way to generate lyric.", "labels": [], "entities": []}, {"text": "Also, we feel that the number of training samples (10 melodies) supplied for training the CRF engine is very less for it to reasonably learn the nuances that are present in real\u00adword lyrics.", "labels": [], "entities": []}, {"text": "Some of the syllable patterns identified from the tune and the corresponding sentences generated are given below: Pattern", "labels": [], "entities": [{"text": "Pattern", "start_pos": 114, "end_pos": 121, "type": "TASK", "confidence": 0.623781144618988}]}], "tableCaptions": []}