{"title": [{"text": "Speeding Up the Design of Dialogue Applications by Using Database Contents and Structure Information", "labels": [], "entities": []}], "abstractContent": [{"text": "Nowadays, most commercial and research dialogue applications for call centers are created using sophisticated and fully-feature development platforms.", "labels": [], "entities": []}, {"text": "Surprisingly , most of them lack of some kind of acceleration strategy based on an automatic analysis of the contents or structure of the backend database.", "labels": [], "entities": []}, {"text": "This paper describes our efforts to incorporate this kind of information which continues the work done in (D'Haro et al, 2006).", "labels": [], "entities": []}, {"text": "Our main proposed strategies are: the generation of automatic state proposals for defining the dialogue flow network, the automatic selection of slots to be requested using mixed-initiative, the semi-automatic generation of SQL statements, and the quick generation of the data model of the application and the connection with the database fields.", "labels": [], "entities": []}, {"text": "Subjective and objective evaluations demonstrate the advantages of using the accelerations and their high acceptance, both in our current proposals and in previous work.", "labels": [], "entities": [{"text": "acceptance", "start_pos": 106, "end_pos": 116, "type": "METRIC", "confidence": 0.9951128363609314}]}], "introductionContent": [{"text": "Currently, the growing demand of automatic dialogue services for different domains, user profiles, and languages has led to the development of a large number of sophisticated commercial and research platforms that provide all the necessary components for designing, executing, deploying and maintaining such services with minimum effort and with innovative functions that make them interesting for developers and final users.", "labels": [], "entities": []}, {"text": "In their effort for accelerating the design, most commercial platforms provide several high-level tools to build multimodal and multilingual dialogue applications using widespread standards such as VoiceXML, CCXML, J2EE, RCP, SRGS, etc.", "labels": [], "entities": [{"text": "SRGS", "start_pos": 226, "end_pos": 230, "type": "DATASET", "confidence": 0.7415516376495361}]}, {"text": "In addition, they include state-of-the-art modules such as speech recognizers, high quality speech synthesizers, language identification capabilities, etc., that guarantees user satisfaction and interaction.", "labels": [], "entities": [{"text": "speech recognizers", "start_pos": 59, "end_pos": 77, "type": "TASK", "confidence": 0.7037399262189865}, {"text": "language identification", "start_pos": 113, "end_pos": 136, "type": "TASK", "confidence": 0.7213835567235947}]}, {"text": "In addition, they present a very userfriendly graphical interface that makes easy the development of very complex dialogues, besides the incorporation of predefined libraries for typical dialogues states such as requesting card or social security numbers, etc., and additional assistants for debugging, logging and simulate the service.", "labels": [], "entities": []}, {"text": "In contrast to commercial platforms, research or academic platforms (e.g. CSLU-RAD 1 , DialogDesigner 2 , Olympus 3 , Trindi-kit 4 , etc.) do not necessary incorporate all the above-mentioned features; especially because they are limited to the number of standards that they are able to handle and to the integration level with other platforms, as well as the number of capabilities that they can offer to the users and programmers.", "labels": [], "entities": []}, {"text": "However, they allow more complex dialogue interactions, most of them are freely available as open source, and using third party modules it is possible to extend their functionalities.", "labels": [], "entities": []}, {"text": "Surprisingly, these platforms do not include any kind of acceleration strategies based on the contents or in the structure of the backend database that, as we will show, can provide important information for the design.", "labels": [], "entities": []}, {"text": "Next, we will describe some examples of applications or dialogue systems that use data mining techniques or heuristic infor-mation extracted from the database contents in order to create automatic dialogue services.", "labels": [], "entities": []}, {"text": "In), different data mining techniques are used to automate the selection of content data to be used in system initiative queries and to provide summarized answers.", "labels": [], "entities": []}, {"text": "At runtime, the system automatically selects the attributes to constrain the prompt queries that narrow down best the interaction flow with the final users.", "labels": [], "entities": []}, {"text": "In), the database is used together with a simulation system in order to generate thousands of unique dialogues that can be used to train the speech recognizer and the understanding module, as well as to diagnose the system behaviour against problematic user's interactions or answers.", "labels": [], "entities": [{"text": "speech recognizer", "start_pos": 141, "end_pos": 158, "type": "TASK", "confidence": 0.7106179147958755}]}, {"text": "In (), a complete platform to build voice services where the database contents change constantly is described.", "labels": [], "entities": []}, {"text": "At runtime, the system retrieves information that the user is interested in according to his personal profile.", "labels": [], "entities": []}, {"text": "In addition, the system is able to create automatically dynamic speech grammars and prompts, as well as the dialogue flow for presenting information to the user, or for solving some interaction errors through predefined dialogue templates.", "labels": [], "entities": []}, {"text": "Finally,) proposes a very different approach, not using a database but mining the content of corporate websites for automatically creating spoken and text-based dialogue applications for custom care.", "labels": [], "entities": []}, {"text": "Although the dialogue flow is predefined, it is interesting to see that important knowledge, for the different modules of the dialogue system, can also be extracted and used from a well-designed content.", "labels": [], "entities": []}, {"text": "In this work, we have solved some of the limitations of current platforms by incorporating successfully heuristic information into the different assistants of the platform and allowing them to collaborate between each other in several ways, as they collect the information already provided in the first stages of the design to improve and accelerate the design in the last stages.", "labels": [], "entities": []}, {"text": "This way, the platform assistants classify which fields of the database could be relevant for the design, generate different kinds of automatic proposals according to the design step, reduce the information displayed to the designer, and accelerate different typical procedures required to define the application.", "labels": [], "entities": []}, {"text": "The paper is organized as follows: section 2 provides an overview of the overall architecture of the platform, including a brief description of the main assistants and layers that makes it up.", "labels": [], "entities": []}, {"text": "Section 3 describes previous accelerations in the platform related with the current work; Sections 4, 5, and 6 describe in detail the new strategies and the assistants that include them.", "labels": [], "entities": []}, {"text": "Section 7 describes the subjective and objective evaluations, and section 8 outlines some conclusions and future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "With the objective of evaluating the performance of each of the acceleration strategies and assistants described above, we carried out a subjective and objective evaluation with 9 developers with different experience levels and profiles (4 novices, 3 intermediates, and 2 experts) on designing dialogue services.", "labels": [], "entities": []}, {"text": "They were requested to fulfil different typical tasks covering each of the proposed accelerations and assistants to evaluate.", "labels": [], "entities": []}, {"text": "Further details can be obtained in.", "labels": [], "entities": []}, {"text": "For the subjective evaluation, the participants were asked to answer a questionnaire that consists of four questions per assistant and seventeen for the overall platform, with a range between 1 and 10.", "labels": [], "entities": []}, {"text": "This subjective evaluation confirms the designer-friendliness of the assistants, as well as their usability, since all the assistants obtained a global score higher than 8.0, which is a nice result.", "labels": [], "entities": []}, {"text": "In detail, the DMA and DCMA obtained an 8.3, the SFMA a 9.0, the RMA an 8.6, and Diagen a 4.5.", "labels": [], "entities": [{"text": "SFMA", "start_pos": 49, "end_pos": 53, "type": "DATASET", "confidence": 0.8735235333442688}, {"text": "RMA", "start_pos": 65, "end_pos": 68, "type": "DATASET", "confidence": 0.8271660208702087}]}, {"text": "Regarding the acceleration strategies, see, the evaluators scored the automatic states with 9.3, the SQL generation and the unification of slots for mixed initiative with 9.0, and the class proposals with 8.9.", "labels": [], "entities": []}, {"text": "Regarding the RMA and the accelerations related with the information extracted from the database (see section 3), the passing of arguments between actions and the proposal of dialogue actions obtained a 9.8 and 8.6 respectively.", "labels": [], "entities": [{"text": "RMA", "start_pos": 14, "end_pos": 17, "type": "TASK", "confidence": 0.8058241009712219}]}, {"text": "For the objective evaluation, we collected the metrics proposed in (: elapsed time, number of clicks, number of keystrokes, and number of corrections using the keyboard (keystroke errors).", "labels": [], "entities": []}, {"text": "We compared our assistants with a built-in editor called Diagen, created during the GEMINI project and improved later on by, which features fewer accelerations but generates the same information specified by our assistants.", "labels": [], "entities": []}, {"text": "As accelerations, Diagen only provides default templates that the designer has to complete and a guided procedure using different pop-up windows to fulfil the templates.", "labels": [], "entities": []}, {"text": "The results confirm that the design time can be reduced, in average for all the assistants and tasks, in more than 45%, the number of keystrokes in 81%, and the number of clicks in 40%.", "labels": [], "entities": []}, {"text": "Especially relevant is the high reduction (85%) obtained in the RMA considering that it is the main task in the design.", "labels": [], "entities": [{"text": "reduction", "start_pos": 32, "end_pos": 41, "type": "METRIC", "confidence": 0.9661747217178345}, {"text": "RMA", "start_pos": 64, "end_pos": 67, "type": "TASK", "confidence": 0.6155036091804504}]}], "tableCaptions": []}