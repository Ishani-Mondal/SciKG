{"title": [{"text": "Analysis of Discourse Structure with Syntactic Dependencies and Data-Driven Shift-Reduce Parsing", "labels": [], "entities": []}], "abstractContent": [{"text": "We present an efficient approach for discourse parsing within and across sentences , where the unit of processing is an entire document, and not a single sentence.", "labels": [], "entities": [{"text": "discourse parsing", "start_pos": 37, "end_pos": 54, "type": "TASK", "confidence": 0.6813714951276779}]}, {"text": "We apply shift-reduce algorithms for dependency and constituent parsing to determine syntactic dependencies for the sentences in a document, and subsequently a Rhetorical Structure Theory (RST) tree for the entire document.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 52, "end_pos": 71, "type": "TASK", "confidence": 0.7172118723392487}, {"text": "Rhetorical Structure Theory (RST)", "start_pos": 160, "end_pos": 193, "type": "TASK", "confidence": 0.7477593123912811}]}, {"text": "Our results show that our linear-time shift-reduce framework achieves high accuracy and a large improvement in efficiency compared to a state-of-the-art approach based on chart parsing with dynamic programming.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 75, "end_pos": 83, "type": "METRIC", "confidence": 0.9993177652359009}, {"text": "chart parsing", "start_pos": 171, "end_pos": 184, "type": "TASK", "confidence": 0.7299971282482147}]}], "introductionContent": [{"text": "Transition-based dependency parsing using shiftreduce algorithms is now in wide use for dependency parsing, where the goal is to determine the syntactic structure of sentences.", "labels": [], "entities": [{"text": "Transition-based dependency parsing", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.6186449627081553}, {"text": "dependency parsing", "start_pos": 88, "end_pos": 106, "type": "TASK", "confidence": 0.8453094065189362}]}, {"text": "State-of-theart results have been achieved for syntactic analysis in a variety of languages).", "labels": [], "entities": [{"text": "syntactic analysis", "start_pos": 47, "end_pos": 65, "type": "TASK", "confidence": 0.7527800798416138}]}, {"text": "In contrast to graph-based approaches, which use edge-factoring to allow for global optimization of parameters over entire tree structures using dynamic programming or maximum spanning tree algorithms) transition-based models are usually optimized at the level of individual shift-reduce actions, and can be used to drive parsers that produce competitive accuracy using greedy search strategies in linear time.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 355, "end_pos": 363, "type": "METRIC", "confidence": 0.9554831385612488}]}, {"text": "Recent research in data-driven shift-reduce parsing has shown that the basic algorithms used for determining dependency trees can be extended to produce constituent structures, and more general dependency graphs, where words can be linked to more than one head (.", "labels": [], "entities": []}, {"text": "A remarkably similar parsing approach, which predates the current wave of interest in data-driven shift-reduce parsing sparked by and, was proposed by Marcu (1999) for data-driven discourse parsing, where the goal is to determine the rhetorical structure of a document, including relationships that span multiple sentences.", "labels": [], "entities": [{"text": "parsing", "start_pos": 21, "end_pos": 28, "type": "TASK", "confidence": 0.962893545627594}, {"text": "data-driven shift-reduce parsing", "start_pos": 86, "end_pos": 118, "type": "TASK", "confidence": 0.6915615797042847}, {"text": "data-driven discourse parsing", "start_pos": 168, "end_pos": 197, "type": "TASK", "confidence": 0.6946259538332621}]}, {"text": "The linear-time shift-reduce framework is particularly well suited for discourse parsing, since the length of the input string depends on document length, not sentence length, making cubic run-time chart parsing algorithms often impractical.", "labels": [], "entities": [{"text": "discourse parsing", "start_pos": 71, "end_pos": 88, "type": "TASK", "confidence": 0.7223503142595291}, {"text": "cubic run-time chart parsing", "start_pos": 183, "end_pos": 211, "type": "TASK", "confidence": 0.6943082064390182}]}, {"text": "presented an approach to discourse parsing that relied on syntactic information produced by the parser, and used a standard bottom-up chart parsing algorithm with dynamic programming to determine discourse structure.", "labels": [], "entities": [{"text": "discourse parsing", "start_pos": 25, "end_pos": 42, "type": "TASK", "confidence": 0.7421680986881256}, {"text": "bottom-up chart parsing", "start_pos": 124, "end_pos": 147, "type": "TASK", "confidence": 0.7584864099820455}]}, {"text": "Their approach greatly improved on the accuracy of Marcu's shift-reduce approach, showing the value of using syntactic information in discourse analysis, but recovered only discourse relations within sentences.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 39, "end_pos": 47, "type": "METRIC", "confidence": 0.9988003969192505}]}, {"text": "We present an efficient approach to discourse parsing using syntactic information, inspired by Marcu's application of a shift-reduce algorithm for discourse analysis with Rhetorical Structure Theory (RST), and Soricut and Marcu's use of syntactic structure to help determine discourse structure.", "labels": [], "entities": [{"text": "discourse parsing", "start_pos": 36, "end_pos": 53, "type": "TASK", "confidence": 0.7073913663625717}, {"text": "discourse analysis", "start_pos": 147, "end_pos": 165, "type": "TASK", "confidence": 0.74282506108284}]}, {"text": "Our transition-based discourse parsing framework combines elements from Nivre (2004)'s approach to dependency parsing, and's approach to constituent parsing.", "labels": [], "entities": [{"text": "transition-based discourse parsing", "start_pos": 4, "end_pos": 38, "type": "TASK", "confidence": 0.6311055918534597}, {"text": "dependency parsing", "start_pos": 99, "end_pos": 117, "type": "TASK", "confidence": 0.7915901243686676}, {"text": "constituent parsing", "start_pos": 137, "end_pos": 156, "type": "TASK", "confidence": 0.736004650592804}]}, {"text": "Our results improve on accuracy over existing approaches for data-driven RST parsing, while also improving on speed over Soricut and Marcu's chart parsing approach, which produces state-of-the-art results for RST discourse relations within sentences.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 23, "end_pos": 31, "type": "METRIC", "confidence": 0.9991931319236755}, {"text": "RST parsing", "start_pos": 73, "end_pos": 84, "type": "TASK", "confidence": 0.9727914035320282}, {"text": "speed", "start_pos": 110, "end_pos": 115, "type": "METRIC", "confidence": 0.9745848178863525}, {"text": "chart parsing", "start_pos": 141, "end_pos": 154, "type": "TASK", "confidence": 0.7188388407230377}, {"text": "RST discourse relations within sentences", "start_pos": 209, "end_pos": 249, "type": "TASK", "confidence": 0.9103546738624573}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Precision, recall, f-score and time  for discourse segmenters, tested on the RST  Discourse Treebank. Time includes syntactic  parsing, Charniak (2000) for S&M03, and  our implemetation of Nivre arc-standard for  our segmenter.", "labels": [], "entities": [{"text": "Precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.995499312877655}, {"text": "recall", "start_pos": 21, "end_pos": 27, "type": "METRIC", "confidence": 0.9987931251525879}, {"text": "time", "start_pos": 41, "end_pos": 45, "type": "METRIC", "confidence": 0.9781519770622253}, {"text": "RST  Discourse Treebank", "start_pos": 87, "end_pos": 110, "type": "DATASET", "confidence": 0.9530223409334818}, {"text": "syntactic  parsing", "start_pos": 126, "end_pos": 144, "type": "TASK", "confidence": 0.6988206654787064}]}]}