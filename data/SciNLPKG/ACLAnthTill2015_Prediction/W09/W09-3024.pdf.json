{"title": [{"text": "Unsupervised Detection of Annotation Inconsistencies Using Apriori Algorithm", "labels": [], "entities": []}], "abstractContent": [{"text": "We present anew method for automated discovery of inconsistencies in a complex manually annotated corpora.", "labels": [], "entities": []}, {"text": "The proposed technique is based on Apriori algorithm for mining association rules from datasets.", "labels": [], "entities": []}, {"text": "By setting appropriate parameters to the algorithm, we were able to automatically infer highly reliable rules of annotation and subsequently we searched for records for which the inferred rules were violated.", "labels": [], "entities": []}, {"text": "We show that the violations found by this simple technique are often caused by an annotation error.", "labels": [], "entities": []}, {"text": "We present an evaluation of this technique on a hand-annotated corpus PDT 2.0, present the error analysis and show that in the first 100 detected nodes 20 of them contained an annotation error.", "labels": [], "entities": [{"text": "hand-annotated corpus PDT 2.0", "start_pos": 48, "end_pos": 77, "type": "DATASET", "confidence": 0.7734607011079788}, {"text": "error analysis", "start_pos": 91, "end_pos": 105, "type": "METRIC", "confidence": 0.9607952237129211}]}], "introductionContent": [{"text": "Complex annotation schemes pose a serious challenge to annotators caused by the number of attributes they are asked to fill.", "labels": [], "entities": []}, {"text": "The annotation tool can help them in ensuring that the values of all attributes are from the appropriate domain but the interplay of individual values and their mutual compatibility are at best described in annotation instructions and often implicit.", "labels": [], "entities": []}, {"text": "Another source of errors are idiomatic expressions where it is difficult for the annotator to think about the categories of a word which often exists only as apart of the idiom at hand.", "labels": [], "entities": []}, {"text": "In our approach, detection of annotation inconsistencies is an instance of anomaly detection, which is mainly used in the field of intrusion detection.", "labels": [], "entities": [{"text": "anomaly detection", "start_pos": 75, "end_pos": 92, "type": "TASK", "confidence": 0.7215727716684341}, {"text": "intrusion detection", "start_pos": 131, "end_pos": 150, "type": "TASK", "confidence": 0.7372479736804962}]}, {"text": "Traditionally, the anomaly detection is based on distances between feature vectors of individual instances.", "labels": [], "entities": [{"text": "anomaly detection", "start_pos": 19, "end_pos": 36, "type": "TASK", "confidence": 0.7203771024942398}]}, {"text": "These methods are described in Section 2.", "labels": [], "entities": []}, {"text": "Our new method presented in Section 3 uses the data-mining technique) for inferring high-quality rules, whose violation indicates a possible annotator's mistake or another source of inconsistency.", "labels": [], "entities": []}, {"text": "We tested the proposed method on a manually annotated corpus and described both the data and the experimental results in Section 4.", "labels": [], "entities": []}, {"text": "We conclude by Section 5.", "labels": [], "entities": []}], "datasetContent": [{"text": "In our experimental setup, every check-out (i.e., every draw from the probability distribution \u03a6) contains all attributes of one tectogrammatical node and its governor.", "labels": [], "entities": []}, {"text": "The attributes extracted from the nodes are listed in.", "labels": [], "entities": []}, {"text": "Thus every check-out has exactly 52 items, 26 coming from the node in question and 26 coming from its governor.", "labels": [], "entities": []}, {"text": "This being input to the Apriori algorithm, we set the maximal size of rules to 3, minimal support to 0.001 and minimal confidence to 0.995.", "labels": [], "entities": []}, {"text": "When the rules were extracted, we sorted them according to the descending confidence and stripped all rules with confidence equal to 1.", "labels": [], "entities": []}, {"text": "Using the remaining rules, we searched the corpus for the violations of the rules (starting from the top one) until we found first 100 suspicious nodes.", "labels": [], "entities": []}, {"text": "We manually analyzed these 100 positions and found out that 20: Attributes of tectogrammatical nodes used as the input to the rule mining algorithm.", "labels": [], "entities": [{"text": "rule mining", "start_pos": 126, "end_pos": 137, "type": "TASK", "confidence": 0.8509455919265747}]}, {"text": "Their complex interplay can hardly be fully prescribed in an annotation manual. of them constitute an annotation error.", "labels": [], "entities": []}, {"text": "Examples of extracted rules follow. is parenthesis:1 & governor:functor:PAR \u21d2 governor:is parenthesis:1 Rule 3 states that if a tectogrammatical node has the attribute is parenthesis set to 1 (i.e., the node is part of a parenthesis) and at the same time the governor of this node in the tectogrammatical tree has its functor set to PAR (it is the root node of nodes which are parenthesis in a sentence), the governor's is parenthesis attribute is also set to 1.", "labels": [], "entities": [{"text": "PAR", "start_pos": 333, "end_pos": 336, "type": "METRIC", "confidence": 0.939057469367981}]}, {"text": "Using this rule we detected 6 nodes in the corpus where the annotator forgot to fill the value 1 in the is parenthesis attribute.", "labels": [], "entities": []}, {"text": "There were no false positives and this automatically extracted rule is likely to be added to the consistency checking routines in the future.", "labels": [], "entities": []}], "tableCaptions": []}