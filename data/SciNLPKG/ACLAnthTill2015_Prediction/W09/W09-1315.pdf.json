{"title": [{"text": "Transforming Controlled Natural Language Biomedical Queries into Answer Set Programs", "labels": [], "entities": [{"text": "Transforming Controlled Natural Language Biomedical Queries", "start_pos": 0, "end_pos": 59, "type": "TASK", "confidence": 0.8965597550074259}]}], "abstractContent": [{"text": "We introduce a controlled natural language for biomedical queries, called BIOQUERYCNL, and present an algorithm to convert a biomed-ical query in this language into a program in answer set programming (ASP)-a formal framework to automate reasoning about knowledge.", "labels": [], "entities": [{"text": "BIOQUERYCNL", "start_pos": 74, "end_pos": 85, "type": "METRIC", "confidence": 0.9272890090942383}]}, {"text": "BIOQUERYCNL allows users to express complex queries (possibly containing nested relative clauses and cardinality constraints) over biomedical ontologies; and such a transformation of BIOQUERYCNL queries into ASP programs is useful for automating reasoning about biomedical ontologies by means of ASP solvers.", "labels": [], "entities": [{"text": "BIOQUERYCNL", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.760295033454895}, {"text": "ASP solvers", "start_pos": 296, "end_pos": 307, "type": "TASK", "confidence": 0.876207023859024}]}, {"text": "We precisely describe the grammar of BIOQUERYCNL, implement our transformation algorithm, and illustrate its applicability to biomedical queries by some examples.", "labels": [], "entities": [{"text": "BIOQUERYCNL", "start_pos": 37, "end_pos": 48, "type": "METRIC", "confidence": 0.6818269491195679}]}], "introductionContent": [{"text": "The rapid increase in the popularity and usage of Web leads researchers to store data and make it publicly available in many ways.", "labels": [], "entities": []}, {"text": "In particular, to facilitate access to its desired parts, it is stored in a structured form, like ontologies.", "labels": [], "entities": []}, {"text": "These ontologies can be queried with an SQL-like formal query language.", "labels": [], "entities": []}, {"text": "However, since these ontologies have been developed for and widely used by people that lacks the necessary knowledge in a formal query language, a simpler and more commonly known language is needed to represent queries.", "labels": [], "entities": []}, {"text": "A natural language is the perfect answer, but ambiguities in its grammar and vocabulary make it difficult to automate reasoning about queries in natural language.", "labels": [], "entities": []}, {"text": "Therefore, to represent queries, we consider a middle ground between these two options: a Controlled Natural Language (CNL).", "labels": [], "entities": []}, {"text": "A CNL is a subset of a natural language, with a restricted grammar and vocabulary, that overcomes the ambiguity of natural languages.", "labels": [], "entities": []}, {"text": "Since we consider queries in a specific domain, namely biomedicine, and over specific sources of information, namely biomedical ontologies, a CNL designed and developed for reasoning about biomedical ontologies is sufficient to represent biomedical queries.", "labels": [], "entities": []}, {"text": "Essentially, a CNL is a formal language but with a look of a natural language.", "labels": [], "entities": []}, {"text": "Therefore, compared to a natural language, a CNL can be easily converted to some other formalisms.", "labels": [], "entities": []}, {"text": "This allows us to use automated reasoners, specifically developed for such formalisms, to find answers to queries expressed in a CNL.", "labels": [], "entities": []}, {"text": "One such formalism is Answer Set Programming (ASP).", "labels": [], "entities": [{"text": "Answer Set Programming (ASP)", "start_pos": 22, "end_pos": 50, "type": "TASK", "confidence": 0.8384624024232229}]}, {"text": "ASP is anew knowledge representation and reasoning paradigm which supports representation of defaults, constraints, preferences, aggregates, etc., and provides technologies that allow us to automate reasoning with incomplete information, and to integrate other technologies, like description logics reasoners and Semantic Web technologies.", "labels": [], "entities": [{"text": "knowledge representation", "start_pos": 12, "end_pos": 36, "type": "TASK", "confidence": 0.761002242565155}]}, {"text": "For instance, in, the authors illustrate the applicability and effectiveness of using ASP to represent a rule layer that integrates relevant parts of some biomedical ontologies in RDF(S)/OWL, and to compute answers to some complex biomedical queries over these ontologies.", "labels": [], "entities": []}, {"text": "Although CNLs are appropriate for expressing biomedical queries, and methods and technologies of ASP are appropriate for automated reasoning about biomedical ontologies, there is no algorithm to convert a CNL biomedical query into a program.", "labels": [], "entities": []}, {"text": "In (, biomedical queries are represented as programs in ASP; however, these programs are constructed manually.", "labels": [], "entities": []}, {"text": "However, manually constructing ASP programs to represent biomedical queries is not only time consuming but also requires expertise in ASP.", "labels": [], "entities": []}, {"text": "This prevents automating the whole process of computing an answer to a query, once it is given in a CNL.", "labels": [], "entities": []}, {"text": "In this paper, we design and develop a CNL (called BIOQUERYCNL) for expressing biomedical queries over some ontologies, and introduce an algorithm to convert a biomedical query expressed in this CNL into a program in ASP.", "labels": [], "entities": [{"text": "BIOQUERYCNL", "start_pos": 51, "end_pos": 62, "type": "METRIC", "confidence": 0.8538755774497986}]}, {"text": "The idea is to automatically compute an answer to the query using methods of), once the user types the query.", "labels": [], "entities": []}, {"text": "This idea is illustrated in.", "labels": [], "entities": []}, {"text": "Similar approaches of using a CNL for querying ontologies have been investigated in various studies.", "labels": [], "entities": []}, {"text": "For instance, () considers queries in the controlled natural language, Attempto Controlled English (ACE), and transforms them into queries in PQL ( to be evaluated by a query engine.", "labels": [], "entities": []}, {"text": "( ) presents a system that guides the user to write a query in ACE, and translates the query into SPARQL to be evaluated by the reasoner of JENA.", "labels": [], "entities": [{"text": "JENA", "start_pos": 140, "end_pos": 144, "type": "DATASET", "confidence": 0.9325894713401794}]}, {"text": "On the other hand,) transforms a given natural language query to a SPARQL query (using the Stanford Parser and WORDNET) to be evaluated by a reasoner like that of JENA.", "labels": [], "entities": [{"text": "JENA", "start_pos": 163, "end_pos": 167, "type": "DATASET", "confidence": 0.8746415376663208}]}, {"text": "Our work is different from these studies in two ways: we consider queries over biomedical ontologies (thus different forms of queries, and vocabulary), and we transform a query into an ASP program to automate reasoning over a rule layer presented in ASP.", "labels": [], "entities": []}, {"text": "Transformations of natural language sentences into ASP has been studied in ( and ().", "labels": [], "entities": [{"text": "Transformations of natural language sentences", "start_pos": 0, "end_pos": 45, "type": "TASK", "confidence": 0.8392985463142395}]}, {"text": "In (, the authors introduce methods to transform some simple forms of sentences into ASP using Lambda Calculus.", "labels": [], "entities": []}, {"text": "In (, the authors use C&C tools to parse the some forms of natural language input, and perform a semantic analysis over the parser output using BOXER, to do reasoning in ASP.", "labels": [], "entities": [{"text": "BOXER", "start_pos": 144, "end_pos": 149, "type": "METRIC", "confidence": 0.9684176445007324}]}, {"text": "Our work is different in that we consider a CNL to express queries, and introduce a different method for converting CNL to a program in ASP, via Discourse Representation Structures (DRS).", "labels": [], "entities": []}, {"text": "In the rest of the paper, first we briefly discuss ASP with some examples (Section 2).", "labels": [], "entities": [{"text": "ASP", "start_pos": 51, "end_pos": 54, "type": "TASK", "confidence": 0.9870520830154419}]}, {"text": "Then we define the grammatical structure of BIOQUERYCNL and give some examples (Section 3).", "labels": [], "entities": [{"text": "BIOQUERYCNL", "start_pos": 44, "end_pos": 55, "type": "METRIC", "confidence": 0.614973247051239}]}, {"text": "Next, we introduce our algorithm for transforming a BIO-QUERYCNL query into an ASP program and explain it by an example (Section 4).", "labels": [], "entities": []}, {"text": "We conclude with a discussion of challenges related to the implementation of our algorithm (Section 5) and other related problems that we are working on (Section 6).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}