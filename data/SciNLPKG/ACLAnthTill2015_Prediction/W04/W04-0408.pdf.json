{"title": [], "abstractContent": [{"text": "We propose to model multiword expressions as dependency subgraphs, and realize this idea in the grammar formalism of Extensible Dependency Grammar (XDG).", "labels": [], "entities": []}, {"text": "We extend XDG to lexi-calize dependency subgraphs, and show how to compile them into simple lexical entries, amenable to parsing and generation with the existing XDG constraint solver.", "labels": [], "entities": [{"text": "XDG constraint solver", "start_pos": 162, "end_pos": 183, "type": "TASK", "confidence": 0.5657331148783366}]}], "introductionContent": [{"text": "In recent years, dependency grammar (DG) has received resurgent interest.", "labels": [], "entities": [{"text": "dependency grammar (DG)", "start_pos": 17, "end_pos": 40, "type": "TASK", "confidence": 0.9403042912483215}]}, {"text": "Core concepts such as grammatical functions, valency and the head-dependent asymmetry have now found their way into most grammar formalisms, including phrase structure-based ones such as HPSG, LFG and TAG.", "labels": [], "entities": []}, {"text": "This renewed interest in DG has also given rise to new grammar formalisms based directly on DG.", "labels": [], "entities": []}, {"text": "A controversy among DG grammarians circles around the question of assuming a 1:1-correspondence between words and nodes in the dependency graph.", "labels": [], "entities": [{"text": "DG grammarians", "start_pos": 20, "end_pos": 34, "type": "TASK", "confidence": 0.7822370529174805}]}, {"text": "This assumption simplifies the formalization of DGs substantially, and is often required for parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 93, "end_pos": 100, "type": "TASK", "confidence": 0.9799450635910034}]}, {"text": "But as soon as semantics comes in, the picture changes.", "labels": [], "entities": []}, {"text": "Clearly, the 1:1-correspondence between words and nodes does not hold anymore for multiword expressions (MWEs), where one semantic unit, represented by anode in a semantically oriented dependency graph, corresponds not to one, but to more than one word.", "labels": [], "entities": [{"text": "multiword expressions (MWEs)", "start_pos": 82, "end_pos": 110, "type": "TASK", "confidence": 0.6881973624229432}]}, {"text": "Most DGs interested in semantics have thus weakened the 1:1-assumption, starting with Tesn\u00ec ere's work.Tesn\u00ec ere proposed the concept of nuclei to group together sets of nodes.", "labels": [], "entities": []}, {"text": "FGD, on the other hand, allows for the deletion of solely syntactically motivated nodes in the tectogrammatical structure.", "labels": [], "entities": [{"text": "FGD", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.7474207878112793}]}, {"text": "Similarly, in MTT, nodes present on the syntactic structures can be deleted on the semantic structure.", "labels": [], "entities": [{"text": "MTT", "start_pos": 14, "end_pos": 17, "type": "TASK", "confidence": 0.8802856206893921}]}, {"text": "This can happen e.g. through paraphrasing rules implemented by lexical functions.", "labels": [], "entities": []}, {"text": "Unfortunately, these attempts to break the 1:1-correspondence have not yet been formalized in a declarative way.", "labels": [], "entities": []}, {"text": "Extensible Dependency Grammar (XDG) is anew grammar formalism based on Topological Dependency Grammar (TDG)).", "labels": [], "entities": []}, {"text": "From TDG, it inherits declarative word order constraints, the ability to distinguish multiple dimensions of linguistic description, and an axiomatization as a constraint satisfaction problem) solvable using constraint programming.", "labels": [], "entities": []}, {"text": "One of the benefits of this axiomatization is that the linear order of the words can be left underspecified, with the effect that the constraint solver can be applied for both parsing and generation.", "labels": [], "entities": []}, {"text": "XDG solving is efficient at least for the smallerscale example grammars tested so far, but these good results hinge substantially on the assump-tion of a 1:1-correspondence between words and nodes.", "labels": [], "entities": [{"text": "XDG solving", "start_pos": 0, "end_pos": 11, "type": "TASK", "confidence": 0.7551504373550415}]}, {"text": "As XDG has been created to cover not only syntax but also semantics, we have no choice but to weaken the 1:1-correspondence.", "labels": [], "entities": []}, {"text": "In this paper, we outline away to breakout of the 1:1-straightjacket, without sacrificing the potential for efficient parsing and generation.", "labels": [], "entities": [{"text": "parsing and generation", "start_pos": 118, "end_pos": 140, "type": "TASK", "confidence": 0.6866872111956278}]}, {"text": "We introduce anew layer of lexical organization called groups above the basic XDG lexicon, allowing us to describe MWEs as tuples of dependency subgraphs.", "labels": [], "entities": []}, {"text": "Groups can be compiled into simple lexical entries, which can then be used by the already existing XDG solver for parsing and generation.", "labels": [], "entities": [{"text": "XDG solver", "start_pos": 99, "end_pos": 109, "type": "TASK", "confidence": 0.6416665017604828}, {"text": "parsing and generation", "start_pos": 114, "end_pos": 136, "type": "TASK", "confidence": 0.6864475111166636}]}, {"text": "With groups, we can omit nodes present in the syntactic dimensions in the semantic dimensions, and thus getaway from the 1:1-correspondence.", "labels": [], "entities": []}, {"text": "Groups are motivated by the continuity hypothesis of), assuming the continuity of the lexicon and the construction.", "labels": [], "entities": []}, {"text": "They can also be regarded as a declarative formalization of Mel'\u02c7 cuk's paraphrasing rules, or as a realization of the extended domain of locality of TAG in terms of dependency grammar, as also proposed in and.", "labels": [], "entities": []}, {"text": "The structure of this paper is as follows.", "labels": [], "entities": []}, {"text": "We introduce XDG in section 2.", "labels": [], "entities": []}, {"text": "In section 3, we introduce groups, the new layer of lexical organization required for the modeling of MWEs, and in section 4, we show how to compile groups into simple lexical entries amenable for parsing and generation.", "labels": [], "entities": [{"text": "modeling of MWEs", "start_pos": 90, "end_pos": 106, "type": "TASK", "confidence": 0.5861399173736572}, {"text": "parsing and generation", "start_pos": 197, "end_pos": 219, "type": "TASK", "confidence": 0.6398349702358246}]}, {"text": "Section 5 concludes the paper and outlines future work.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}