{"title": [], "abstractContent": [{"text": "Deterministic dependency parsing is a robust and efficient approach to syntactic parsing of unrestricted natural language text.", "labels": [], "entities": [{"text": "Deterministic dependency parsing", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.7316701412200928}, {"text": "syntactic parsing of unrestricted natural language text", "start_pos": 71, "end_pos": 126, "type": "TASK", "confidence": 0.8698386805398124}]}, {"text": "In this paper , we analyze its potential for incremental processing and conclude that strict incremen-tality is not achievable within this framework.", "labels": [], "entities": []}, {"text": "However, we also show that it is possible to minimize the number of structures that require non-incremental processing by choosing an optimal parsing algorithm.", "labels": [], "entities": []}, {"text": "This claim is substantiated with experimental evidence showing that the algorithm achieves incremental parsing for 68.9% of the input when tested on a random sample of Swedish text.", "labels": [], "entities": []}, {"text": "When restricted to sentences that are accepted by the parser, the degree of incrementality increases to 87.9%.", "labels": [], "entities": [{"text": "incrementality", "start_pos": 76, "end_pos": 90, "type": "METRIC", "confidence": 0.9702179431915283}]}], "introductionContent": [{"text": "Incrementality in parsing has been advocated for at least two different reasons.", "labels": [], "entities": [{"text": "Incrementality in parsing", "start_pos": 0, "end_pos": 25, "type": "TASK", "confidence": 0.5537892679373423}]}, {"text": "The first is mainly practical and has to do with real-time applications such as speech recognition, which require a continually updated analysis of the input received so far.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 80, "end_pos": 98, "type": "TASK", "confidence": 0.8607178926467896}]}, {"text": "The second reason is more theoretical in that it connects parsing to cognitive modeling, where there is psycholinguistic evidence suggesting that human parsing is largely incremental.", "labels": [], "entities": [{"text": "parsing", "start_pos": 58, "end_pos": 65, "type": "TASK", "confidence": 0.9738810062408447}]}, {"text": "However, most state-of-the-art parsing methods today do not adhere to the principle of incrementality, for different reasons.", "labels": [], "entities": [{"text": "parsing", "start_pos": 31, "end_pos": 38, "type": "TASK", "confidence": 0.9113909602165222}]}, {"text": "Parsers that attempt to disambiguate the input completely -full parsing -typically first employ some kind of dynamic programming algorithm to derive a packed parse forest and then applies a probabilistic top-down model in order to select the most probable analysis).", "labels": [], "entities": []}, {"text": "Since the first step is essentially nondeterministic, this seems to rule out incrementality at least in a strict sense.", "labels": [], "entities": []}, {"text": "By contrast, parsers that only partially disambiguate the input -partial parsing -are usually deterministic and construct the final analysis in one pass over the input).", "labels": [], "entities": []}, {"text": "But since they normally output a sequence of unconnected phrases or chunks, they fail to satisfy the constraint of incrementality fora different reason.", "labels": [], "entities": []}, {"text": "Deterministic dependency parsing has recently been proposed as a robust and efficient method for syntactic parsing of unrestricted natural language text.", "labels": [], "entities": [{"text": "Deterministic dependency parsing", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.7330739498138428}, {"text": "syntactic parsing of unrestricted natural language text", "start_pos": 97, "end_pos": 152, "type": "TASK", "confidence": 0.8767141955239433}]}, {"text": "In some ways, this approach can be seen as a compromise between traditional full and partial parsing.", "labels": [], "entities": []}, {"text": "Essentially, it is a kind of full parsing in that the goal is to build a complete syntactic analysis for the input string, not just identify major constituents.", "labels": [], "entities": []}, {"text": "But it resembles partial parsing in being robust, efficient and deterministic.", "labels": [], "entities": []}, {"text": "Taken together, these properties seem to make dependency parsing suitable for incremental processing, although existing implementations normally do not satisfy this constraint.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 46, "end_pos": 64, "type": "TASK", "confidence": 0.7905401587486267}]}, {"text": "For example, use a multipass bottom-up algorithm, combined with support vector machines, in away that does not result in incremental processing.", "labels": [], "entities": []}, {"text": "In this paper, we analyze the constraints on incrementality in deterministic dependency parsing and argue that strict incrementality is not achievable.", "labels": [], "entities": [{"text": "deterministic dependency parsing", "start_pos": 63, "end_pos": 95, "type": "TASK", "confidence": 0.6224864721298218}]}, {"text": "We then analyze the algorithm proposed in and show that, given the previous result, this algorithm is optimal from the point of view of incrementality.", "labels": [], "entities": []}, {"text": "Finally, we evaluate experimentally the degree of incrementality achieved with the algorithm in practical parsing.", "labels": [], "entities": []}, {"text": "means that the structure can be represented as a directed graph, with nodes representing word tokens and arcs representing dependency relations.", "labels": [], "entities": []}, {"text": "In addition, arcs maybe labeled with specific dependency types.", "labels": [], "entities": []}, {"text": "shows a labeled dependency graph fora simple Swedish sentence, where each word of the sentence is labeled with its part of speech and each arc labeled with a grammatical function.", "labels": [], "entities": []}, {"text": "In the following, we will restrict our attention to unlabeled dependency graphs, i.e. graphs without labeled arcs, but the results will apply to labeled dependency graphs as well.", "labels": [], "entities": []}, {"text": "We will also restrict ourselves to projective dependency graphs.", "labels": [], "entities": []}, {"text": "Formally, we define these structures in the following way: 1.", "labels": [], "entities": []}, {"text": "For a more detailed discussion of dependency graphs and well-formedness conditions, the reader is referred to.", "labels": [], "entities": []}], "datasetContent": [{"text": "In order to measure the degree of incrementality achieved in practical parsing, we have evaluated a parser that uses the arc-eager parsing algorithm in combination with a memory-based classifier for predicting the next transition.", "labels": [], "entities": []}, {"text": "In experiments reported in, a parsing accuracy of 85.7% (unlabeled attachment score) was achieved, using data from a small treebank of Swedish, divided into a training set of 5054 sentences and a test set of 631 sentences.", "labels": [], "entities": [{"text": "parsing", "start_pos": 30, "end_pos": 37, "type": "TASK", "confidence": 0.9229567646980286}, {"text": "accuracy", "start_pos": 38, "end_pos": 46, "type": "METRIC", "confidence": 0.8076645731925964}, {"text": "unlabeled attachment score)", "start_pos": 57, "end_pos": 84, "type": "METRIC", "confidence": 0.7002228572964668}]}, {"text": "However, in the present context, we are primarily interested in the incrementality of the parser, which we measure by considering the number of connected components in (S, A S ) at different stages during the parsing of the test data.", "labels": [], "entities": []}, {"text": "The results can be found in, where we see that out of 16545 configurations used in parsing 613 sentences (with a mean length of 14.0 words), 68.9% have zero or one connected component on the stack, which is what we require of a strictly incremental parser.", "labels": [], "entities": [{"text": "parsing 613 sentences", "start_pos": 83, "end_pos": 104, "type": "TASK", "confidence": 0.8800988992055258}]}, {"text": "We also see that most violations of incrementality are fairly mild, since more than 90% of all configurations have no more than three connected components on the stack.", "labels": [], "entities": []}, {"text": "Many violations of incrementality are caused by sentences that cannot be parsed into a wellformed dependency graph, i.e. a single projective dependency tree, but where the output of the parser is a set of internally connected components.", "labels": [], "entities": []}, {"text": "In order to test the influence of incomplete parses on the statistics of incrementality, we have performed a second experiment, where we restrict the test data to those 444 sentences (out of 613), for which the parser produces a well-formed dependency graph.", "labels": [], "entities": []}, {"text": "The results can be seen in.", "labels": [], "entities": []}, {"text": "In this case, 87.1% of all configurations in fact satisfy the constraints of incrementality, and the proportion of configurations that have no more than three connected components on the stack is as high as 99.5%.", "labels": [], "entities": []}, {"text": "It seems fair to conclude that, although strict word-by-word incrementality is not possible in deterministic dependency parsing, the arc-eager algorithm can in practice be seen as a close approximation of incremental parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 109, "end_pos": 127, "type": "TASK", "confidence": 0.7058972716331482}]}], "tableCaptions": [{"text": " Table 1: Number of connected components in (S, A S ) during parsing", "labels": [], "entities": [{"text": "parsing", "start_pos": 61, "end_pos": 68, "type": "TASK", "confidence": 0.9386701583862305}]}]}