{"title": [{"text": "Learning Hebrew Roots: Machine Learning with Linguistic Constraints", "labels": [], "entities": []}], "abstractContent": [{"text": "The morphology of Semitic languages is unique in the sense that the major word-formation mechanism is an inherently non-concatenative process of inter-digitation, whereby two morphemes, a root and a pattern, are interwoven.", "labels": [], "entities": []}, {"text": "Identifying the root of a given word in a Semitic language is an important task, in some cases a crucial part of morphological analysis.", "labels": [], "entities": [{"text": "Identifying the root of a given word", "start_pos": 0, "end_pos": 36, "type": "TASK", "confidence": 0.876148155757359}, {"text": "morphological analysis", "start_pos": 113, "end_pos": 135, "type": "TASK", "confidence": 0.6835624426603317}]}, {"text": "It is also a non-trivial task, which many humans find challenging.", "labels": [], "entities": []}, {"text": "We present a machine learning approach to the problem of extracting roots of Hebrew words.", "labels": [], "entities": [{"text": "extracting roots of Hebrew words", "start_pos": 57, "end_pos": 89, "type": "TASK", "confidence": 0.790595817565918}]}, {"text": "Given the large number of potential roots (thousands), we address the problem as one of combining several classifiers, each predicting the value of one of the root's consonants.", "labels": [], "entities": []}, {"text": "We show that when these predictors are combined by enforcing some fairly simple linguistics constraints, high accuracy, which compares favorably with human performance on this task, can be achieved.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 110, "end_pos": 118, "type": "METRIC", "confidence": 0.9992256164550781}]}], "introductionContent": [{"text": "The standard account of word-formation processes in Semitic languages describes words as combinations of two morphemes: a root and a pattern.", "labels": [], "entities": []}, {"text": "The root consists of consonants only, by default three (although longer roots are known), called radicals.", "labels": [], "entities": []}, {"text": "The pattern is a combination of vowels and, possibly, consonants too, with 'slots' into which the root consonants can be inserted.", "labels": [], "entities": []}, {"text": "Words are created by interdigitating roots into patterns: the first radical is inserted into the first consonantal slot of the pattern, the second radical fills the second slot and the third fills the last slot.", "labels": [], "entities": []}, {"text": "See Shimron (2003) fora survey.", "labels": [], "entities": []}, {"text": "Identifying the root of a given word is an important task.", "labels": [], "entities": [{"text": "Identifying the root of a given word", "start_pos": 0, "end_pos": 36, "type": "TASK", "confidence": 0.8785582269941058}]}, {"text": "Although existing morphological analyzers for Hebrew only provide a lexeme (which is a combination of a root and a pattern), for other Semitic languages, notably Arabic, the root is an essential part of any morphological analysis sim-ply because traditional dictionaries are organized by root, rather than by lexeme.", "labels": [], "entities": []}, {"text": "Furthermore, roots are known to carry some meaning, albeit vague.", "labels": [], "entities": []}, {"text": "We believe that this information can be useful for computational applications and are currently experimenting with the benefits of using root and pattern information for automating the construction of a WordNet for Hebrew.", "labels": [], "entities": []}, {"text": "We present a machine learning approach, augmented by limited linguistic knowledge, to the problem of identifying the roots of Hebrew words.", "labels": [], "entities": [{"text": "identifying the roots of Hebrew words", "start_pos": 101, "end_pos": 138, "type": "TASK", "confidence": 0.8511613607406616}]}, {"text": "To the best of our knowledge, this is the first application of machine learning to this problem.", "labels": [], "entities": []}, {"text": "While there exist programs which can extract the root of words in Arabic and Hebrew, they are all dependent on labor intensive construction of large-scale lexicons which are components of full-scale morphological analyzers.", "labels": [], "entities": []}, {"text": "Note that Tim Bockwalter's Arabic morphological analyzer 2 only uses \"word stems -rather than root and pattern morphemes -to identify lexical items.", "labels": [], "entities": []}, {"text": "(The information on root and pattern morphemes could be added to each stem entry if this were desired.)\" The challenge of our work is to automate this process, avoiding the bottleneck of having to laboriously list the root and pattern of each lexeme in the language, and thereby gain insights that can be used for more detailed morphological analysis of Semitic languages.", "labels": [], "entities": []}, {"text": "As we show in section 2, identifying roots is a non-trivial problem even for humans, due to the complex nature of Hebrew derivational and inflectional morphology and the peculiarities of the Hebrew orthography.", "labels": [], "entities": []}, {"text": "From a machine learning perspective, this is an interesting test case of interactions among different yet interdependent classifiers.", "labels": [], "entities": []}, {"text": "After presenting the data in section 3, we discuss a simple, baseline, learning approach (section 4) and then propose two methods for combining the results of interdependent classifiers (section 5), one which is purely statistical and one which incorporates lin-guistic constraints, demonstrating the improvement of the hybrid approach.", "labels": [], "entities": []}, {"text": "We conclude with suggestions for future research.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Root ambiguity in the corpus", "labels": [], "entities": []}, {"text": " Table 4: Accuracy of SNoW's identifying the cor- rect radical, sequential model", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 10, "end_pos": 18, "type": "METRIC", "confidence": 0.9956958293914795}]}, {"text": " Table 5: Performance of the system when producing  top-i candidates.", "labels": [], "entities": []}, {"text": " Table 6: Performance of the system, producing candidates scoring no more than \u03b4 below the top score.", "labels": [], "entities": []}, {"text": " Table 8: Error analysis: performance of the system  on different cases.", "labels": [], "entities": [{"text": "Error analysis", "start_pos": 10, "end_pos": 24, "type": "TASK", "confidence": 0.8510653078556061}]}]}