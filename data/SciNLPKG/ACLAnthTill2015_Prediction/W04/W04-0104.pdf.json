{"title": [{"text": "Automatic Acquisition of Feature-Based Phonotactic Resources", "labels": [], "entities": []}], "abstractContent": [{"text": "Automata induction and typed feature theory are described in a unified framework for the automatic acquisition of feature-based phonotactic resources.", "labels": [], "entities": [{"text": "Automata induction", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.8740778565406799}, {"text": "typed feature theory", "start_pos": 23, "end_pos": 43, "type": "TASK", "confidence": 0.675166924794515}]}, {"text": "The viability of this data-driven procedure is illustrated with examples taken from a corpus of syllable-labelled data.", "labels": [], "entities": []}], "introductionContent": [{"text": "This paper combines two hitherto distinct areas of research, namely automata induction and typed feature theory, for the purposes of acquiring phonotactic resources for use in speech technology.", "labels": [], "entities": [{"text": "automata induction", "start_pos": 68, "end_pos": 86, "type": "TASK", "confidence": 0.7832072377204895}, {"text": "typed feature theory", "start_pos": 91, "end_pos": 111, "type": "TASK", "confidence": 0.7092641393343607}]}, {"text": "In order to illustrate the methodology a small annotated data set for Italian has been chosen 1 ; however, given annotated data, the techniques can be applied to any language thus supporting language documentation at the phonotactic level and eventually building up a catalogue of reusable multilingual phonotactic resources.", "labels": [], "entities": []}, {"text": "There are numerous ways in which phonotactic information has been represented for use in speech technology applications ranging from phrase structure rules to n-grams.", "labels": [], "entities": []}, {"text": "In this paper, the featurebased phonotactic automaton of the Time Map model) is used as the representational device.", "labels": [], "entities": [{"text": "Time Map model", "start_pos": 61, "end_pos": 75, "type": "DATASET", "confidence": 0.9111178914705912}]}, {"text": "A phonotactic automaton describes all permissible sound combinations of a language within the domain of a syllable in terms of a finite state automaton, describing not only actual lexicalised syllables but also idiosyncratic gaps which would be considered well-formed by a native speaker of a language.", "labels": [], "entities": []}, {"text": "The advantage of this representation of phonotactic constraints in the context of speech recognition is that it allows outof-vocabulary items (new words) to be classified as well-formed if they adhere to the constraints.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 82, "end_pos": 100, "type": "TASK", "confidence": 0.7320486307144165}]}, {"text": "Furthermore, since the phonotactic automaton constrains with respect to the syllable domain, it provides a more flexible and linguistically motivated context than n-grams which restrict their context to a domain of fixed length (the n-1 preceding units).", "labels": [], "entities": []}, {"text": "A phonotactic automaton describes languagespecific constraints.", "labels": [], "entities": []}, {"text": "Therefore, in order to develop multilingual phonotactic resources, phonotactic automata for different languages must be produced.", "labels": [], "entities": []}, {"text": "Phonotactic automata for German and English have already been constructed for the Time Map model using manual techniques).", "labels": [], "entities": [{"text": "Time Map model", "start_pos": 82, "end_pos": 96, "type": "DATASET", "confidence": 0.7970294753710429}]}, {"text": "Since manual construction of phonotactic automata is time consuming and laborious, more recently focus has been placed on combining manual and automatic techniques in order to reduce the level of required human linguistic expertise.", "labels": [], "entities": []}, {"text": "This will become more important when lesser-studied languages are addressed when an expert may not always be available.", "labels": [], "entities": []}, {"text": "The techniques presented here are regarded as support tools for language documentation which allow inferences to be made based on generalisations found in an annotated data set.", "labels": [], "entities": [{"text": "language documentation", "start_pos": 64, "end_pos": 86, "type": "TASK", "confidence": 0.6730130761861801}]}, {"text": "The linguist is free to accept or reject the suggestions made by the system.", "labels": [], "entities": []}, {"text": "In what follows, a technique is described in which phonotactic automata are acquired automatically given annotated data fora language.", "labels": [], "entities": []}, {"text": "While this technique describes all forms found in the data, acquired automata cannot be considered complete since the data is likely to be sparse (in this paper we illustrate this using a small data sample).", "labels": [], "entities": []}, {"text": "However, by combining phonotactic automata with a typed feature classification of sounds encountered in the data, it is possible to highlight not only distributional similarities, but also phonetic similarities which can be used to predict gaps in the representation.", "labels": [], "entities": []}, {"text": "These can be presented to a user (at least a native speaker of a language) who can accept or reject these.", "labels": [], "entities": []}, {"text": "Accepted forms are then integrated into the phonotactic automaton.", "labels": [], "entities": []}, {"text": "tic automata whereby they are rapidly acquired automatically and at a low cost.", "labels": [], "entities": []}, {"text": "Given a corpus of well-formed syllables for the language in question, it is assumed here that the phonotactics for the language is implicit in the syllables themselves and can be automatically extracted by examining each syllable structure in turn.", "labels": [], "entities": []}, {"text": "An extracted phonotactics is assumed to describe at least the syllables in the corpus and is also assumed to bean approximation of the complete phonotactics for the language from which the data was drawn.", "labels": [], "entities": []}, {"text": "Since the phonotactics in question are finite-state structures and the data available for acquiring phonotactics is a corpus of positive examples of well-formed syllable structures, the approach adopted here is to apply a regular grammatical inference procedure which can learn from positive data alone.", "labels": [], "entities": []}, {"text": "The field of grammatical inference has yielded many important learnability results for different language classes.", "labels": [], "entities": [{"text": "grammatical inference", "start_pos": 13, "end_pos": 34, "type": "TASK", "confidence": 0.8045526444911957}]}, {"text": "A full discussion of these results is beyond the scope of this paper however see) fora concise summary and discussion and fora survey style introduction to the field.", "labels": [], "entities": []}, {"text": "Suffice to say that since the formal language of well-formed syllables in a given natural language is finite, it is possible to learn the structure of a regular grammar i.e. the required phonotactic automaton from positive data alone i.e. the corpus of well-formed syllables.", "labels": [], "entities": []}, {"text": "The choice of regular inference algorithm is in fact arbitrary.", "labels": [], "entities": []}, {"text": "Many algorithms have been developed which can perform this learning task.", "labels": [], "entities": []}, {"text": "For the purposes of this paper however the ALERGIA) regular inference algorithm is used.", "labels": [], "entities": [{"text": "ALERGIA", "start_pos": 43, "end_pos": 50, "type": "METRIC", "confidence": 0.9856463074684143}]}, {"text": "This algorithm as applied to the problem of inferring phonotactic automata is described in detail elsewhere . Here, the workings of the algorithm are described by example.", "labels": [], "entities": []}, {"text": "Note that ALERGIA in fact treats any positive data sample as having been generated by a stochastic process.", "labels": [], "entities": [{"text": "ALERGIA", "start_pos": 10, "end_pos": 17, "type": "METRIC", "confidence": 0.9244233965873718}]}, {"text": "Thus, learned automata are in fact stochastic automata i.e. automata in which both states and transitions have associated probabilities, however traditional automata can be obtained by simply ignoring these probabilities.", "labels": [], "entities": []}, {"text": "ALERGIA proceeds by building a Prefix Tree Automaton (PTA) from the strings in S.", "labels": [], "entities": [{"text": "ALERGIA", "start_pos": 0, "end_pos": 7, "type": "METRIC", "confidence": 0.8012033700942993}, {"text": "Prefix Tree Automaton (PTA", "start_pos": 31, "end_pos": 57, "type": "METRIC", "confidence": 0.7600253224372864}]}, {"text": "The PTA is a deterministic automaton with a single path of state-transitions from its unique start state for each unique prefix which occurs in S.", "labels": [], "entities": []}, {"text": "Also, the PTA has a single acceptance path, i.e. path of state-transitions from the start state to some final state, for each unique string in S where an initial subset of the transitions in acceptance paths for strings are shared if those strings have a common prefix.", "labels": [], "entities": [{"text": "PTA", "start_pos": 10, "end_pos": 13, "type": "DATASET", "confidence": 0.6459483504295349}]}, {"text": "Thus, common prefixes are essentially merged giving the PTA its tree shape.", "labels": [], "entities": [{"text": "PTA", "start_pos": 56, "end_pos": 59, "type": "DATASET", "confidence": 0.4345923662185669}]}, {"text": "The PTA for S accepts exactly the strings in Sand each state of the PTA is associated with a unique prefix of S.", "labels": [], "entities": []}, {"text": "ALERGIA also assigns each transition in the PTA a frequency count dependent on the number of prefixes in S which share that transition.", "labels": [], "entities": [{"text": "ALERGIA", "start_pos": 0, "end_pos": 7, "type": "METRIC", "confidence": 0.798073947429657}]}, {"text": "Similarly, each state has an assigned frequency dependent on the number of strings from S which are accepted (or equivalently, generated) at that state.", "labels": [], "entities": []}, {"text": "The PTA for the Italian syllables of table 1 is shown in.", "labels": [], "entities": [{"text": "PTA", "start_pos": 4, "end_pos": 7, "type": "METRIC", "confidence": 0.9974191188812256}]}, {"text": "Note that final states are denoted by double circles and the single start state is state 0.", "labels": [], "entities": []}, {"text": "In final state 26 has a frequency of 2 since the two occurrences of the syllable /r a n/ terminate at this state.", "labels": [], "entities": []}, {"text": "All other final states have a frequency of 1 since exactly one syllable terminates at each final state.", "labels": [], "entities": []}, {"text": "All other states have a frequency of 0.", "labels": [], "entities": []}, {"text": "Similarly, the transition from state 0 to state 13 has a frequency of 3 since three of the syllables in the training set begin with /t/and the transitions from state 0 to 17 and from state 17 to 18 have a frequency of 2 since two syllables begin with the segment combination /s t/.", "labels": [], "entities": []}, {"text": "The frquencies associated with the states and transitions of the PTA can be used to associate a stochstic language with each state.", "labels": [], "entities": [{"text": "PTA", "start_pos": 65, "end_pos": 68, "type": "DATASET", "confidence": 0.7790897488594055}]}, {"text": "The set of acceptance paths from a given state determine the set of strings in its associated language and the probability fora given string in the language is easily derived from the frequencies of the states and transitions on the acceptance path for that string.", "labels": [], "entities": []}, {"text": "ALERGIA uses the PTA as the starting point for constructing a canonical, i.e. minimal deterministic, automaton for S.", "labels": [], "entities": [{"text": "PTA", "start_pos": 17, "end_pos": 20, "type": "METRIC", "confidence": 0.7647289037704468}]}, {"text": "The canonical automaton is identified by performing an ordered search of the automata derivable from the PTA by partitioning and merging subsets of states of the PTA.", "labels": [], "entities": []}, {"text": "Using the stan- dard order on the prefixes associated with the states of the PTA, pairs of states are subsequently examined to determine if they generate a similar stochastic language within a statistical significance bound dependent on the supplied confidence value \u03b1.", "labels": [], "entities": [{"text": "PTA", "start_pos": 77, "end_pos": 80, "type": "DATASET", "confidence": 0.7986181974411011}]}, {"text": "If a pair of states are deemed to statistically generate the same language then they are merged into a single state and the state-transitions of the automaton are altered to reflect this merge.", "labels": [], "entities": []}, {"text": "The canonical automaton is identified when no more state merges are possible.", "labels": [], "entities": []}, {"text": "shows the canonical automaton derived from the PTA in.", "labels": [], "entities": [{"text": "PTA", "start_pos": 47, "end_pos": 50, "type": "DATASET", "confidence": 0.7217376828193665}]}, {"text": "Since automata are derived from training sets of syllables through the use of a language independent regular inference algorithm, the procedure described above is generic and language independent.", "labels": [], "entities": []}, {"text": "However, the procedure is of course dependent on the existence of a corpus of training syllables for the language in question and since it is entirely data driven, the quality of the resulting phonotactics will be dependent on the quality and completeness of the syllable corpus.", "labels": [], "entities": []}, {"text": "Thus, firstly the corpus must have high quality annotations.", "labels": [], "entities": []}, {"text": "Fortunately, the need for high quality annotations in corpora is now recognised and has become an essential part of speech technology research and we assume here that high quality annotations are available.", "labels": [], "entities": []}, {"text": "Secondly, if valid sound combinations are not detailed in the training corpus then they may never be represented in the learned phonotactics.", "labels": [], "entities": []}, {"text": "In order to be complete the learned automaton must model all valid sound combinations, however.", "labels": [], "entities": []}, {"text": "In this case, generalisation techniques must be applied in conjunction with the inference algorithm in order to identify and rectify gaps in the training corpus.", "labels": [], "entities": []}, {"text": "This ensures that the acquired phonotactics describes as close an approximation as possible to the complete phonotactics for the language.", "labels": [], "entities": []}, {"text": "One such approach to generalisation which operates independently of the chosen regular inference algorithm is described in.", "labels": [], "entities": []}, {"text": "An alternative technique is discussed in section 3.", "labels": [], "entities": []}, {"text": "Finally, note that learned automata represent the first stage in the development of multilingual phonological resources called Multilingual Time Maps (MTMs)).", "labels": [], "entities": []}, {"text": "An MTM extends the single tape model of a phonotactic automaton to a multitape transducer whereby the different transition tapes detail linguistic information of varying levels of granularity and related to the original segment label.", "labels": [], "entities": []}, {"text": "An MTM might have individual tapes detailing the segment, the phonological features associated with that segment, the average duration of the segment in a particular syllabic position etc.", "labels": [], "entities": []}, {"text": "In particular, the segment tape of the learned phonotactic automata can be augmented with additional tapes detailing feature type labels associated with the segments.", "labels": [], "entities": []}, {"text": "These additional type label tapes are discussed in more detail in the following section.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}