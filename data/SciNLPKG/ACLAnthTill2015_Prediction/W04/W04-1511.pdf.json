{"title": [{"text": "From a Surface Analysis to a Dependency Structure", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper describes how we use the arrows properties from the 5P Paradigm to generate a dependency structure from a surface analysis.", "labels": [], "entities": [{"text": "5P Paradigm", "start_pos": 63, "end_pos": 74, "type": "DATASET", "confidence": 0.8465634286403656}]}, {"text": "Besides the arrows properties, two modules , Algas and Ogre, are presented.", "labels": [], "entities": [{"text": "Ogre", "start_pos": 55, "end_pos": 59, "type": "DATASET", "confidence": 0.7687022686004639}]}, {"text": "Moreover, we show how we express linguistic descriptions away from parsing decisions.", "labels": [], "entities": []}], "introductionContent": [{"text": "Following the 5P Paradigm) we build a syntactic-semantic interface which obtains a graph from the analysis of input text.", "labels": [], "entities": []}, {"text": "The graph express a dependency structure, which is the domain of a function that will obtain as output a logic semantic interpretation.", "labels": [], "entities": []}, {"text": "The whole syntactic-semantic interface is integrated by four modules: Susana in charge of surface analysis, Algas and Ogre, defining the graph, and ASdeCopas, that obtains the logic semantic representation.", "labels": [], "entities": [{"text": "surface analysis", "start_pos": 90, "end_pos": 106, "type": "TASK", "confidence": 0.717615157365799}]}, {"text": "In this paper we present the first three modules, focussing mainly on Algas and Ogre.", "labels": [], "entities": [{"text": "Algas", "start_pos": 70, "end_pos": 75, "type": "DATASET", "confidence": 0.911091685295105}, {"text": "Ogre", "start_pos": 80, "end_pos": 84, "type": "DATASET", "confidence": 0.7807394862174988}]}, {"text": "5P argues fora carefully separation between linguistic descriptions and algorithms.", "labels": [], "entities": []}, {"text": "The first ones are expressed by Properties and the last ones by Processes.", "labels": [], "entities": []}, {"text": "Futhermore, linguistic modelised and formalised descriptions (i.e. Properties, P2 of 5P) are not designed to be the declarative source of algorithms, but rather as a repository of information) that one should be able to re-use (totally or partially) in each task.", "labels": [], "entities": []}, {"text": "Following and completing this, we assume that the parsing issue can be viewed from at least three different points of view: (i) modelised and formalised linguistic observation; (ii) computational effective procedures; (iii) useful computational constraints.", "labels": [], "entities": [{"text": "parsing", "start_pos": 50, "end_pos": 57, "type": "TASK", "confidence": 0.9672365188598633}]}, {"text": "These three aspects of the same issue are distinctly tackled in the proposed syntacticsemantic interface, but they converge in the obtention of results.", "labels": [], "entities": []}, {"text": "There are three different kinds of Properties (P2) in 5P: existence, linearity and arrow properties.", "labels": [], "entities": []}, {"text": "The first two underly the Susana module (3.1).", "labels": [], "entities": [{"text": "Susana module", "start_pos": 26, "end_pos": 39, "type": "DATASET", "confidence": 0.842574805021286}]}, {"text": "They express which are the possible morphological categories of some expression and the possible order between them.", "labels": [], "entities": []}, {"text": "The third ones arrow properties specify arrow pairs, which formally are directed arcs of a graph.", "labels": [], "entities": []}, {"text": "Arrow properties underly the Algas (3.2) and Ogre (3.3) modules.", "labels": [], "entities": [{"text": "Ogre", "start_pos": 45, "end_pos": 49, "type": "DATASET", "confidence": 0.8926942944526672}]}, {"text": "At the level of Projections (i.e. P3 of 5P) the balanced parentheses structure underlying sentences is exploited (2).", "labels": [], "entities": []}, {"text": "Computational useful constraints improve Algas performance (5).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}