{"title": [{"text": "A resource for constructing customized test suites for molecular biology entity identification systems", "labels": [], "entities": [{"text": "molecular biology entity identification", "start_pos": 55, "end_pos": 94, "type": "TASK", "confidence": 0.6818678006529808}]}], "abstractContent": [{"text": "This paper describes a data source and methodology for producing customized test suites for molecular biology entity identification systems.", "labels": [], "entities": [{"text": "molecular biology entity identification", "start_pos": 92, "end_pos": 131, "type": "TASK", "confidence": 0.7252248078584671}]}, {"text": "The data consists of: (a) a set of gene names and symbols classified by a taxonomy of features that are relevant to the performance of entity identification systems, and (b) a set of sentential environments into which names and symbols are inserted to create test data and the associated gold standard.", "labels": [], "entities": [{"text": "entity identification", "start_pos": 135, "end_pos": 156, "type": "TASK", "confidence": 0.7094821780920029}]}, {"text": "We illustrate the utility of test sets producible by this methodology by applying it to five entity identification systems and describing the error patterns uncovered by it, and investigate relationships between performance on a customized test suite generated from this data and the performance of a system on two corpora.", "labels": [], "entities": []}], "introductionContent": [{"text": "This paper describes a methodology and data for the testing of molecular biology entity identification (EI) systems by developers and end users.", "labels": [], "entities": [{"text": "molecular biology entity identification (EI)", "start_pos": 63, "end_pos": 107, "type": "TASK", "confidence": 0.7650952764919826}]}, {"text": "Molecular biology EI systems find names of genes and gene products in free text.", "labels": [], "entities": []}, {"text": "Several years' publication history has established precision, recall, and F-score as the de facto standards for evaluating EI systems for molecular biology texts at the publication stage and in competitions like BioCreative (www.mitre.org/public/biocreative).", "labels": [], "entities": [{"text": "precision", "start_pos": 51, "end_pos": 60, "type": "METRIC", "confidence": 0.9994574189186096}, {"text": "recall", "start_pos": 62, "end_pos": 68, "type": "METRIC", "confidence": 0.9993442893028259}, {"text": "F-score", "start_pos": 74, "end_pos": 81, "type": "METRIC", "confidence": 0.9989874958992004}]}, {"text": "These measures provide important indices of a system's overall output quality.", "labels": [], "entities": []}, {"text": "What they do not provide is the detailed sort of information about system performance that is useful for the system developer who is attempting to assess the strengths and weaknesses of a work in progress, nor do they provide detailed information to the potential consumer who would like to compare two systems against each other.", "labels": [], "entities": []}, {"text": "point out that different evaluation methods are useful at different points in the software life-cycle.", "labels": [], "entities": []}, {"text": "In particular, what they refer to as feature-based evaluation via test suites is useful at two points: in the development phase, and for acceptance testing.", "labels": [], "entities": [{"text": "acceptance testing", "start_pos": 137, "end_pos": 155, "type": "TASK", "confidence": 0.8945191204547882}]}, {"text": "We describe here a methodology and a set of data for constructing customized feature-based test suites for EI in the molecular biology domain.", "labels": [], "entities": []}, {"text": "The data consists of two sets.", "labels": [], "entities": []}, {"text": "One is a set of names and symbols of entities as that term is most commonly understood in the molecular biology domain-genes and gene products.", "labels": [], "entities": []}, {"text": "(Sophisticated ontologies such as GENIA ( include other kinds of entities relevant to molecular biology as well, such as cell lines.)", "labels": [], "entities": [{"text": "GENIA", "start_pos": 34, "end_pos": 39, "type": "DATASET", "confidence": 0.9067243337631226}]}, {"text": "The names and symbols exemplify a wide range of the features that characterize entities in this domain-case variation, presence or absence of numbers, presence or absence of hyphenation, etc.", "labels": [], "entities": []}, {"text": "The other is a set of sentences that exemplify a range of sentential contexts in which the entities can appear, varying with respect to position of the entity in the sentence (initial, medial, or final), presence of keywords like gene and protein, tokenization issues, etc.", "labels": [], "entities": []}, {"text": "Both the entities and the sentential contexts are classified in terms of a taxonomy of features that are relevant to this domain in particular and to natural language processing and EI in general.", "labels": [], "entities": []}, {"text": "The methodology consists of generating customized test suites that address specific performance issues by combining sets of entities that have particular characteristics with sets of contexts that have particular characteristics.", "labels": [], "entities": []}, {"text": "Logical combination of subsets of characteristics of entities and contexts allows the developer to assess the effect of specific characteristics on performance, and allows the user to assess performance of the system on types of inputs that are of particular interest to them.", "labels": [], "entities": []}, {"text": "For example, if the developer or end-user wants to assess the ability of a system to recognize gene symbols with a particular combination of letter case, hyphenation, and presence or absence of numerals, the data and associated code that we provide can be used to generate a test suite consisting of symbols with and without that combination of features in a variety of sentential contexts.", "labels": [], "entities": []}, {"text": "Inspiration for this work comes on the one hand from standard principles of software engineering and software testing, and on the other hand from descriptive linguistics.", "labels": [], "entities": [{"text": "descriptive linguistics", "start_pos": 146, "end_pos": 169, "type": "TASK", "confidence": 0.7609851658344269}]}, {"text": "In Hirschman and Mani's taxonomy of evaluation techniques, our methodology is referred to as feature-based, in that it is based on the principle of classifying the inputs to the system in terms of some set of features that are relevant to the application of interest.", "labels": [], "entities": []}, {"text": "It is designed to provide the developer or user with detailed information about the performance of her EI system.", "labels": [], "entities": []}, {"text": "We apply it to five molecular biology EI and information extraction systems: ABGene (Tanabe and Wilbur 2002a, Tanabe and Wilbur 2002b); KeX/PROPER (;; the stochastic POS tagging-based system described in; and the entity identification component of Ono et al.'s information extraction system (, and show how it gives detailed useful information about each that is not apparent from the standard metrics and that is not documented in the cited publications.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 45, "end_pos": 67, "type": "TASK", "confidence": 0.7074084579944611}, {"text": "ABGene", "start_pos": 77, "end_pos": 83, "type": "DATASET", "confidence": 0.5206506848335266}, {"text": "PROPER", "start_pos": 140, "end_pos": 146, "type": "METRIC", "confidence": 0.6362999081611633}, {"text": "entity identification", "start_pos": 213, "end_pos": 234, "type": "TASK", "confidence": 0.7115904092788696}, {"text": "information extraction", "start_pos": 261, "end_pos": 283, "type": "TASK", "confidence": 0.7447633147239685}]}, {"text": "(Since we are not interested in punishing system developers for graciously making their work available by pointing out their flaws, we do not refer to the various systems by name in the remainder of this paper.)", "labels": [], "entities": []}, {"text": "Software testing techniques can be grouped into structured), heuristic (, and random categories.", "labels": [], "entities": []}, {"text": "Testing an EI system by running it on a corpus of texts and calculating precision, recall, and F-score for the results falls into the category of random testing.", "labels": [], "entities": [{"text": "precision", "start_pos": 72, "end_pos": 81, "type": "METRIC", "confidence": 0.9968860745429993}, {"text": "recall", "start_pos": 83, "end_pos": 89, "type": "METRIC", "confidence": 0.9972609281539917}, {"text": "F-score", "start_pos": 95, "end_pos": 102, "type": "METRIC", "confidence": 0.9995107650756836}]}, {"text": "Random testing is a powerful technique, in that it is successful in finding bugs.", "labels": [], "entities": [{"text": "Random testing", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.8054629564285278}]}, {"text": "When done for the purpose of evaluation, as distinct from testing (see for the distinction between the two, referred to there as performance evaluation and diagnostic evaluation), it also is widely accepted as the relevant index of performance for publication.", "labels": [], "entities": []}, {"text": "However, its output lacks important information that is useful to a system developer (or consumer): it tells you how often the system failed, but not what it failed at; it tells you how often the system succeeds, but not where its strengths are.", "labels": [], "entities": []}, {"text": "For the developer or the user, a structured test suite offers a number of advantages in answering these sorts of questions.", "labels": [], "entities": []}, {"text": "The utility of such test suites in general software testing is well-accepted.", "labels": [], "entities": []}, {"text": "lists a number of advantages of test suites vs. naturalistic corpora for testing natural language processing software in particular: \u2022 Control over test data: test suites allow for \"focussed and fine-grained diagnosis of system performance\".", "labels": [], "entities": []}, {"text": "This is important to the developer who wants to know exactly what problems need to be fixed to improve performance, and to the end user who wants to know that performance is adequate on exactly the data that they are interested in.", "labels": [], "entities": []}, {"text": "\u2022 Systematic coverage: test suites can allow for systematic evaluation of variations in a particular feature of interest.", "labels": [], "entities": []}, {"text": "For example, the developer might want to evaluate how performance varies as a function of name length, or case, or the presence or absence of hyphenation within gene symbols.", "labels": [], "entities": []}, {"text": "The alternative to using a structured test suite is to use a corpus, and then search through it for the relevant inputs and hope that they are actually attested.", "labels": [], "entities": []}, {"text": "\u2022 Control of redundancy: while redundancy in a corpus is representative of actual redundancy in inputs, test suites allow for reduction of redundancy when it obscures the situation, or for increasing it when it is important to test handling of a feature whose importance is greater than its frequency in naturally occurring data.", "labels": [], "entities": []}, {"text": "For example, names of genes that are similar to names of inherited diseases might makeup only a small proportion of the gene names that occur in PubMed abstracts, but the user whose interests lie in curating OMIM might want to be able to assure herself that coverage of such names is adequate, beyond the level to which corpus data will allow.", "labels": [], "entities": []}, {"text": "\u2022 Inclusion of negative data: in the molecular biology domain, a test suite can allow for systematic evaluation of potential false positives.", "labels": [], "entities": []}, {"text": "\u2022 Coherent annotation: even the richest metadata is rarely adequate or exactly appropriate for exactly the questions that one wants to ask of a corpus.", "labels": [], "entities": []}, {"text": "Generation of structured, feature-based test suites obviates the necessity for searching through corpora for the entities and contexts of interest, and allows instead the structuring of contexts and labeling of examples that is most useful to the developer.", "labels": [], "entities": []}, {"text": "The goal of this paper is to describe a methodology and publicly available data set for constructing customized and refinable test suites in the molecular biology domain quickly and easily.", "labels": [], "entities": []}, {"text": "A crucial difference between similar work that simply documents a distributable test suite (e.g. and) and the work reported in this paper is that we are distributing not a static test suite, but rather data for generating test suites-data that is structured and classified in such away as to allow software developers and end users to easily generate test suites that are customized to their own assessment needs and development questions.", "labels": [], "entities": []}, {"text": "We build this methodology and data on basic principles of software engineering and of linguistic analysis.", "labels": [], "entities": [{"text": "linguistic analysis", "start_pos": 86, "end_pos": 105, "type": "TASK", "confidence": 0.7266947031021118}]}, {"text": "The first such principle involves making use of the software testing notion of the catalogue.", "labels": [], "entities": []}, {"text": "A catalogue is a list of test conditions, or qualities of particular test inputs.", "labels": [], "entities": []}, {"text": "It corresponds to the features of feature-based testing, discussed in Hirschman and and to the schedule) of descriptive linguistic technique.", "labels": [], "entities": []}, {"text": "For instance, a catalogue of test conditions for numbers might include: \u2022 zero, non-zero, real, integer \u2022 positive, negative, unsigned \u2022 the smallest number representable in some datatype, language, or operating system; smaller than the smallest number representable \u2022 the largest number representable; larger than the largest number representable Note that the catalogue includes both \"clean\" conditions and \"dirty\" ones.", "labels": [], "entities": []}, {"text": "This approach to software testing has been highly successful, and indeed the bestselling book on software testing () can fairly be described as a collection of catalogues of various types.", "labels": [], "entities": []}, {"text": "The contributions of descriptive linguistics include guiding our thinking about what the relevant features, conditions, or categories are for our domain of interest.", "labels": [], "entities": [{"text": "descriptive linguistics", "start_pos": 21, "end_pos": 44, "type": "TASK", "confidence": 0.89166259765625}]}, {"text": "In this domain, that will include the questions of what features may occur in names and what features may occur in sentences-particularly features in the one that might interact with features in the other.", "labels": [], "entities": []}, {"text": "Descriptive linguistic methodology is described in detail in e.g. and; in the interests of brevity, we focus on the software engineering perspective here, but the thought process is very similar.", "labels": [], "entities": [{"text": "Descriptive linguistic methodology", "start_pos": 0, "end_pos": 34, "type": "TASK", "confidence": 0.7907213966051737}]}, {"text": "The software engineering equivalent of the descriptive linguist's hypothesis is the fault model)-an explicit hypothesis about a potential source of error based on \"relationships and components of the system under test\" (p. 1088).", "labels": [], "entities": []}, {"text": "For instance, knowing that some EI systems make use of POS tag information, we might hypothesize that the presence of some parts of speech within a gene name might be mistaken for term boundaries (e.g. the of in bag of marbles, LocusID 43038).", "labels": [], "entities": []}, {"text": "Catalogues are used to develop a set of test cases that satisfies the various qualities.", "labels": [], "entities": []}, {"text": "(They can also be used post-hoc to group the inputs in a random test bed into equivalence classes, although a strong motivation for using them in the first place is to obviate this sort of search-based post-hoc analysis.)", "labels": [], "entities": []}, {"text": "The size of the space of all possible test cases can be estimated from the Cartesian product of all catalogues; the art of software testing (and linguistic fieldwork) consisting, then, of selecting the highestyielding subset of this often enormous space that can be run and evaluated in the time available for testing.", "labels": [], "entities": []}, {"text": "At least three kinds of catalogues are relevant to testing an EI system.", "labels": [], "entities": []}, {"text": "They fall into one of two very broad categories: syntagmatic, having to do with combinatory properties, and paradigmatic, having to do with varieties of content.", "labels": [], "entities": []}, {"text": "The three kinds of catalogues are: 1.", "labels": [], "entities": []}, {"text": "A catalogue of environments in which gene names can appear.", "labels": [], "entities": []}, {"text": "2. A catalogue of types of gene names.", "labels": [], "entities": []}, {"text": "3. A catalogue of false positives.", "labels": [], "entities": []}, {"text": "This is both syntagmatic and paradigmatic.", "labels": [], "entities": []}, {"text": "The catalogue of environments would include, for example, elements related to sentence position, such as sentence-initial, sentence-medial, and sentence-final; elements related to list position, such as a single gene name, a name in a comma-separated list, or a name in a conjoined noun phrase; and elements related to typographic context, such as location within parentheses (or not), having attached punctuation (e.g. a sentence-final period) (or not), etc.", "labels": [], "entities": []}, {"text": "The catalogue of types of names would include, for example, names that are common English words (or not); names that are words versus \"names\" that are symbols; single-word versus multi-word names; and soon.", "labels": [], "entities": []}, {"text": "The second category also includes typographic features of gene names, e.g. containing numbers (or not), consisting of all caps (or not), etc.", "labels": [], "entities": []}, {"text": "We determined candidate features for inclusion in the catalogues through standard structuralist techniques such as examining publicdomain databases containing information about genes, including FlyBase, LocusLink, and HUGO, and by examining corpora of scientific writing about genes, and also by the software engineering techniques of \"common sense, experience, suspicion, analysis, experiment\" (Binder 1999).", "labels": [], "entities": [{"text": "FlyBase", "start_pos": 194, "end_pos": 201, "type": "DATASET", "confidence": 0.9795429706573486}]}, {"text": "The catalogues then suggested the features by which we classified and varied the entities and sentences in the data.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1 Performance on two corpora for the  predictable categories Numbers in the far left column  refer to the predictions listed above.  Overall  performance on the corpora was: BioCreative P = .65,  R = .68, and PMC P = .71, R = .62.", "labels": [], "entities": [{"text": "BioCreative P", "start_pos": 181, "end_pos": 194, "type": "METRIC", "confidence": 0.9781913459300995}, {"text": "PMC P", "start_pos": 216, "end_pos": 221, "type": "METRIC", "confidence": 0.8743104934692383}, {"text": "R", "start_pos": 229, "end_pos": 230, "type": "METRIC", "confidence": 0.9355790019035339}]}]}