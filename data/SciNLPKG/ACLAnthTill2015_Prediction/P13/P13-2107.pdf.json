{"title": [{"text": "Using CCG categories to improve Hindi dependency parsing", "labels": [], "entities": [{"text": "Hindi dependency parsing", "start_pos": 32, "end_pos": 56, "type": "TASK", "confidence": 0.7258556087811788}]}], "abstractContent": [{"text": "We show that informative lexical categories from a strongly lexicalised formalism such as Combinatory Categorial Grammar (CCG) can improve dependency parsing of Hindi, a free word order language.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 139, "end_pos": 157, "type": "TASK", "confidence": 0.7577149868011475}]}, {"text": "We first describe a novel way to obtain a CCG lexicon and treebank from an existing dependency treebank, using a CCG parser.", "labels": [], "entities": []}, {"text": "We use the output of a su-pertagger trained on the CCGbank as a feature fora state-of-the-art Hindi dependency parser (Malt).", "labels": [], "entities": [{"text": "CCGbank", "start_pos": 51, "end_pos": 58, "type": "DATASET", "confidence": 0.9818391799926758}]}, {"text": "Our results show that using CCG categories improves the accuracy of Malt on long distance dependencies , for which it is known to have weak rates of recovery.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 56, "end_pos": 64, "type": "METRIC", "confidence": 0.9994921684265137}]}], "introductionContent": [{"text": "As compared to English, many Indian languages including Hindi have a freer word order and are also morphologically richer.", "labels": [], "entities": []}, {"text": "These characteristics pose challenges to statistical parsers.", "labels": [], "entities": []}, {"text": "Today, the best dependency parsing accuracies for Hindi are obtained by the shift-reduce parser of.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 16, "end_pos": 34, "type": "TASK", "confidence": 0.649597704410553}]}, {"text": "It has been observed that Malt is relatively accurate at recovering short distance dependencies, like arguments of a verb, but is less accurate at recovering long distance dependencies like co-ordination, root of the sentence, etc.", "labels": [], "entities": []}, {"text": "In this work, we show that using CCG lexical categories, which contain subcategorization information and capture long distance dependencies elegantly, can help Malt with those dependencies.", "labels": [], "entities": []}, {"text": "Section 2 first shows how we extract a CCG lexicon from an existing Hindi dependency treebank) and then use it to create a Hindi CCGbank.", "labels": [], "entities": []}, {"text": "In section 3, we develop a supertagger using the CCGbank and explore different ways of providing CCG categories from the supertagger as features to Malt.", "labels": [], "entities": []}, {"text": "Our results show that using CCG categories can help Malt by improving the recovery of long distance relations.", "labels": [], "entities": []}], "datasetContent": [{"text": "In this section, we first describe the method of developing a supertagger using the CCGbank.", "labels": [], "entities": [{"text": "CCGbank", "start_pos": 84, "end_pos": 91, "type": "DATASET", "confidence": 0.9858092665672302}]}, {"text": "We then describe different ways of providing CCG categories from the supertagger as features to a state-of-the-art Hindi Dependency parser (Malt).", "labels": [], "entities": [{"text": "Hindi Dependency parser (Malt)", "start_pos": 115, "end_pos": 145, "type": "DATASET", "confidence": 0.7356647153695425}]}, {"text": "We did all our experiments using both gold features (pos, chunk and morphological information) provided in the treebank and automatic features extracted using a Hindi shallow parser . We report results with automatic features but we also obtained similar improvements with gold features.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Impact of different features on the su- pertagger performance for development data.", "labels": [], "entities": []}, {"text": " Table 2: Supertagger impact on Hindi dependency  parsing (ST=Supertags). McNemar's test, * = p <  0.01.", "labels": [], "entities": [{"text": "Hindi dependency  parsing", "start_pos": 32, "end_pos": 57, "type": "TASK", "confidence": 0.7220427791277567}, {"text": "McNemar's test", "start_pos": 74, "end_pos": 88, "type": "DATASET", "confidence": 0.8118901054064432}]}]}