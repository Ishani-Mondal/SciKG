{"title": [], "abstractContent": [{"text": "Characters play an important role in the Chinese language, yet computational processing of Chinese has been dominated by word-based approaches, with leaves in syntax trees being words.", "labels": [], "entities": []}, {"text": "We investigate Chinese parsing from the character-level, extending the notion of phrase-structure trees by annotating internal structures of words.", "labels": [], "entities": []}, {"text": "We demonstrate the importance of character-level information to Chinese processing by building a joint segmen-tation, part-of-speech (POS) tagging and phrase-structure parsing system that integrates character-structure features.", "labels": [], "entities": [{"text": "part-of-speech (POS) tagging", "start_pos": 118, "end_pos": 146, "type": "TASK", "confidence": 0.6668476104736328}, {"text": "phrase-structure parsing", "start_pos": 151, "end_pos": 175, "type": "TASK", "confidence": 0.6994820237159729}]}, {"text": "Our joint system significantly outperforms a state-of-the-art word-based baseline on the standard CTB5 test, and gives the best published results for Chinese parsing.", "labels": [], "entities": [{"text": "CTB5 test", "start_pos": 98, "end_pos": 107, "type": "DATASET", "confidence": 0.9067346453666687}, {"text": "Chinese parsing", "start_pos": 150, "end_pos": 165, "type": "TASK", "confidence": 0.6567958295345306}]}], "introductionContent": [{"text": "Characters play an important role in the Chinese language.", "labels": [], "entities": []}, {"text": "They act as basic phonetic, morphosyntactic and semantic units in a Chinese sentence.", "labels": [], "entities": []}, {"text": "Frequently-occurring character sequences that express certain meanings can be treated as words, while most Chinese words have syntactic structures.", "labels": [], "entities": []}, {"text": "For example,(b) shows the structure of the word \"\u5efa\u7b51\u4e1a (construction and building industry)\", where the characters \"\u5efa (construction)\" and \"\u7b51 (building)\" form a coordination, and modify the character \"\u4e1a (industry)\".", "labels": [], "entities": []}, {"text": "However, computational processing of Chinese is typically based on words.", "labels": [], "entities": [{"text": "computational processing of Chinese", "start_pos": 9, "end_pos": 44, "type": "TASK", "confidence": 0.7362762540578842}]}, {"text": "Words are treated as the atomic units in syntactic parsing, machine translation, question answering and other NLP tasks.", "labels": [], "entities": [{"text": "syntactic parsing", "start_pos": 41, "end_pos": 58, "type": "TASK", "confidence": 0.7381257712841034}, {"text": "machine translation", "start_pos": 60, "end_pos": 79, "type": "TASK", "confidence": 0.8120401501655579}, {"text": "question answering", "start_pos": 81, "end_pos": 99, "type": "TASK", "confidence": 0.854419082403183}]}, {"text": "Manually annotated corpora, such as the Chinese Treebank (CTB) (), usually have words as the basic syntactic elements Figure 1: Word-based and character-level phrasestructure trees for the sentence \"\u4e2d\u56fd\u5efa\u7b51\u4e1a\u5448\u73b0 \u65b0\u683c\u5c40 (China's architecture industry shows new patterns)\", where \"l\", \"r\", \"c\" denote the directions of head characters (see section 2).", "labels": [], "entities": [{"text": "Chinese Treebank (CTB)", "start_pos": 40, "end_pos": 62, "type": "DATASET", "confidence": 0.9541908740997315}]}, {"text": "This form of annotation does not give character-level syntactic structures for words, a source of linguistic information that is more fundamental and less sparse than atomic words.", "labels": [], "entities": []}, {"text": "In this paper, we investigate Chinese syntactic parsing with character-level information by extending the notation of phrase-structure (constituent) trees, adding recursive structures of characters for words.", "labels": [], "entities": [{"text": "Chinese syntactic parsing", "start_pos": 30, "end_pos": 55, "type": "TASK", "confidence": 0.6289989650249481}]}, {"text": "We manually annotate the structures of 37,382 words, which cover the entire CTB5.", "labels": [], "entities": [{"text": "CTB5", "start_pos": 76, "end_pos": 80, "type": "DATASET", "confidence": 0.9665079712867737}]}, {"text": "Using these annotations, we transform CTB-style constituent trees into character-level trees).", "labels": [], "entities": []}, {"text": "Our word structure corpus, together with a set of tools to transform CTB-style trees into character-level trees, is released at https://github.com/zhangmeishan/wordstructures.", "labels": [], "entities": []}, {"text": "Our annotation work is inline with the work of and, which provide extended annotations of Penn Treebank (PTB) noun phrases and CTB words (on the morphological level), respectively.", "labels": [], "entities": [{"text": "Penn Treebank (PTB) noun phrases", "start_pos": 90, "end_pos": 122, "type": "DATASET", "confidence": 0.9579764178821019}]}, {"text": "We build a character-based Chinese parsing model to parse the character-level syntax trees.", "labels": [], "entities": []}, {"text": "Given an input Chinese sentence, our parser produces its character-level syntax trees).", "labels": [], "entities": []}, {"text": "With richer information than word-level trees, this form of parse trees can be useful for all the aforementioned Chinese NLP applications.", "labels": [], "entities": []}, {"text": "With regard to task of parsing itself, an important advantage of the character-level syntax trees is that they allow word segmentation, part-of-speech (POS) tagging and parsing to be performed jointly, using an efficient CKY-style or shift-reduce algorithm.", "labels": [], "entities": [{"text": "parsing", "start_pos": 23, "end_pos": 30, "type": "TASK", "confidence": 0.8513532280921936}, {"text": "word segmentation", "start_pos": 117, "end_pos": 134, "type": "TASK", "confidence": 0.7430077493190765}, {"text": "part-of-speech (POS) tagging", "start_pos": 136, "end_pos": 164, "type": "TASK", "confidence": 0.653654682636261}]}, {"text": "exploited this advantage by adding flat word structures without manually annotation to CTB trees, and building a generative character-based parser.", "labels": [], "entities": [{"text": "generative character-based parser", "start_pos": 113, "end_pos": 146, "type": "TASK", "confidence": 0.808694084485372}]}, {"text": "Compared to a pipeline system, the advantages of a joint system include reduction of error propagation, and the integration of segmentation, POS tagging and syntax features.", "labels": [], "entities": [{"text": "POS tagging", "start_pos": 141, "end_pos": 152, "type": "TASK", "confidence": 0.7462514638900757}]}, {"text": "With hierarchical structures and head character information, our annotated words are more informative than flat word structures, and hence can bring further improvements to phrase-structure parsing.", "labels": [], "entities": [{"text": "phrase-structure parsing", "start_pos": 173, "end_pos": 197, "type": "TASK", "confidence": 0.7920790612697601}]}, {"text": "To analyze word structures in addition to phrase structures, our character-based parser naturally performs joint word segmentation, POS tagging and parsing jointly.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 113, "end_pos": 130, "type": "TASK", "confidence": 0.7364093363285065}, {"text": "POS tagging", "start_pos": 132, "end_pos": 143, "type": "TASK", "confidence": 0.8663953542709351}]}, {"text": "Our model is based on the discriminative shift-reduce parser of, which is a state-of-the-art word-based phrase-structure parser for Chinese.", "labels": [], "entities": []}, {"text": "We extend their shift-reduce framework, adding more transition actions for word segmentation and POS tagging, and defining novel features that capture character information.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 75, "end_pos": 92, "type": "TASK", "confidence": 0.7750466167926788}, {"text": "POS tagging", "start_pos": 97, "end_pos": 108, "type": "TASK", "confidence": 0.7671119868755341}]}, {"text": "Even when trained using character-level syntax trees with flat word structures, our joint parser outperforms a strong pipelined baseline that consists of a state-of-the- art joint segmenter and POS tagger, and our baseline word-based parser.", "labels": [], "entities": []}, {"text": "Our word annotations lead to further improvements to the joint system, especially for phrase-structure parsing accuracy.", "labels": [], "entities": [{"text": "phrase-structure parsing", "start_pos": 86, "end_pos": 110, "type": "TASK", "confidence": 0.8054214417934418}, {"text": "accuracy", "start_pos": 111, "end_pos": 119, "type": "METRIC", "confidence": 0.698945939540863}]}, {"text": "Our parser work falls inline with recent work of joint segmentation, POS tagging and parsing).", "labels": [], "entities": [{"text": "POS tagging", "start_pos": 69, "end_pos": 80, "type": "TASK", "confidence": 0.8489698767662048}]}, {"text": "Compared with related work, our model gives the best published results for joint segmentation and POS tagging, as well as joint phrase-structure parsing on standard CTB5 evaluations.", "labels": [], "entities": [{"text": "joint segmentation", "start_pos": 75, "end_pos": 93, "type": "TASK", "confidence": 0.6546242535114288}, {"text": "POS tagging", "start_pos": 98, "end_pos": 109, "type": "TASK", "confidence": 0.7654950618743896}, {"text": "phrase-structure parsing", "start_pos": 128, "end_pos": 152, "type": "TASK", "confidence": 0.6744462698698044}]}, {"text": "With linear-time complexity, our parser is highly efficient, processing over 30 sentences per second with abeam size of 16.", "labels": [], "entities": []}, {"text": "An open release of the parser is freely available at http://sourceforge.net/projects/zpar/, version 0.6.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Final results on test corpus.", "labels": [], "entities": []}, {"text": " Table 3: Comparisons of our final model with  state-of-the-art systems, where \"*\" denotes that  external dictionary or corpus has been used.", "labels": [], "entities": []}]}