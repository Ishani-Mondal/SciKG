{"title": [{"text": "HYENA-live: Fine-Grained Online Entity Type Classification from Natural-language Text", "labels": [], "entities": [{"text": "HYENA-live", "start_pos": 0, "end_pos": 10, "type": "DATASET", "confidence": 0.875080943107605}, {"text": "Entity Type Classification", "start_pos": 32, "end_pos": 58, "type": "TASK", "confidence": 0.5354831318060557}]}], "abstractContent": [{"text": "Recent research has shown progress in achieving high-quality, very fine-grained type classification in hierarchical tax-onomies.", "labels": [], "entities": [{"text": "type classification", "start_pos": 80, "end_pos": 99, "type": "TASK", "confidence": 0.9365909099578857}]}, {"text": "Within such a multi-level type hierarchy with several hundreds of types at different levels, many entities naturally belong to multiple types.", "labels": [], "entities": []}, {"text": "In order to achieve high-precision in type classification, current approaches are either limited to certain domains or require time consuming multi-stage computations.", "labels": [], "entities": [{"text": "type classification", "start_pos": 38, "end_pos": 57, "type": "TASK", "confidence": 0.9711395502090454}]}, {"text": "As a consequence, existing systems are incapable of performing ad-hoc type classification on arbitrary input texts.", "labels": [], "entities": [{"text": "type classification", "start_pos": 70, "end_pos": 89, "type": "TASK", "confidence": 0.7477103471755981}]}, {"text": "In this demo, we present a novel Web-based tool that is able to perform domain independent entity type classification under real time conditions.", "labels": [], "entities": [{"text": "domain independent entity type classification", "start_pos": 72, "end_pos": 117, "type": "TASK", "confidence": 0.6504239499568939}]}, {"text": "Thanks to its efficient implementation and compacted feature representation , the system is able to process text inputs on-the-fly while still achieving equally high precision as leading state-of-the-art implementations.", "labels": [], "entities": [{"text": "precision", "start_pos": 166, "end_pos": 175, "type": "METRIC", "confidence": 0.9957987666130066}]}, {"text": "Our system offers an online interface where natural-language text can be inserted, which returns semantic type labels for entity mentions.", "labels": [], "entities": []}, {"text": "Further more, the user interface allows users to explore the assigned types by visualizing and navigating along the type-hierarchy.", "labels": [], "entities": []}], "introductionContent": [{"text": "Motivation Web contents such as news, blogs and other social media are full of named entities.", "labels": [], "entities": []}, {"text": "Each entity belongs to one or more semantic types associated with it.", "labels": [], "entities": []}, {"text": "For instance, an entity such as Bob Dylan should be assigned the types Singer, Musician, Poet, etc., and also the corresponding supertype(s) (hypernyms) in a type hierarchy, in this case Person.", "labels": [], "entities": []}, {"text": "Such fine-grained typing of entities in texts can be a great asset for various NLP tasks including semantic role labeling, sense disambiguation and named entity disambiguation (NED).", "labels": [], "entities": [{"text": "semantic role labeling", "start_pos": 99, "end_pos": 121, "type": "TASK", "confidence": 0.6764271259307861}, {"text": "sense disambiguation", "start_pos": 123, "end_pos": 143, "type": "TASK", "confidence": 0.706518292427063}, {"text": "named entity disambiguation (NED)", "start_pos": 148, "end_pos": 181, "type": "TASK", "confidence": 0.7561481048663458}]}, {"text": "For instance, noun phrases such as \"songwriter Dylan\", \"Google founder Page\", or \"rock legend Page\" can be easily mapped to the entities Bob Dylan, Larry Page, and Jimmy Page if their respective types Singer, BusinessPerson, and Guitarist are available (cf. for an illustrative example). with 100,000$, Google was Funded \" founded by his first played on \" guitar in 1952 Page \" Business_people Entrepreneur", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}