{"title": [{"text": "DKPro WSD -A Generalized UIMA-based Framework for Word Sense Disambiguation", "labels": [], "entities": [{"text": "DKPro WSD", "start_pos": 0, "end_pos": 9, "type": "TASK", "confidence": 0.5635381191968918}, {"text": "Word Sense Disambiguation", "start_pos": 50, "end_pos": 75, "type": "TASK", "confidence": 0.7170342902342478}]}], "abstractContent": [{"text": "Implementations of word sense disam-biguation (WSD) algorithms tend to be tied to a particular test corpus format and sense inventory.", "labels": [], "entities": [{"text": "word sense disam-biguation (WSD)", "start_pos": 19, "end_pos": 51, "type": "TASK", "confidence": 0.7908789962530136}]}, {"text": "This makes it difficult to test their performance on new data sets, or to compare them against past algorithms implemented for different data sets.", "labels": [], "entities": []}, {"text": "In this paper we present DKPro WSD, a freely licensed, general-purpose framework for WSD which is both modular and exten-sible.", "labels": [], "entities": [{"text": "DKPro WSD", "start_pos": 25, "end_pos": 34, "type": "DATASET", "confidence": 0.8008174002170563}]}, {"text": "DKPro WSD abstracts the WSD process in such away that test corpora, sense inventories, and algorithms can be freely swapped.", "labels": [], "entities": [{"text": "DKPro WSD", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.7949202954769135}]}, {"text": "Its UIMA-based architecture makes it easy to add support for new resources and algorithms.", "labels": [], "entities": []}, {"text": "Related tasks such as word sense induction and entity linking are also supported.", "labels": [], "entities": [{"text": "word sense induction", "start_pos": 22, "end_pos": 42, "type": "TASK", "confidence": 0.8029624025026957}, {"text": "entity linking", "start_pos": 47, "end_pos": 61, "type": "TASK", "confidence": 0.8048542439937592}]}], "introductionContent": [{"text": "Word sense disambiguation, or WSD ()-the task of determining which of a word's senses is the one intended in a particular context-has been a core research problem in computational linguistics since the very inception of the field.", "labels": [], "entities": [{"text": "Word sense disambiguation", "start_pos": 0, "end_pos": 25, "type": "TASK", "confidence": 0.6802417238553365}, {"text": "WSD ()-the task of determining which of a word's senses is the one intended in a particular context-has", "start_pos": 30, "end_pos": 133, "type": "Description", "confidence": 0.709533303976059}]}, {"text": "Despite the task's importance and popularity as a subject of study, tools and resources supporting WSD have seen relatively little generalization and standardization.", "labels": [], "entities": [{"text": "WSD", "start_pos": 99, "end_pos": 102, "type": "TASK", "confidence": 0.941719114780426}]}, {"text": "That is, most prior implementations of WSD systems have been hard-coded for particular algorithms, sense inventories, and data sets.", "labels": [], "entities": [{"text": "WSD", "start_pos": 39, "end_pos": 42, "type": "TASK", "confidence": 0.9354400038719177}]}, {"text": "This makes it difficult to compare systems or to adapt them to new scenarios without extensive reimplementation.", "labels": [], "entities": []}, {"text": "In this paper we present DKPro WSD, a general-purpose framework for word sense disambiguation which is both modular and extensible.", "labels": [], "entities": [{"text": "DKPro WSD", "start_pos": 25, "end_pos": 34, "type": "DATASET", "confidence": 0.6695281267166138}, {"text": "word sense disambiguation", "start_pos": 68, "end_pos": 93, "type": "TASK", "confidence": 0.7763525446256002}]}, {"text": "Its modularity means that it makes a logical separation between the data sets (e.g., the corpora to be annotated, the answer keys, manually annotated training examples, etc.), the sense inventories (i.e., the lexical-semantic resources enumerating the senses to which words in the corpora are assigned), and the algorithms (i.e., code which actually performs the sense assignments and prerequisite linguistic annotations), and provides a standard interface for each of these component types.", "labels": [], "entities": []}, {"text": "Components which provide the same functionality can be freely swapped, so that one can easily run the same algorithm on different data sets (irrespective of which sense inventory they use), or test several different algorithms on the same data set.", "labels": [], "entities": []}, {"text": "While DKPro WSD ships with support fora number of common WSD algorithms, sense inventories, and data set formats, its extensibility means that it is easy to adapt to work with new methods and resources.", "labels": [], "entities": []}, {"text": "The system is written in Java and is based on UIMA (, an industry-standard architecture for analysis of unstructured information.", "labels": [], "entities": []}, {"text": "Support for new corpus formats, sense inventories, and WSD algorithms can be added by implementing new UIMA components for them, or more conveniently by writing UIMA wrappers around existing code.", "labels": [], "entities": [{"text": "WSD", "start_pos": 55, "end_pos": 58, "type": "TASK", "confidence": 0.9126416444778442}]}, {"text": "The framework and all existing components are released under the Apache License 2.0, a permissive free software licence.", "labels": [], "entities": []}, {"text": "DKPro WSD was designed primarily to support the needs of WSD researchers, who will appreciate the convenience and flexibility it affords in tuning and comparing algorithms and data sets.", "labels": [], "entities": [{"text": "DKPro WSD", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.8832388818264008}]}, {"text": "However, as a general-purpose toolkit it could also be used to implement a WSD module fora realworld natural language processing application.", "labels": [], "entities": []}, {"text": "Its support for interactive visualization of the disambiguation process also makes it a powerful tool for learning or teaching the principles of WSD.", "labels": [], "entities": [{"text": "WSD", "start_pos": 145, "end_pos": 148, "type": "TASK", "confidence": 0.9303430318832397}]}, {"text": "The remainder of this paper is organized as follows: In \u00a72 we review previous work in WSD file formats and implementations.", "labels": [], "entities": [{"text": "WSD file formats", "start_pos": 86, "end_pos": 102, "type": "TASK", "confidence": 0.6745306849479675}]}, {"text": "In \u00a73 we describe our system and further explain its capabilities and advantages.", "labels": [], "entities": []}, {"text": "Finally, in \u00a74 we discuss our plans for further development of the framework.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}