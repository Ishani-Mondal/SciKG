{"title": [{"text": "Semantic Parsing with Combinatory Categorial Grammars", "labels": [], "entities": [{"text": "Semantic Parsing", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.8296339213848114}]}], "abstractContent": [{"text": "1 Abstract Semantic parsers map natural language sentences to formal representations of their underlying meaning.", "labels": [], "entities": []}, {"text": "Building accurate semantic parsers without prohibitive engineering costs is a long-standing, open research problem.", "labels": [], "entities": []}, {"text": "The tutorial will describe general principles for building semantic parsers.", "labels": [], "entities": []}, {"text": "The presentation will be divided into two main parts: modeling and learning.", "labels": [], "entities": []}, {"text": "The modeling section will include best practices for grammar design and choice of semantic representation.", "labels": [], "entities": [{"text": "grammar design", "start_pos": 53, "end_pos": 67, "type": "TASK", "confidence": 0.7486892640590668}]}, {"text": "The discussion will be guided by examples from several domains.", "labels": [], "entities": []}, {"text": "To illustrate the choices to be made and show how they can be approached within a real-life representation language, we will use \u03bb-calculus meaning representations.", "labels": [], "entities": []}, {"text": "In the learning part, we will describe a unified approach for learning Combinatory Categorial Grammar (CCG) semantic parsers, that induces both a CCG lexicon and the parameters of a parsing model.", "labels": [], "entities": [{"text": "learning Combinatory Categorial Grammar (CCG) semantic parsers", "start_pos": 62, "end_pos": 124, "type": "TASK", "confidence": 0.7112494309743246}]}, {"text": "The approach learns from data with labeled meaning representations, as well as from more easily gathered weak supervision.", "labels": [], "entities": []}, {"text": "It also enables grounded learning where the semantic parser is used in an interactive environment, for example to read and execute instructions.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}