{"title": [{"text": "A Tabular Method for Dynamic Oracles in Transition-Based Parsing", "labels": [], "entities": [{"text": "Dynamic Oracles in Transition-Based Parsing", "start_pos": 21, "end_pos": 64, "type": "TASK", "confidence": 0.6490091204643249}]}], "abstractContent": [{"text": "We develop parsing oracles for two transition based dependency parsers, including the arc-standard parser, solving a problem that was left open in (Goldberg and Nivre, 2013).", "labels": [], "entities": []}, {"text": "We experimentally show that using these oracles during training yields superior parsing accuracies on many languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "Greedy transition-based dependency parsers incrementally process an input sentence from left to right.", "labels": [], "entities": []}, {"text": "These parsers are very fast and provide competitive parsing accuracies (.", "labels": [], "entities": []}, {"text": "However, greedy transition-based parsers still fall behind search-based parsers) with respect to accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 97, "end_pos": 105, "type": "METRIC", "confidence": 0.9978435039520264}]}, {"text": "The training of transition-based parsers relies on a component called the parsing oracle, which maps parser configurations to optimal transitions with respect to a gold tree.", "labels": [], "entities": []}, {"text": "A discriminative model is then trained to simulate the oracle's behavior.", "labels": [], "entities": []}, {"text": "A parsing oracle is deterministic if it returns a single canonical transition.", "labels": [], "entities": []}, {"text": "Furthermore, an oracle is partial if it is defined only for configurations that can reach the gold tree, that is, configurations representing parsing histories with no mistake.", "labels": [], "entities": []}, {"text": "Oracles that are both deterministic and partial are called static.", "labels": [], "entities": []}, {"text": "Traditionally, only static oracles have been exploited in training of transition-based parsers.", "labels": [], "entities": []}, {"text": "Recently, showed that the accuracy of greedy parsers can be substantially improved without affecting their parsing speed.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 26, "end_pos": 34, "type": "METRIC", "confidence": 0.9991601705551147}]}, {"text": "This improvement relies on the introduction of novel oracles that are nondeterministic and complete.", "labels": [], "entities": []}, {"text": "An oracle is nondeterministic if it returns the set of all transitions that are optimal with respect to the gold tree, and it is complete if it is well-defined and correct for every configuration that is reachable by the parser.", "labels": [], "entities": []}, {"text": "Oracles that are both nondeterministic and complete are called dynamic.", "labels": [], "entities": []}, {"text": "Goldberg and Nivre (2013) develop dynamic oracles for several transition-based parsers.", "labels": [], "entities": []}, {"text": "The construction of these oracles is based on a property of transition-based parsers that they call arc decomposition.", "labels": [], "entities": []}, {"text": "They also prove that the popular arc-standard system) is not arc-decomposable, and they leave as an open research question the construction of a dynamic oracle for the arc-standard system.", "labels": [], "entities": []}, {"text": "In this article, we develop one such oracle ( \u00a74) and prove its correctness ( \u00a75).", "labels": [], "entities": []}, {"text": "An extension to the arc-standard parser was presented by, which relaxes the bottom-up construction order and allows mixing of bottom-up and top-down strategies.", "labels": [], "entities": []}, {"text": "This parser, called here the LR-spine parser, achieves state-ofthe-art results for greedy parsing.", "labels": [], "entities": []}, {"text": "Like the arc-standard system, the LR-spine parser is not arc-decomposable, and a dynamic oracle for this system was not known.", "labels": [], "entities": []}, {"text": "We extend our oracle for the arc-standard system to work for the LR-spine system as well ( \u00a76).", "labels": [], "entities": []}, {"text": "The dynamic oracles developed by for arc-decomposable systems are based on local properties of computations.", "labels": [], "entities": []}, {"text": "In contrast, our novel dynamic oracle algorithms rely on arguably more complex structural properties of computations, which are computed through dynamic programming.", "labels": [], "entities": []}, {"text": "This leaves open the question of whether a machine-learning model can learn to effectively simulate such complex processes: will the benefit of training with the dynamic oracle carryover to the arc-standard and LR-spine systems?", "labels": [], "entities": []}, {"text": "We show experimentally that this is indeed the case ( \u00a78), and that using the training-with-exploration method of) with our dynamic programming based oracles yields superior parsing accuracies on many languages.", "labels": [], "entities": []}], "datasetContent": [{"text": "Datasets Performance evaluation is carried out on CoNLL 2007 multilingual dataset, as well as on the Penn Treebank (PTB) converted to Stanford basic dependencies).", "labels": [], "entities": [{"text": "CoNLL 2007 multilingual dataset", "start_pos": 50, "end_pos": 81, "type": "DATASET", "confidence": 0.9559063762426376}, {"text": "Penn Treebank (PTB) converted", "start_pos": 101, "end_pos": 130, "type": "DATASET", "confidence": 0.9701016743977865}]}, {"text": "For the CoNLL datasets we use gold part-of-speech tags, while for the PTB we use automatically assigned tags.", "labels": [], "entities": [{"text": "CoNLL datasets", "start_pos": 8, "end_pos": 22, "type": "DATASET", "confidence": 0.969666600227356}, {"text": "PTB", "start_pos": 70, "end_pos": 73, "type": "DATASET", "confidence": 0.9538753628730774}]}, {"text": "As usual, the PTB parser is trained on sections 2-21 and tested on section 23.", "labels": [], "entities": [{"text": "PTB parser", "start_pos": 14, "end_pos": 24, "type": "TASK", "confidence": 0.6438693702220917}]}, {"text": "Setup We train labeled versions of the arc-standard (std) and LR-spine (lrs) parsers under the static, nondet and explore setups, as defined in \u00a77.", "labels": [], "entities": []}, {"text": "In the nondet setup we use a nondeterministic partial oracle and in the explore setup we use the nondeterministic complete oracles we present in this paper.", "labels": [], "entities": []}, {"text": "In the static setup we resolve oracle ambiguities and choose a canonic transition sequence by attaching arcs as soon as possible.", "labels": [], "entities": []}, {"text": "In the explore setup, from the first round of training onward, we always follow the predicted transition (EXPLORE is true).", "labels": [], "entities": [{"text": "EXPLORE", "start_pos": 106, "end_pos": 113, "type": "METRIC", "confidence": 0.9987162351608276}]}, {"text": "For all languages, we deal with non-projectivity by skipping the non-projective sentences during training but not during test.", "labels": [], "entities": []}, {"text": "For each parsing system, we use the same feature templates across all languages.", "labels": [], "entities": []}, {"text": "The arc-standard models are trained for 15 iterations and the LR-spine models for 30 iterations, after which all the models seem to have converged.", "labels": [], "entities": []}, {"text": "Results In we report the labeled (LAS) and unlabeled (UAS) attachment scores.", "labels": [], "entities": [{"text": "unlabeled (UAS) attachment scores", "start_pos": 43, "end_pos": 76, "type": "METRIC", "confidence": 0.730804830789566}]}, {"text": "As expected, the LR-spine parsers outperform the arc-standard parsers trained under the same setup.", "labels": [], "entities": [{"text": "LR-spine parsers", "start_pos": 17, "end_pos": 33, "type": "TASK", "confidence": 0.5478924661874771}]}, {"text": "Training with the dynamic oracles is also beneficial: despite the arguable complexity of our proposed oracles, the trends are consistent with those reported by.", "labels": [], "entities": []}, {"text": "For the arc-standard model we observe that the move from a static to a nondeterministic oracle during training improves the accuracy for most of languages.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 124, "end_pos": 132, "type": "METRIC", "confidence": 0.9992984533309937}]}, {"text": "Making use of the completeness of the dynamic oracle and moving to the error exploring setup further improve results.", "labels": [], "entities": []}, {"text": "The only exceptions are Basque, that has a small dataset with more than 20% of non-projective sentences, and Chinese.", "labels": [], "entities": []}, {"text": "For Chinese we observe a reduction of accuracy in the nondet setup, but an increase in the explore setup.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 38, "end_pos": 46, "type": "METRIC", "confidence": 0.999576985836029}]}, {"text": "For the LR-spine parser we observe a practically constant increase of performance by moving from Our complete code, together with the description of the feature templates, is available on the second author's homepage.", "labels": [], "entities": []}, {"text": "the static to the nondeterministic and then to the error exploring setups.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Scores on the CoNLL 2007 dataset (including punctuation, gold parts of speech) and on Penn Tree Bank  (excluding punctuation, predicted parts of speech). Label 'std' refers to the arc-standard parser, and 'lrs' refers to the  LR-spine parser. Each number is an average over 5 runs with different randomization seeds.", "labels": [], "entities": [{"text": "CoNLL 2007 dataset", "start_pos": 24, "end_pos": 42, "type": "DATASET", "confidence": 0.9712705214818319}, {"text": "Penn Tree Bank", "start_pos": 96, "end_pos": 110, "type": "DATASET", "confidence": 0.9966247280438741}]}]}