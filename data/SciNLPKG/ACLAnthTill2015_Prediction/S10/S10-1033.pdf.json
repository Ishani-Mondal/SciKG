{"title": [{"text": "SJTULTLAB: Chunk Based Method for Keyphrase Extraction", "labels": [], "entities": [{"text": "Keyphrase Extraction", "start_pos": 34, "end_pos": 54, "type": "TASK", "confidence": 0.7537558078765869}]}], "abstractContent": [{"text": "In this paper we present a chunk based keyphrase extraction method for scientific articles.", "labels": [], "entities": [{"text": "keyphrase extraction", "start_pos": 39, "end_pos": 59, "type": "TASK", "confidence": 0.7198443561792374}]}, {"text": "Different from most previous systems , supervised machine learning algorithms are not used in our system.", "labels": [], "entities": []}, {"text": "Instead, document structure information is used to remove unimportant contents; Chunk extraction and filtering is used to reduce the quantity of candidates; Keywords are used to filter the candidates before generating final keyphrases.", "labels": [], "entities": [{"text": "Chunk extraction", "start_pos": 80, "end_pos": 96, "type": "TASK", "confidence": 0.7283255457878113}]}, {"text": "Our experimental results on test data show that the method works better than the baseline systems and is comparable with other known algorithms.", "labels": [], "entities": []}], "introductionContent": [{"text": "Keyphrases are sequences of words which capture the main topics discussed in a document.", "labels": [], "entities": []}, {"text": "Keyphrases are very useful in many natural language processing (NLP) applications such as document summarization, classification and clustering.", "labels": [], "entities": [{"text": "document summarization", "start_pos": 90, "end_pos": 112, "type": "TASK", "confidence": 0.7287355661392212}]}, {"text": "But it is an expensive and time-consuming job for users to tag keyphrases of a document.", "labels": [], "entities": []}, {"text": "These needs motivate methods for automatic keyphrase extraction.", "labels": [], "entities": [{"text": "automatic keyphrase extraction", "start_pos": 33, "end_pos": 63, "type": "TASK", "confidence": 0.6344749430815378}]}, {"text": "Most existing algorithms for keyphrase extraction treat this task as a supervised classification task.", "labels": [], "entities": [{"text": "keyphrase extraction", "start_pos": 29, "end_pos": 49, "type": "TASK", "confidence": 0.8874640464782715}]}, {"text": "The KEA algorithm () identifies candidate keyphrases using lexical methods, calculates feature values for each candidate, and uses a machine-learning algorithm to predict which candidates are good keyphrases.", "labels": [], "entities": []}, {"text": "A domain-specific method) was proposed based on the Naive Bayes learning scheme.", "labels": [], "entities": [{"text": "Naive Bayes learning scheme", "start_pos": 52, "end_pos": 79, "type": "DATASET", "confidence": 0.6557050496339798}]}, {"text": "Turney) treated a document as a set of phrases, which the learning algorithm must learn to classify as positive or negative examples of keyphrases.", "labels": [], "entities": []}, {"text": "Turney) also presented enhancements to the KEA keyphrase extraction algorithm that are designed to increase the coherence of the extracted keyphrases.) presented a keyphrase extraction algorithm for scientific publications.", "labels": [], "entities": [{"text": "KEA keyphrase extraction", "start_pos": 43, "end_pos": 67, "type": "TASK", "confidence": 0.6561876833438873}, {"text": "keyphrase extraction", "start_pos": 164, "end_pos": 184, "type": "TASK", "confidence": 0.8624668717384338}]}, {"text": "They also introduced two features that capture the positions of phrases and salient morphological phenomena.", "labels": [], "entities": []}, {"text": "Wu and Agogino ( proposed an automated keyphrase extraction algorithm using a nondominated sorting multiobjective genetic algorithm.", "labels": [], "entities": [{"text": "keyphrase extraction", "start_pos": 39, "end_pos": 59, "type": "TASK", "confidence": 0.8034983575344086}]}, {"text": "used n-gram filtration technique and weight of words for keyphrase extraction from scientific articles.", "labels": [], "entities": [{"text": "keyphrase extraction from scientific articles", "start_pos": 57, "end_pos": 102, "type": "TASK", "confidence": 0.8600849390029908}]}, {"text": "For this evaluation task,) tackled two major issues in automatic keyphrase extraction using scientific articles: candidate selection and feature engineering.", "labels": [], "entities": [{"text": "automatic keyphrase extraction", "start_pos": 55, "end_pos": 85, "type": "TASK", "confidence": 0.6233180065949758}, {"text": "candidate selection", "start_pos": 113, "end_pos": 132, "type": "TASK", "confidence": 0.8779527246952057}, {"text": "feature engineering", "start_pos": 137, "end_pos": 156, "type": "TASK", "confidence": 0.7458339929580688}]}, {"text": "They also re-examined the existing features broadly used for the supervised approach.", "labels": [], "entities": []}, {"text": "Different from previous systems, our system uses a chunk based method to extract keyphrases from scientific articles.", "labels": [], "entities": []}, {"text": "Domain-specific information is used to find out useful parts in a document.", "labels": [], "entities": []}, {"text": "The chunk based method is used to extract candidates of keyphrases in a document.", "labels": [], "entities": []}, {"text": "Keywords of a document are used to select keyphrases from candidates.", "labels": [], "entities": []}, {"text": "In the following, Section 2 will describe the architecture of the system.", "labels": [], "entities": []}, {"text": "Section 3 will introduce functions and implementation of each part in the system.", "labels": [], "entities": []}, {"text": "Experiment results will be showed in Section 4.", "labels": [], "entities": []}, {"text": "The conclusion will be given in Section 5.", "labels": [], "entities": []}, {"text": "shows the architecture of our system.", "labels": [], "entities": []}, {"text": "The system accepts a document as input (go through arrows with solid lines), then does the preprocessing job and identifies the structure of the document.", "labels": [], "entities": []}, {"text": "After these two steps, the formatted document is sent to the candidate selection module which first extracts chunks from the document, then uses some rules to filter the extracted chunks.", "labels": [], "entities": []}, {"text": "After candidate selection, the system will choose top fifteen (ordered by the position of the first occurrence in the original document) chunks from the candidates as the keyphrases and output the result (\"Output1\" in) which is our submitted result.", "labels": [], "entities": []}, {"text": "The candidates will also be sent to keyphrase selection module which first extracts keywords from the formatted document, then uses keywords to choose keyphrases from the candidates.", "labels": [], "entities": []}, {"text": "Keywords extraction needs some training data (go through arrows with dotted lines) which also needs first two steps of our system.", "labels": [], "entities": [{"text": "Keywords extraction", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8827845752239227}]}, {"text": "The result of keywords selection module will be sent to \"Output2\" as the final result after choosing top fifteen chunks.", "labels": [], "entities": []}, {"text": "OpenNLP 1 and KEA 2 are used in chunk extraction and keywords extraction respectively.", "labels": [], "entities": [{"text": "OpenNLP 1", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.9006764590740204}, {"text": "chunk extraction", "start_pos": 32, "end_pos": 48, "type": "TASK", "confidence": 0.8768138587474823}, {"text": "keywords extraction", "start_pos": 53, "end_pos": 72, "type": "TASK", "confidence": 0.7584257423877716}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: The comparison of F-score of our system  with other systems.", "labels": [], "entities": [{"text": "F-score", "start_pos": 28, "end_pos": 35, "type": "METRIC", "confidence": 0.9969295859336853}]}]}