{"title": [], "abstractContent": [{"text": "Basilica is an event-driven software architecture for creating conversational agents as a collection of reusable components.", "labels": [], "entities": []}, {"text": "Software engineers and computer scientists can use this general architecture to create increasingly sophisticated conversational agents.", "labels": [], "entities": []}, {"text": "We have developed agents based on Basilica that have been used in various application scenarios and foresee that agents build on Basilica can cater to a wider variety of interactive situations as we continue to add functionality to our architecture .", "labels": [], "entities": []}], "introductionContent": [{"text": "Conversational Interfaces apply the metaphor of agent to an interface which allows the user to conversationally interact with the machine using natural language through speech or text.", "labels": [], "entities": []}, {"text": "The current state of the art in the area of conversational interfaces is largely dominated by spoken dialog systems (SDS).", "labels": [], "entities": []}, {"text": "These SDS are most often used for the purpose of accessing information from a database over the telephone.", "labels": [], "entities": []}, {"text": "Other common applications of conversational agents include computer aided instruction (CAI) and human-robot interaction (HRI).", "labels": [], "entities": []}, {"text": "Conversational Agents inmost of today's SDS, CAI and HRI are designed to work within the scope of specific task domains which allows the scientists and engineers working on such systems to ensure satisfactory and relevant interaction with the user most of the time.", "labels": [], "entities": []}, {"text": "Within the task domain, such agents can display intelligent interactive behavior like helping the user use the interface, asking remedial questions), shaping the user behavior) by using alternative phrasing of utterances, responding to user affect) through text, voice and gesture, engaging the user through the display of presence via backchannels and embodiment.", "labels": [], "entities": []}, {"text": "As more and more of these intelligent interactive agents get built for many task domains; Amtrak Julie; \u2026) that surround our everyday life, we observe a gradual transition in the use of the conversational agent technology to be a form of situated interaction.", "labels": [], "entities": [{"text": "Amtrak Julie", "start_pos": 90, "end_pos": 102, "type": "DATASET", "confidence": 0.9714035987854004}]}, {"text": "One of the characteristic requirements of this transition towards ubiquity of such interactive agents is the capability to sense and trigger behavior in a context sensitive way.", "labels": [], "entities": []}, {"text": "In most conversational interfaces today, the only trigger used by the agents is that of initiation of conversation usually by sensing user presence through a telephone call, proximity detection or user login into a virtual environment.", "labels": [], "entities": [{"text": "proximity detection", "start_pos": 174, "end_pos": 193, "type": "TASK", "confidence": 0.6893768608570099}]}, {"text": "The initiation event is followed by a scripted task-oriented conversation with the agent.", "labels": [], "entities": []}, {"text": "These scripts could be fairly complex depending on the representational formalism underlying the script.", "labels": [], "entities": []}, {"text": "Most of the common software architectures/platforms used to create conversational agents like TellMe Studio, Voxeo Prophecy, Olympus (, DIPPER (, etc.", "labels": [], "entities": []}, {"text": "use one or more of these presence sensing techniques and one of the many existing scripting languages including VoiceXML, SALT, TuTalk ( and Ravenclaw (Bohus and Rudnicky, 2003) task specification language among others.", "labels": [], "entities": [{"text": "TuTalk", "start_pos": 128, "end_pos": 134, "type": "DATASET", "confidence": 0.8941675424575806}, {"text": "Ravenclaw (Bohus and Rudnicky, 2003) task specification language", "start_pos": 141, "end_pos": 205, "type": "DATASET", "confidence": 0.8819501237435774}]}, {"text": "However, in our recent work on building conversational agents situated in collaborative learning environments, we have discovered the need fora software architecture for creating agents that persist in an interactive environment in which human users interact with these agents as well as with each other.", "labels": [], "entities": []}, {"text": "In this situation, the agents need to be able to sense many kinds of triggers at many points of time and choose to respond to some of those triggers through a variety of modalities including conversation.", "labels": [], "entities": []}, {"text": "This observation was the motivation for creating Basilica which is our architecture for building conversational agents.", "labels": [], "entities": []}, {"text": "In section 2, we talk more about the intricacies of Basilica and agents built on this architecture.", "labels": [], "entities": []}, {"text": "Section 3 describes some of application scenarios in which we are using Conversational Agents based on Basilica.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}