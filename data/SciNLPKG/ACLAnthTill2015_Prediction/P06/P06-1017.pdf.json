{"title": [{"text": "Relation Extraction Using Label Propagation Based Semi-supervised Learning", "labels": [], "entities": [{"text": "Relation Extraction", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.9859345555305481}]}], "abstractContent": [{"text": "Shortage of manually labeled data is an obstacle to supervised relation extraction methods.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 63, "end_pos": 82, "type": "TASK", "confidence": 0.6803866922855377}]}, {"text": "In this paper we investigate a graph based semi-supervised learning algorithm , a label propagation (LP) algorithm , for relation extraction.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 121, "end_pos": 140, "type": "TASK", "confidence": 0.9114373326301575}]}, {"text": "It represents labeled and unlabeled examples and their distances as the nodes and the weights of edges of a graph, and tries to obtain a labeling function to satisfy two constraints: 1) it should be fixed on the labeled nodes, 2) it should be smooth on the whole graph.", "labels": [], "entities": []}, {"text": "Experiment results on the ACE corpus showed that this LP algorithm achieves better performance than SVM when only very few labeled examples are available, and it also performs better than bootstrap-ping for the relation extraction task.", "labels": [], "entities": [{"text": "ACE corpus", "start_pos": 26, "end_pos": 36, "type": "DATASET", "confidence": 0.960578978061676}, {"text": "relation extraction task", "start_pos": 211, "end_pos": 235, "type": "TASK", "confidence": 0.8661105434099833}]}], "introductionContent": [{"text": "Relation extraction is the task of detecting and classifying relationships between two entities from text.", "labels": [], "entities": [{"text": "Relation extraction", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.9598060250282288}, {"text": "detecting and classifying relationships between two entities from text", "start_pos": 35, "end_pos": 105, "type": "TASK", "confidence": 0.7039409710301293}]}, {"text": "Many machine learning methods have been proposed to address this problem, e.g., supervised learning algorithms (), semi-supervised learning algorithms, and unsupervised learning algorithms).", "labels": [], "entities": []}, {"text": "Supervised methods for relation extraction perform well on the ACE Data, but they require a large amount of manually labeled relation instances.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 23, "end_pos": 42, "type": "TASK", "confidence": 0.9257007539272308}, {"text": "ACE Data", "start_pos": 63, "end_pos": 71, "type": "DATASET", "confidence": 0.9843620657920837}]}, {"text": "Unsupervised methods do not need the definition of relation types and manually labeled data, but they cannot detect relations between entity pairs and its result cannot be directly used in many NLP tasks since there is no relation type label attached to each instance in clustering result.", "labels": [], "entities": []}, {"text": "Considering both the availability of a large amount of untagged corpora and direct usage of extracted relations, semisupervised learning methods has received great attention.", "labels": [], "entities": []}, {"text": "DIPRE (Dual Iterative Pattern Relation Expansion)) is a bootstrapping-based system that used a pattern matching system as classifier to exploit the duality between sets of patterns and relations.) is another system that used bootstrapping techniques for extracting relations from unstructured text.", "labels": [], "entities": [{"text": "Dual Iterative Pattern Relation Expansion", "start_pos": 7, "end_pos": 48, "type": "TASK", "confidence": 0.609417998790741}]}, {"text": "Snowball shares much in common with DIPRE, including the employment of the bootstrapping framework as well as the use of pattern matching to extract new candidate relations.", "labels": [], "entities": [{"text": "Snowball", "start_pos": 0, "end_pos": 8, "type": "DATASET", "confidence": 0.9533661603927612}]}, {"text": "The third system approaches relation classification problem with bootstrapping on top of SVM, proposed by.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 28, "end_pos": 51, "type": "TASK", "confidence": 0.9192250669002533}]}, {"text": "This system focuses on the ACE subproblem, RDC, and extracts various lexical and syntactic features for the classification task.", "labels": [], "entities": [{"text": "ACE subproblem, RDC", "start_pos": 27, "end_pos": 46, "type": "DATASET", "confidence": 0.7962567210197449}, {"text": "classification task", "start_pos": 108, "end_pos": 127, "type": "TASK", "confidence": 0.8887941837310791}]}, {"text": "However, Zhang (2004)'s method doesn't actually \"detect\" relaitons but only performs relation classification between two entities given that they are known to be related.", "labels": [], "entities": [{"text": "relation classification between two entities", "start_pos": 85, "end_pos": 129, "type": "TASK", "confidence": 0.8246537804603576}]}, {"text": "Bootstrapping works by iteratively classifying unlabeled examples and adding confidently classified examples into labeled data using a model learned from augmented labeled data in previous iteration.", "labels": [], "entities": []}, {"text": "It can be found that the affinity information among unlabeled examples is not fully explored in this bootstrapping process.", "labels": [], "entities": []}, {"text": "Recently a promising family of semi-supervised learning algorithm is introduced, which can effectively combine unlabeled data with labeled data in learning process by exploiting manifold structure (cluster structure) in data ().", "labels": [], "entities": []}, {"text": "These graph-based semi-supervised methods usually define a graph where the nodes represent labeled and unlabeled examples in a dataset, and edges (may be weighted) reflect the similarity of examples.", "labels": [], "entities": []}, {"text": "Then one wants a labeling function to satisfy two constraints at the same time: 1) it should be close to the given labels on the labeled nodes, and 2) it should be smooth on the whole graph.", "labels": [], "entities": []}, {"text": "This can be expressed in a regularization framework where the first term is a loss function, and the second term is a regularizer.", "labels": [], "entities": []}, {"text": "These methods differ from traditional semisupervised learning methods in that they use graph structure to smooth the labeling function.", "labels": [], "entities": []}, {"text": "To the best of our knowledge, no work has been done on using graph based semi-supervised learning algorithms for relation extraction.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 113, "end_pos": 132, "type": "TASK", "confidence": 0.955276757478714}]}, {"text": "Here we investigate a label propagation algorithm (LP) () for relation extraction task.", "labels": [], "entities": [{"text": "label propagation", "start_pos": 22, "end_pos": 39, "type": "TASK", "confidence": 0.6858393996953964}, {"text": "relation extraction", "start_pos": 62, "end_pos": 81, "type": "TASK", "confidence": 0.8904896974563599}]}, {"text": "This algorithm works by representing labeled and unlabeled examples as vertices in a connected graph, then propagating the label information from any vertex to nearby vertices through weighted edges iteratively, finally inferring the labels of unlabeled examples after the propagation process converges.", "labels": [], "entities": []}, {"text": "In this paper we focus on the ACE RDC task 1 . The rest of this paper is organized as follows.", "labels": [], "entities": [{"text": "ACE RDC task", "start_pos": 30, "end_pos": 42, "type": "TASK", "confidence": 0.6770617564519247}]}, {"text": "Section 2 presents related work.", "labels": [], "entities": []}, {"text": "Section 3 formulates relation extraction problem in the context of semisupervised learning and describes our proposed approach.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 21, "end_pos": 40, "type": "TASK", "confidence": 0.8237167000770569}]}, {"text": "Then we provide experimental results of our proposed method and compare with a popular supervised learning algorithm (SVM) and bootstrapping algorithm in Section 4.", "labels": [], "entities": []}, {"text": "Finally we conclude our work in section 5.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluated this label propagation based relation extraction method for relation subtype detection and characterization task on the official ACE 2003 corpus.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 42, "end_pos": 61, "type": "TASK", "confidence": 0.7197424024343491}, {"text": "relation subtype detection", "start_pos": 73, "end_pos": 99, "type": "TASK", "confidence": 0.8718829353650411}, {"text": "ACE 2003 corpus", "start_pos": 142, "end_pos": 157, "type": "DATASET", "confidence": 0.8858685692151388}]}, {"text": "It contains 519 files from sources including broadcast, newswire, and newspaper.", "labels": [], "entities": []}, {"text": "We dealt with only intra-sentence explicit relations and assumed that all entities have been detected beforehand in the EDT sub-task of ACE.", "labels": [], "entities": []}, {"text": "lists the types and subtypes of relations for the ACE Relation Detection and Characterization (RDC) task, along with their  frequency of occurrence in the ACE training set and test set.", "labels": [], "entities": [{"text": "ACE Relation Detection and Characterization (RDC) task", "start_pos": 50, "end_pos": 104, "type": "TASK", "confidence": 0.856948541270362}, {"text": "ACE training set and test set", "start_pos": 155, "end_pos": 184, "type": "DATASET", "confidence": 0.8436406056086222}]}, {"text": "We constructed labeled data by randomly sampling some examples from ACE training data and additionally sampling examples with the same size from the pool of unrelated entity pairs for the \"NONE\" class.", "labels": [], "entities": [{"text": "ACE training data", "start_pos": 68, "end_pos": 85, "type": "DATASET", "confidence": 0.8449289798736572}]}, {"text": "We used the remaining examples in the ACE training set and the whole ACE test set as unlabeled data.", "labels": [], "entities": [{"text": "ACE training set", "start_pos": 38, "end_pos": 54, "type": "DATASET", "confidence": 0.9476940035820007}, {"text": "ACE test set", "start_pos": 69, "end_pos": 81, "type": "DATASET", "confidence": 0.9788479010264078}]}, {"text": "The testing set was used for final evaluation.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Frequency of Relation SubTypes in the ACE training", "labels": [], "entities": [{"text": "Frequency of Relation SubTypes", "start_pos": 10, "end_pos": 40, "type": "TASK", "confidence": 0.6527205556631088}, {"text": "ACE training", "start_pos": 48, "end_pos": 60, "type": "DATASET", "confidence": 0.9318056106567383}]}, {"text": " Table 2: The Performance of SVM and LP algorithm with different sizes of labeled data for relation detection on relation subtypes.", "labels": [], "entities": [{"text": "relation detection", "start_pos": 91, "end_pos": 109, "type": "TASK", "confidence": 0.7996918559074402}]}, {"text": " Table 3: The performance of SVM and LP algorithm with different sizes of labeled data for relation detection and classification", "labels": [], "entities": [{"text": "relation detection", "start_pos": 91, "end_pos": 109, "type": "TASK", "confidence": 0.8687413334846497}, {"text": "classification", "start_pos": 114, "end_pos": 128, "type": "TASK", "confidence": 0.5688292980194092}]}, {"text": " Table 4: Comparison of the performance of the bootstrapped SVM method from (Zhang, 2004) and LP method with 100 seed", "labels": [], "entities": []}, {"text": " Table 5: Comparison of the performance of previous methods on ACE RDC task.", "labels": [], "entities": [{"text": "ACE RDC task", "start_pos": 63, "end_pos": 75, "type": "DATASET", "confidence": 0.8203774094581604}]}]}