{"title": [{"text": "URES : an Unsupervised Web Relation Extraction System", "labels": [], "entities": [{"text": "Unsupervised Web Relation Extraction", "start_pos": 10, "end_pos": 46, "type": "TASK", "confidence": 0.6956723108887672}]}], "abstractContent": [{"text": "Most information extraction systems either use handwritten extraction patterns or use a machine learning algorithm that is trained on a manually annotated corpus.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 5, "end_pos": 27, "type": "TASK", "confidence": 0.8379023969173431}]}, {"text": "Both of these approaches require massive human effort and hence prevent information extraction from becoming more widely applicable.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 72, "end_pos": 94, "type": "TASK", "confidence": 0.8412927389144897}]}, {"text": "In this paper we present URES (Unsupervised Relation Extraction System), which extracts relations from the Web in a totally unsuper-vised way.", "labels": [], "entities": [{"text": "URES", "start_pos": 25, "end_pos": 29, "type": "METRIC", "confidence": 0.8920266628265381}, {"text": "Unsupervised Relation Extraction System)", "start_pos": 31, "end_pos": 71, "type": "TASK", "confidence": 0.6777847051620484}]}, {"text": "It takes as input the descriptions of the target relations, which include the names of the predicates, the types of their attributes, and several seed instances of the relations.", "labels": [], "entities": []}, {"text": "Then the system downloads from the Web a large collection of pages that are likely to contain instances of the target relations.", "labels": [], "entities": []}, {"text": "From those pages, utilizing the known seed instances , the system learns the relation patterns, which are then used for extraction.", "labels": [], "entities": []}, {"text": "We present several experiments in which we learn patterns and extract instances of a set of several common IE relations , comparing several pattern learning and filtering setups.", "labels": [], "entities": []}, {"text": "We demonstrate that using simple noun phrase tag-ger is sufficient as abase for accurate patterns.", "labels": [], "entities": []}, {"text": "However, having a named entity recognizer, which is able to recognize the types of the relation attributes significantly, enhances the extraction performance.", "labels": [], "entities": []}, {"text": "We also compare our approach with KnowItAll's fixed generic patterns.", "labels": [], "entities": []}], "introductionContent": [{"text": "The most common preprocessing technique for text mining is information extraction (IE).", "labels": [], "entities": [{"text": "text mining", "start_pos": 44, "end_pos": 55, "type": "TASK", "confidence": 0.8452398777008057}, {"text": "information extraction (IE)", "start_pos": 59, "end_pos": 86, "type": "TASK", "confidence": 0.8436330497264862}]}, {"text": "It is defined as the task of extracting knowledge out of textual documents.", "labels": [], "entities": [{"text": "extracting knowledge out of textual documents", "start_pos": 29, "end_pos": 74, "type": "TASK", "confidence": 0.781557152668635}]}, {"text": "In general, IE is divided into two main types of extraction tasks -Entity tagging and Relation extraction.", "labels": [], "entities": [{"text": "IE", "start_pos": 12, "end_pos": 14, "type": "TASK", "confidence": 0.9936113953590393}, {"text": "Entity tagging", "start_pos": 67, "end_pos": 81, "type": "TASK", "confidence": 0.70192751288414}, {"text": "Relation extraction", "start_pos": 86, "end_pos": 105, "type": "TASK", "confidence": 0.907944917678833}]}, {"text": "The main approaches used by most information extraction systems are the knowledge engineering approach and the machine learning approach.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 33, "end_pos": 55, "type": "TASK", "confidence": 0.7608459889888763}]}, {"text": "The knowledge engineering (mostly rule based) systems traditionally were the top performers inmost IE benchmarks, such as MUC), ACE and the KDD CUP (.", "labels": [], "entities": [{"text": "MUC", "start_pos": 122, "end_pos": 125, "type": "DATASET", "confidence": 0.6888933777809143}, {"text": "ACE", "start_pos": 128, "end_pos": 131, "type": "DATASET", "confidence": 0.7277462482452393}, {"text": "KDD CUP", "start_pos": 140, "end_pos": 147, "type": "DATASET", "confidence": 0.9018619358539581}]}, {"text": "Recently though, the machine learning systems became state-of-the-art, especially for simpler tagging problems, such as named entity recognition (Bikel,), or field extraction.", "labels": [], "entities": [{"text": "named entity recognition", "start_pos": 120, "end_pos": 144, "type": "TASK", "confidence": 0.5972656905651093}, {"text": "field extraction", "start_pos": 158, "end_pos": 174, "type": "TASK", "confidence": 0.7604809403419495}]}, {"text": "The general idea is that a domain expert labels the target concepts in a set of documents.", "labels": [], "entities": []}, {"text": "The system then learns a model of the extraction task, which can be applied to new documents automatically.", "labels": [], "entities": []}, {"text": "Both of these approaches require massive human effort and hence prevent information extraction from becoming more widely applicable.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 72, "end_pos": 94, "type": "TASK", "confidence": 0.8412927389144897}]}, {"text": "In order to minimize the huge manual effort involved with building information extraction systems, we have designed and developed URES (Unsupervised Relation Extraction System) which learns a set of patterns to extract relations from the web in a totally unsupervised way.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 67, "end_pos": 89, "type": "TASK", "confidence": 0.7551169991493225}, {"text": "URES", "start_pos": 130, "end_pos": 134, "type": "METRIC", "confidence": 0.917407214641571}]}, {"text": "The system takes as input the names of the target relations, the types of its arguments, and a small set of seed instances of the relations.", "labels": [], "entities": []}, {"text": "It then uses a large set of unlabeled documents downloaded from the Web in order to build extraction patterns.", "labels": [], "entities": []}, {"text": "URES patterns currently have two modes of operation.", "labels": [], "entities": [{"text": "URES", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.678701639175415}]}, {"text": "One is based upon a generic shallow parser, able to extract noun phrases and their heads.", "labels": [], "entities": []}, {"text": "Another mode builds patterns for use by TEG).", "labels": [], "entities": []}, {"text": "TEG is a hybrid rule-based and statistical IE system.", "labels": [], "entities": [{"text": "TEG", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.672783374786377}, {"text": "IE", "start_pos": 43, "end_pos": 45, "type": "TASK", "confidence": 0.8754883408546448}]}, {"text": "It utilizes a trained labeled corpus in order to complement and enhance the performance of a relatively small set of manually-built extraction rules.", "labels": [], "entities": []}, {"text": "When it is used with URES, the relation extraction rules and training data are not built manually but are created automatically from the URES-learned patterns.", "labels": [], "entities": [{"text": "URES", "start_pos": 21, "end_pos": 25, "type": "DATASET", "confidence": 0.8382577300071716}, {"text": "relation extraction", "start_pos": 31, "end_pos": 50, "type": "TASK", "confidence": 0.7720916867256165}]}, {"text": "However, URES does not built rules and training data for entity extraction.", "labels": [], "entities": [{"text": "URES", "start_pos": 9, "end_pos": 13, "type": "DATASET", "confidence": 0.7098919749259949}, {"text": "entity extraction", "start_pos": 57, "end_pos": 74, "type": "TASK", "confidence": 0.7799977362155914}]}, {"text": "For those, we use the grammar and training data we developed separately.", "labels": [], "entities": []}, {"text": "It is important to note that URES is not a classic IE system.", "labels": [], "entities": [{"text": "URES", "start_pos": 29, "end_pos": 33, "type": "DATASET", "confidence": 0.5908807516098022}]}, {"text": "Its purpose is to extract as many as possible different instances of the given relations while maintaining a high precision.", "labels": [], "entities": [{"text": "precision", "start_pos": 114, "end_pos": 123, "type": "METRIC", "confidence": 0.9980456829071045}]}, {"text": "Since the goal is to extract instances and not mentions, we are quite willing to miss a particular sentence containing an instance of a target relation -if the instance can be found elsewhere.", "labels": [], "entities": []}, {"text": "In contrast, the classical IE systems extract mentions of entities and relations from the input documents.", "labels": [], "entities": []}, {"text": "This difference in goals leads to different ways of measuring the performance of the systems.", "labels": [], "entities": []}, {"text": "The rest of the paper is organized as follows: in Section 2 we present the related work.", "labels": [], "entities": []}, {"text": "In Section 3 we outline the general design principles of URES and the architecture of the system and then describe the different components of URES in details while giving examples to the input and output of each component.", "labels": [], "entities": []}, {"text": "In Section 4 we present our experimental evaluation and then wrap up with conclusions and suggestions for future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "In order to evaluate URES, we used five predicates Merger is symmetric predicate, in the sense that the order of its attributes does not matter.", "labels": [], "entities": [{"text": "URES", "start_pos": 21, "end_pos": 25, "type": "TASK", "confidence": 0.498680979013443}]}, {"text": "Acquisition is antisymmetric, and the other three are tested as bound in the first attribute.", "labels": [], "entities": [{"text": "Acquisition", "start_pos": 0, "end_pos": 11, "type": "METRIC", "confidence": 0.9771914482116699}]}, {"text": "For the bound predicates, we are only interested in the instances with particular prespecified values of the first attribute.", "labels": [], "entities": []}, {"text": "We test both modes of operation -using shallow parser and using TEG.", "labels": [], "entities": []}, {"text": "In the shallow parser mode, the Invention attribute of the InventorOf predicate is of type CommonNP, and all other attributes are of type ProperName.", "labels": [], "entities": []}, {"text": "In the TEG mode, the \"Company\" attributes are of type Organization, the \"Name\" attributes are of type Person, the \"City\" attribute is of type Location, and the \"Invention\" attribute is of type NounPhrase.", "labels": [], "entities": []}, {"text": "We evaluate our system by running it over a large set of sentences, counting the number of extracted instances, and manually checking a random sample of the instances to estimate precision.", "labels": [], "entities": [{"text": "precision", "start_pos": 179, "end_pos": 188, "type": "METRIC", "confidence": 0.9977972507476807}]}, {"text": "In order to be able to compare our results with KnowItAll-produced results, we used the set of sentences collected by the KnowItAll's crawler as if they were produced by the Sentence Gatherer.", "labels": [], "entities": []}, {"text": "The set of sentences for the Acquisition and Merger predicates contained around 900,000 sentences each.", "labels": [], "entities": [{"text": "Acquisition and Merger predicates", "start_pos": 29, "end_pos": 62, "type": "TASK", "confidence": 0.6294126212596893}]}, {"text": "For the other three predicates, each of the sentences contained one of the 100 predefined values for the first attribute.", "labels": [], "entities": []}, {"text": "The values (100 companies for CEO_Of, 100 cities for MayorOf, and 100 inventors for InventorOf) are entities collected by KnowItAll, half of them are frequent entities (>100,000 hits), and another half are rare (<10,000 hits).", "labels": [], "entities": []}, {"text": "In all of the experiments, we use ten top predicate instances extracted by KnowItAll for the relation seeds needed by the Pattern Learner.", "labels": [], "entities": []}, {"text": "The results of our experiments are summarized in the.", "labels": [], "entities": []}, {"text": "The table displays the number of extracted instances and estimated precision for three different URES setups, and for the KnowItAll manually built patterns.", "labels": [], "entities": [{"text": "precision", "start_pos": 67, "end_pos": 76, "type": "METRIC", "confidence": 0.9813204407691956}]}, {"text": "Three results are shown for each setup and each relation -extractions supported by at least one, at least two, and at least three different sentences, respectively.", "labels": [], "entities": [{"text": "relation -extractions", "start_pos": 48, "end_pos": 69, "type": "TASK", "confidence": 0.7011761466662089}]}, {"text": "Several conclusions can be drawn from the results.", "labels": [], "entities": []}, {"text": "First, both modes of URES significantly outperform KnowItAll in recall (number of extractions), while maintaining the same level of precision or improving it.", "labels": [], "entities": [{"text": "recall", "start_pos": 64, "end_pos": 70, "type": "METRIC", "confidence": 0.99921715259552}, {"text": "precision", "start_pos": 132, "end_pos": 141, "type": "METRIC", "confidence": 0.9985455274581909}]}, {"text": "This demonstrates utility of our pattern learning component.", "labels": [], "entities": []}, {"text": "Second, it is immediately apparent, that using only anchored patterns significantly improves precision of NP Tagger-based URES, though at a high cost in recall.", "labels": [], "entities": [{"text": "precision", "start_pos": 93, "end_pos": 102, "type": "METRIC", "confidence": 0.9993321299552917}, {"text": "NP Tagger-based URES", "start_pos": 106, "end_pos": 126, "type": "TASK", "confidence": 0.5408797562122345}, {"text": "recall", "start_pos": 153, "end_pos": 159, "type": "METRIC", "confidence": 0.9957879185676575}]}, {"text": "The NP tagger-based URES with anchored patterns performs somewhat worse than TEG-based URES on all predicates except InventorOf, as expected.", "labels": [], "entities": [{"text": "NP tagger-based URES", "start_pos": 4, "end_pos": 24, "type": "TASK", "confidence": 0.6829562683900198}]}, {"text": "For the InventorOf, TEG performs worse, because of overly simplistic implementation of the NounPhrase concept inside the TEG grammar -it is defined as a sequence of zero or more adjectives followed by a sequence of nouns.", "labels": [], "entities": []}, {"text": "Such definition often leads to only part of a correct invention name being extracted.", "labels": [], "entities": []}], "tableCaptions": []}