{"title": [{"text": "Event Extraction in a Plot Advice Agent", "labels": [], "entities": [{"text": "Event Extraction in a Plot Advice", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.8130734960238138}]}], "abstractContent": [{"text": "In this paper we present how the automatic extraction of events from text can be used to both classify narrative texts according to plot quality and produce advice in an interactive learning environment intended to help students with story writing.", "labels": [], "entities": [{"text": "story writing", "start_pos": 234, "end_pos": 247, "type": "TASK", "confidence": 0.7169859409332275}]}, {"text": "We focus on the story rewriting task, in which an exemplar story is read to the students and the students rewrite the story in their own words.", "labels": [], "entities": [{"text": "story rewriting task", "start_pos": 16, "end_pos": 36, "type": "TASK", "confidence": 0.7993031938870748}]}, {"text": "The system automatically extracts events from the raw text, formalized as a sequence of temporally ordered predicate-arguments.", "labels": [], "entities": []}, {"text": "These events are given to a machine-learner that produces a coarse-grained rating of the story.", "labels": [], "entities": []}, {"text": "The results of the machine-learner and the extracted events are then used to generate fine-grained advice for the students.", "labels": [], "entities": []}], "introductionContent": [{"text": "In this paper we investigate how features of a text discovered via automatic event extraction can be used in both natural language understanding and advice generation in the domain of narrative instruction.", "labels": [], "entities": [{"text": "natural language understanding", "start_pos": 114, "end_pos": 144, "type": "TASK", "confidence": 0.6396211882432302}, {"text": "advice generation", "start_pos": 149, "end_pos": 166, "type": "TASK", "confidence": 0.7344628870487213}]}, {"text": "The background application is a fully automated plot analysis agent to improve the writing of students could be used by current narrative tutoring systems).", "labels": [], "entities": [{"text": "plot analysis", "start_pos": 48, "end_pos": 61, "type": "TASK", "confidence": 0.7874455749988556}]}, {"text": "As shown by participatory design studies, teachers are interested in a plot analysis agent that can give online natural language advice and many students enjoy feedback from an automated agent.", "labels": [], "entities": []}, {"text": "We use automatic event extraction to create a storyindependent automated agent that can both analyze the plot of a story and generate appropriate advice.", "labels": [], "entities": [{"text": "event extraction", "start_pos": 17, "end_pos": 33, "type": "TASK", "confidence": 0.7520921528339386}]}], "datasetContent": [{"text": "The plot advice algorithm is run using a randomly selected corpus of 20 stories, 5 from each plot rating level using the \"Adventure Corpus.\"", "labels": [], "entities": [{"text": "plot advice", "start_pos": 4, "end_pos": 15, "type": "TASK", "confidence": 0.8585298359394073}, {"text": "Adventure Corpus", "start_pos": 122, "end_pos": 138, "type": "DATASET", "confidence": 0.9197531044483185}]}, {"text": "This produced matching advice for each story, fora total of 80 advice statements.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 3: Naive Bayes Confusion Matrix: \"Ad- venture\"", "labels": [], "entities": [{"text": "Naive Bayes Confusion", "start_pos": 10, "end_pos": 31, "type": "TASK", "confidence": 0.8923595348993937}]}, {"text": " Table 4: Naive Bayes Results: \"Adventure\"", "labels": [], "entities": [{"text": "Naive Bayes", "start_pos": 10, "end_pos": 21, "type": "TASK", "confidence": 0.9221992194652557}, {"text": "Adventure", "start_pos": 32, "end_pos": 41, "type": "DATASET", "confidence": 0.7329897880554199}]}, {"text": " Table 5: Advice Rating Results", "labels": [], "entities": [{"text": "Advice Rating", "start_pos": 10, "end_pos": 23, "type": "TASK", "confidence": 0.911391019821167}]}]}