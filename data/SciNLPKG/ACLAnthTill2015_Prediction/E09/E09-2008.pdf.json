{"title": [{"text": "Foma: a finite-state compiler and library", "labels": [], "entities": [{"text": "Foma", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8941140174865723}]}], "abstractContent": [{"text": "Foma is a compiler, programming language , and C library for constructing finite-state automata and transducers for various uses.", "labels": [], "entities": [{"text": "Foma", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9599562883377075}]}, {"text": "It has specific support for many natural language processing applications such as producing morphological and phonological analyzers.", "labels": [], "entities": []}, {"text": "Foma is largely compatible with the Xerox/PARC finite-state toolkit.", "labels": [], "entities": [{"text": "Foma", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8929429650306702}, {"text": "Xerox/PARC finite-state toolkit", "start_pos": 36, "end_pos": 67, "type": "DATASET", "confidence": 0.7360608339309692}]}, {"text": "It also embraces Uni-code fully and supports various different formats for specifying regular expressions: the Xerox/PARC format, a Perl-like format, and a mathematical format that takes advantage of the 'Mathematical Op-erators' Unicode block.", "labels": [], "entities": []}], "introductionContent": [{"text": "Foma is a finite-state compiler, programming language, and regular expression/finite-state library designed for multi-purpose use with explicit support for automata theoretic research, constructing lexical analyzers for programming languages, and building morphological/phonological analyzers, as well as spellchecking applications.", "labels": [], "entities": [{"text": "Foma", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9506663084030151}]}, {"text": "The compiler allows users to specify finite-state automata and transducers incrementally in a similar fashion to AT&T's fsm ( and, the Xerox/PARC finitestate toolkit and the SFST toolkit (.", "labels": [], "entities": []}, {"text": "One of Foma's design goals has been compatibility with the Xerox/PARC toolkit.", "labels": [], "entities": [{"text": "Xerox/PARC toolkit", "start_pos": 59, "end_pos": 77, "type": "DATASET", "confidence": 0.8269976079463959}]}, {"text": "Another goal has been to allow for the ability to work with n-tape automata and a formalism for expressing first-order logical constraints over regular languages and n-tapetransductions.", "labels": [], "entities": []}, {"text": "Foma is licensed under the GNU general public license: in keeping with traditions of free software, the distribution that includes the source code comes with a user manual and a library of examples.", "labels": [], "entities": [{"text": "Foma", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9517497420310974}]}, {"text": "The compiler and library are implemented in C and an API is available.", "labels": [], "entities": []}, {"text": "The API is in many ways similar to the standard C library <regex.h>, and has similar calling conventions.", "labels": [], "entities": []}, {"text": "However, all the low-level functions that operate directly on automata/transducers are also available (some 50+ functions), including regular expression primitives and extended functions as well as automata determinization and minimization algorithms.", "labels": [], "entities": []}, {"text": "These maybe useful for someone wanting to build a separate GUI or interface using just the existing lowlevel functions.", "labels": [], "entities": []}, {"text": "The API also contains, mainly for spell-checking purposes, functionality for finding words that match most closely (but not exactly) a path in an automaton.", "labels": [], "entities": []}, {"text": "This makes it straightforward to build spell-checkers from morphological transducers by simply extracting the range of the transduction and matching words approximately.", "labels": [], "entities": []}, {"text": "Unicode (UTF8) is fully supported and is in fact the only encoding accepted by Foma.", "labels": [], "entities": [{"text": "Unicode (UTF8)", "start_pos": 0, "end_pos": 14, "type": "DATASET", "confidence": 0.8472182303667068}, {"text": "Foma", "start_pos": 79, "end_pos": 83, "type": "DATASET", "confidence": 0.9772270917892456}]}, {"text": "It has been successfully compiled on Linux, Mac OS X, and Win32 operating systems, and is likely to be portable to other systems without much effort.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}