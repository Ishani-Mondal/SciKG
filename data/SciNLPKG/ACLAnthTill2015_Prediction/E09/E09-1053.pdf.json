{"title": [{"text": "Dependency trees and the strong generative capacity of CCG", "labels": [], "entities": []}], "abstractContent": [{"text": "We propose a novel algorithm for extracting dependencies from the derivations of a large fragment of CCG.", "labels": [], "entities": []}, {"text": "Unlike earlier proposals, our dependency structures are always tree-shaped.", "labels": [], "entities": []}, {"text": "We then use these dependency trees to compare the strong gen-erative capacities of CCG and TAG and obtain surprising results: Both formalisms generate the same languages of derivation trees-but the mechanisms they use to bring the words in these trees into a linear order are incomparable.", "labels": [], "entities": []}], "introductionContent": [{"text": "Combinatory Categorial Grammar (CCG;) is an increasingly popular grammar formalism.", "labels": [], "entities": [{"text": "Combinatory Categorial Grammar (CCG", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.7135777652263642}]}, {"text": "Next to being theoretically well-motivated due to its links to combinatory logic and categorial grammar, it is distinguished by the availability of efficient open-source parsers, annotated corpora), and mechanisms for wide-coverage semantic construction ().", "labels": [], "entities": [{"text": "wide-coverage semantic construction", "start_pos": 218, "end_pos": 253, "type": "TASK", "confidence": 0.6116784512996674}]}, {"text": "However, there are limits to our understanding of the formal properties of CCG and its relation to other grammar formalisms.", "labels": [], "entities": []}, {"text": "In particular, while it is well-known that CCG belongs to a family of mildly context-sensitive formalisms that all generate the same string languages, there are few results about the strong generative capacity of CCG.", "labels": [], "entities": []}, {"text": "This makes it difficult to gauge the similarities and differences between CCG and other formalisms in how they model linguistic phenomena such as scrambling and relative clauses, and hampers the transfer of algorithms from one formalism to another.", "labels": [], "entities": []}, {"text": "In this paper, we propose anew method for deriving a dependency tree from a CCG derivation tree for PF-CCG, a large fragment of CCG.", "labels": [], "entities": []}, {"text": "We then explore the strong generative capacity of PF-CCG in terms of dependency trees.", "labels": [], "entities": []}, {"text": "In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG;) and Linear Context-Free Rewrite Systems (LCFRS;).", "labels": [], "entities": []}, {"text": "We show that if we only look at valencies and ignore word order, then the dependency trees induced by a PF-CCG grammar form a regular tree language, just as for TAG and LCFRS.", "labels": [], "entities": []}, {"text": "To our knowledge, this is the first time that the regularity of CCG's derivational structures has been exposed.", "labels": [], "entities": []}, {"text": "However, if we take the word order into account, then the classes of PF-CCG-induced and TAG-induced dependency trees are incomparable; in particular, CCG-induced dependency trees can be unboundedly non-projective in away that TAG-induced dependency trees cannot.", "labels": [], "entities": []}, {"text": "The fact that all our dependency structures are trees brings our approach inline with the emerging mainstream in dependency parsing and TAG derivation trees.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 113, "end_pos": 131, "type": "TASK", "confidence": 0.7914520502090454}, {"text": "TAG derivation trees", "start_pos": 136, "end_pos": 156, "type": "TASK", "confidence": 0.8967141310373942}]}, {"text": "The price we pay for restricting ourselves to trees is that we derive fewer dependencies than the more powerful approach by.", "labels": [], "entities": []}, {"text": "Indeed, we do not claim that our dependencies are linguistically meaningful beyond recording the way in which syntactic valencies are filled.", "labels": [], "entities": []}, {"text": "However, we show that our dependency trees are still informative enough to reconstruct the semantic representations.", "labels": [], "entities": []}, {"text": "The paper is structured as follows.", "labels": [], "entities": []}, {"text": "In Section 2, we introduce CCG and the fragment PF-CCG that we consider in this paper, and compare our contribution to earlier research.", "labels": [], "entities": []}, {"text": "In Section 3, we then show how to read off a dependency tree from a CCG derivation.", "labels": [], "entities": []}, {"text": "Finally, we explore the strong generative capacity of CCG in Section 4 and conclude with ideas for future work.", "labels": [], "entities": [{"text": "generative", "start_pos": 31, "end_pos": 41, "type": "TASK", "confidence": 0.9623423218727112}]}], "datasetContent": [], "tableCaptions": []}