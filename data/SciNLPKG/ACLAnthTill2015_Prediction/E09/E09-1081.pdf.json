{"title": [{"text": "A General, Abstract Model of Incremental Dialogue Processing", "labels": [], "entities": [{"text": "Incremental Dialogue Processing", "start_pos": 29, "end_pos": 60, "type": "TASK", "confidence": 0.7446324825286865}]}], "abstractContent": [{"text": "We present a general model and conceptual framework for specifying architec-tures for incremental processing in dialogue systems, in particular with respect to the topology of the network of modules that makeup the system, the way information flows through this network, how information increments are 'packaged', and how these increments are processed by the modules.", "labels": [], "entities": []}, {"text": "This model enables the precise specification of incremental systems and hence facilitates detailed comparisons between systems, as well as giving guidance on designing new systems.", "labels": [], "entities": []}], "introductionContent": [{"text": "Dialogue processing is, by its very nature, incremental.", "labels": [], "entities": [{"text": "Dialogue processing", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8827541470527649}]}, {"text": "No dialogue agent (artificial or natural) processes whole dialogues, if only for the simple reason that dialogues are created incrementally, by participants taking turns.", "labels": [], "entities": []}, {"text": "At this level, most current implemented dialogue systems are incremental: they process user utterances as a whole and produce their response utterances as a whole.", "labels": [], "entities": []}, {"text": "Incremental processing, as the term is commonly used, means more than this, however, namely that processing starts before the input is complete (e.g.,).", "labels": [], "entities": [{"text": "Incremental processing", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.7738703191280365}]}, {"text": "Incremental systems hence are those where \"Each processing component will be triggered into activity by a minimal amount of its characteristic input\".", "labels": [], "entities": []}, {"text": "If we assume that the characteristic input of a dialogue system is the utterance (see) for an attempt to define this unit), we would expect an incremental system to work on units smaller than utterances.", "labels": [], "entities": []}, {"text": "Our aim in the work presented here is to describe and give names to the options available to designers of incremental systems.", "labels": [], "entities": []}, {"text": "We define some abstract data types, some abstract methods that are applicable to them, and a range of possible constraints on processing modules.", "labels": [], "entities": []}, {"text": "The notions introduced here allow the (abstract) specification of a wide range of different systems, from nonincremental pipelines to fully incremental, asynchronous, parallel, predictive systems, thus making it possible to be explicit about similarities and differences between systems.", "labels": [], "entities": []}, {"text": "We believe that this will be of great use in the future development of such systems, in that it makes clear the choices and trade-offs one can make.", "labels": [], "entities": []}, {"text": "While we sketch our work on one such system, our main focus here is on the conceptual framework.", "labels": [], "entities": []}, {"text": "What we are not doing here is to argue for one particular 'best architecture'-what this is depends on the particular aims of an implementation/model and on more low-level technical considerations (e.g., availability of processing modules).", "labels": [], "entities": []}, {"text": "In the next section, we give some examples of differences in system architectures that we want to capture, with respect to the topology of the network of modules that makeup the system, the way information flows through this network and how the modules process information, in particular how they deal with incrementality.", "labels": [], "entities": []}, {"text": "In Section 3, we present the abstract model that underlies the system specifications, of which we give an example in Section 4.", "labels": [], "entities": []}, {"text": "We close with a brief discussion of related work.", "labels": [], "entities": []}, {"text": "shows three examples of module networks, representations of systems in terms of their component modules and the connections between them.", "labels": [], "entities": []}, {"text": "Modules are represented by boxes, and connections by arrows indicating the path and the di-rection of information flow.", "labels": [], "entities": []}, {"text": "Arrows not coming from or going to modules represent the global input(s) and output(s) to and from the system.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}