{"title": [{"text": "The complexity of finding the maximum spanning DAG and other restrictions for DAG parsing of natural language", "labels": [], "entities": [{"text": "DAG parsing", "start_pos": 78, "end_pos": 89, "type": "TASK", "confidence": 0.7419133484363556}]}], "abstractContent": [{"text": "Recently, there has been renewed interest in semantic dependency parsing, among which one of the paradigms focuses on parsing directed acyclic graphs (DAGs).", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 45, "end_pos": 72, "type": "TASK", "confidence": 0.7277713815371195}, {"text": "parsing directed acyclic graphs (DAGs)", "start_pos": 118, "end_pos": 156, "type": "TASK", "confidence": 0.8673555340085711}]}, {"text": "Consideration of the decoding problem in natural language semantic dependency parsing as finding a maximum spanning DAG of a weighted directed graph carries many complexities.", "labels": [], "entities": [{"text": "natural language semantic dependency parsing", "start_pos": 41, "end_pos": 85, "type": "TASK", "confidence": 0.6288147568702698}]}, {"text": "In particular, the computational complexity (and approximability) of the problem has not been addressed in the literature to date.", "labels": [], "entities": []}, {"text": "This paper helps to fill this gap, showing that this general problem is APX-hard, and is NP-hard even under the planar restriction, in the graph-theoretic sense.", "labels": [], "entities": []}, {"text": "On the other hand, we show that under the restriction of projectivity, the problem has a straightforward O(n 3) algorithm.", "labels": [], "entities": []}, {"text": "We also give some empirical evidence of the algorithmic importance of these graph restrictions, on data from the SemEval 2014 task 8 on Broad Coverage Semantic Dependency Parsing.", "labels": [], "entities": [{"text": "SemEval 2014 task 8 on Broad Coverage Semantic Dependency Parsing", "start_pos": 113, "end_pos": 178, "type": "TASK", "confidence": 0.744191512465477}]}], "introductionContent": [{"text": "Consideration of the decoding problem in natural language semantic dependency parsing as finding a maximum spanning DAG of a weighted directed graph carries many complexities that have not been addressed in the literature to date.", "labels": [], "entities": [{"text": "natural language semantic dependency parsing", "start_pos": 41, "end_pos": 85, "type": "TASK", "confidence": 0.6196484446525574}]}, {"text": "Amongst these are the problem's computational complexity (and its approximability).", "labels": [], "entities": []}, {"text": "The decoding problem for semantic dependency parsing was first introduced as the maximum spanning directed acyclic graph problem (MSDAG) by, where it is stated to be NP-hard.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 25, "end_pos": 52, "type": "TASK", "confidence": 0.7122735182444254}]}, {"text": "The MSDAG problem asks for the highest weighted spanning sub-DAG of an input weighted digraph.", "labels": [], "entities": []}, {"text": "In this paper, we explain the APX-hardness of MSDAG, by relating it to the almost identical minimum weighted feedback arc set and maximum weighted acyclic subgraph problems.", "labels": [], "entities": [{"text": "APX-hardness", "start_pos": 30, "end_pos": 42, "type": "METRIC", "confidence": 0.7290970683097839}]}, {"text": "The proof of MSDAG's APX-hardness seems to discourage its use for decoding in semantic dependency parsing.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 78, "end_pos": 105, "type": "TASK", "confidence": 0.7030715147654215}]}, {"text": "However, unlike in syntactic dependency (tree) parse decoding, where projective decoding given by's algorithm has a slightly higher computational complexity (O(n 3 )) than the nonprojective (Tarjan) maximum spanning tree algorithm (O(n 2 ))), finding the maximum spanning projective dependency DAG is tractable and can be found in time O(n 3 ), contrary to its APX-hard non-projective counterpart.", "labels": [], "entities": [{"text": "syntactic dependency (tree) parse decoding", "start_pos": 19, "end_pos": 61, "type": "TASK", "confidence": 0.6766272783279419}]}, {"text": "Projective MSDAG has been referred to in the semantic dependency parsing literature as \"planar MSDAG\", which is an unfortunate mismatch with long-established graph theoretical terminology, that we need in this paper.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 45, "end_pos": 72, "type": "TASK", "confidence": 0.6293231248855591}]}, {"text": "As we discuss below, the planar MSDAG problem is in fact NP-hard, where \"planar\" is used in the graph theoretical sense.", "labels": [], "entities": []}, {"text": "We generalise the definition of projectivity from tree models of syntax theory, which forbids crossing edges, to digraphs.", "labels": [], "entities": []}, {"text": "The projectivity restriction itself has not been linguistically motivated to date.", "labels": [], "entities": []}, {"text": "However, an efficient exact algorithm for this restriction would pose a starting point for various relaxations of the definition (also known as mild non-projectivity) that reflect linguistic description of the data, as has been done for the Eisner algorithm (in for example).", "labels": [], "entities": []}, {"text": "This projectivity restriction has been inherent in transition-based approaches to semantic dependency parsing (for example, in), without any study of the complexity nor proof of the power of the automaton models in recognising all projective DAGs.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 82, "end_pos": 109, "type": "TASK", "confidence": 0.6362893482049307}]}, {"text": "So, in terms of computational efficiency, we provide theoretical justification for the already used restriction of projectivity in DAG parsing, exhibiting a dynamic programming algorithm for this task, which runs in polynomial time.", "labels": [], "entities": [{"text": "DAG parsing", "start_pos": 131, "end_pos": 142, "type": "TASK", "confidence": 0.808153510093689}]}, {"text": "Previous automaton approaches to DAG parsing can roughly be separated into two camps: one similar to, which assumes projectivity of graphs in the data and parses without carrying out any transformation to relax the constraint of projectivity, and another similar to (, which attempts (online) to find a re-ordering of the words in the sentence such that the resulting graph is projective.", "labels": [], "entities": [{"text": "DAG parsing", "start_pos": 33, "end_pos": 44, "type": "TASK", "confidence": 0.9518211483955383}]}, {"text": "The latter approach assumes, as we will explain, precisely outerplanarity of the graphs, which, it turns out, is also NP-hard (Cf. \u00a72 and \u00a77).", "labels": [], "entities": []}, {"text": "With respect to the data that we consider here, it turns out that the assumption of graph outerplanarity is well represented (almost all graphs among three data sets being outerplanar), whereas the percentage of projective graphs differs greatly from one dataset to another (from 57% to 84%, Cf. Section 5).", "labels": [], "entities": []}, {"text": "The projective MSDAG algorithm presented here is a first-order decoding algorithm, and empirical research on semantic parsing seems to have already gone beyond this (for example, in); moreover, first-order decoding using MSDAG in general seems not to be appropriate, though the empirical work presented by on digraph decoding using a second order model suggests the relevance of higher-order DAG decoding in semantic dependency parsing.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 109, "end_pos": 125, "type": "TASK", "confidence": 0.7652489244937897}, {"text": "semantic dependency parsing", "start_pos": 408, "end_pos": 435, "type": "TASK", "confidence": 0.6897927721341451}]}, {"text": "Manufacturing higher-order parsing algorithms in the sense of from the tree decoding literature, based on the algorithm presented here is straightforward.", "labels": [], "entities": []}, {"text": "And we believe that it is these latter algorithms, rather, that would provide the basis for empirical studies based on the generally theoretical research presented here.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Percentage of projective, planar, and outerplanar  DAGs in the data.", "labels": [], "entities": []}]}