{"title": [{"text": "USING %-CALCULUS TO REPRESENT MF~kNINGS IN LOGIC GRAMMARS*", "labels": [], "entities": [{"text": "USING %-CALCULUS TO REPRESENT MF~kNINGS IN LOGIC GRAMMARS", "start_pos": 0, "end_pos": 57, "type": "METRIC", "confidence": 0.6885985054753043}]}], "abstractContent": [{"text": "This paper descrlbes how meanings are represented in a semantic grammar fora fragment of English in the logic programming language Prolog.", "labels": [], "entities": []}, {"text": "The conventions of Definite Clause Grammars are used.", "labels": [], "entities": []}, {"text": "Previous work on DCGs with a semantic component has used essentially first-order formulas for representing meanings.", "labels": [], "entities": []}, {"text": "The system described here uses formulas of the typed ~-calculus.", "labels": [], "entities": []}, {"text": "The first section discusses general issues concerning the use of first-order logic or the h-calculus to represent meanings, The second section describes how h-calculus meaning representations can be constructed and manipulated directly in Prolog.", "labels": [], "entities": [{"text": "Prolog", "start_pos": 239, "end_pos": 245, "type": "DATASET", "confidence": 0.9581320285797119}]}, {"text": "This 'programmed' representation motivates a suggestion, discussed in the third section, for an extension to Prolog so that the language itself would include a mechanism for handling the ~-formulas directly.", "labels": [], "entities": [{"text": "Prolog", "start_pos": 109, "end_pos": 115, "type": "DATASET", "confidence": 0.9157758951187134}]}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}