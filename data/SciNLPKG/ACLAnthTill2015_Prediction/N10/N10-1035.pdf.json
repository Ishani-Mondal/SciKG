{"title": [{"text": "Efficient Parsing of Well-Nested Linear Context-Free Rewriting Systems", "labels": [], "entities": [{"text": "Efficient Parsing of Well-Nested Linear Context-Free Rewriting", "start_pos": 0, "end_pos": 62, "type": "TASK", "confidence": 0.5748878759997231}]}], "abstractContent": [{"text": "The use of well-nested linear context-free rewriting systems has been empirically motivated for modeling of the syntax of languages with discontinuous constituents or relatively free word order.", "labels": [], "entities": []}, {"text": "We present a chart-based parsing algorithm that asymptotically improves the known running time upper bound for this class of rewriting systems.", "labels": [], "entities": []}, {"text": "Our result is obtained through a linear space construction of a binary normal form for the grammar at hand.", "labels": [], "entities": []}], "introductionContent": [{"text": "Since its earliest years, one of the main goals of computational linguistics has been the modeling of natural language syntax by means of formal grammars.", "labels": [], "entities": [{"text": "computational linguistics", "start_pos": 51, "end_pos": 76, "type": "TASK", "confidence": 0.7578092515468597}]}, {"text": "Following results by and, special attention has been given to formalisms that enlarge the generative power of context-free grammars, but still remain below the full generative power of context-sensitive grammars.", "labels": [], "entities": []}, {"text": "On this line of investigation, mildly context-sensitive grammar formalisms have been introduced, including, among several others, the tree adjoining grammars (TAGs) of.", "labels": [], "entities": []}, {"text": "Linear context-free rewriting system (LCFRS), introduced by, is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases.", "labels": [], "entities": [{"text": "Linear context-free rewriting system (LCFRS)", "start_pos": 0, "end_pos": 44, "type": "TASK", "confidence": 0.671359121799469}]}, {"text": "This feature has been used to model phrase structure treebanks with discontinuous constituents, as well as to map non-projective dependency trees into discontinuous phrase structures ( ).", "labels": [], "entities": []}, {"text": "Informally, in an LCFRS G, each nonterminal can generate string tuples with a fixed number of components.", "labels": [], "entities": []}, {"text": "The fan-out of G is defined as the maximum number of tuple components generated by G. During a derivation of an LCFRS, tuple components generated by the nonterminals in the right-hand side of a production are concatenated to form new tuples, possibly adding some terminal symbols.", "labels": [], "entities": []}, {"text": "The only restriction applying to these generalized concatenation operations is linearity, that is, components cannot be duplicated or deleted.", "labels": [], "entities": []}, {"text": "The freedom in the rearrangement of components has specific consequences in terms of the computational and descriptional complexity of LCFRS.", "labels": [], "entities": []}, {"text": "Even for grammars with bounded fan-out, the universal recognition problem is NP-hard, and these systems lack Chomsky-like normal forms for fixed fan-out) that are especially convenient in tabular parsing.", "labels": [], "entities": [{"text": "universal recognition", "start_pos": 44, "end_pos": 65, "type": "TASK", "confidence": 0.7153540253639221}, {"text": "tabular parsing", "start_pos": 188, "end_pos": 203, "type": "TASK", "confidence": 0.8052640855312347}]}, {"text": "This is in contrast with other mildly context-sensitive formalisms, and TAG in particular: TAGs can be parsed in polynomial time both with respect to grammar size and string size, and they can be cast in normal forms having binary derivation trees only.", "labels": [], "entities": []}, {"text": "It has recently been argued that LCFRS might be too powerful for modeling languages with discontinuous constituents or with relatively free word order, and that additional restrictions on the rearrangement of components might be needed.", "labels": [], "entities": []}, {"text": "More specifically, analyses of both dependency and constituency treebanks ( have shown that rearrangements of argument tuples almost always satisfy the so-called well-nestedness condition, a generalization of the standard condition on balanced brackets.", "labels": [], "entities": []}, {"text": "This condition states that any two components x 1 , x 2 of some tuple will never be composed with any two components y 1 , y 2 of some other tuple in such away that a 'crossing' configuration is realized.", "labels": [], "entities": []}, {"text": "In this paper, we contribute to a better understanding of the formal properties of well-nested LCFRS.", "labels": [], "entities": []}, {"text": "We show that, when fan-out is bounded by any integer \u03d5 \u2265 1, these systems can always be transformed, in an efficient way, into a specific normal form with no more than two nonterminals in their productions' right-hand sides.", "labels": [], "entities": []}, {"text": "On the basis of this result, we then develop an efficient parsing algorithm for wellnested LCFRS, running in time O(\u03d5 \u00b7 |G| \u00b7 |w| 2\u03d5+2 ), where G and ware the input grammar and string, respectively.", "labels": [], "entities": []}, {"text": "Well-nested LCFRS with fan-out \u03d5 = 2 are weakly equivalent to TAG, and our complexity result reduces to the well-known upper bound O(|G| \u00b7 |w| 6 ) for this class.", "labels": [], "entities": [{"text": "TAG", "start_pos": 62, "end_pos": 65, "type": "METRIC", "confidence": 0.614177405834198}, {"text": "complexity", "start_pos": 75, "end_pos": 85, "type": "METRIC", "confidence": 0.9716934561729431}, {"text": "O", "start_pos": 131, "end_pos": 132, "type": "METRIC", "confidence": 0.980048656463623}]}, {"text": "For \u03d5 > 2, our upper bound is asymptotically better than the one obtained from existing parsing algorithms for general LCFRS or equivalent formalisms (.", "labels": [], "entities": []}, {"text": "Well-nested LCFRS are generatively equivalent to (among others) coupled context-free grammars (CCFG), introduced by.", "labels": [], "entities": []}, {"text": "These authors also provide a normal form and develop a parsing algorithm for CCFGs.", "labels": [], "entities": []}, {"text": "One difference with respect to our result is that the normal form for CCFGs allows more than two nonterminals to appear in the right-hand side of a production, even though no nonterminal may contribute more than two tuple components.", "labels": [], "entities": []}, {"text": "Also, the construction in) results in a blow-up of the grammar that is exponential in its fan-out, and the parsing algorithm that is derived runs in time O(4 \u03d5 \u00b7 |G| \u00b7 |w| 2\u03d5+2 ).", "labels": [], "entities": []}, {"text": "Our result is therefore a considerable asymptotic improvement over the CCFG result, both with respect to the normal form construction and the parsing efficiency.", "labels": [], "entities": [{"text": "parsing", "start_pos": 142, "end_pos": 149, "type": "TASK", "confidence": 0.9684417843818665}]}, {"text": "Finally, under a practical perspective, our parser is a simple chart-based algorithm, while the algorithm in) involves two passes and is considerably more complex to analyze and to implement than ours.", "labels": [], "entities": []}, {"text": "Kanazawa and Salvati (2010) mention a normal form for well-nested multiple context-free grammars.", "labels": [], "entities": []}, {"text": "Structure In Section 2, we introduce LCFRS and the class of well-nested LCFRS that is the focus of this paper.", "labels": [], "entities": []}, {"text": "In Section 3, we discuss the parsing complexity of LCFRS, and show why grammars using our normal form can be parsed efficiently.", "labels": [], "entities": []}, {"text": "Section 4 presents the transformation of a well-nested LCFRS into the normal form.", "labels": [], "entities": []}, {"text": "Section 5 concludes the paper.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}