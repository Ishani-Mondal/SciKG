{"title": [], "abstractContent": [{"text": "A variety of query systems have been developed for interrogating parsed corpora, or tree-banks.", "labels": [], "entities": []}, {"text": "With the arrival of efficient, wide-coverage parsers, it is feasible to create very large databases of trees.", "labels": [], "entities": []}, {"text": "However, existing approaches that use in-memory search, or rela-tional or XML database technologies, do not scale up.", "labels": [], "entities": []}, {"text": "We describe a method for storage, indexing, and query of treebanks that uses an information retrieval engine.", "labels": [], "entities": []}, {"text": "Several experiments with a large treebank demonstrate excellent scaling characteristics fora wide range of query types.", "labels": [], "entities": []}, {"text": "This work facilitates the cu-ration of much larger treebanks, and enables them to be used effectively in a variety of scientific and engineering tasks.", "labels": [], "entities": []}], "introductionContent": [{"text": "The problem of representing and querying linguistic annotations has been an active area of research for several years.", "labels": [], "entities": [{"text": "representing and querying linguistic annotations", "start_pos": 15, "end_pos": 63, "type": "TASK", "confidence": 0.7765890479087829}]}, {"text": "Much of the work has grown from efforts to curate large databases of annotated text such as treebanks, for use in developing and testing language technologies.", "labels": [], "entities": []}, {"text": "At least a dozen linguistic tree query languages have been developed for interrogating treebanks (see \u00a72).", "labels": [], "entities": []}, {"text": "While high quality syntactic parsers are able to efficiently annotate large quantities of English text, existing approaches to query do notwork on the same scale.", "labels": [], "entities": []}, {"text": "Many existing systems load the entire corpus into memory and check a user-supplied query against every tree.", "labels": [], "entities": []}, {"text": "Others avoid the memory limitation, and use relational or XML database systems.", "labels": [], "entities": []}, {"text": "Although these have built-in support for indexes, they do not scale up either ().", "labels": [], "entities": []}, {"text": "The ability to interrogate large collections of parsed text has important practical applications.", "labels": [], "entities": [{"text": "interrogate large collections of parsed text", "start_pos": 15, "end_pos": 59, "type": "TASK", "confidence": 0.856441487868627}]}, {"text": "First, it opens the way to anew kind of information retrieval (IR) that is sensitive to syntactic information, permitting users to do more focussed search.", "labels": [], "entities": [{"text": "information retrieval (IR)", "start_pos": 40, "end_pos": 66, "type": "TASK", "confidence": 0.8506386518478394}]}, {"text": "At the simplest level, an ambiguous query term like wind or park could be disambiguated with the help of a POS tag (e.g. wind/N, park/V).", "labels": [], "entities": []}, {"text": "(Existing IR engines already support query with part-of-speech tags).", "labels": [], "entities": []}, {"text": "More complex queries could stipulate the syntactic category of apple is in subject position.", "labels": [], "entities": []}, {"text": "A second benefit of large scale tree query is for natural language processing.", "labels": [], "entities": [{"text": "natural language processing", "start_pos": 50, "end_pos": 77, "type": "TASK", "confidence": 0.6346695721149445}]}, {"text": "For example, we might compute the likelihood that a given noun appears as the agent or patient of a verb, as a measure of animacy.", "labels": [], "entities": []}, {"text": "We can use features derived from syntactic trees in order to support semantic role labeling, language modeling, and information extraction.", "labels": [], "entities": [{"text": "semantic role labeling", "start_pos": 69, "end_pos": 91, "type": "TASK", "confidence": 0.6794463992118835}, {"text": "language modeling", "start_pos": 93, "end_pos": 110, "type": "TASK", "confidence": 0.7531573474407196}, {"text": "information extraction", "start_pos": 116, "end_pos": 138, "type": "TASK", "confidence": 0.8735247254371643}]}, {"text": "A further benefit for natural language processing, though not yet realized, is fora treebank and query engine to provide the underlying storage and retrieval fora variety of linguistic applications.", "labels": [], "entities": []}, {"text": "Just as a relational database is present inmost business applications, providing reliable and efficient access to relational data, such a system would act as a repository of annotated texts, and expose an expressive API to client applications.", "labels": [], "entities": []}, {"text": "A third benefit of large scale tree query is to support syntactic investigations, e.g. for develop-ing syntactic theories or preparing materials for language learners.", "labels": [], "entities": []}, {"text": "Published treebanks will usually not attest particular words in the context of some infrequent construction, to the detriment of syntactic studies that make predictions about such combinations, and language learners wanting to see instances of some construction involving words from some specialized topic.", "labels": [], "entities": []}, {"text": "A much larger treebank alleviates these problems.", "labels": [], "entities": []}, {"text": "To improve recall performance, multiple parses fora given sentence could be stored (possibly derived from different parsers).", "labels": [], "entities": [{"text": "recall", "start_pos": 11, "end_pos": 17, "type": "METRIC", "confidence": 0.99189293384552}]}, {"text": "A fourth benefit for large scale tree query is to support the curation of treebanks, a major enterprise in its own right.", "labels": [], "entities": [{"text": "large scale tree query", "start_pos": 21, "end_pos": 43, "type": "TASK", "confidence": 0.5889698788523674}]}, {"text": "Manual selection and correction of automatically generated parse trees is a substantial part of the task of preparing a treebank.", "labels": [], "entities": []}, {"text": "At the point of making such decisions, it is often helpful for an annotator to view existing annotations of a given construction which have already been manually validated ().", "labels": [], "entities": []}, {"text": "Occasionally, an earlier annotation decision may need to be reconsidered in the light of new examples, leading to further queries and to corrections that are spread across the whole corpus.", "labels": [], "entities": [{"text": "corrections", "start_pos": 137, "end_pos": 148, "type": "METRIC", "confidence": 0.9488507509231567}]}, {"text": "This paper explores anew methods for scaling up tree query using an IR engine.", "labels": [], "entities": []}, {"text": "In \u00a72 we describe existing tree query systems, elaborating on the design decisions, and on key aspects of their implementation and performance.", "labels": [], "entities": []}, {"text": "In \u00a73 we describe a method for indexing trees using an IR engine, and discuss the details of our open source implementation.", "labels": [], "entities": []}, {"text": "In \u00a74 we report results from a variety of experiments involving two data collections.", "labels": [], "entities": []}, {"text": "The first collection contains of 5.5 million parsed trees, two orders of magnitude larger than those used by existing tree query systems, while the second collection contains 26.5 million trees.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Execution times (in seconds) for queries of varying selectivity", "labels": [], "entities": [{"text": "Execution", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9454978108406067}]}, {"text": " Table 3: Comparison of TGrep2 and IR Engine cold start  query times (seconds)", "labels": [], "entities": []}]}