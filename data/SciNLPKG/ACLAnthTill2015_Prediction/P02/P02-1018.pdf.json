{"title": [{"text": "A simple pattern-matching algorithm for recovering empty nodes and their antecedents *", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper describes a simple pattern-matching algorithm for recovering empty nodes and identifying their co-indexed antecedents in phrase structure trees that do not contain this information.", "labels": [], "entities": []}, {"text": "The patterns are minimal connected tree fragments containing an empty node and all other nodes co-indexed with it.", "labels": [], "entities": []}, {"text": "This paper also proposes an evaluation procedure for empty node recovery procedures which is independent of most of the details of phrase structure, which makes it possible to compare the performance of empty node recovery on parser output with the empty node annotations in a gold-standard corpus.", "labels": [], "entities": [{"text": "empty node recovery", "start_pos": 53, "end_pos": 72, "type": "TASK", "confidence": 0.6918333768844604}]}, {"text": "Evaluating the algorithm on the output of Charniak's parser (Char-niak, 2000) and the Penn treebank (Mar-cus et al., 1993) shows that the pattern-matching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.", "labels": [], "entities": [{"text": "Penn treebank", "start_pos": 86, "end_pos": 99, "type": "DATASET", "confidence": 0.973876565694809}]}], "introductionContent": [{"text": "One of the main motivations for research on parsing is that syntactic structure provides important information for semantic interpretation; hence syntactic parsing is an important first step in a variety of useful tasks.", "labels": [], "entities": [{"text": "parsing", "start_pos": 44, "end_pos": 51, "type": "TASK", "confidence": 0.971105694770813}, {"text": "semantic interpretation", "start_pos": 115, "end_pos": 138, "type": "TASK", "confidence": 0.7516648173332214}, {"text": "syntactic parsing", "start_pos": 146, "end_pos": 163, "type": "TASK", "confidence": 0.7254158854484558}]}, {"text": "Broad coverage syntactic parsers with good performance have recently become available), but these typically produce as output a parse tree that only encodes local syntactic information, i.e., a tree that does not include any \"empty nodes\".", "labels": [], "entities": []}, {"text": "( discusses the recovery of one kind of empty node, viz., WH-traces).", "labels": [], "entities": []}, {"text": "This paper describes a simple patternmatching algorithm for post-processing the output of such parsers to add a wide variety of empty nodes to its parse trees.", "labels": [], "entities": []}, {"text": "Empty nodes encode additional information about non-local dependencies between words and phrases which is important for the interpretation of constructions such as WH-questions, relative clauses, etc.", "labels": [], "entities": []}, {"text": "1 For example, in the noun phrase the man Sam likes the fact the man is interpreted as the direct object of the verb likes is indicated in Penn treebank notation by empty nodes and coindexation as shown in Figure 1 (see the next section for an explanation of why likes is tagged VBZ t rather than the standard VBZ).", "labels": [], "entities": [{"text": "Penn treebank", "start_pos": 139, "end_pos": 152, "type": "DATASET", "confidence": 0.974552720785141}, {"text": "coindexation", "start_pos": 181, "end_pos": 193, "type": "METRIC", "confidence": 0.9794042110443115}, {"text": "VBZ", "start_pos": 310, "end_pos": 313, "type": "DATASET", "confidence": 0.8325071930885315}]}, {"text": "The broad-coverage statistical parsers just mentioned produce a simpler tree structure for such a relative clause that contains neither of the empty nodes just indicated.", "labels": [], "entities": []}, {"text": "Rather, they produce trees of the kind shown in.", "labels": [], "entities": []}, {"text": "Unlike the tree depicted in 1, this type of tree does not explicitly represent the relationship between likes and the man.", "labels": [], "entities": []}, {"text": "This paper presents an algorithm that takes as its input a tree without empty nodes of the kind shown There are other ways to represent this information that do not require empty nodes; however, information about non-local dependencies must be represented somehow in order to interpret these constructions.", "labels": [], "entities": []}, {"text": "in and modifies it by inserting empty nodes and coindexation to produce a the tree shown in Figure 1.", "labels": [], "entities": []}, {"text": "The algorithm is described in detail in section 2.", "labels": [], "entities": []}, {"text": "The standard Parseval precision and recall measures for evaluating parse accuracy do not measure the accuracy of empty node and antecedent recovery, but there is a fairly straightforward extension of them that can evaluate empty node and antecedent recovery, as described in section 3.", "labels": [], "entities": [{"text": "precision", "start_pos": 22, "end_pos": 31, "type": "METRIC", "confidence": 0.6701707243919373}, {"text": "recall", "start_pos": 36, "end_pos": 42, "type": "METRIC", "confidence": 0.9944233298301697}, {"text": "accuracy", "start_pos": 73, "end_pos": 81, "type": "METRIC", "confidence": 0.7740146517753601}, {"text": "accuracy", "start_pos": 101, "end_pos": 109, "type": "METRIC", "confidence": 0.9992020726203918}]}, {"text": "The rest of this section provides a brief introduction to empty nodes, especially as they are used in the Penn Treebank.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 106, "end_pos": 119, "type": "DATASET", "confidence": 0.9955122172832489}]}, {"text": "Non-local dependencies and displacement phenomena, such as Passive and WH-movement, have been a central topic of generative linguistics since its inception half a century ago.", "labels": [], "entities": [{"text": "generative linguistics", "start_pos": 113, "end_pos": 135, "type": "TASK", "confidence": 0.9856610894203186}]}, {"text": "However, current linguistic research focuses on explaining the possible non-local dependencies, and has little to say about how likely different kinds of dependencies are.", "labels": [], "entities": []}, {"text": "Many current linguistic theories of non-local dependencies are extremely complex, and would be difficult to apply with the kind of broad coverage described here.", "labels": [], "entities": []}, {"text": "Psycholinguists have also investigated certain kinds of non-local dependencies, and their theories of parsing preferences might serve as the basis for specialized algorithms for recovering certain kinds of non-local dependencies, such as WH dependencies.", "labels": [], "entities": [{"text": "parsing preferences", "start_pos": 102, "end_pos": 121, "type": "TASK", "confidence": 0.9010805189609528}]}, {"text": "All of these approaches require considerably more specialized linguitic knowledge than the pattern-matching algorithm described here.", "labels": [], "entities": []}, {"text": "This algorithm is both simple and general, and can serve as a benchmark against which more complex approaches can be evaluated.", "labels": [], "entities": []}, {"text": "The pattern-matching approach is not tied to any particular linguistic theory, but it does require a treebank training corpus from which the algorithm extracts its patterns.", "labels": [], "entities": []}, {"text": "We used sections 2-21 of the Penn Treebank as the training corpus; section 24 was used as the development corpus for experimentation and tuning, while the test corpus (section 23) was used exactly once (to obtain the results in section 3).", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 29, "end_pos": 42, "type": "DATASET", "confidence": 0.9837791621685028}]}, {"text": "Chapter 4 of the Penn Treebank tagging guidelines ( contains an extensive description of the kinds of empty nodes and the use of co-indexation in the Penn Treebank.", "labels": [], "entities": [{"text": "Penn Treebank tagging guidelines", "start_pos": 17, "end_pos": 49, "type": "DATASET", "confidence": 0.9465199857950211}, {"text": "Penn Treebank", "start_pos": 150, "end_pos": 163, "type": "DATASET", "confidence": 0.9955643713474274}]}, {"text": "contains summary statistics on the distribution of empty nodes in the Penn Treebank.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 70, "end_pos": 83, "type": "DATASET", "confidence": 0.9966468214988708}]}, {"text": "The entry with POS SBAR and no label refers to a \"compound\" type of empty structure labelled SBAR consisting of an empty complementizer and an empty (moved) S (thus SBAR is really a nonterminal label rather than apart of speech); atypical example is shown in.", "labels": [], "entities": []}, {"text": "As might be expected the distribution is highly skewed, with most of the empty node tokens belonging to just a few types.", "labels": [], "entities": []}, {"text": "Because of this, a system can provide good average performance on all empty nodes if it performs well on the most frequent types of empty nodes, and conversely, a system will perform poorly on average if it does not perform at least moderately well on the most common types of empty nodes, irrespective of how well it performs on more esoteric constructions.", "labels": [], "entities": []}], "datasetContent": [{"text": "The previous section described an algorithm for restoring empty nodes and co-indexing their antecedents.", "labels": [], "entities": []}, {"text": "This section describes two evaluation procedures for such algorithms.", "labels": [], "entities": []}, {"text": "The first, which measures the accuracy of empty node recovery but not co-indexation, is just the standard Parseval evaluation applied to empty nodes only, viz., precision and recall and scores derived from these.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 30, "end_pos": 38, "type": "METRIC", "confidence": 0.9993740916252136}, {"text": "empty node recovery", "start_pos": 42, "end_pos": 61, "type": "TASK", "confidence": 0.642709861199061}, {"text": "precision", "start_pos": 161, "end_pos": 170, "type": "METRIC", "confidence": 0.9995449185371399}, {"text": "recall", "start_pos": 175, "end_pos": 181, "type": "METRIC", "confidence": 0.9988839030265808}]}, {"text": "In this evaluation, each node is represented by a triple consisting of its category and its left and right string positions.", "labels": [], "entities": []}, {"text": "(Note that because empty nodes dominate the empty string, their left and right string positions of empty nodes are always identical).", "labels": [], "entities": []}, {"text": "Let G be the set of such empty node representations derived from the \"gold standard\" evaluation corpus and T the set of empty node representations: The most common empty node patterns found in the Penn Treebank training corpus.", "labels": [], "entities": [{"text": "Penn Treebank training corpus", "start_pos": 197, "end_pos": 226, "type": "DATASET", "confidence": 0.9877803474664688}]}, {"text": "The Count column is the number of times the pattern was found, and the Match column is an estimate of the number of times that this pattern matches some subtree in the training corpus during empty node recovery, as explained in the text.", "labels": [], "entities": [{"text": "Count", "start_pos": 4, "end_pos": 9, "type": "METRIC", "confidence": 0.9973168969154358}, {"text": "Match column", "start_pos": 71, "end_pos": 83, "type": "METRIC", "confidence": 0.9753304421901703}, {"text": "empty node recovery", "start_pos": 191, "end_pos": 210, "type": "TASK", "confidence": 0.6968262592951456}]}, {"text": "derived from the corpus to be evaluated.", "labels": [], "entities": []}, {"text": "Then as is standard, the precision P , recall Rand f-score fare calculated as follows: provides these measures for two different test corpora: (i) aversion of section 23 of the Penn Treebank from which empty nodes, indices and unary branching chains consisting of nodes of the same category were removed, and (ii) the trees produced by Charniak's parser on the strings of section 23).", "labels": [], "entities": [{"text": "precision P", "start_pos": 25, "end_pos": 36, "type": "METRIC", "confidence": 0.9248874485492706}, {"text": "recall", "start_pos": 39, "end_pos": 45, "type": "METRIC", "confidence": 0.9689826965332031}, {"text": "Penn Treebank", "start_pos": 177, "end_pos": 190, "type": "DATASET", "confidence": 0.9843921065330505}]}, {"text": "To evaluate co-indexation of empty nodes and their antecedents, we augment the representation of empty nodes as follows.", "labels": [], "entities": []}, {"text": "The augmented representation for empty nodes consists of the triple of category plus string positions as above, together with the set of triples of all of the non-empty nodes the empty node is co-indexed with.", "labels": [], "entities": []}, {"text": "(Usually this set of antecedents is either empty or contains a single node).", "labels": [], "entities": []}, {"text": "Precision, recall and f-score are defined for these augmented representations as before.", "labels": [], "entities": [{"text": "Precision", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.9957755208015442}, {"text": "recall", "start_pos": 11, "end_pos": 17, "type": "METRIC", "confidence": 0.998556911945343}, {"text": "f-score", "start_pos": 22, "end_pos": 29, "type": "METRIC", "confidence": 0.968906819820404}]}, {"text": "Note that this is a particularly stringent evaluation measure fora system including a parser, since it is necessary for the parser to produce a non-empty node of the correct category in the correct location to serve as an antecedent for the empty node.", "labels": [], "entities": []}, {"text": "provides these measures for the same two corpora described earlier.", "labels": [], "entities": []}, {"text": "In an attempt to devise an evaluation measure for empty node co-indexation that depends lesson syntactic structure we experimented with a modified augmented empty node representation in which each antecedent is represented by its head's category and location.", "labels": [], "entities": []}, {"text": "(The intuition behind this is that we do not want to penalize the empty node antecedentfinding algorithm if the parser misattaches modifiers to the antecedent).", "labels": [], "entities": []}, {"text": "In fact this head-based antecedent representation yields scores very similiar to those obtained using the phrase-based representation.", "labels": [], "entities": []}, {"text": "It seems that in the cases where the parser does not construct a phrase in the appropriate location to serve as the antecedent for an empty node, the syntactic structure is typically so distorted that either the pattern-matcher fails or the head-finding algorithm does not return the \"correct\" head either.: Evaluation of the empty node restoration procedure ignoring antecedents.", "labels": [], "entities": [{"text": "empty node restoration", "start_pos": 326, "end_pos": 348, "type": "TASK", "confidence": 0.7669283946355184}]}, {"text": "Individual results are reported for all types of empty node that occured more than 100 times in the \"gold standard\" corpus (section 23 of the Penn Treebank); these are ordered by frequency of occurence in the gold standard.", "labels": [], "entities": [{"text": "gold standard\" corpus", "start_pos": 101, "end_pos": 122, "type": "DATASET", "confidence": 0.8387339860200882}, {"text": "Penn Treebank)", "start_pos": 142, "end_pos": 156, "type": "DATASET", "confidence": 0.9307564695676168}, {"text": "gold standard", "start_pos": 209, "end_pos": 222, "type": "DATASET", "confidence": 0.858037531375885}]}, {"text": "Section 23 is a test corpus consisting of aversion of section 23 from which all empty nodes and indices were removed.", "labels": [], "entities": []}, {"text": "The parser output was produced by Charniak's parser).: Evaluation of the empty node restoration procedure including antecedent indexing, using the measure explained in the text.", "labels": [], "entities": [{"text": "empty node restoration", "start_pos": 73, "end_pos": 95, "type": "TASK", "confidence": 0.7198173403739929}]}, {"text": "Other details are the same as in.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: The distribution of the 10 most frequent types of empty nodes and their antecedents in sections 2- 21 of the Penn Treebank (there are approximately 64,000 empty nodes in total). The \"label\" column gives  the terminal label of the empty node, the \"POS\" column gives its preterminal label and the \"Antecedent\"  column gives the label of its antecedent. The entry with an SBAR POS and empty label corresponds to an  empty compound SBAR subtree, as explained in the text and", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 119, "end_pos": 132, "type": "DATASET", "confidence": 0.9959855079650879}]}, {"text": " Table 3: Evaluation of the empty node restoration procedure ignoring antecedents. Individual results are  reported for all types of empty node that occured more than 100 times in the \"gold standard\" corpus (sec- tion 23 of the Penn Treebank); these are ordered by frequency of occurence in the gold standard. Section 23  is a test corpus consisting of a version of section 23 from which all empty nodes and indices were removed.  The parser output was produced by Charniak's parser", "labels": [], "entities": [{"text": "empty node restoration", "start_pos": 28, "end_pos": 50, "type": "TASK", "confidence": 0.7091300090154012}, {"text": "gold standard\" corpus (sec- tion 23 of the Penn Treebank", "start_pos": 185, "end_pos": 241, "type": "DATASET", "confidence": 0.6697722581716684}]}, {"text": " Table 4: Evaluation of the empty node restoration procedure including antecedent indexing, using the mea- sure explained in the text. Other details are the same as in", "labels": [], "entities": [{"text": "empty node restoration", "start_pos": 28, "end_pos": 50, "type": "TASK", "confidence": 0.7462952931722006}]}]}