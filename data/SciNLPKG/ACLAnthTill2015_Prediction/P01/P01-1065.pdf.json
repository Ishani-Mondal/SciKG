{"title": [{"text": "A Generic Approach to Parallel Chart Parsing with an Application to LinGO", "labels": [], "entities": [{"text": "Parallel Chart Parsing", "start_pos": 22, "end_pos": 44, "type": "TASK", "confidence": 0.7552502552668253}, {"text": "LinGO", "start_pos": 68, "end_pos": 73, "type": "DATASET", "confidence": 0.8116260170936584}]}], "abstractContent": [{"text": "Multi-processor systems are becoming more commonplace and affordable.", "labels": [], "entities": []}, {"text": "Based on analyses of actual parsings, we argue that to exploit the capabilities of such machines , unification-based grammar parsers should distribute work at the level of individual unification operations.", "labels": [], "entities": [{"text": "unification-based grammar parsers", "start_pos": 99, "end_pos": 132, "type": "TASK", "confidence": 0.8478230436642965}]}, {"text": "We present a generic approach to parallel chart parsing that meets this requirement, and show that an implementation of this technique for LinGO achieves considerable speedups.", "labels": [], "entities": [{"text": "parallel chart parsing", "start_pos": 33, "end_pos": 55, "type": "TASK", "confidence": 0.619034061829249}, {"text": "LinGO", "start_pos": 139, "end_pos": 144, "type": "DATASET", "confidence": 0.7287359833717346}]}], "introductionContent": [{"text": "The increasing demand for accuracy and robustness for today's unification-based grammar parsers brings on an increasing demand for computing power.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 26, "end_pos": 34, "type": "METRIC", "confidence": 0.9986823201179504}, {"text": "unification-based grammar parsers", "start_pos": 62, "end_pos": 95, "type": "TASK", "confidence": 0.6780533989270529}]}, {"text": "In addition, as these systems are increasingly used in applications that require direct user interaction, e.g. webbased applications, responsiveness is of major concern.", "labels": [], "entities": []}, {"text": "In the meantime, small-scale desktop multiprocessor systems (e.g. dual or even quad Pentium machines) are becoming more commonplace and affordable.", "labels": [], "entities": []}, {"text": "In this paper we will show that exploiting the capabilities of these machines can speedup parsers considerably, and can be of major importance in achieving the required performance.", "labels": [], "entities": []}, {"text": "There are certain requirements the design of a parallel parser should meet.", "labels": [], "entities": []}, {"text": "Over the past years, many improvements to existing parsing techniques have boosted the performance of parsers by many factors).", "labels": [], "entities": [{"text": "parsing", "start_pos": 51, "end_pos": 58, "type": "TASK", "confidence": 0.9712076783180237}]}, {"text": "If a design of a parallel parser is tied too much to a particular approach to parsing, it maybe hard to incorporate such improvements as they become available.", "labels": [], "entities": [{"text": "parsing", "start_pos": 78, "end_pos": 85, "type": "TASK", "confidence": 0.9741989374160767}]}, {"text": "For this reason, a solution to parallel parsing should be as general as possible.", "labels": [], "entities": [{"text": "parallel parsing", "start_pos": 31, "end_pos": 47, "type": "TASK", "confidence": 0.714780330657959}]}, {"text": "One obvious way to ensure that optimizations for sequential parsers can be used in a parallel parser as well is to let a parallel parser mimic a sequential parser as much as possible.", "labels": [], "entities": []}, {"text": "This is basically the approach we will take.", "labels": [], "entities": []}, {"text": "The parser that we will present in this paper uses the LinGO grammar.", "labels": [], "entities": [{"text": "LinGO grammar", "start_pos": 55, "end_pos": 68, "type": "DATASET", "confidence": 0.9027964472770691}]}, {"text": "LinGO is an HPSG-based grammar which was developed at Stanford.", "labels": [], "entities": [{"text": "LinGO", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.9392517805099487}]}, {"text": "It is currently used by many research institutions.", "labels": [], "entities": []}, {"text": "This allows our results to be compared with that of other research groups.", "labels": [], "entities": []}, {"text": "In Section 2, we explore the possibilities for parallelism in natural language parsing by analyzing the computational structure of parsings.", "labels": [], "entities": [{"text": "natural language parsing", "start_pos": 62, "end_pos": 86, "type": "TASK", "confidence": 0.6751333872477213}]}, {"text": "Section 3 and 4 discuss respectively the design and the performance of our system.", "labels": [], "entities": []}, {"text": "Finally, we compare our work with other research on parallel parsing.", "labels": [], "entities": [{"text": "parallel parsing", "start_pos": 52, "end_pos": 68, "type": "TASK", "confidence": 0.6985809504985809}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Critical path analysis for type 1 and  type 2 task graphs (average and worst case).", "labels": [], "entities": [{"text": "Critical path analysis", "start_pos": 10, "end_pos": 32, "type": "TASK", "confidence": 0.6602973242600759}]}, {"text": " Table 2: Execution times for the fuse test  suite for various number of processors.", "labels": [], "entities": [{"text": "Execution", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9591928720474243}]}]}