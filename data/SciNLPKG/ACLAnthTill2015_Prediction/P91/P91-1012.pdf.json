{"title": [], "abstractContent": [{"text": "Two new parsing algorithms for context-free phrase structure grammars are presented which perform a bounded amount of processing per word per analysis path, independently of sentence length.", "labels": [], "entities": [{"text": "context-free phrase structure grammars", "start_pos": 31, "end_pos": 69, "type": "TASK", "confidence": 0.656352624297142}]}, {"text": "They are thus capable of parsing in real-time in a parallel implementation which forks processors in response to non-determinis-tic choice points.", "labels": [], "entities": [{"text": "parsing", "start_pos": 25, "end_pos": 32, "type": "TASK", "confidence": 0.9697404503822327}]}, {"text": "0. INTRODUCTION The work reported here grew out of our attempt to improve on the o (n 2) performance of the SIMD parallel parser described in (Thompson 1991).", "labels": [], "entities": [{"text": "INTRODUCTION", "start_pos": 3, "end_pos": 15, "type": "METRIC", "confidence": 0.9939466118812561}, {"text": "SIMD parallel parser", "start_pos": 108, "end_pos": 128, "type": "TASK", "confidence": 0.7891290982564291}]}, {"text": "Rather than start with a commitment to a specific SIMD architecture, as that work had, we agreed that the best place to start was with a more abstract architecture-independent consideration of the CF-PSG parsing problem-given arbitrary resources, what algorithms could one envisage which could recognise and/or parse atomic category phrase-structure grammars in o (n) ? In the end, two quite different approaches emerged.", "labels": [], "entities": [{"text": "CF-PSG parsing problem-given", "start_pos": 197, "end_pos": 225, "type": "TASK", "confidence": 0.7140810191631317}, {"text": "parse atomic category phrase-structure grammars", "start_pos": 311, "end_pos": 358, "type": "TASK", "confidence": 0.8183540821075439}]}, {"text": "One took as its starting point non-deterministic shift-reduce parsing, and sought to achieve linear (indeed real-time) complexity by performing a constant-time stepper word of the input.", "labels": [], "entities": []}, {"text": "The other took as its starting point tabular parsing (Earley, C KY), and sought to achieve linear complexity by performing a constant-time step for the identi-fication/construction of constituents of each length from 0 ton.", "labels": [], "entities": [{"text": "tabular parsing", "start_pos": 37, "end_pos": 52, "type": "TASK", "confidence": 0.8424912691116333}]}, {"text": "The latter route has been widely canvassed, although to our knowledge has not yet been implemented-see (Nijholt 1989, 90) for extensive references.", "labels": [], "entities": []}, {"text": "The former route, whereby real-time parsing is achieved by processor forking at non-deterministic choice points in an extended shill-reduce parser, is to our knowledge new.", "labels": [], "entities": []}, {"text": "In this paper we present outlines of two such parsers, which we call compose-reduce parsers.", "labels": [], "entities": []}, {"text": "L COMPOSE-Rk~nUCE PARSING Why couldn't a simple breadth-first chart parser achieve linear performance on an appropriate parallel system?", "labels": [], "entities": [{"text": "PARSING", "start_pos": 18, "end_pos": 25, "type": "METRIC", "confidence": 0.9423637986183167}]}, {"text": "If you provided enough processors to immediately process all agenda entries as they were created, would not this give the desired result?", "labels": [], "entities": []}, {"text": "No, because the processing of a single word might require many serialised 87", "labels": [], "entities": []}], "introductionContent": [{"text": "The work reported here grew out of our attempt to improve on the o (n 2) performance of the SIMD parallel parser described in.", "labels": [], "entities": [{"text": "SIMD parallel parser", "start_pos": 92, "end_pos": 112, "type": "TASK", "confidence": 0.8286198178927103}]}, {"text": "Rather than start with a commitment to a specific SIMD architecture, as that work had, we agreed that the best place to start was with a more abstract architecture-independent consideration of the CF-PSG parsing problem--given arbitrary resources, what algorithms could one envisage which could recognise and/or parse atomic category phrase-structure grammars in o (n) ? In the end, two quite different approaches emerged.", "labels": [], "entities": [{"text": "CF-PSG parsing", "start_pos": 197, "end_pos": 211, "type": "TASK", "confidence": 0.6286826133728027}, {"text": "parse atomic category phrase-structure grammars", "start_pos": 312, "end_pos": 359, "type": "TASK", "confidence": 0.820944321155548}]}, {"text": "One took as its starting point non-deterministic shift-reduce parsing, and sought to achieve linear (indeed real-time) complexity by performing a constant-time stepper word of the input.", "labels": [], "entities": []}, {"text": "The other took as its starting point tabular parsing, and sought to achieve linear complexity by performing a constant-time step for the identification/construction of constituents of each length from 0 ton.", "labels": [], "entities": [{"text": "tabular parsing", "start_pos": 37, "end_pos": 52, "type": "TASK", "confidence": 0.8990533947944641}, {"text": "identification/construction of constituents", "start_pos": 137, "end_pos": 180, "type": "TASK", "confidence": 0.8073180198669434}]}, {"text": "The latter route has been widely canvassed, although to our knowledge has not yet been implemented--see) for extensive references.", "labels": [], "entities": []}, {"text": "The former route, whereby real-time parsing is achieved by processor forking at non-deterministic choice points in an extended shill-reduce parser, is to our knowledge new.", "labels": [], "entities": []}, {"text": "In this paper we present outlines of two such parsers, which we call compose-reduce parsers.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}