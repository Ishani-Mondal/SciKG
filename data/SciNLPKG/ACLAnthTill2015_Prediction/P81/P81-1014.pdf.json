{"title": [{"text": "Language Production: the Source ofthe Dictionary", "labels": [], "entities": []}], "abstractContent": [{"text": "Ultimately in any natural language production system the largest amount of human effort will go into the construction of the dictionary: the database that associates objects and relations in the program's domain with the words and phrases that could be used to describe them.", "labels": [], "entities": []}, {"text": "This paper describes a technique for basing the dictionary directly on the semantic abstraction network used for the domain knowledge itself, taking advantage of the inheritance and specialization machanisms of a network formalism such as r,L-ON~ The technique creates eonsidcrable economies of scale, and makes possible the automatic description of individual objects according to their position in the semantic net.", "labels": [], "entities": []}, {"text": "Furthermore, because the process of deciding what properties to use in an object's description is now given over to a common procedure, we can write general-purpose rules to, for example, avoid redundancy or grammatically awkward constructionS.", "labels": [], "entities": []}, {"text": "Regardless of its design, every system for natural !anguage production begins by selecting objects and relations from the speaker's internal model of the world, and proceeds by choosing an English phrase to describe each selected item, combining them according to the properties of the phrases and the constraints of the language's grammar and rhetoric.", "labels": [], "entities": []}, {"text": "TO do this, the system must have a database of some sort, in which the objects it will talk about are somewhow associated with the appropriate word or phrase (or with procedures that will construct them).", "labels": [], "entities": []}, {"text": "1 will refer to such a database as a dictionary.", "labels": [], "entities": []}, {"text": "Evcry production system has a dictionary in one form or another, and its compilation is probably the single most tedious job that the human designer must perform.", "labels": [], "entities": []}, {"text": "typically every object and relation has been given its own individual \"lex\" property with the literal phrase to be used; no attempt was made to share criteria or sub-phrases between properties; and there was a tacit a~umtion that the phrase would have the right form and content in any of the contexts that the object will be mentioned.", "labels": [], "entities": [{"text": "tacit a~umtion", "start_pos": 210, "end_pos": 224, "type": "METRIC", "confidence": 0.6686656028032303}]}, {"text": "(For a review of this literature, see r~a .) However, dictionaries builtin this way become increasingly harder to maintain as programs become larger and their discourse more sophisticated.", "labels": [], "entities": []}, {"text": "We would like instead someway to de the extention of the dictionary direcdy to the extention of the program's knowledge base; then, as the knowledge base expands the dictionary will expand with it with only a minimum of additional cffort.", "labels": [], "entities": []}, {"text": "This paper describes a technique for adapting a semantic abstraction hierarchy of thc sort providcd by ~d~-ONE ~:1.] to function directly as a dictionary for my production system MUMIII.I~ [,q'~..", "labels": [], "entities": [{"text": "ONE", "start_pos": 107, "end_pos": 110, "type": "METRIC", "confidence": 0.9825165271759033}]}, {"text": "Its goal is largely expositional in the sense that while the technique is fully spocificd and prototypes have been run, many implementation questions remain to be explored and it is thus premature to prescnt it as a polished system for others to use; instead, this paper is intended as a presentation of the issues-potcntial economicw-that the technique is addressing.", "labels": [], "entities": []}, {"text": "In particular, given the intimate relationship between the choice of architecture in the network formalism used and the ability uf the dictionary to incorporate linguistically useful generalizations and utilities, this presentation may suggest additional criteria for network design, namely to make it easier to talk about the objects the network The basic idea of \"piggybacking\" the dictionary onto the speaker's regular semantic net can be illustrated very simply: Consider the KL.ONE network in figure one, a fragment taken from a conceptual taxonomy for augmented transition nets (given in [klune]).", "labels": [], "entities": []}, {"text": "The dictionary will provide the means to describe individual concepts (filled ellipses) on the basis of their links to generic concepts lempty ellipses) and their functional roles (squar~s), as shown therefor the individual concept \"C205\".", "labels": [], "entities": []}, {"text": "The default English description of C205 (i.e. \"the jump arc fi'om S/NP to S/DCL\") is created recursiveiy from dL.~riptions of the three network relations that C205 participates in: its \"supercuneept\" link to the concept \"jump-are\". and its two role-value relations: \"source-stateIC205)=S/NP\" and \"next-state(C205)=S/t:~Ct.\".", "labels": [], "entities": []}, {"text": "we want to associate each of the network objects with an English phrase: the concept \"art'\" with the word \"art\"', the \"source-state\" role relation with the phrase \"C205 comes from S/NF\" (note the embedded references), and soon.", "labels": [], "entities": []}, {"text": "The machinery that actually brings about this ~sociation is, of course, much more elaborate, involving three different recta-level networks describing the whole of the original, \"domain\" network, as well as an explicit representation of the English grammar (i.e. it Ls itsclf expressed in rd,-oN~).", "labels": [], "entities": []}, {"text": "role links ~ \u2022 ~ test ~ action value-.restriction links IL_ value links \"The jump arc from S./NP to S/DCL\" Figure One: the speaker's original network What does this rather expensive I computational machinery purchase?", "labels": [], "entities": []}, {"text": "There are numrous benefits: The most obvious is the economy of scale within the dictionary that is gained by drawing directly on the economies [.", "labels": [], "entities": []}, {"text": "What is cxpensive to represcnt in an explicit, declarative structure need not be expensive wllen translated into pn~ccdurai forth.", "labels": [], "entities": []}, {"text": "] do not seriously expect anyone to implement suctl a dicti()nary by interpreting the Y-.I.-ON,~, structures themselves; given tmr present hardware such a tact would be hopelessly inel]icient.", "labels": [], "entities": [{"text": "Y-.I.-ON", "start_pos": 86, "end_pos": 94, "type": "METRIC", "confidence": 0.6155117809772491}]}, {"text": "Instead, a compilation pnx:css will in effective \"compact\" the explicit version of thc dictionary in~t~ an expeditious,, space.-expensive (i.e. heavily redundant} version that pc:rfbrms each inheritance only once and fl~eu runs as an efficient, self-contained procedure.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}