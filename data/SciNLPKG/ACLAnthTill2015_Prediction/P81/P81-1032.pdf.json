{"title": [{"text": "Dynamic Strategy Selection in Flexible Parsing", "labels": [], "entities": [{"text": "Dynamic Strategy Selection", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.740593949953715}]}], "abstractContent": [{"text": "Robust natural language interpretation requires strong semantic domain models, \"fall-soff\" recovery heuristics, and very flexible control structures.", "labels": [], "entities": [{"text": "Robust natural language interpretation", "start_pos": 0, "end_pos": 38, "type": "TASK", "confidence": 0.6650374233722687}]}, {"text": "Although single-strategy parsers have met with a measure of success, a multi.strategy approach is shown to provide a much higher degree of flexibility, redundancy, and ability to bring task-specific domain knowledge (in addition to general linguistic knowledge) to bear on both grammatical and ungrammatical input.", "labels": [], "entities": []}, {"text": "A parsing algorithm is presented that integrates several different parsing strategies, with case-frame instantiation dominating.", "labels": [], "entities": [{"text": "parsing", "start_pos": 2, "end_pos": 9, "type": "TASK", "confidence": 0.9681854844093323}]}, {"text": "Each of these parsing strategies exploits different types of knowledge; and their combination provides a strong framework in which to process conjunctions, fragmentary input, and ungrammatical structures, as well as less exotic, grammatically correct input.", "labels": [], "entities": []}, {"text": "Several specific heuristics for handling ungrammatical input are presented within this multi-strategy framework.", "labels": [], "entities": []}], "introductionContent": [{"text": "When people use language spontaneously, they o~ten do not respect grammatical niceties.", "labels": [], "entities": []}, {"text": "Instead of producing sequences of grammatically well-formed and complete sentences, they often miss out or repeat words or phrases, break off what they are .saying and rephrase or replace it, speak in fragments, or use otherwise incorrect grammar.", "labels": [], "entities": []}, {"text": "While other people generally have little trouble co'reprehending ungrammatical utterances, most' natural language computer systems are unable to process errorful input at all.", "labels": [], "entities": []}, {"text": "Such inflexibility in parsing is a serious impediment to the use of natural language in interactive computer systems.", "labels": [], "entities": []}, {"text": "Accordingly, we and other researchers including Wemchedel and Black, and Kwasny and Sondhelmer, have attempted to produce flexible parsers, i.e. parsers that can accept ungrammatical input, correcting the errors whan possible, and generating several alternative interpretations if appropriate.", "labels": [], "entities": []}, {"text": "While different in many ways, all these approaches to flexible parsing operate by applying a uniform parsing process to a uniformly represented grammar.", "labels": [], "entities": []}, {"text": "Because of the linguistic performance problems involved, this uniform procedure cannot be as simple and elegant as the procedures followed by parsers based on a pure linguistic competence model, such as Parsifal.", "labels": [], "entities": []}, {"text": "Indeed, their parsing procedures may involve several strategies that are applied in a predetermined order when the input deviates from the grammar, but the choice of strategy never depends on the specific type of construction being parsed.", "labels": [], "entities": []}, {"text": "In light of experience with our own flexible parser, we have come to believe that such uniformity is not conducive to good flexible parsing.", "labels": [], "entities": []}, {"text": "Rather, the strategies used should be dynamically selected according to the type of construction being parsed.", "labels": [], "entities": []}, {"text": "For instance, partial.linear pattern matching maybe well suited to the flexible parsing of idiomatic phrases, or specialized noun phrases such as names, dates, or addresses (see also), but case constructions, such as noun phrases with trailing prepositional phrases, or imperative phrases, require case-oriented parsing strategies.", "labels": [], "entities": []}, {"text": "The undedying principle is simple: The ap~rol~riate knowledge must be brought to bear at the right time --and it must not interfere at other times.", "labels": [], "entities": []}, {"text": "Though the initial motivation for this approach sprang from the r~eeds of flexible parsing, such construction.specific techniques can provide important benefits even when no grammatical deviations are encountered, as we will show.", "labels": [], "entities": []}, {"text": "This observation maybe related to the current absence of any single universal parsing strategy capable of exploiting all knowledge sources (although ELI and its offspring are efforts in this direction).", "labels": [], "entities": [{"text": "ELI", "start_pos": 149, "end_pos": 152, "type": "DATASET", "confidence": 0.7473965287208557}]}, {"text": "Our objective here is not to create the ultimate parser, but to build a very flexible and robust taak.oriented parser capable of exploiting all relevant domain knowledge as well as more general syntax and semantics.", "labels": [], "entities": []}, {"text": "The initial application domain for the parser is the central component of an interface to various computer subsystems (or tools).", "labels": [], "entities": []}, {"text": "This interface and, therefore the parser, should be adaptable to new tools by substituting domain-specific data bases (called \"tool descriptions\") that govern the behaviorof the interface, including the invocation of parsing strategies, dictionanes and concepts, rather than requiring any domain adaptations by the interface system itself.", "labels": [], "entities": []}, {"text": "With these goals in mind, we proceed to give details of the kinds of difficulties that a uniform parsing strategy can lead to, and show how dynamically-selected construction.specific techniques can help.", "labels": [], "entities": []}, {"text": "We list a number of such specific strategies, then we focus on our initial implementation of two of these strategies and the mechanism that dynamically selects between them while pm'alng task-oriented natural language imperative constructions.", "labels": [], "entities": []}, {"text": "Imperatives were chosen largely because commands and queries given to a task-oriented natural language front end often take that form.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}