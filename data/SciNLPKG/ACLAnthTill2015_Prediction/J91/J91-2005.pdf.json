{"title": [{"text": "Book Reviews PC-KIMMO: A Two-Level Processor for Morphological Analysis", "labels": [], "entities": [{"text": "Morphological Analysis", "start_pos": 49, "end_pos": 71, "type": "TASK", "confidence": 0.861018717288971}]}], "abstractContent": [{"text": "This package is a faithful implementation of Koskenniemi's two-level morphology, KIMMO (Koskenniemi 1983).", "labels": [], "entities": []}, {"text": "As with previous tools from the Summer Institute of Linguistics (e.g., Weber, Black, and McConnel 1988), the package is primarily aimed at field linguists with little computational expertise, but for whom morphological analysis tools are useful.", "labels": [], "entities": []}, {"text": "The book that accompanies the software is extremely good: among other things, it incorporates what is in my opinion the best available introduction to the theory and practice of two-level morphology.", "labels": [], "entities": []}, {"text": "The package is therefore not only useful to the audience for which it is primarily intended: it will also be of use to those wishing to learn something about computational morphology, and would bean excellent teaching aid fora computational linguistics course.", "labels": [], "entities": []}, {"text": "The book is divided into seven chapters and three appendices.", "labels": [], "entities": []}, {"text": "Chapter 1 traces the history of computational morphology.", "labels": [], "entities": []}, {"text": "As is typical of such overviews, the scope is somewhat narrow, discussing only a few Finnish projects (besides the work of Kosken-niemi and his apostles), and work done at the Summer Institute of Linguistics.", "labels": [], "entities": []}, {"text": "That criticism aside, the rest of the chapter is an accurate overview of the positive and negative aspects of KIMMO.", "labels": [], "entities": [{"text": "KIMMO", "start_pos": 110, "end_pos": 115, "type": "DATASET", "confidence": 0.7118173837661743}]}, {"text": "On the negative side, Antworth cites the well-known fact that KIMMO cannot elegantly handle nonconcatenative morphology such as in-fixation or reduplication.", "labels": [], "entities": []}, {"text": "He also notes limitations more particular to the PC-KIMMO implementation, such as the lack of a rule compiler and the lack of a sensible (i.e., non-finite-state) model of morphotactics; both of these issues have received treatment within the two-level school (Dalrymple et al.", "labels": [], "entities": []}, {"text": "1987, Bear 1986, inter alia), though with respect to rule compilation, Antworth is justified in noting (p.", "labels": [], "entities": [{"text": "rule compilation", "start_pos": 53, "end_pos": 69, "type": "TASK", "confidence": 0.8871561586856842}, {"text": "Antworth", "start_pos": 71, "end_pos": 79, "type": "METRIC", "confidence": 0.9776840209960938}]}, {"text": "11) that \"it remains to be seen if such a project is feasible for small computers.\"", "labels": [], "entities": []}, {"text": "Chapter 2 is an introduction to PC-KIMMO, and gives a sample session of its use.", "labels": [], "entities": []}, {"text": "Chapters 3 through 5 describe in detail how finite state transducers (FSTs) work, 1 The software runs on IBM PCs and compatibles running MS-DOS or PC-DOS version 2.0 or higher; minimum requirements are 256K memory (will use up to 640K); executable is about 97.5K.", "labels": [], "entities": [{"text": "finite state transducers (FSTs)", "start_pos": 44, "end_pos": 75, "type": "TASK", "confidence": 0.8011309802532196}]}, {"text": "Versions are available for the Macintosh, and the system has been compiled and tested under Unix System V and 4.2 BSD Unix.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}