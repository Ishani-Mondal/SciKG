{"title": [], "abstractContent": [{"text": "This paper examines the problem of classifying linguistic objects on the basis of information encoded in the system network formalism developed by Halliday.", "labels": [], "entities": []}, {"text": "It is shown that this problem is NP-hard, and a restriction to the formalism, which renders the classification problem soluble in polynomial time, is suggested.", "labels": [], "entities": []}, {"text": "An algorithm for the unrestricted classification problem, which separates a potentially expensive second stage from a more tractable first stage, is then presented.", "labels": [], "entities": [{"text": "unrestricted classification problem", "start_pos": 21, "end_pos": 56, "type": "TASK", "confidence": 0.6945921977361044}]}], "introductionContent": [{"text": "In this paper we describe algorithms that enable the system networks of Systemic Grammar) to be exploited in applications, such as natural language understanding, that require incremental description refinement.", "labels": [], "entities": [{"text": "natural language understanding", "start_pos": 131, "end_pos": 161, "type": "TASK", "confidence": 0.6377646525700887}]}, {"text": "We are attracted to the system network formalism on three main counts: Potential Reversibility.", "labels": [], "entities": []}, {"text": "System networks fit well with a model of linguistic behavior as goal-directed action, since they encode grammatical information in the form of sets of interconnected choices that a language user needs to make in order to produce apposite and communicative utterances.", "labels": [], "entities": []}, {"text": "It seems natural to exploit this information for comprehension as well as generation.", "labels": [], "entities": []}, {"text": "System networks look simple, yet are expressive enough to allow the development of substantial grammars.", "labels": [], "entities": []}, {"text": "If this apparent simplicity is reflected in the mathematical properties of the system network formalism then it maybe possible to design cheap description refinement algorithms that use the networks.", "labels": [], "entities": []}, {"text": "If the networks turnout to be easy to process, they may have wider applications in tasks requiring representation of nonlinguistic knowledge.", "labels": [], "entities": []}, {"text": "We think that the tasks for which such networks are most likely to be appropriate are those for which conventional taxonomic representations are nearly, but not quite, sufficient.", "labels": [], "entities": []}, {"text": "Our algorithms (presented in the final part of this paper) operate by converting as much as possible of the information contained in the networks to taxonomic form.", "labels": [], "entities": []}, {"text": "In this paper we shall be presenting formal arguments about the capabilities of the system network formalism, working at a level of detail that would make the presentation of large scale linguistic examples prohibitively tedious.", "labels": [], "entities": []}, {"text": "Our main example will therefore be the network shown in.", "labels": [], "entities": []}, {"text": "This network provides information about the choices a speaker needs to make in order to correctly produce English pronouns.", "labels": [], "entities": []}, {"text": "Similar networks can describe the choices that have to be made in order to generate other components of an utterance, such as sentences, verb phrases, or intonation contours, but for present purposes pronouns will prove sufficient illustration.", "labels": [], "entities": []}, {"text": "We have applied the ideas described in this paper to a parsing system that accepts the language generated by the grammar of a pre-existing dialog generation system.", "labels": [], "entities": []}, {"text": "Our algorithms are presented in a somewhat stylized form, since the primary intention is to expose the nature of the problems involved rather than to provide detailed information about the implementation of our parsers.", "labels": [], "entities": []}, {"text": "For instance, we describe data structures that are closely related to the tapes of a two-tape Turing machine, but in the corresponding implementation the behavior of these data structures is mimicked by a program that manipulates nested Prolog terms.", "labels": [], "entities": []}, {"text": "Were we to present the details of the real implementation, it would tend to obscure the most significant properties of the algorithm.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}