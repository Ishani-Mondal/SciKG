{"title": [], "abstractContent": [{"text": "Feature structures area representational device used in several current linguistic theories.", "labels": [], "entities": []}, {"text": "This paper shows how these structures can be axiomatized in a decidable class of first-order logic, which can also be used to express constraints on these structures.", "labels": [], "entities": []}, {"text": "Desirable properties, such as compactness and decidability, follow directly.", "labels": [], "entities": []}, {"text": "Moreover, additional types of feature values, such as \"set-valued\" features, can be incorporated into the system simply by axiomatizing their properties.", "labels": [], "entities": []}], "introductionContent": [{"text": "Many modern linguistic theories, such as Lexical-Functional Grammar, Functional Unification Grammar, Generalized Phrase Structure Grammar (, Unification Categorial Grammar (,, and Head-Driven Phrase Structure Grammar (, replace the atomic categories of a context-free grammar with a \"feature structure\" that represents the syntactic and semantic properties of the phrase.", "labels": [], "entities": []}, {"text": "These feature structures are specified indirectly in terms of constraints that they must satisfy.", "labels": [], "entities": []}, {"text": "Lexical entries constrain the feature structures that can be associated with terminal nodes of the syntactic tree, and phrase structure rules simultaneously constrain the feature structures that can be associated with a parent node and its immediate descendants.", "labels": [], "entities": []}, {"text": "That is, lexical entries and syntactic rules used to construct a syntactic phrase structure tree all contribute constraints on the feature structures that appear as the labels on nodes in the syntactic tree.", "labels": [], "entities": []}, {"text": "The tree is well formed if and only if all of these constraints are simultaneously satisfiable.", "labels": [], "entities": []}, {"text": "Thus for the purposes of recognition a method for determining the satisfiability of such constraints is required; the precise nature of the satisfying feature structures (of which there maybe infinitely many) is of secondary importance.", "labels": [], "entities": [{"text": "recognition", "start_pos": 25, "end_pos": 36, "type": "TASK", "confidence": 0.9639948606491089}]}, {"text": "1 A variety of different types of feature structures have been proposed in the literature, but most work on unification-based grammar has centered on a certain type of feature structure known as an attribute-value structure.", "labels": [], "entities": [{"text": "unification-based grammar", "start_pos": 108, "end_pos": 133, "type": "TASK", "confidence": 0.8630229532718658}]}, {"text": "The elements in an attributevalue structure come in two kinds: constant elements and complex elements.", "labels": [], "entities": []}, {"text": "Constant An attribute-value structure for Mary seems to like John Example 1 depicts an attribute-value structure.", "labels": [], "entities": []}, {"text": "The attribute-value element labeled eo in might be associated with the sentence Mary seems to like John.", "labels": [], "entities": []}, {"text": "The attribute-value structure depicted in contains six complex elements eo,..., e5 and eight constant elements seem, like, john, sg, 3rd, mary, none, and pres.", "labels": [], "entities": []}, {"text": "The element eo is a complex attribute-value element with four attributes: pred, subj, comp, and tense: the order in which the attributes appear in the diagram is irrelevant.", "labels": [], "entities": []}, {"text": "The value of its pred attribute is the constant seem (which abbreviates the relation denoted by the verb seem), and the value of its tense attribute is the constant element pres (which indicates that the clause is in the present tense).", "labels": [], "entities": []}, {"text": "The values of the subj and comp attributes are the complex elements e3 and el (which represent the subject and the complement of the verb seem, respectively).", "labels": [], "entities": []}, {"text": "The element e3 also appears as the subject of el, indicating that Mary is also the (understood) subject of the verb likes as well.", "labels": [], "entities": []}, {"text": "The element el is a complex attribute-value element with four attributes pred, obj, subj, and tense.", "labels": [], "entities": []}, {"text": "The value of its pred attribute is the constant element like (which abbreviates the relation denoted by the verb like) and the value of its tense attribute is the constant element none (which indicates that the clause is untensed).", "labels": [], "entities": []}, {"text": "The values of the attributes obj and subj of el are the complex elements e2 and e3, respectively (which represent the subject and object of the clause).", "labels": [], "entities": []}, {"text": "Both e4 and e5 have the same attributes hum and pets, and the values of these attributes of e4 are identical to the corresponding values of these attributes of e5.", "labels": [], "entities": []}, {"text": "Nevertheless, e4 and e5 are distinct elements.", "labels": [], "entities": []}, {"text": "An operation called unification plays an important role inmost accounts of feature structures).", "labels": [], "entities": []}, {"text": "The unification operation \"combines\" or \"merges\" two elements into a single element that agrees with both of the original elements on the values of all of their defined sequences of attributes, so the unification of two complex elements requires the unification of the values of any attributes they have in common.", "labels": [], "entities": []}, {"text": "The unification operation fails if it requires the unification of distinct", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}