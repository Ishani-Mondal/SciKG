{"title": [], "abstractContent": [{"text": "The paper describes anew implementation of feature structures containing disjunctive values, which can be characterized by the following main points: Local representation of embedded dis-junctions, avoidance of expansion to disjunctive normal form and of repeated test-unifications for checking consistence.", "labels": [], "entities": []}, {"text": "The method is based on a modification of Kasper and Rounds' calculus of feature descriptions and its correctness therefore is easy to see.", "labels": [], "entities": []}, {"text": "It can handle cyclic structures and has been incorporated successfully into an environment for grammar development.", "labels": [], "entities": [{"text": "grammar development", "start_pos": 95, "end_pos": 114, "type": "TASK", "confidence": 0.8473119735717773}]}, {"text": "1 Motivation In current research in computational linguistics but also in extralinguistic fields unification has turned out to be a central operation in the modelling of data types or knowledge in general.", "labels": [], "entities": [{"text": "extralinguistic fields unification", "start_pos": 74, "end_pos": 108, "type": "TASK", "confidence": 0.6446424325307211}]}, {"text": "Among linguistic formalisms and theories which are based on the unification paradigm are such different theories as FUG [Kay 79,Kay 85], LFG [Kaplan/Bresnan 82], GSPG [Gazdar et al. 85], CUG [Uszkoreit 86].", "labels": [], "entities": [{"text": "FUG", "start_pos": 116, "end_pos": 119, "type": "METRIC", "confidence": 0.7778000235557556}]}, {"text": "However, research in unifi-cationis also relevant for fields like logic program-rning, theorem proving, knowledge representation (see [Smolka/Ait-Kaci 87] for multiple inheritance hierarchies using unification), programming language design [Ait-Kaci/Nasr 86] and others.", "labels": [], "entities": [{"text": "theorem proving", "start_pos": 87, "end_pos": 102, "type": "TASK", "confidence": 0.8339063227176666}, {"text": "knowledge representation", "start_pos": 104, "end_pos": 128, "type": "TASK", "confidence": 0.7169898599386215}, {"text": "programming language design [Ait-Kaci/Nasr 86", "start_pos": 212, "end_pos": 257, "type": "TASK", "confidence": 0.6627385765314102}]}, {"text": "The version of unification our work is based on is graph unification, which is an extension of term unification.", "labels": [], "entities": [{"text": "graph unification", "start_pos": 51, "end_pos": 68, "type": "TASK", "confidence": 0.7475723326206207}, {"text": "term unification", "start_pos": 95, "end_pos": 111, "type": "TASK", "confidence": 0.7400279343128204}]}, {"text": "In graph unification the number of arguments is free and arguments are selected by attribute labels rather than by position.", "labels": [], "entities": [{"text": "graph unification", "start_pos": 3, "end_pos": 20, "type": "TASK", "confidence": 0.7540171444416046}]}, {"text": "The algorithm described here may easily be modified to apply to term unification.", "labels": [], "entities": [{"text": "term unification", "start_pos": 64, "end_pos": 80, "type": "TASK", "confidence": 0.6896940618753433}]}, {"text": "The structures we are dealing with are rooted directed graphs where arcs starting in one node must carry distinct labels.", "labels": [], "entities": []}, {"text": "Terminal nodes may also be labelled.", "labels": [], "entities": []}, {"text": "These structures are referred to by various names in the literature: feature structures , functional structures, functional descriptions , types, categories.", "labels": [], "entities": []}, {"text": "We will call them feature structures I throughout this paper.", "labels": [], "entities": []}, {"text": "In applications, other than toy applications, the efficient processing of indefinite information which is represented by disjenctive specifications becomes a relevant factor.", "labels": [], "entities": []}, {"text": "A strategy of multiplying-out disjunction by exploiting (nearly) any combination of disjuncts through backtracking, as it is done, e.g., in the case of a simple DCG parser, quickly runs into efficiency problems.", "labels": [], "entities": []}, {"text": "On the other hand the descriptional power of disjunction often helps to state highly ambiguous linguistic knowledge clearly and concisely (see Fig. I fora disjunc-tive description of morphological features for the six readings of the german noun 'Koffer').", "labels": [], "entities": []}, {"text": "Koffer: morph: sem: oo.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}