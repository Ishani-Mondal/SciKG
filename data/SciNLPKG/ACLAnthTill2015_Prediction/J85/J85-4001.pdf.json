{"title": [{"text": "ON THE COMPLEXITY OF ID/LP PARSING 1", "labels": [], "entities": [{"text": "ID/LP", "start_pos": 21, "end_pos": 26, "type": "DATASET", "confidence": 0.5613091190656027}, {"text": "PARSING", "start_pos": 27, "end_pos": 34, "type": "METRIC", "confidence": 0.47703781723976135}]}], "abstractContent": [{"text": "Modern linguistic theory attributes surface complexity to interacting subsystems of constraints.", "labels": [], "entities": []}, {"text": "For instance, the ID/LP grammar formalism separates constraints on immediate dominance from those on linear order.", "labels": [], "entities": []}, {"text": "An ID/LP parsing algorithm by Shieber shows how to use ID and LP constraints directly in language processing, without expanding them into an intermediate context-free \"object grammar\".", "labels": [], "entities": []}, {"text": "However, Shieber's purported runtime bound underestimates the difficulty of ID/LP parsing.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 76, "end_pos": 89, "type": "TASK", "confidence": 0.5162337422370911}]}, {"text": "ID/LP parsing is actually NP-complete, and the worst-case runtime of Shieber's algorithm is actually exponential in grammar size.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.5521857067942619}]}, {"text": "The growth of parser data structures causes the difficulty.", "labels": [], "entities": []}, {"text": "Some computational and linguistic implications follow; in particular, it is important to note that, desplte its potential for combinatorial explosion, Shieber's algorithm remains better than the alternative of parsing an expanded object grammar.", "labels": [], "entities": []}], "introductionContent": [{"text": "It is common in recent linguistic theories for various surface characteristics of a language to be described in terms of several different kinds of underlying constraints.", "labels": [], "entities": []}, {"text": "ID/LP grammars involve immediate-dominance rules and linear-order constraints; more broadly, GPSG systems can also involve feature relationships and metarules ().", "labels": [], "entities": []}, {"text": "The tree adjunetion grammars of separate the statement of local constraints from the projection of those constraints to larger structures.", "labels": [], "entities": []}, {"text": "The GB-framework of Chomsky (1981:5) identifies the subtheories of bounding, government, 0-marking, binding, Case, and control.", "labels": [], "entities": [{"text": "Case", "start_pos": 109, "end_pos": 113, "type": "METRIC", "confidence": 0.6812024116516113}]}, {"text": "When several independent constraints are involved, a system that explicitly multiplies out their effects is large, cumbersome, and uninformative.", "labels": [], "entities": []}, {"text": "2 If done properly, the disentanglement of different kinds of constraints can result in shorter and more illuminating language descriptions.", "labels": [], "entities": []}, {"text": "With any such modular framework, two questions immediately arise: how can the various constraints be put back together in parsing, and what are the computational characteristics of the process?", "labels": [], "entities": []}, {"text": "One approach is to compile a large object grammar that expresses the combined effects of the constraints in a more familiar format such as an ordinary context-free grammar (CFG).", "labels": [], "entities": []}, {"text": "The context-free object grammar can then be parsed with algorithm or any of several other wellknown procedures with known computational characteristics.", "labels": [], "entities": []}, {"text": "However, in order to apply this method, it is necessary to expand out the effects of everything that falls outside the strict context-free format: rule schemas, metarules, ID rules, LP constraints, feature instantiations, casemarking constraints, etc.", "labels": [], "entities": []}, {"text": "The standard algorithms operate on CFGs, not on extended variants of them.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 35, "end_pos": 39, "type": "DATASET", "confidence": 0.8801817893981934}]}, {"text": "Unfortunately, the object grammar maybe huge after the effects of all nonstandard devices have been expanded out.", "labels": [], "entities": []}, {"text": "Estimates of the object-grammar size for typical systems vary from hundreds or thousands 3 up to trillions of rules.", "labels": [], "entities": []}, {"text": "With some formalisms, the context-free object-grammar approach is not even possible because the object grammar would be infinite.", "labels": [], "entities": []}, {"text": "Grammar size matters beyond questions of elegance and clumsiness, for it typically affects processing complexity.", "labels": [], "entities": []}, {"text": "argue that the effects of grammar size can actually dominate complexity fora relevant range of input lengths.", "labels": [], "entities": []}, {"text": "Given the disadvantages of multiplying out the effects of separate systems of constraints, work on direct parsing leads in a welcome direction.", "labels": [], "entities": []}, {"text": "Shieber considers how one might do parsing with ID/LP grammars, which involve two orthogonal kinds of rules.", "labels": [], "entities": []}, {"text": "ID rules constrain immediate dominance irrespective of constituent order (\"a sentence can be composed of V with NP and SBAR complements\"), while LP rules Copyright1985 by the Association for Computational Linguistics.", "labels": [], "entities": [{"text": "Copyright1985", "start_pos": 154, "end_pos": 167, "type": "DATASET", "confidence": 0.8405592441558838}]}, {"text": "Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page.", "labels": [], "entities": [{"text": "CL reference", "start_pos": 149, "end_pos": 161, "type": "DATASET", "confidence": 0.8458401560783386}]}, {"text": "To copy otherwise, or to republish, requires a fee and/or specific permission.", "labels": [], "entities": []}, {"text": "0362-613X/85/040205-218503.00 constrain linear precedence among the daughters of any node (\"if V and SBACR are sisters, then V must precede SBAR\").", "labels": [], "entities": []}, {"text": "Shieber shows how algorithm for parsing context-free grammars (CFGs) can be adapted to use the constraints of ID/LP grammars directly, without the combinatorially explosive step of converting the ID/LP grammar into standard context-free form.", "labels": [], "entities": [{"text": "parsing context-free grammars (CFGs)", "start_pos": 32, "end_pos": 68, "type": "TASK", "confidence": 0.8594256540139517}]}, {"text": "Instead of multiplying out all of the possible surface interactions among the ID and LP rules, Shieber's algorithm applies them one step at a time as needed.", "labels": [], "entities": []}, {"text": "Surely this should work better in a parsing application than applying Earley's algorithm to an expanded grammar with trillions of rules, since the worst-case time complexity of Earley's algorithm is proportional to the square of the grammar size!", "labels": [], "entities": []}, {"text": "Shieber's general approach is on the right track.", "labels": [], "entities": []}, {"text": "On pain of having a large and cumbersome rule system, the parser designer should first look to linguistics to find the correct set of constraints on syntactic structure, then discover how to apply some form of those constraints in parsing without multiplying out all possible surface manifestations of their effects.", "labels": [], "entities": []}, {"text": "Nonetheless, nagging doubts about computational complexity remain.", "labels": [], "entities": [{"text": "computational complexity", "start_pos": 34, "end_pos": 58, "type": "TASK", "confidence": 0.8441163897514343}]}, {"text": "Although claims that his algorithm is identical to Earley's in time complexity, it seems almost too much to hope for that the size of an ID/LP grammar should enter into the time complexity of ID/LP parsing in exactly the same way that the size of a CFG enters into the time complexity of CFG parsing.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 192, "end_pos": 205, "type": "TASK", "confidence": 0.44283459335565567}, {"text": "CFG parsing", "start_pos": 288, "end_pos": 299, "type": "TASK", "confidence": 0.7199301421642303}]}, {"text": "An ID/LP grammar G can enjoy a huge size advantage over a context-free grammar G p for the same language; for example, if G contains only the rule S-~ ~D abcde, the corresponding Gr contains 5!", "labels": [], "entities": []}, {"text": "In effect, the claim that Shieber's algorithm has the same time complexity as Earley's algorithm means that this tremendously increased brevity of expression comes free (up to a constant).", "labels": [], "entities": []}, {"text": "The paucity of supporting argument in Shieber's article does little to allay these doubts: We will not present a rigorous demonstration of time complexity, but it should be clear from the close relation between the presented algorithm and Earley's that the complexity is that of Earley's algorithm.", "labels": [], "entities": []}, {"text": "In the worst case, where the LP rules always specify a unique ordering for the right-hand side of every ID rule, the presented algorithm reduces to Earley's algorithm.", "labels": [], "entities": []}, {"text": "Since, given the grammar, checking the LP rules takes constant time, the time complexity of the presented algorithm is identical to Earley's ....", "labels": [], "entities": []}, {"text": "That is, it is O( I G 12 n3), where I GI is the size of the grammar (number of ID rules) and n is the length of the input.", "labels": [], "entities": []}, {"text": "(: 14f) Many questions remain; for example, why should a situation of maximal constraint represent the worst case, as Shieber claims?", "labels": [], "entities": []}, {"text": "4 The following sections will investigate the complexity of ID/LP parsing in more detail.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 60, "end_pos": 73, "type": "TASK", "confidence": 0.587523877620697}]}, {"text": "In brief, the outcome is that Shieber's direct-parsing algorithm usually does have a time advantage over the use of Earley's algorithm on the expanded CFG, but that it blows up in the worst case.", "labels": [], "entities": [{"text": "CFG", "start_pos": 151, "end_pos": 154, "type": "DATASET", "confidence": 0.946549654006958}]}, {"text": "The claim of O( I G 12 n 3) time complexity is mistaken; in fact, the worst-case time complexity of ID/LP parsing cannot be bounded by any polynomial in the size of the grammar and input, unless ~' = ,A'@.", "labels": [], "entities": [{"text": "O( I G 12 n 3) time complexity", "start_pos": 13, "end_pos": 43, "type": "METRIC", "confidence": 0.6006674855947495}, {"text": "ID/LP parsing", "start_pos": 100, "end_pos": 113, "type": "TASK", "confidence": 0.5056762769818306}]}, {"text": "ID/LP parsing is NP-complete.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.4461420923471451}]}, {"text": "As it turns out, the complexity of ID/LP parsing has its source in the immediate-domination rules rather than the linear precedence constraints.", "labels": [], "entities": [{"text": "ID/LP parsing", "start_pos": 35, "end_pos": 48, "type": "TASK", "confidence": 0.48656148463487625}]}, {"text": "Consequently, the precedence constraints will be neglected.", "labels": [], "entities": []}, {"text": "Attention will be focused on unordered context-free grammars (UCFGs), which are exactly like standard context-free grammars except that when a rule is used in a derivation, the symbols on its right-hand side are considered to be unordered and hence maybe written in any order.", "labels": [], "entities": []}, {"text": "UCFGs represent the special case of ID/LP grammars in which there are no LP constraints.", "labels": [], "entities": [{"text": "UCFGs", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.9315596222877502}]}, {"text": "Shieber's ID/LP algorithm can be used to parse UCFGs simply by ignoring all references to LP constraints.", "labels": [], "entities": [{"text": "parse UCFGs", "start_pos": 41, "end_pos": 52, "type": "TASK", "confidence": 0.7574876844882965}]}], "datasetContent": [], "tableCaptions": []}