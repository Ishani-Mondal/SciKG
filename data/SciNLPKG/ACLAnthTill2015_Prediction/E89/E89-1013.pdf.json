{"title": [{"text": "JPSG Parser on Constraint Logic Programming", "labels": [], "entities": [{"text": "JPSG Parser", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.7537122070789337}, {"text": "Constraint Logic Programming", "start_pos": 15, "end_pos": 43, "type": "TASK", "confidence": 0.6078464190165201}]}], "abstractContent": [{"text": "This paper presents a constraint logic programming language cu-Prolog and introduces a simple Japanese parser based on Japanese Phrase Structure Grammar (JPSG) as a suitable application of cu-Prolog.", "labels": [], "entities": []}], "introductionContent": [{"text": "Prolog is frequently used in implementing natural language parsers or generators based on unification based grammars.", "labels": [], "entities": []}, {"text": "This is because Prolog is also based on unification, and therefore has a declarative feature.", "labels": [], "entities": [{"text": "Prolog", "start_pos": 16, "end_pos": 22, "type": "DATASET", "confidence": 0.9480015635490417}]}, {"text": "One important characteristic of unification based grammar is also a declarative grammar formalization.", "labels": [], "entities": []}, {"text": "However, Prolog does not have sufficient power of expressing constraints because it executes every parts of its programs as procedures and because every variable of Prolog can be instantiated with any objects.", "labels": [], "entities": []}, {"text": "Hence, the constraints in unification based grammar are forced to be implemented not declaratively but procedurally.", "labels": [], "entities": []}, {"text": "We developed anew constraint logic programming language cu-Prolog which is free from this defect of traditional Prolog.", "labels": [], "entities": []}, {"text": "In cu-Prolog, user defined constraints can be directly added to a program clause (constraint added Horn clause), and the constraint unification 1 is adopted instead of the nor-mal unification.", "labels": [], "entities": []}, {"text": "This paper discusses the outline of the cu-Prolog system, and presents a Japanese parser based on :IPSG (Japanese Phrase Structure Grammar) as a suitable application of cu-Prolog.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}