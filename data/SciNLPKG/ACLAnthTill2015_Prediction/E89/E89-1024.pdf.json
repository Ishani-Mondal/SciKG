{"title": [{"text": "Expressing generalizations in unification-based grammar formalisms *", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper shows how higher levels of generalization can be introduced into unification grammars by exploiting methods for typing grammatical objects.", "labels": [], "entities": []}, {"text": "We discuss the strategy of using global declarations to limit possible linguistic structures, and sketch a few unusual aspects of our type-checking algorithm.", "labels": [], "entities": []}, {"text": "We also describe the sort system we use in our semantic representation language and illustrate the expressive power gained by being able to state global constraints over these sorts.", "labels": [], "entities": []}, {"text": "Finally, we briefly illustrate the sort system by applying it to some agreement phenomena and to problems of adjunct resolution.", "labels": [], "entities": [{"text": "adjunct resolution", "start_pos": 109, "end_pos": 127, "type": "TASK", "confidence": 0.73886339366436}]}], "introductionContent": [{"text": "Since Kay's seminal work, the utility of unification as a general tool in computational linguistics has gained widespread recognition.", "labels": [], "entities": []}, {"text": "One major point on which the methodology of unification grammars differs radically from that assumed by linguistic theories lies in the way they deal with generalizations that holdover the domain of description.", "labels": [], "entities": [{"text": "unification grammars", "start_pos": 44, "end_pos": 64, "type": "TASK", "confidence": 0.9303928017616272}]}, {"text": "In unification-based theories, such generalizations are typically implicit, or extremely limited in their import.", "labels": [], "entities": []}, {"text": "The reasons for this are easy to pinpoint.", "labels": [], "entities": []}, {"text": "First, in such theories one has to be explicit about the feature structures that the grammar manipulates, and these structures have to be described more or less directly.", "labels": [], "entities": []}, {"text": "In PATR-II for example (Shieber et al 1983) the only means of expressing a generalization is via the notion of template, a structure which merely represents recurring information--i.e, information that *The work reported here was carried out ae part of ES-PRIT project P393 ACORD.", "labels": [], "entities": [{"text": "ES-PRIT project P393 ACORD", "start_pos": 253, "end_pos": 279, "type": "DATASET", "confidence": 0.8181017637252808}]}, {"text": "A longer version of this paper can be found in. recurs in different lexical items, combination rules, lexical rules or other templates.", "labels": [], "entities": [{"text": "recurs", "start_pos": 48, "end_pos": 54, "type": "METRIC", "confidence": 0.9771876931190491}]}, {"text": "A second reason why unification-based theories do not lend themselves easily to the expression of general statements is that there is no explicit quantification in unification formalisms.", "labels": [], "entities": []}, {"text": "In fact, every statement in these formalisms represents a simple existential constraint, never a universal generalization.", "labels": [], "entities": []}, {"text": "The work reported here is an attempt to introduce higher levels of organization into unification grammars.", "labels": [], "entities": [{"text": "unification grammars", "start_pos": 85, "end_pos": 105, "type": "TASK", "confidence": 0.9136428236961365}]}, {"text": "The notions we employ to do this come from sorted logics and from strong data typing in programming language theory.", "labels": [], "entities": []}, {"text": "We will show that the typing of grammatical objects offers away of stating structural constraints on, or equivalently universal properties of, the objects that constitute the grammar.", "labels": [], "entities": []}, {"text": "The grammatical framework in which these ideas have been implemented is Uaificatioa Categorial Grammar (UCG) and its semantic representation language InL, both developed as part of the ESPRIT-funded project ACORD.", "labels": [], "entities": [{"text": "Uaificatioa Categorial Grammar (UCG)", "start_pos": 72, "end_pos": 108, "type": "TASK", "confidence": 0.5231267164150873}, {"text": "ESPRIT-funded project ACORD", "start_pos": 185, "end_pos": 212, "type": "DATASET", "confidence": 0.6303805708885193}]}, {"text": "Introductions to UCG and InL can be found in and.", "labels": [], "entities": [{"text": "UCG", "start_pos": 17, "end_pos": 20, "type": "DATASET", "confidence": 0.9166486263275146}, {"text": "InL", "start_pos": 25, "end_pos": 28, "type": "DATASET", "confidence": 0.7234680652618408}]}, {"text": "For present purposes it is sufficient to note that UCG uses a sorted logic which requires being able to express complex constraints over clusters of features.", "labels": [], "entities": []}, {"text": "While there is no real distinction between this technique and that of data typing mentioned above, we will nevertheless continue to use the term typing only to refer to constraints on the global structure of an object and reserve the term sort to refer to constraints that hold of a variable in InL.", "labels": [], "entities": []}, {"text": "In the following sections, we will first discuss our strategy of using global declarations to limit possible linguistic structures.", "labels": [], "entities": []}, {"text": "We will briefly describe some of the type declarations currently implemented in UCG and discuss the unusual aspects of our type-checking algorithm.", "labels": [], "entities": [{"text": "UCG", "start_pos": 80, "end_pos": 83, "type": "DATASET", "confidence": 0.8766841292381287}]}, {"text": "We will also infor-mally describe the InL sort system and will show how the ability to express global constraints on the sort lattice is both perspicuous and expressively powerful.", "labels": [], "entities": []}, {"text": "Detailed discussion of the underlying formal theory and the implementation can be found in Calder et al (1988a) and will not be attempted here.", "labels": [], "entities": []}, {"text": "Next, we will demonstrate the usefulness of the sort system by describing ucG's adjunct resolution system, the declarative semantics of which depends crucially on our use of a logic of sorts.", "labels": [], "entities": [{"text": "ucG's adjunct resolution", "start_pos": 74, "end_pos": 98, "type": "TASK", "confidence": 0.7060544341802597}]}, {"text": "This treatment allows the grammar writer to write and add adjunct resolution conditions using the same notation as that used to express sort descriptions in the grammar and without having to modify any implementation code.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}