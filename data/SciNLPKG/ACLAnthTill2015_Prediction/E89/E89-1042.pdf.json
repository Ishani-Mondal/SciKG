{"title": [{"text": "ON FORMALISMS AND ANALYSIS, GENERATION AND SYNTHESIS IN MACHINE TRANSLATION", "labels": [], "entities": [{"text": "FORMALISMS", "start_pos": 3, "end_pos": 13, "type": "METRIC", "confidence": 0.9915829300880432}, {"text": "ANALYSIS", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9939714074134827}, {"text": "GENERATION", "start_pos": 28, "end_pos": 38, "type": "METRIC", "confidence": 0.8121854066848755}]}], "abstractContent": [], "introductionContent": [{"text": "A formalism is a set of notation with well-defined semantics (namely for the interpretation of the symbols used and their manipulation), by means of which one formally expresses certain domain knowledge, which is to be utilised for specific purposes.", "labels": [], "entities": []}, {"text": "In this paper, we are interested in formalisms which are being used or have applications in the domain of machine translation (MT).", "labels": [], "entities": [{"text": "machine translation (MT)", "start_pos": 106, "end_pos": 130, "type": "TASK", "confidence": 0.8489373445510864}]}, {"text": "These can range from specialised languages for linguistic programming (SLLPs) in NIT, like ROBRA in the ARIANE system and GRADE in the Mu-system, to linguistic formalisms like those of the Government and Binding theory and the Lexical Functional Grammar theory.", "labels": [], "entities": [{"text": "ARIANE system", "start_pos": 104, "end_pos": 117, "type": "DATASET", "confidence": 0.9022184014320374}, {"text": "Lexical Functional Grammar theory", "start_pos": 227, "end_pos": 260, "type": "TASK", "confidence": 0.787640392780304}]}, {"text": "Our interest lies mainly in their role in the domain in terms of the ease in expressing linguistic knowledge required for MT, as well as the ease of implementation in NIT systems.", "labels": [], "entities": [{"text": "MT", "start_pos": 122, "end_pos": 124, "type": "TASK", "confidence": 0.9919231534004211}]}, {"text": "We begin by discussing formalisms within the general context of MT, clearly separating the role of linguistic formalisms on one end, which are more apt for expressing linguistic knowledge, and on the other, the SLLPS which are specifically designed for MT systems.", "labels": [], "entities": [{"text": "MT", "start_pos": 64, "end_pos": 66, "type": "TASK", "confidence": 0.9731743335723877}, {"text": "MT", "start_pos": 253, "end_pos": 255, "type": "TASK", "confidence": 0.9872720837593079}]}, {"text": "We argue for another type of formalism, the general formalism, to bridge the gap between the two.", "labels": [], "entities": []}, {"text": "Next we discuss the role of formalisms in analysis and in generation, and then more specific to NIT, in synthesis.", "labels": [], "entities": []}, {"text": "We sum up with a mention on a relevant part of our current work, the building of a compiler that generates a synthesis program in SLLP from a set of specifications written in a general formalism.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}