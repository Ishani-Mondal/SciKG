{"title": [{"text": "A Feature-Enriched Tree Kernel for Relation Extraction", "labels": [], "entities": [{"text": "Relation Extraction", "start_pos": 35, "end_pos": 54, "type": "TASK", "confidence": 0.9643758535385132}]}], "abstractContent": [{"text": "Tree kernel is an effective technique for relation extraction.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 42, "end_pos": 61, "type": "TASK", "confidence": 0.9209449291229248}]}, {"text": "However, the traditional syntactic tree representation is often too coarse or ambiguous to accurately capture the semantic relation information between two entities.", "labels": [], "entities": []}, {"text": "In this paper, we propose anew tree kernel, called feature-enriched tree kernel (FTK), which can enhance the traditional tree kernel by: 1) refining the syntactic tree representation by annotating each tree node with a set of dis-criminant features; and 2) proposing anew tree kernel which can better measure the syntactic tree similarity by taking all features into consideration.", "labels": [], "entities": []}, {"text": "Experimental results show that our method can achieve a 5.4% F-measure improvement over the traditional convolution tree kernel.", "labels": [], "entities": [{"text": "F-measure", "start_pos": 61, "end_pos": 70, "type": "METRIC", "confidence": 0.999152421951294}]}], "introductionContent": [{"text": "Relation Extraction (RE) aims to identify a set of predefined relations between pairs of entities in text.", "labels": [], "entities": [{"text": "Relation Extraction (RE)", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.9142355680465698}]}, {"text": "In recent years, relation extraction has received considerable research attention.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 17, "end_pos": 36, "type": "TASK", "confidence": 0.9859270453453064}]}, {"text": "An effective technique is the tree kernel (, which can exploit syntactic parse tree information for relation extraction.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 100, "end_pos": 119, "type": "TASK", "confidence": 0.8107688128948212}]}, {"text": "Given a pair of entities in a sentence, the tree kernel-based RE method first represents the relation information between them using a proper sub-tree (e.g., SPTthe sub-tree enclosed by the shortest path linking the two involved entities).", "labels": [], "entities": []}, {"text": "For example, the three syntactic tree representations in.", "labels": [], "entities": []}, {"text": "Then the similarity between two trees are computed using a tree kernel, e.g., the convolution tree kernel proposed by.", "labels": [], "entities": []}, {"text": "Finally, new relation instances are extracted using kernel based classifiers, e.g., the SVM classifier.", "labels": [], "entities": []}, {"text": "Unfortunately, one main shortcoming of the traditional tree kernel is that the syntactic tree representation usually cannot accurately capture the.", "labels": [], "entities": []}, {"text": "The ambiguity of possessive structure relation information between two entities.", "labels": [], "entities": []}, {"text": "This is mainly due to the following two reasons: 1) The syntactic tree focuses on representing syntactic relation/structure, which is often too coarse or ambiguous to capture the semantic relation information.", "labels": [], "entities": []}, {"text": "Ina syntactic tree, each node indicates a clause/phrase/word and is only labeled with a Treebank tag ().", "labels": [], "entities": []}, {"text": "The Treebank tag, unfortunately, is usually too coarse or too general to capture semantic information.", "labels": [], "entities": [{"text": "Treebank tag", "start_pos": 4, "end_pos": 16, "type": "DATASET", "confidence": 0.9322840869426727}]}, {"text": "For example, all the three trees in share the same possessive syntactic structure, but express quite different semantic relations: where \"Mary's brothers\" expresses PER-SOC Family relation, \"Mary's toys\" expresses Possession relation, and \"New York's airports\" expresses PHYSLocated relation.", "labels": [], "entities": [{"text": "PER-SOC", "start_pos": 165, "end_pos": 172, "type": "METRIC", "confidence": 0.8984346389770508}]}, {"text": "2) Some critical information may lost during sub-tree representation extraction.", "labels": [], "entities": [{"text": "sub-tree representation extraction", "start_pos": 45, "end_pos": 79, "type": "TASK", "confidence": 0.6447521150112152}]}, {"text": "For example, in, when extracting SPT representation, all nodes outside the shortest-path will be pruned, such as the nodes and in tree T1.", "labels": [], "entities": [{"text": "extracting SPT representation", "start_pos": 22, "end_pos": 51, "type": "TASK", "confidence": 0.761496365070343}]}, {"text": "In this pruning process, the critical information \"word town is the possessor of the possessive phrase the town's plants\" will be lost, which in turn will lead to the misclassification of the DISC relation between one and town.", "labels": [], "entities": []}, {"text": "This paper proposes anew tree kernel, referred as feature-enriched tree kernel (FTK), which can effectively resolve the above problems by enhancing the traditional tree kernel in following ways: 1) We refine the syntactic tree representation by annotating each tree node with a set of discriminant features.", "labels": [], "entities": []}, {"text": "better capture the semantic relation information between two entities.", "labels": [], "entities": []}, {"text": "For example, in order to differentiate the syntactic tree representations in 1, FTK will annotate them with several features indicating \"brother is a male sibling\", \"toy is an artifact\", \"New York is a city\", \"airport is facility\", etc.", "labels": [], "entities": [{"text": "FTK", "start_pos": 80, "end_pos": 83, "type": "DATASET", "confidence": 0.9199619889259338}]}, {"text": "2) Based on the refined syntactic tree representation, we propose anew tree kernel -featureenriched tree kernel, which can better measure the similarity between two trees by also taking all features into consideration.", "labels": [], "entities": []}, {"text": "We have experimented our method on the ACE 2004 RDC corpus.", "labels": [], "entities": [{"text": "ACE 2004 RDC corpus", "start_pos": 39, "end_pos": 58, "type": "DATASET", "confidence": 0.9715206176042557}]}, {"text": "Experimental results show that our method can achieve a 5.4% F-measure improvement over the traditional convolution tree kernel based method.", "labels": [], "entities": [{"text": "F-measure", "start_pos": 61, "end_pos": 70, "type": "METRIC", "confidence": 0.9991349577903748}]}, {"text": "This paper is organized as follows.", "labels": [], "entities": []}, {"text": "Section 2 describes the feature-enriched tree kernel.", "labels": [], "entities": []}, {"text": "Section 3 presents the features we used.", "labels": [], "entities": []}, {"text": "Section 4 discusses the experiments.", "labels": [], "entities": []}, {"text": "Section 5 briefly reviews the related work.", "labels": [], "entities": []}, {"text": "Finally Section 6 concludes this paper.", "labels": [], "entities": []}], "datasetContent": [{"text": "To assess the feature-enriched tree kernel, we evaluate our method on the ACE RDC 2004 corpus using the same experimental settings as.", "labels": [], "entities": [{"text": "ACE RDC 2004 corpus", "start_pos": 74, "end_pos": 93, "type": "DATASET", "confidence": 0.9671200811862946}]}, {"text": "That is, we parse all sentences using the Charniak's parser, relation instances are generated by iterating overall pairs of entity mentions occurring in the same sentence.", "labels": [], "entities": []}, {"text": "In our experiments, we implement the feature-enriched tree kernel by extending the SVM light) with the proposed tree kernel function.", "labels": [], "entities": []}, {"text": "We apply the one vs. others strategy for multiple classification using SVM.", "labels": [], "entities": [{"text": "multiple classification", "start_pos": 41, "end_pos": 64, "type": "TASK", "confidence": 0.7127953469753265}, {"text": "SVM", "start_pos": 71, "end_pos": 74, "type": "DATASET", "confidence": 0.8523668646812439}]}, {"text": "For SVM training, the parameter C is set to 2.4 for all experiments, and the tree kernel parameter \u03bb is tuned to 0.2 for FTK and 0.4 (the optimal parameter setting used in) for CTK.", "labels": [], "entities": [{"text": "SVM training", "start_pos": 4, "end_pos": 16, "type": "TASK", "confidence": 0.9530123174190521}, {"text": "FTK", "start_pos": 121, "end_pos": 124, "type": "DATASET", "confidence": 0.6899975538253784}]}], "tableCaptions": [{"text": " Table 2. FTK on the 7 major relation types and  their F-measure improvement over CTK", "labels": [], "entities": [{"text": "FTK", "start_pos": 10, "end_pos": 13, "type": "METRIC", "confidence": 0.6093653440475464}, {"text": "F-measure", "start_pos": 55, "end_pos": 64, "type": "METRIC", "confidence": 0.9662013053894043}]}, {"text": " Table 3. Comparison of different systems on the  ACE RDC 2004 corpus", "labels": [], "entities": [{"text": "ACE RDC 2004", "start_pos": 50, "end_pos": 62, "type": "DATASET", "confidence": 0.9696009556452433}]}]}