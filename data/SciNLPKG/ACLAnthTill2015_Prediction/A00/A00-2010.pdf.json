{"title": [{"text": "Generation in the Lambek Calculus Framework: an Approach with Semantic Proof Nets", "labels": [], "entities": [{"text": "Lambek Calculus Framework", "start_pos": 18, "end_pos": 43, "type": "DATASET", "confidence": 0.9516012867291769}]}], "abstractContent": [], "introductionContent": [{"text": "Thc lincar logic provides a powerful framcwork to cxprcss categorial gt'ammars and Lambek calculus, and a lot of work has presented proof nets uses for linguistic purposcs, with a special look at proof nets for Lambek calculus.", "labels": [], "entities": []}, {"text": "But they have mainly explored the syntactic capabilities of proof nets, describing parsing processes.", "labels": [], "entities": []}, {"text": "This paper wants to focus on the generation capabilities of proof nets thanks to their semantic readings as expressed in (de.", "labels": [], "entities": []}, {"text": "The main features of our proposal consist in the use of proof nets lot Lambek calculus, of the Curry-Howard isomorplaisna, of semantic proof nets with semantic expressions ?t la Montagu\u00a2, and in an algorithm for proof search with a target proof net.", "labels": [], "entities": [{"text": "proof search", "start_pos": 212, "end_pos": 224, "type": "TASK", "confidence": 0.8021271228790283}]}, {"text": "Unlike a previous proposal for generation in the Lambek calculus framework (, this point of view avoids the use of the A-term unification to lead the generation process.", "labels": [], "entities": [{"text": "Lambek calculus framework", "start_pos": 49, "end_pos": 74, "type": "DATASET", "confidence": 0.8906873464584351}]}, {"text": "And the algorithmic undecidability of this latter mechanism (from second order unification) does not occur anymore.", "labels": [], "entities": [{"text": "second order unification", "start_pos": 66, "end_pos": 90, "type": "TASK", "confidence": 0.6982585787773132}]}, {"text": "In this work, we do not consider the choice of lexical items from a given semantic expression the syntactic rcalization of which we want to generate, but rather tile way we can associate given lexical entries to fit the given semantic expression and generate a syntactically correct cxpression.", "labels": [], "entities": []}, {"text": "For this purpose, we express our problem as a proof search one in (multiplicative) linear logic which is decidable.", "labels": [], "entities": []}, {"text": "Moreover, we characterize the semantic recipes of lexical items that provide a polynomial solution for the generation process.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 4: Lexicon  lexical entry  syntaxic category  Jo h n  N P  Mary  N P  m", "labels": [], "entities": [{"text": "Lexicon  lexical entry  syntaxic category  Jo h", "start_pos": 10, "end_pos": 57, "type": "TASK", "confidence": 0.8019119415964399}]}]}