{"title": [{"text": "A Framework for MT and Multilingual NLG Systems Based on Uniform Lexico-Structural Processing", "labels": [], "entities": []}], "abstractContent": [{"text": "In this paper we describe an implemented framework for developing monolingual or multilingual natural language generation (NLG) applications and machine translation (MT) applications.", "labels": [], "entities": [{"text": "multilingual natural language generation (NLG)", "start_pos": 81, "end_pos": 127, "type": "TASK", "confidence": 0.7922693661281041}, {"text": "machine translation (MT)", "start_pos": 145, "end_pos": 169, "type": "TASK", "confidence": 0.8450263500213623}]}, {"text": "The framework demonstrates a uniform approach to generation and transfer based on declarative lexico-structural transformations of dependency structures of syntactic or conceptual levels (\"uniform lexico-structural processing\").", "labels": [], "entities": [{"text": "generation and transfer", "start_pos": 49, "end_pos": 72, "type": "TASK", "confidence": 0.7378726800282797}]}, {"text": "We describe how this framework has been used in practical NLG and MT applications, and report the lessons learned.", "labels": [], "entities": [{"text": "MT", "start_pos": 66, "end_pos": 68, "type": "TASK", "confidence": 0.8841701745986938}]}], "introductionContent": [{"text": "In this paper we present a linguistically motivated framework for uniform lexicostructural processing.", "labels": [], "entities": []}, {"text": "It has been used for transformations of conceptual and syntactic structures during generation in monolingual and multilingual natural language generation (NLG) and for transfer in machine translation (MT).", "labels": [], "entities": [{"text": "multilingual natural language generation (NLG)", "start_pos": 113, "end_pos": 159, "type": "TASK", "confidence": 0.7585858872958592}, {"text": "transfer in machine translation (MT)", "start_pos": 168, "end_pos": 204, "type": "TASK", "confidence": 0.7874105274677277}]}, {"text": "Our work extends directions taken in systems such as Ariane (,, JOYCE, and LFS (.", "labels": [], "entities": []}, {"text": "Although it adopts the general principles found in the abovementioned systems, the approach presented in this paper is more practical, and we believe, would eventually integrate better with emerging statistics-based approaches to MT.", "labels": [], "entities": [{"text": "MT", "start_pos": 230, "end_pos": 232, "type": "TASK", "confidence": 0.9949113726615906}]}, {"text": "* The work performed on the framework by this coauthor was done while at CoGenTex, Inc.", "labels": [], "entities": []}, {"text": "The framework consists of a portable Java environment for building NLG or MT applications by defining modules using a core tree transduction engine and single declarative ASCII specification language for conceptual or syntactic dependency tree structures 1 and their transformations.", "labels": [], "entities": []}, {"text": "Developers can define new modules, add or remove modules, or modify their connections.", "labels": [], "entities": []}, {"text": "Because the processing of the transformation engine is restricted to transduction of trees, it is computationally efficient.", "labels": [], "entities": []}, {"text": "Having declarative rules facilitates their reuse when migrating from one programming environment to another; if the rules are based on functions specific to a programming language, the implementation of these functions might no longer be available in a different environment.", "labels": [], "entities": []}, {"text": "In addition, having all lexical information and all rules represented declaratively makes it relatively easy to integrate into the framework techniques for generating some of the rules automatically, for example using corpus-based methods.", "labels": [], "entities": []}, {"text": "The declarative form of transformations makes it easier to process them, compare them, and cluster them to achieve proper classification and ordering.", "labels": [], "entities": []}, {"text": "1 In this paper, we use the term syntactic dependency (tree) structure as defined in the Meaning-Text Theory (MTT;.", "labels": [], "entities": [{"text": "Meaning-Text Theory (MTT", "start_pos": 89, "end_pos": 113, "type": "TASK", "confidence": 0.61520204693079}]}, {"text": "However, we extrapolate from this theory when we use the term conceptual dependency (tree) structure, which has no equivalent in MTT (and is unrelated to Shank's CD structures proposed in the 1970s).", "labels": [], "entities": []}, {"text": "Thus, the framework represents a generalized processing environment that can be reused in different types of natural language processing (NLP) applications.", "labels": [], "entities": []}, {"text": "So far the framework has been used successfully to build a wide variety of NLG and MT applications in several limited domains (meteorology, battlefield messages, object modeling) and for different languages (English, French, Arabic, and Korean).", "labels": [], "entities": [{"text": "MT", "start_pos": 83, "end_pos": 85, "type": "TASK", "confidence": 0.8791025876998901}, {"text": "object modeling)", "start_pos": 162, "end_pos": 178, "type": "TASK", "confidence": 0.8318589528401693}]}, {"text": "In the next sections, we present the design of the core tree transduction module (Section 2), describe the representations that it uses (Section 3) and the linguistic resources (Section 4).", "labels": [], "entities": []}, {"text": "We then discuss the processing performed by the tree transduction module (Section 5) and its instantiation for different applications (Section 6).", "labels": [], "entities": []}, {"text": "Finally, we discuss lessons learned from developing and using the framework (Section 7) and describe the history of the framework comparing it to other systems (Section 8).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}