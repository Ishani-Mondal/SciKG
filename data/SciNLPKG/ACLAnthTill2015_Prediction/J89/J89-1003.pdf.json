{"title": [{"text": "DESIGN OF LMT: A PROLOG-BASED MACHINE TRANSLATION SYSTEM", "labels": [], "entities": [{"text": "DESIGN OF LMT", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.483765184879303}, {"text": "PROLOG-BASED MACHINE TRANSLATION SYSTEM", "start_pos": 17, "end_pos": 56, "type": "TASK", "confidence": 0.5391977578401566}]}], "abstractContent": [{"text": "LMT (logic-based machine translation) is an experimental English-to-German MT system, being developed in the framework of logic programming.", "labels": [], "entities": [{"text": "logic-based machine translation)", "start_pos": 5, "end_pos": 37, "type": "TASK", "confidence": 0.6646345779299736}, {"text": "MT", "start_pos": 75, "end_pos": 77, "type": "TASK", "confidence": 0.9283975958824158}]}, {"text": "The English analysis uses a logic grammar formalism, Modular Logic Grammar, which allows logic grammars to be more compact, and which has a modular treatment of syntax, lexicon, and semantics.", "labels": [], "entities": []}, {"text": "The English grammar is written independently of the task of translation.", "labels": [], "entities": []}, {"text": "LMT uses a syntax-to-syntax transfer method for translation, although the English syntactic analysis trees contain some results of semantic choices and show deep grammatical relations.", "labels": [], "entities": [{"text": "translation", "start_pos": 48, "end_pos": 59, "type": "TASK", "confidence": 0.9830048084259033}]}, {"text": "Semantic type checking with Prolog inference is done during analysis and transfer.", "labels": [], "entities": [{"text": "type checking", "start_pos": 9, "end_pos": 22, "type": "TASK", "confidence": 0.8976008892059326}]}, {"text": "The transfer algorithm uses logical variables and unification to good advantage; transfer works in a simple left-to-right, top-down way.", "labels": [], "entities": []}, {"text": "After transfer, the German syntactic generation component produces a surface structure tree by application of a system of tree transformations.", "labels": [], "entities": []}, {"text": "These transformations use an augmentation of Prolog pattern matching.", "labels": [], "entities": [{"text": "Prolog pattern matching", "start_pos": 45, "end_pos": 68, "type": "TASK", "confidence": 0.8294855157534281}]}, {"text": "LMT has a single lexicon, containing both source and transfer information, as well as some idiosyncratic target morphological information.", "labels": [], "entities": []}, {"text": "There is a compact external format for this lexicon, with a lexical preprocessing system that applies defaults and compiles it into an internal format convenient for the syntactic components.", "labels": [], "entities": []}, {"text": "During lexical preprocess-ing, English morphological analysis can be coupled with rules that synthesize new transfer entries.", "labels": [], "entities": []}], "introductionContent": [{"text": "The purpose of this paper is to describe an experimental English-to-German machine translation system, LMT (logic-based machine translation), 2 which has evolved out of previous work by the author on logic grammars.", "labels": [], "entities": [{"text": "English-to-German machine translation", "start_pos": 57, "end_pos": 94, "type": "TASK", "confidence": 0.6637281080087026}, {"text": "logic-based machine translation)", "start_pos": 108, "end_pos": 140, "type": "TASK", "confidence": 0.6915850788354874}]}, {"text": "The translation system is organized in a modular way.", "labels": [], "entities": [{"text": "translation", "start_pos": 4, "end_pos": 15, "type": "TASK", "confidence": 0.9643718600273132}]}, {"text": "The grammar for analysis of the source language (English) is written completely independently of the task of translation.", "labels": [], "entities": []}, {"text": "In fact, this grammar produces logical forms that can be used for other applications such as database query systems and knowledge-based systems, and has been used in the systems described in,,, and.", "labels": [], "entities": []}, {"text": "The components of LMT dealing specifically with translation do not index into the grammar rules, as, for example, in the LRC system.", "labels": [], "entities": []}, {"text": "An interesting sort of modularity exists in the English grammar itself, whereby syntax, lexicon, and semantic interpretation closely interact, yet manage to be clearly separated.", "labels": [], "entities": []}, {"text": "The lexicon exerts control over syntactic analysis through the use of slot frames in lexical entries and slot filling methods in syntax, as well as through type checking with semantic types taken from lexical entries.", "labels": [], "entities": [{"text": "syntactic analysis", "start_pos": 32, "end_pos": 50, "type": "TASK", "confidence": 0.7401644587516785}, {"text": "type checking", "start_pos": 156, "end_pos": 169, "type": "TASK", "confidence": 0.8910529911518097}]}, {"text": "Yet the syntax rules look completely syntactic; e.g., no specific semantic types or word senses are referred to.", "labels": [], "entities": []}, {"text": "The syntactic analysis trees look like surface structure trees, with annotations showing grammatical relations (including remote relations due to extraposition).", "labels": [], "entities": []}, {"text": "The terminal nodes of these trees are logical terminals (explained below), which contain word sense predications and can be used in building logical forms as semantic representations of sentences.", "labels": [], "entities": []}, {"text": "These logical forms are built by a separate semantic interpretation component which deals with problems of scoping of quantifiers and other modifiers.", "labels": [], "entities": []}, {"text": "Given that the English grammar can produce both syntactic structures and logical forms, an issue in designing LMT was what structures to use as input to transfer.", "labels": [], "entities": []}, {"text": "The initial idea was to use the logical forms.", "labels": [], "entities": []}, {"text": "The main argument for this was that 1.", "labels": [], "entities": []}, {"text": "the logical form analyses express the complete meaning of the source text, and 2.", "labels": [], "entities": []}, {"text": "there is no doubt that for perfect translations, one must in general have a complete semantic analysis of the source text (and employ world knowledge to get it).", "labels": [], "entities": []}, {"text": "The logical form analyses are expresCopyright 1989 by the Association for Computational Linguistics.", "labels": [], "entities": []}, {"text": "Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page.", "labels": [], "entities": [{"text": "CL reference", "start_pos": 149, "end_pos": 161, "type": "DATASET", "confidence": 0.8458401560783386}]}, {"text": "To copy otherwise, or to republish, requires a fee and/or specific permission.", "labels": [], "entities": []}, {"text": "0362-613X/89/010033-52503.00 sions in a logical form language (LFL).", "labels": [], "entities": []}, {"text": "Although the formalism for LFL is intended to be language universal, there is actually a ,different version of LFL for every natural language, because most of the predicates are word senses in the natural language being analyzed.", "labels": [], "entities": []}, {"text": "The original scheme, then, :for LMT was to analyze English text into English LFL forms, then transfer these to German LFL form.,;, then generate German text.", "labels": [], "entities": []}, {"text": "This scheme is neat, and maybe investigated again later; but for the sake of practicality, the compromise has been to use the syntactic analyses produced by the grammar as the point of transfer.", "labels": [], "entities": []}, {"text": "Useful MT systems must generally work with rather large domains, and the trouble with the use of logical forms is that too many decisions must be made and too much world knowledge is needed to produce correct analyses fora large domain.", "labels": [], "entities": [{"text": "MT", "start_pos": 7, "end_pos": 9, "type": "TASK", "confidence": 0.9889367818832397}]}, {"text": "For example, LFL expressions for degree adjectives like \"good\" are focalizers, where the base argument shows the base of comparison for the adjective.", "labels": [], "entities": []}, {"text": "In general, it maybe difficult to determine such arguments.", "labels": [], "entities": []}, {"text": "In the syntactic structure, arguments of focalizers are not yet determined; but for the purposes of translation, such scoping problems can often (though not always) be ignored.", "labels": [], "entities": [{"text": "translation", "start_pos": 100, "end_pos": 111, "type": "TASK", "confidence": 0.9808120727539062}]}, {"text": "They can often be sidestepped because the same ambiguity exists in the target language.", "labels": [], "entities": []}, {"text": "For example, \"He is good\" can easily translate into Er ist gut without deciding \"good with respect to what?\".", "labels": [], "entities": [{"text": "Er", "start_pos": 52, "end_pos": 54, "type": "METRIC", "confidence": 0.8660156726837158}]}, {"text": "Another point is that in the case of languages as close as English and German, it is simply more direct to transfer syntactic structure to syntactic structure.", "labels": [], "entities": []}, {"text": "For more discussion of the practicality of a syntactic transfer method, see.", "labels": [], "entities": [{"text": "syntactic transfer", "start_pos": 45, "end_pos": 63, "type": "TASK", "confidence": 0.7524881958961487}]}, {"text": "It should be emphasized that the syntactic analysis trees produced by the grammar do contain some of the ingredients of semantic interpretation.", "labels": [], "entities": [{"text": "semantic interpretation", "start_pos": 120, "end_pos": 143, "type": "TASK", "confidence": 0.7248295098543167}]}, {"text": "As mentioned above, terminal nodes contain word sense predications.", "labels": [], "entities": [{"text": "word sense predications", "start_pos": 43, "end_pos": 66, "type": "TASK", "confidence": 0.6542007128397623}]}, {"text": "Although the arguments of focalizer predications are not yet filled in, the arguments of verb and noun senses (corresponding to complements), are filled in (inasmuch as they can be determined by the syntax of the sentence, plus a few heuristics).", "labels": [], "entities": []}, {"text": "Semantic type checking involves Prolog inference and is used for constraining word sense selection, complementation, and adjunct attachment.", "labels": [], "entities": [{"text": "Semantic type checking", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.7270698348681132}, {"text": "word sense selection", "start_pos": 78, "end_pos": 98, "type": "TASK", "confidence": 0.6863702932993571}, {"text": "adjunct attachment", "start_pos": 121, "end_pos": 139, "type": "TASK", "confidence": 0.7738712131977081}]}, {"text": "Also certain preference heuristics, described in Section 2 below, are used for modifier attachment.", "labels": [], "entities": [{"text": "modifier attachment", "start_pos": 79, "end_pos": 98, "type": "TASK", "confidence": 0.9280291199684143}]}, {"text": "Translation of a sentence by LMT proceeds in five steps.", "labels": [], "entities": [{"text": "Translation of a sentence", "start_pos": 0, "end_pos": 25, "type": "TASK", "confidence": 0.8991660475730896}]}, {"text": "1. Lexical preprocessing; 2.", "labels": [], "entities": []}, {"text": "English syntactic analysis; 3.", "labels": [], "entities": [{"text": "English syntactic analysis", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.6492567857106527}]}, {"text": "German syntactic generation; 5.", "labels": [], "entities": [{"text": "German syntactic generation", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6503669917583466}]}], "datasetContent": [], "tableCaptions": []}