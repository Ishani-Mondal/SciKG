{"title": [{"text": "SYNTACTIC GRAPHS: A REPRESENTATION FOR AMBIGUOUS PARSE TREES THE UNION OF ALL", "labels": [], "entities": [{"text": "GRAPHS", "start_pos": 10, "end_pos": 16, "type": "METRIC", "confidence": 0.9510908722877502}, {"text": "A", "start_pos": 18, "end_pos": 19, "type": "METRIC", "confidence": 0.8894892930984497}, {"text": "REPRESENTATION", "start_pos": 20, "end_pos": 34, "type": "METRIC", "confidence": 0.6232544779777527}, {"text": "AMBIGUOUS", "start_pos": 39, "end_pos": 48, "type": "METRIC", "confidence": 0.779346227645874}, {"text": "PARSE", "start_pos": 49, "end_pos": 54, "type": "METRIC", "confidence": 0.7137312889099121}, {"text": "TREES", "start_pos": 55, "end_pos": 60, "type": "METRIC", "confidence": 0.6001657247543335}]}], "abstractContent": [{"text": "In this paper, we present anew method of representing the Surface syntactic structure of a sentence.", "labels": [], "entities": []}, {"text": "Trees have usually been used in linguistics and natural language processing to represent syntactic structures of a sentence.", "labels": [], "entities": []}, {"text": "A tree structure shows only one possible syntactic parse of a sentence, but in order to choose a correct parse, we need to examine all possible tree structures one by one.", "labels": [], "entities": []}, {"text": "Syntactic graph representation makes it possible to represent all possible surface syntactic relations in one directed graph (DG).", "labels": [], "entities": [{"text": "Syntactic graph representation", "start_pos": 0, "end_pos": 30, "type": "TASK", "confidence": 0.6823073824246725}]}, {"text": "Since a syntactic graph is expressed in terms of a set of triples, higher level semantic processes can access any part of the graph directly without navigating the whole structure.", "labels": [], "entities": []}, {"text": "Furthermore , since a syntactic graph represents the union of all possible syntactic readings of a sentence, it is fairly easy to focus on the syntactically ambiguous points.", "labels": [], "entities": []}, {"text": "In this paper, we introduce the basic idea of syntactic graph representation and discuss its various properties.", "labels": [], "entities": [{"text": "syntactic graph representation", "start_pos": 46, "end_pos": 76, "type": "TASK", "confidence": 0.6344142258167267}]}, {"text": "We claim that a syntactic graph carries complete syntactic information provided by a parse forestmthe set of all possible parse trees.", "labels": [], "entities": []}], "introductionContent": [{"text": "In natural language processing, we use several rules and various items of knowledge to understand a sentence.", "labels": [], "entities": []}, {"text": "Syntactic processing, which analyzes the syntactic relations among constituents, is widely used to determine the surface structure of a sentence, because it is effective to show the functional relations between constituents and is based on well-developed linguistic theory.", "labels": [], "entities": [{"text": "Syntactic processing", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.9293042123317719}]}, {"text": "Tree structures, called parse trees, represent syntactic structures of sentences.", "labels": [], "entities": []}, {"text": "Ina natural language understanding system in which syntactic and semantic processes are separated, the semantic processor usually takes the surface syntactic structure of a sentence from the syntactic analyzer as input and processes it for further understanding.", "labels": [], "entities": []}, {"text": "~ Since there are many ambiguities in natural language parsing, syntactic processing usually generates more than one parse tree.", "labels": [], "entities": [{"text": "natural language parsing", "start_pos": 38, "end_pos": 62, "type": "TASK", "confidence": 0.7227752208709717}]}, {"text": "Therefore, the higher level semantic processor should examine the parse trees one by one to choose a correct one.", "labels": [], "entities": []}, {"text": "2 Since possible parse trees of sentences in ordinary expository text often number in the hundreds, it is impractical to check parse trees one by one without knowing where the ambiguous points are.", "labels": [], "entities": []}, {"text": "We have tried to reduce this problem by introducing anew structure, the syntactic graph, that can represent all possible parse trees effectively in a compact form for further processing.", "labels": [], "entities": []}, {"text": "As we will show in the rest of this paper, since all syntactically ambiguous points are kept in a syntactic graph, we can easily focus on those points for further disambiguation.", "labels": [], "entities": []}, {"text": "Furthermore, syntactic graph representation can be naturally implemented in efficient, parallel, all-path parsers.", "labels": [], "entities": []}, {"text": "One-path parsing algorithms, like the DCG (, which enumerates all possible parse trees one by one with backtracking, usually have exponential complexity.", "labels": [], "entities": [{"text": "One-path parsing", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.6529139578342438}]}, {"text": "All-path parsing algorithms explore all possible paths in parallel without backtracking.", "labels": [], "entities": [{"text": "All-path parsing", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.6575186550617218}]}, {"text": "In these algorithms, it is efficient to generate all possible parse trees.", "labels": [], "entities": []}, {"text": "This kind of algorithm has complexity O(N 3) (Aho and Ullman 1972; Tomita trees in a shared, packed-parse forest) We claim that a syntactic graph represented by the triples and an exclusion matrix contains all important syntactic information in the parse forest.", "labels": [], "entities": []}, {"text": "In the next section, we motivate this work with an example.", "labels": [], "entities": []}, {"text": "Then we briefly introduce X (X-bar) theory with head projection, which provides the basis of the graph representation, and the notation of graph representation in Section 3.", "labels": [], "entities": []}, {"text": "The properties of a syntactic graph are detailed in Section 4.", "labels": [], "entities": []}, {"text": "In Section 5, we introduce the idea of an exclusion matrix to limit possible tree interpretations of a graph representation.", "labels": [], "entities": []}, {"text": "In Section 6, we will present the definition of completeness and soundness of the syntactic graph representation compared to parse trees by showing an algorithm that enumerates all syntactic readings using the exclusion matrix from a syntactic graph.", "labels": [], "entities": []}, {"text": "We claim that those readings include all the possible syntactic readings of the corresponding parse forest.", "labels": [], "entities": []}, {"text": "Finally, after discussing related work, we will ~uggest future research and draw some conclusions.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}