{"title": [{"text": "LTAG Dependency Parsing with Bidirectional Incremental Construction", "labels": [], "entities": [{"text": "LTAG Dependency Parsing", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.706644078095754}]}], "abstractContent": [{"text": "In this paper, we first introduce anew architecture for parsing, bidirectional incremental parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 56, "end_pos": 63, "type": "TASK", "confidence": 0.9800868034362793}]}, {"text": "We propose a novel algorithm for in-cremental construction, which can be applied to many structure learning problems in NLP.", "labels": [], "entities": [{"text": "in-cremental construction", "start_pos": 33, "end_pos": 58, "type": "TASK", "confidence": 0.7757134437561035}]}, {"text": "We apply this algorithm to LTAG dependency parsing, and achieve significant improvement on accuracy over the previous best result on the same data set.", "labels": [], "entities": [{"text": "LTAG dependency parsing", "start_pos": 27, "end_pos": 50, "type": "TASK", "confidence": 0.7535620331764221}, {"text": "accuracy", "start_pos": 91, "end_pos": 99, "type": "METRIC", "confidence": 0.9992000460624695}]}], "introductionContent": [{"text": "The phrase \"Bidirectional Incremental\" may appear self-contradictory at first sight, since incremental parsing usually means left-to-right parsing in the context of conventional parsing.", "labels": [], "entities": []}, {"text": "In this paper, we will extend the meaning of incremental parsing.", "labels": [], "entities": []}, {"text": "The idea of bidirectional parsing is related to the bidirectional sequential classification method described in.", "labels": [], "entities": [{"text": "bidirectional parsing", "start_pos": 12, "end_pos": 33, "type": "TASK", "confidence": 0.5216237604618073}, {"text": "bidirectional sequential classification", "start_pos": 52, "end_pos": 91, "type": "TASK", "confidence": 0.6219509045282999}]}, {"text": "In that paper, a tagger assigns labels to words of highest confidence first, and then these labels in turn serve as the context of later labelling operations.", "labels": [], "entities": []}, {"text": "The bidirectional tagger obtained the best results in literature on POS tagging on the standard PTB dataset.", "labels": [], "entities": [{"text": "POS tagging", "start_pos": 68, "end_pos": 79, "type": "TASK", "confidence": 0.8410860896110535}, {"text": "PTB dataset", "start_pos": 96, "end_pos": 107, "type": "DATASET", "confidence": 0.9792102873325348}]}, {"text": "We extend this method from labelling to structure learning, The search space of structure learning is much larger, so that it is appropriate to exploit confidence scores in search.", "labels": [], "entities": []}, {"text": "In this paper, we are interested in LTAG dependency parsing because TAG parsing is a well known problem of high computational complexity in regular parsing.", "labels": [], "entities": [{"text": "LTAG dependency parsing", "start_pos": 36, "end_pos": 59, "type": "TASK", "confidence": 0.7221728761990865}, {"text": "TAG parsing", "start_pos": 68, "end_pos": 79, "type": "TASK", "confidence": 0.852348268032074}, {"text": "regular parsing", "start_pos": 140, "end_pos": 155, "type": "TASK", "confidence": 0.6362257301807404}]}, {"text": "In order to get a focus for the learning algorithm, we work on a variant of LTAG based parsing in which we learn the word dependency relations encoded in LTAG derivations instead of the full-fledged trees.", "labels": [], "entities": [{"text": "LTAG based parsing", "start_pos": 76, "end_pos": 94, "type": "TASK", "confidence": 0.5315241813659668}]}], "datasetContent": [{"text": "We use the same data set as in).", "labels": [], "entities": []}, {"text": "2-21 of the LTAG Treebank for training, Sec.", "labels": [], "entities": [{"text": "LTAG Treebank", "start_pos": 12, "end_pos": 25, "type": "DATASET", "confidence": 0.9878780245780945}]}, {"text": "22 for feature selection, and Sec.", "labels": [], "entities": [{"text": "feature selection", "start_pos": 7, "end_pos": 24, "type": "TASK", "confidence": 0.8187506198883057}]}, {"text": "shows the comparison of different models.", "labels": [], "entities": []}, {"text": "Beam size is set to five in our experiments.", "labels": [], "entities": [{"text": "Beam size", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.6649267673492432}]}, {"text": "With level-0 dependency, our system achieves an accuracy of 90.3% at the speed of 4.25 sentences a second on a Xeon 3G Hz processor with JDK 1.5.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 48, "end_pos": 56, "type": "METRIC", "confidence": 0.999411940574646}]}, {"text": "With level-1 dependency, the parser achieves 90.5% at 3.59 sentences a second.", "labels": [], "entities": []}, {"text": "Level-1 dependency does not provide much improvement due to the fact that level-0 features provide most of the useful information for this specific application.", "labels": [], "entities": []}, {"text": "It is interesting to compare our system with other dependency parsers.).", "labels": [], "entities": []}, {"text": "However, their experiments are on the PTB, while ours is on the LTAG corpus.", "labels": [], "entities": [{"text": "PTB", "start_pos": 38, "end_pos": 41, "type": "DATASET", "confidence": 0.9129371643066406}, {"text": "LTAG corpus", "start_pos": 64, "end_pos": 75, "type": "DATASET", "confidence": 0.9688508808612823}]}, {"text": "It should be noted that it is more difficult to learn LTAG dependencies.", "labels": [], "entities": []}, {"text": "Theoretically, the LTAG dependencies reveal deeper relations.", "labels": [], "entities": []}, {"text": "Adjunction can lead to non-projective dependencies, and the dependencies defined on predicate adjunction are linguistically more motivated, as shown in the examples in and 7.", "labels": [], "entities": []}, {"text": "The explicit representation of predicate coordination also provides deeper relations.", "labels": [], "entities": [{"text": "predicate coordination", "start_pos": 31, "end_pos": 53, "type": "TASK", "confidence": 0.7927238643169403}]}, {"text": "For example, in, the LTAG dependency contains resist \u2192 rearing and resist \u2192 saluting, while the Magerman's dependency only contains resist \u2192 rearing.", "labels": [], "entities": []}, {"text": "The explicit representation of predicate coordination will help to solve for the dependencies for shared arguments.", "labels": [], "entities": [{"text": "predicate coordination", "start_pos": 31, "end_pos": 53, "type": "TASK", "confidence": 0.8267893195152283}]}], "tableCaptions": [{"text": " Table 1: Features defined on the context of operation", "labels": [], "entities": []}]}