{"title": [], "abstractContent": [{"text": "This paper introduces anew kernel which computes similarity between two natural language sentences as the number of paths shared by their dependency trees.", "labels": [], "entities": []}, {"text": "The paper gives a very efficient algorithm to compute it.", "labels": [], "entities": []}, {"text": "This kernel is also an improvement over the word subsequence kernel because it only counts linguistically meaningful word subsequences which are based on word dependencies.", "labels": [], "entities": []}, {"text": "It overcomes some of the difficulties encountered by syntactic tree kernels as well.", "labels": [], "entities": []}, {"text": "Experimental results demonstrate the advantage of this kernel over word subsequence and syntactic tree kernels.", "labels": [], "entities": []}], "introductionContent": [{"text": "Kernel-based learning methods are becoming increasingly popular in natural language processing (NLP) because they allow one to work with potentially infinite number of features without explicitly constructing or manipulating them.", "labels": [], "entities": [{"text": "natural language processing (NLP)", "start_pos": 67, "end_pos": 100, "type": "TASK", "confidence": 0.7573659320672353}]}, {"text": "In most NLP problems, the data is present in structured forms, like strings or trees, and this structural information can be effectively passed to a kernel-based learning algorithm using an appropriate kernel, like a string kernel () or a tree kernel).", "labels": [], "entities": []}, {"text": "In contrast, feature-based methods require reducing the data to a pre-defined set of features often leading to some loss of the useful structural information present in the data.", "labels": [], "entities": []}, {"text": "A kernel is a measure of similarity between every pair of examples in the data and a kernel-based machine learning algorithm accesses the data only through these kernel values.", "labels": [], "entities": []}, {"text": "For example, the string kernel ( computes the similarity between two natural language strings as the number of common word subsequences between them.", "labels": [], "entities": []}, {"text": "A subsequence allows gaps between the common words which are penalized according to a parameter.", "labels": [], "entities": []}, {"text": "Each word subsequence hence becomes an implicit feature used by the kernel-based machine learning algorithm.", "labels": [], "entities": []}, {"text": "A problem with this kernel is that many of these word subsequences common between two strings may not be semantically expressive or linguistically meaningful . Another problem with this kernel is that if there are long-range dependencies between the words in a common word subsequence, then they will unfairly get heavily penalized because of the presence of word gaps.", "labels": [], "entities": []}, {"text": "The syntactic tree kernel presented in) captures the structural similarity between two syntactic trees as the number of syntactic subtrees common between them.", "labels": [], "entities": []}, {"text": "However, often syntactic parse trees may share syntactic subtrees which correspond to very different semantics based on what words they represent in the sentence.", "labels": [], "entities": []}, {"text": "On the other hand, some subtrees may differ syntactically but may represent similar underlying semantics.", "labels": [], "entities": []}, {"text": "These differences can become particularly problematic if the tree kernel is to be used for tasks which require semantic processing.", "labels": [], "entities": []}, {"text": "This paper presents anew kernel which computes similarity between two sentences as the the number of paths common between their dependency trees.", "labels": [], "entities": []}, {"text": "(a) A fat cat was chased by a dog.", "labels": [], "entities": []}, {"text": "(b) A cat with a red collar was chased two days ago by a fat dog.", "labels": [], "entities": []}, {"text": "It improves over the word subsequence kernel because it only counts the word subsequences which are linked by dependencies.", "labels": [], "entities": []}, {"text": "It also circumvents some of the difficulties encountered with the syntactic tree kernel when applied for semantic processing tasks.", "labels": [], "entities": []}, {"text": "Although several dependency-tree-based kernels and modifications to syntactic tree kernels have been proposed which we briefly discuss in the Related Work section, to our best knowledge no previous work has presented a kernel based on dependency paths which offers some unique advantages.", "labels": [], "entities": []}, {"text": "We also give a very efficient algorithm to compute this kernel.", "labels": [], "entities": []}, {"text": "We present experimental results on the task of domain-specific semantic parsing demonstrating the advantage of this kernel over word subsequence and syntactic tree kernels.", "labels": [], "entities": [{"text": "domain-specific semantic parsing", "start_pos": 47, "end_pos": 79, "type": "TASK", "confidence": 0.6403962473074595}]}, {"text": "The following section gives some background on string and tree kernels.", "labels": [], "entities": []}, {"text": "Section 3 then introduces the dependency-based word subsequence kernel and gives an efficient algorithm to compute it.", "labels": [], "entities": []}, {"text": "Some of the related work is discussed next, followed by experiments, future work and conclusions.", "labels": [], "entities": []}], "datasetContent": [{"text": "We show that the new dependency-based word subsequence kernel performs better than word subsequence kernel and syntactic tree kernel on the task of domain-specific semantic parsing.", "labels": [], "entities": [{"text": "domain-specific semantic parsing", "start_pos": 148, "end_pos": 180, "type": "TASK", "confidence": 0.6390820145606995}]}], "tableCaptions": [{"text": " Table 1: Results on the semantic parsing task with in- creasing number of training examples using dependency- based word subsequence kernel, word subsequence ker- nel and syntactic tree kernel.", "labels": [], "entities": [{"text": "semantic parsing task", "start_pos": 25, "end_pos": 46, "type": "TASK", "confidence": 0.8113355239232382}]}]}