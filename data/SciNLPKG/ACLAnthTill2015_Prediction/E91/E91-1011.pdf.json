{"title": [{"text": "Processing Language with Logical Types and Active Constraints", "labels": [], "entities": []}], "abstractContent": [{"text": "In this document, we present a language which associates type construction principles to constraint logic programming.", "labels": [], "entities": [{"text": "type construction", "start_pos": 57, "end_pos": 74, "type": "TASK", "confidence": 0.7418007552623749}]}, {"text": "We show that it is very appropriate for language processing, providing more uniform, expressive and efficient tools and treatments.", "labels": [], "entities": [{"text": "language processing", "start_pos": 40, "end_pos": 59, "type": "TASK", "confidence": 0.7850892543792725}]}, {"text": "We introduce three kinds of constraints, that we exemplify by motivational examples.", "labels": [], "entities": []}, {"text": "Finally, we give the procedural semantics of our language, combining type construction with SLD-resolution.", "labels": [], "entities": [{"text": "type construction", "start_pos": 69, "end_pos": 86, "type": "TASK", "confidence": 0.7950150966644287}]}], "introductionContent": [{"text": "With the development of highly parameterized syntactic theories like Government and Binding theory and Head-Driven phrase structure grammars and with the development of theories where rewriting and unification plays a central role, like Categorial grammars and Unification Grammars, there is an increasing need for more appropriate and more efficient feature systems.", "labels": [], "entities": [{"text": "Government and Binding theory", "start_pos": 69, "end_pos": 98, "type": "TASK", "confidence": 0.7701208591461182}]}, {"text": "Feature systems must be designed to preserve the adequacy, the expressiveness and the explanatory power of the linguistic system that one wants to model.", "labels": [], "entities": []}, {"text": "Real parsing as well as generation systems often require the manipulation of large sets of features, these systems must therefore offer a great flexibility in the specification of features in grammar symbols and a significant modularity so that each linguistic aspect (morphological, categorial .... ) can be dealt with independently.", "labels": [], "entities": [{"text": "Real parsing", "start_pos": 0, "end_pos": 12, "type": "TASK", "confidence": 0.5941455811262131}]}, {"text": "Features are often subject to various constraints.", "labels": [], "entities": []}, {"text": "These constraints cannot always be evaluated at the level they are formulated (e.g. a feature value is not yet known) bu~t have to be evaluated later and must be true throughout the whole parsing or generation process.", "labels": [], "entities": []}, {"text": "The development of principled-based approaches to language processing also require the definition of more abstract formal systems to handle in an adequate way these principles.", "labels": [], "entities": []}, {"text": "Principles indeed often apply not at grammar rule level but they involve a large part of a parse tree.", "labels": [], "entities": []}, {"text": "They must be expressed by a constraint system which is global to the whole grammar and not local to a rule, as for example, in DCGs.", "labels": [], "entities": []}, {"text": "These brief considerations have motivated our approach: syntactic rules are viewed as type constructions on which constraints arc applied.", "labels": [], "entities": []}, {"text": "These constraints are themselves part of the type.", "labels": [], "entities": []}, {"text": "To give an appropriate expressive power to constraints and an efficient interpretation, they are interpreted within the Constraint Logic Programming framework.", "labels": [], "entities": [{"text": "Constraint Logic Programming", "start_pos": 120, "end_pos": 148, "type": "TASK", "confidence": 0.6702482203642527}]}, {"text": "In the next sections, we introduce our description language based on types and constraints.", "labels": [], "entities": []}, {"text": "We then give motivational examples which clarify its use.", "labels": [], "entities": []}, {"text": "Then we give its procedural interpretation and a constraint resolution mechanism system.", "labels": [], "entities": [{"text": "procedural interpretation", "start_pos": 17, "end_pos": 42, "type": "TASK", "confidence": 0.6778172254562378}]}], "datasetContent": [], "tableCaptions": []}