{"title": [], "abstractContent": [{"text": "This paper presents a method for parsing associative Lambek grammars based on graph-theoretic properties.", "labels": [], "entities": [{"text": "parsing associative Lambek grammars", "start_pos": 33, "end_pos": 68, "type": "TASK", "confidence": 0.8480696082115173}]}, {"text": "Connection graphs, which area simplified version of proof-nets, are actually a mere conservative extension of the earlier method of syntactic connexion, discovered by Ajduckiewicz [1935].", "labels": [], "entities": []}, {"text": "The method amounts to find alternating spanning trees in graphs.", "labels": [], "entities": []}, {"text": "A sketch of an algorithm for finding such a tree is provided.", "labels": [], "entities": []}, {"text": "Interesting properties of time-complexity for this method are expected.", "labels": [], "entities": []}, {"text": "It has some similarities with chart-parsing ([KOnig, 1991, 1992], [Hepple, 1992]) but is different at least in the fact that intervals are here edges and words are vertices (or trees) instead of the contrary in classical chart-parsing.", "labels": [], "entities": []}], "introductionContent": [{"text": "In this paper, we present a method for parsing Lambek grammars based on graph-theoretic properties.", "labels": [], "entities": [{"text": "parsing Lambek grammars", "start_pos": 39, "end_pos": 62, "type": "TASK", "confidence": 0.841255764166514}]}, {"text": "We expect that it maybe done efficiently by an algorithm (time-polynomial even in the worst case) which aims at finding an alternating spanning tree in a graph.", "labels": [], "entities": []}, {"text": "We do not give the explicit formulation of such an algorithm in this paper: we will only give an idea and an illustration of it.", "labels": [], "entities": []}, {"text": "This paper is thus mostly devoted to the properties on which the method is based.", "labels": [], "entities": []}, {"text": "We call connection graphs the special kind of proof-nets we explore, just in order to make explicit some difference with the usual method of proof-nets, as it can be found in and], but the two concepts are very similar.", "labels": [], "entities": []}, {"text": "In many respects, connection graphs area mere conservative extension of the earlier method of syntactic connection, discovered by Ajduckiewicz.", "labels": [], "entities": [{"text": "syntactic connection", "start_pos": 94, "end_pos": 114, "type": "TASK", "confidence": 0.7396506667137146}]}, {"text": "The method amounts to link the nodes of an ordered sequence of trees in such away that properties of connexion, \"non overlapping\", acyclicity and \"strong connectivity\" are verified.", "labels": [], "entities": []}, {"text": "Connection graphs are simpler than proof-nets in that they loose some information.", "labels": [], "entities": []}, {"text": "As they are here formulated, they are only convenient for the associative version of the product-free Lambek calculus.", "labels": [], "entities": []}, {"text": "One of their advantages lies in the geometrical viewpoint they provide on the proofs of a sequent.", "labels": [], "entities": []}, {"text": "By means of this viewpoint, questions of provability maybe reduced to graphtheoretical problems.", "labels": [], "entities": []}, {"text": "For instance, every reading of a sentence is provided by an alternating spanning tree.", "labels": [], "entities": []}, {"text": "In many aspects, the method resembles the well known method of chart-parsing.", "labels": [], "entities": []}, {"text": "Ktnig was the first to apply chart-parsing to Lambek calculus. has recently improved this application.", "labels": [], "entities": []}, {"text": "An obvious difference with the method proposed here lies in the fact that, in ours, words are points and intervals between them are edges instead of the contrary in chart-parsing.", "labels": [], "entities": []}, {"text": "In both cases, computational advantages are found by keeping correct partial analyses after they have been obtained.", "labels": [], "entities": []}, {"text": "A chart is actually used in both methods.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}