{"title": [{"text": "Head-driven Parsing for Lexicalist Grammars: Experimental Results", "labels": [], "entities": []}], "abstractContent": [{"text": "We present evidence that head-driven parsing strategies lead to efficiency gains over standard parsing strategies, for lexicalist, concatenative and unification-based grammars.", "labels": [], "entities": []}, {"text": "A head-driven parser applies a rule only after a phrase matching the head has been derived.", "labels": [], "entities": []}, {"text": "By instantiating the head of the rule important information is obtained about the left-hand-side and the other elements of the right-hand-side.", "labels": [], "entities": []}, {"text": "We have used two different head-driven parsers and a number of standard parsers to parse with lexicalist grammars for English and for Dutch.", "labels": [], "entities": []}, {"text": "The results indicate that for important classes of lexicalist grammars it is fruitful to apply parsing strategies which are sensitive to the linguistic notion 'head'.", "labels": [], "entities": []}], "introductionContent": [{"text": "Lexicalist grammar formalisms, such as Head-driven Phrase Structure Grammar (HPSG) and Categorial Unification Grammar (CUG) have two characteristic properties.", "labels": [], "entities": [{"text": "Head-driven Phrase Structure Grammar (HPSG)", "start_pos": 39, "end_pos": 82, "type": "TASK", "confidence": 0.7062374821731022}]}, {"text": "Lexical elements and phrases are associated with categories that have considerable internal structure.", "labels": [], "entities": []}, {"text": "Second, instead of construction specific rules, a small set of generic rule schemata is used.", "labels": [], "entities": []}, {"text": "Consequently, the set of constituent structures defined by a grammar cannot be 'read off' the rule set directly, but is defined by the interaction of the rule schemata and the lexicM categories.", "labels": [], "entities": []}, {"text": "Applying standard parsing algorithms to such grammars is unsatisfactory fora number of reasons.", "labels": [], "entities": []}, {"text": "Earley parsing is intractable in general, as the rule set. is simply too general.", "labels": [], "entities": []}, {"text": "For some grammars, naive top-down prediction may even fail to terminate.", "labels": [], "entities": []}, {"text": "therefore proposes a modified version of the Earley-parser, using restricted topdown prediction.", "labels": [], "entities": []}, {"text": "While this modification leads to termination of the prediction step, in practice it easily leads to a trivial top-down prediction step, thus leading to inferior performance.", "labels": [], "entities": []}, {"text": "Bottom-up parsing is far more attractive for lexicalist formalisms, as it is driven by the syntactic information associated with lexical elements.", "labels": [], "entities": [{"text": "Bottom-up parsing", "start_pos": 0, "end_pos": 17, "type": "TASK", "confidence": 0.5404742658138275}]}, {"text": "Certain inadequacies remain, however.", "labels": [], "entities": []}, {"text": "Most importantly, the selection of rules to be considered for application may not be very efficient.", "labels": [], "entities": []}, {"text": "Consider, for instance, the following DCG rule: s([ ]) -~ Arg, vp().", "labels": [], "entities": [{"text": "Arg", "start_pos": 58, "end_pos": 61, "type": "METRIC", "confidence": 0.9909466505050659}]}, {"text": "(1) A parser in which application of a rule is driven by the left-most daughter, as it is for instance in a standard bottom-up active chart parser, will consider the application of rule (1) each time an arbitrary constituent Arg is derived.", "labels": [], "entities": []}, {"text": "For a bottom-up active chart parser, for instance, this may lead to the introduction of large amounts of active items.", "labels": [], "entities": [{"text": "bottom-up active chart parser", "start_pos": 6, "end_pos": 35, "type": "TASK", "confidence": 0.6643264293670654}]}, {"text": "Most of these items will be useless.", "labels": [], "entities": []}, {"text": "For instance, if a determiner is derived, there is no need to invoke the rule in (1), as there are simply no vP's selecting a determiner as subject.", "labels": [], "entities": []}, {"text": "Parsers in which the application of a rule is driven by the rightmost daughter, such as shift-reduce and inactive bottom-up chart parsers, encounter a similar problem for rules such as.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: The parsers used in the experiment", "labels": [], "entities": []}, {"text": " Table 2: Results for the English grammar", "labels": [], "entities": [{"text": "English grammar", "start_pos": 26, "end_pos": 41, "type": "DATASET", "confidence": 0.825101763010025}]}, {"text": " Table 3: Results for the Dutch grammar. For parsers which did not succeed within a given period, the entry  in the table has not been filled in.", "labels": [], "entities": [{"text": "Dutch grammar", "start_pos": 26, "end_pos": 39, "type": "TASK", "confidence": 0.6340202689170837}]}, {"text": " Table 4: Comparison of the size of the parse forest for the left-corner and head-corner parser for a few (longer)  sentences.", "labels": [], "entities": []}]}