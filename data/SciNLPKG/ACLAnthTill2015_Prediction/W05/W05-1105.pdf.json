{"title": [{"text": "The evolution of dominance constraint solvers", "labels": [], "entities": [{"text": "dominance constraint solvers", "start_pos": 17, "end_pos": 45, "type": "TASK", "confidence": 0.751052995522817}]}], "abstractContent": [{"text": "We describe the evolution of solvers for dominance constraints, a formalism used in underspecified semantics, and present anew graph-based solver using charts.", "labels": [], "entities": []}, {"text": "An evaluation on real-world data shows that each solver (including the new one) is significantly faster than its predecessors.", "labels": [], "entities": []}, {"text": "We believe that our strategy of successively tailoring a powerful formalism to the actual inputs is more generally applicable.", "labels": [], "entities": []}], "introductionContent": [{"text": "In many areas of computational linguistics, there is a tension between a need for powerful formalisms and the desire for efficient processing.", "labels": [], "entities": [{"text": "computational linguistics", "start_pos": 17, "end_pos": 42, "type": "TASK", "confidence": 0.7402080297470093}]}, {"text": "Expressive formalisms are useful because they allow us to specify linguistic facts at the right level of abstraction, and in away that supports the creation and maintenance of large language resources.", "labels": [], "entities": []}, {"text": "On the other hand, by choosing a more powerful formalism, we typically run the risk that our processing tasks (say, parsing or inference) can no longer be performed efficiently.", "labels": [], "entities": []}, {"text": "One way to address this tension is to switch to simpler formalisms.", "labels": [], "entities": []}, {"text": "This makes processing more efficient, but sacrifices the benefits of expressive formalisms in terms of modelling.", "labels": [], "entities": []}, {"text": "Another common strategy is to simply use the powerful formalisms anyway.", "labels": [], "entities": []}, {"text": "This sometimes works pretty well in practice, but a system builtin this way cannot give any runtime guarantees, and may become slow for certain inputs unpredictably.", "labels": [], "entities": []}, {"text": "In this paper, we advocate a third option: Use a general, powerful formalism, analyse what makes it complex and what inputs actually occur in practice, and then find a restricted fragment of the formalism that supports all practical inputs and can be processed efficiently.", "labels": [], "entities": []}, {"text": "We demonstrate this approach by describing the evolution of solvers for dominance constraints), a certain formalism used for the underspecified description of scope ambiguities in computational semantics.", "labels": [], "entities": []}, {"text": "General dominance constraints have an NPcomplete satisfiability problem, but normal dominance constraints, which subsume all constraints that are used in practice, have linear-time satisfiability and can be solved extremely efficiently.", "labels": [], "entities": []}, {"text": "We describe a sequence of four solvers, ranging from a purely logic-based saturation algorithm () over a solver based on constraint programming) to efficient solvers based on graph algorithms ().", "labels": [], "entities": []}, {"text": "The first three solvers have been described in the literature before, but we also present anew variant of the graph solver that uses caching to obtain a considerable speedup.", "labels": [], "entities": [{"text": "solvers", "start_pos": 16, "end_pos": 23, "type": "TASK", "confidence": 0.9612292051315308}, {"text": "graph solver", "start_pos": 110, "end_pos": 122, "type": "TASK", "confidence": 0.7254778444766998}]}, {"text": "Finally we present anew evaluation that compares all four solvers with each other and with a different underspecification solver from the LKB grammar development system).", "labels": [], "entities": [{"text": "LKB grammar development system", "start_pos": 138, "end_pos": 168, "type": "DATASET", "confidence": 0.9275180399417877}]}, {"text": "The paper is structured as follows.", "labels": [], "entities": []}, {"text": "We will first sketch the problem that our algorithms solve (Section 2).", "labels": [], "entities": []}, {"text": "Then we present the solvers (Section 3) and conclude with the evaluation (Section 4).", "labels": [], "entities": [{"text": "solvers", "start_pos": 20, "end_pos": 27, "type": "TASK", "confidence": 0.9694398045539856}]}], "datasetContent": [], "tableCaptions": []}