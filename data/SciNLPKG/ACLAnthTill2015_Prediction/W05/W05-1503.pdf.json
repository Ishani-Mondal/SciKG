{"title": [{"text": "Switch Graphs for Parsing Type Logical Grammars *", "labels": [], "entities": [{"text": "Parsing Type Logical Grammars", "start_pos": 18, "end_pos": 47, "type": "TASK", "confidence": 0.8821902573108673}]}], "abstractContent": [{"text": "Parsing in type logical grammars amounts to theorem proving in a substructural logic.", "labels": [], "entities": [{"text": "Parsing in type logical grammars", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.8518917918205261}, {"text": "theorem proving", "start_pos": 44, "end_pos": 59, "type": "TASK", "confidence": 0.7159180492162704}]}, {"text": "This paper takes the proof net presentation of Lambek's associative calculus as a case study.", "labels": [], "entities": []}, {"text": "It introduces switch graphs for online maintenance of the Danos-Regnier acyclicity condition on proof nets.", "labels": [], "entities": []}, {"text": "Early detection of Danos-Regnier acyclicity violations supports early failure in shift-reduce parsers.", "labels": [], "entities": []}, {"text": "Normalized switch graphs represent the combinatorial potential of a set of analyses derived from lexical and structural ambiguities.", "labels": [], "entities": []}, {"text": "Packing these subanalyses and memoizing the results leads directly to a dynamic programming algorithm for Lambek grammars.", "labels": [], "entities": []}], "introductionContent": [{"text": "Following, we take the goal of a theory of grammar to be that of assigning semantic terms to linguistic expressions.", "labels": [], "entities": []}, {"text": "Type logical grammar is a paradigm for developing grammatical theories based on a strong notion of typing for natural language expressions.", "labels": [], "entities": [{"text": "Type logical grammar", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.7287663618723551}]}, {"text": "Specifically, each linguistic expression is assigned a syntactic type and a semantic term.", "labels": [], "entities": []}, {"text": "For instance, the expression \"John read the book\" of English might be assigned a syntactic type Sand the semantic term read(the(book))(j), * Supported by CICYT project TIC2002-04019-C03-01.", "labels": [], "entities": []}, {"text": "the expression \"book that John read\" the term that(\u03bbx.read(x)(j))(book) and type CN, and \"person that read the book\" the type CN and term that(\u03bby.read(the(book))(y))(person).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}