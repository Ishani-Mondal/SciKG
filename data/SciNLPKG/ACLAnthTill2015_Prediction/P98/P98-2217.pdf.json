{"title": [{"text": "A tabular interpretation of a class of 2-Stack Automata", "labels": [], "entities": []}], "abstractContent": [{"text": "The paper presents a tabular interpretation fora kind of 2-Stack Automata.", "labels": [], "entities": []}, {"text": "These automata maybe used to describe various parsing strategies, ranging from purely top-down to purely bottom-up, for LIGs and TAGs.", "labels": [], "entities": []}, {"text": "The tabular interpretation ensures, for all strategies, a time complexity in O(n 6) and space complexity in O(n 5) where n is the length of the input string.", "labels": [], "entities": []}], "introductionContent": [{"text": "2-Stack automata have been identified as possible operational devices to describe parsing strategies for Linear Indexed Grammars or Tree Adjoining Grammars (mirroring the traditional use of Push-Down Automata for ContextFree Grammars).", "labels": [], "entities": []}, {"text": "Different variants of 2SA (or not so distant Embedded Push-Down Automata) have been proposed, some to describe top-down strategies, some to describe bottom-up strategies), but none (that we know) that are able to describe both kinds of strategies.", "labels": [], "entities": []}, {"text": "The same dichotomy also exists in the different tabular algorithms that has been proposed for specific parsing strategies with complexity ranging from O(n 6) for bottom-up strategies to O(n 9) for prefixvalid top-down strategies (with the exception of a O(n 6) tabular interpretation of a prefix-valid hybrid strategy).", "labels": [], "entities": []}, {"text": "It must also be noted that the different tabular algorithms maybe difficult to understand and it is often unclear to know if the algorithms still hold for different strategies.", "labels": [], "entities": []}, {"text": "This paper overcomes these problems by (a) introducing strongly-driven 2SA that maybe used to describe parsing strategies for TAGs and LIGs, ranging from purely top-down to purely bottom-up, and (b) presenting a tabular interpretation of these automata in time complexity O(n 6) and space complexity O(nS).", "labels": [], "entities": []}, {"text": "The tabular interpretation follows the principles of Dynamic Programming: the derivations are broken into elementary sub-derivations that may (a) be combined in different contexts to retrieve all possible derivations and (b) be represented in a compact way by items, allowing tabulation.", "labels": [], "entities": []}, {"text": "The strongly-driven 2SA are introduced and motivated in Section 1.", "labels": [], "entities": [{"text": "2SA", "start_pos": 20, "end_pos": 23, "type": "TASK", "confidence": 0.727051317691803}]}, {"text": "We illustrate in Sections 2 and 3 their power by describing several parsing strategies for LIGs and TAGs.", "labels": [], "entities": []}, {"text": "Items are presented in Section 4.", "labels": [], "entities": []}, {"text": "Section 5 lists the rules to combine items and transitions and establishes correctness theorems.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}