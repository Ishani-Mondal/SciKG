{"title": [{"text": "Translating a Unification Grammar with Disjunctions into Logical Constraints", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper proposes a method for generating a logical-constraint-based internal representation from a unification grammar formalism with disjunctive information.", "labels": [], "entities": []}, {"text": "Unification grammar formalisms based on path equations and lists of pairs of labels and values are better than those based on first-order terms in that the former is easier to describe and to understand.", "labels": [], "entities": []}, {"text": "Parsing with term-based internal representations is more efficient than parsing with graph-based representations.", "labels": [], "entities": [{"text": "Parsing", "start_pos": 0, "end_pos": 7, "type": "TASK", "confidence": 0.9808547496795654}]}, {"text": "Therefore, it is effective to translate unification grammar formalism based on path equations and lists of pairs of labels and values into a term-based internal representation.", "labels": [], "entities": [{"text": "unification grammar formalism", "start_pos": 40, "end_pos": 69, "type": "TASK", "confidence": 0.8979079524676005}]}, {"text": "Previous translation methods cannot deal with disjunctive feature descriptions, which reduce redundancies in the grammar and make parsing efficient.", "labels": [], "entities": []}, {"text": "Since the proposed method translates a formalism without expanding disjunctions, parsing with the resulting representation is efficient.", "labels": [], "entities": []}], "introductionContent": [{"text": "The objective of our research is to build a natural language understanding system that is based on unification.", "labels": [], "entities": [{"text": "natural language understanding", "start_pos": 44, "end_pos": 74, "type": "TASK", "confidence": 0.6838608384132385}]}, {"text": "The reason we have chosen a unification-based approach is that it enables us to describe grammar declaratively, making the development and amendment of grammar easy.", "labels": [], "entities": []}, {"text": "Analysis systems that are based on unification grammars can be classified into two groups from the viewpoint of the ways feature structures are represented: (a) those using labeled, directed graphs and (b) those using first-order terms.", "labels": [], "entities": []}, {"text": "In addition to internal representation, grammar formalisms can be classified into two groups, (i) those that describe feature structures with path equations and lists of pairs of labels and values, and (ii) those that describe feature structures with first-order terms; Tokunaga et * Presently with Japan Advanced Institute of.", "labels": [], "entities": [{"text": "Japan Advanced Institute", "start_pos": 299, "end_pos": 323, "type": "DATASET", "confidence": 0.9449766476949056}]}, {"text": "Since formalisms (i) are used in the family of the PATR parsing systems, hereafter they will be called PATR-Iike formalisms.", "labels": [], "entities": [{"text": "PATR parsing", "start_pos": 51, "end_pos": 63, "type": "TASK", "confidence": 0.765384316444397}, {"text": "PATR-Iike", "start_pos": 103, "end_pos": 112, "type": "DATASET", "confidence": 0.8158819079399109}]}, {"text": "Most of the previous systems are either ones that generate representation (a) from formalisms (i) or ones that generate representation (b) from formalisms (ii).", "labels": [], "entities": []}, {"text": "However, representation (b) is superior, and formalism (i) is far better.", "labels": [], "entities": []}, {"text": "Representation (b) is superior for the following two reasons.", "labels": [], "entities": [{"text": "Representation", "start_pos": 0, "end_pos": 14, "type": "METRIC", "confidence": 0.8109357953071594}]}, {"text": "First, unification of terms is more efficient of that of graphs because the data structure of terms is simpler (.", "labels": [], "entities": []}, {"text": "l Second, it is easy to represent and process named disjunctions) in the term-based representation.", "labels": [], "entities": []}, {"text": "Named disjunctions are effective when two or more disjunctive feature values depend on each other.", "labels": [], "entities": []}, {"text": "The treatment of named disjunctions in graph unification requires a complex process, while it is simple in our logical-constraint-based representations.", "labels": [], "entities": [{"text": "graph unification", "start_pos": 39, "end_pos": 56, "type": "TASK", "confidence": 0.7755168080329895}]}, {"text": "Formalism (i) is better because term-based formalism is problematic in that readers need to memorize the correspondence between arguments and features and it is not easy to add new features or delete features (.", "labels": [], "entities": []}, {"text": "Therefore, it is effective to translate formalism (i) into representation (b).", "labels": [], "entities": []}, {"text": "Previous translation methods 2 are problematic in that they cannot deal with disjunctive feature descriptions, which reduce redundancies in grammar.", "labels": [], "entities": []}, {"text": "Moreover, incorporating disjunctive information into internal representation makes parsing more efficient.", "labels": [], "entities": [{"text": "parsing", "start_pos": 83, "end_pos": 90, "type": "TASK", "confidence": 0.9781045317649841}]}, {"text": "This paper presents a method for translating grammar formalism with disjunctive information based on path equations and lists of pairs of labels and values into term-I Since unspecified features are represented by variables in term unification, when most of the features are unspecified, it is inefficient to represent feature structures by terms.", "labels": [], "entities": [{"text": "term unification", "start_pos": 227, "end_pos": 243, "type": "TASK", "confidence": 0.7769632339477539}]}, {"text": "In current linguistic theories such as HPSG (, however, thanks to the type specifications, the number of features that a feature structure can have is reduced, so it does not cause as much trouble.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 39, "end_pos": 43, "type": "DATASET", "confidence": 0.9328858256340027}]}, {"text": "2Methods that generate representation (b) after generating representation (a) are included.", "labels": [], "entities": []}, {"text": "based representations, without expanding disjunctions.", "labels": [], "entities": []}, {"text": "The formalism used here is feature-based formalism with disjunctively defined macros, an extension of the PATR-Iike formalisms that incorporates a description of disjunctive information.", "labels": [], "entities": []}, {"text": "The representation used here is logical-constraint-based grammar representation (LCGR), in which disjunctive feature structures are represented by Horn clauses.", "labels": [], "entities": [{"text": "logical-constraint-based grammar representation (LCGR)", "start_pos": 32, "end_pos": 86, "type": "TASK", "confidence": 0.7480034728844961}]}], "datasetContent": [{"text": "The advantage of this method compared to the previous methods is that it can translate without expanding disjunctions.", "labels": [], "entities": []}, {"text": "To show this, we compared the time taken for two analyses: the first using a grammar translated into terms after expanding disjunctions 6 and the second using a grammar translated without expanding disjunctions through our method.", "labels": [], "entities": []}, {"text": "The computation times were measured using a bottom-up chart parser in Allegro Common Lisp 4.3 running on Digital Unix 3.2 on DEC Alpha station 500/333MHz.", "labels": [], "entities": [{"text": "DEC Alpha station 500/333MHz", "start_pos": 125, "end_pos": 153, "type": "DATASET", "confidence": 0.9107363224029541}]}, {"text": "It employs constraint projection as an efficient constraint transformation method.", "labels": [], "entities": [{"text": "constraint projection", "start_pos": 11, "end_pos": 32, "type": "TASK", "confidence": 0.733977422118187}]}, {"text": "We measured the time for computing all parses.", "labels": [], "entities": []}, {"text": "We used a Japanese grammar based on Japanese Phrase Structure Grammar (JPSG) that covers fundamental grammatical constructions of Japanese sentences.", "labels": [], "entities": [{"text": "Japanese Phrase Structure Grammar (JPSG)", "start_pos": 36, "end_pos": 76, "type": "TASK", "confidence": 0.5869519412517548}]}, {"text": "For all of 21 example sentences (5 to 16 words), the time taken for analysis using the grammar translated without disjunction expansion was shorter (43% to 72%).", "labels": [], "entities": []}, {"text": "This demonstrates the advantage of our method.", "labels": [], "entities": []}], "tableCaptions": []}