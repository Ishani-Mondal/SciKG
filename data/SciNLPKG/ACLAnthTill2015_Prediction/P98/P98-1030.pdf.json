{"title": [{"text": "Terminology Finite-State Preprocessing for Computational LFG", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper presents a technique to deal with multiword nominal terminology in a computational Lexical Functional Grammar.", "labels": [], "entities": [{"text": "multiword nominal terminology", "start_pos": 45, "end_pos": 74, "type": "TASK", "confidence": 0.6906558175881704}, {"text": "computational Lexical Functional Grammar", "start_pos": 80, "end_pos": 120, "type": "TASK", "confidence": 0.5929092764854431}]}, {"text": "This method treats multiword terms as single tokens by modifying the preprocessing stage of the grammar (tokenization and morphological analysis), which consists of a cascade of two-level finite-state automata (transducers).", "labels": [], "entities": []}, {"text": "We present here how we build the transducers to take terminology into account.", "labels": [], "entities": []}, {"text": "We tested the method by parsing a small corpus with and without this treatment of multiword terms.", "labels": [], "entities": [{"text": "parsing", "start_pos": 24, "end_pos": 31, "type": "TASK", "confidence": 0.9659896492958069}]}, {"text": "The number of parses and parsing time decrease without affecting the relevance of the results.", "labels": [], "entities": [{"text": "parses", "start_pos": 14, "end_pos": 20, "type": "TASK", "confidence": 0.9431517124176025}, {"text": "parsing", "start_pos": 25, "end_pos": 32, "type": "TASK", "confidence": 0.9565258026123047}]}, {"text": "Moreover, the method improves the perspicuity of the analyses .", "labels": [], "entities": [{"text": "perspicuity", "start_pos": 34, "end_pos": 45, "type": "METRIC", "confidence": 0.9838036894798279}]}], "introductionContent": [{"text": "The general issue we are dealing with here is to determine whether there is an advantage to treating multiword expressions as single tokens, by recognizing them before parsing.", "labels": [], "entities": []}, {"text": "Possible advantages are the reduction of ambiguity in the parse results, perspicuity in the structure of analyses, and reduction in parsing time.", "labels": [], "entities": [{"text": "parsing", "start_pos": 132, "end_pos": 139, "type": "TASK", "confidence": 0.9712117314338684}]}, {"text": "The possible disadvantage is the loss of valid analyses.", "labels": [], "entities": []}, {"text": "There is probably no single answer to this issue, as there are many different kinds of multiword expressions.", "labels": [], "entities": []}, {"text": "This work follows the integration 1 of (French) fixed multiword expressions like a priori, and time expressions, like le 12jan-vier 1988, in the preprocessing stage.", "labels": [], "entities": []}, {"text": "Terminology is an interesting kind of multiword expressions because such expressions are almost but not completely fixed, and there is an intuition that you won't loose many good anal~This integration has been done by Fr6d~rique Segond.", "labels": [], "entities": [{"text": "Fr6d~rique Segond", "start_pos": 218, "end_pos": 235, "type": "DATASET", "confidence": 0.7756430059671402}]}, {"text": "yses by treating them as single tokens.", "labels": [], "entities": []}, {"text": "Moreover, terminology can be semi or fully automatically extracted.", "labels": [], "entities": []}, {"text": "Our goal in the present paper is to compare efficiency and syntactic coverage of a French LFG grammar on a technical text, with and without terminology recognition in the preprocessing stage.", "labels": [], "entities": [{"text": "efficiency", "start_pos": 44, "end_pos": 54, "type": "METRIC", "confidence": 0.9651753306388855}, {"text": "French LFG grammar", "start_pos": 83, "end_pos": 101, "type": "DATASET", "confidence": 0.7455480297406515}]}, {"text": "The preprocessing consists mainly in two stages: tokenization and morphological analysis.", "labels": [], "entities": [{"text": "tokenization", "start_pos": 49, "end_pos": 61, "type": "TASK", "confidence": 0.9755324125289917}]}, {"text": "Both stages are performed by use of finite-state lexical transducers.", "labels": [], "entities": []}, {"text": "In the following, we describe the insertion of terminology in these finite-state transducers, as well as the consequences of such an insertion on the syntactic analysis, in terms of number of valid analyses produced, parsing time and nature of the results.", "labels": [], "entities": []}, {"text": "We are part of a project, which aims at developing LFG grammars,, in parallel for French, English and German, (Butt et al., To appear).", "labels": [], "entities": []}, {"text": "The grammar is developed in a computational environment called XLE (Xerox Linguistic Environment),, which provides automatic parsing and generation, as well as an interface to the preprocessing tools we are describing.", "labels": [], "entities": [{"text": "parsing and generation", "start_pos": 125, "end_pos": 147, "type": "TASK", "confidence": 0.7227214674154917}]}], "datasetContent": [{"text": "The experiment reported here is very simple: it consists of parsing the technical corpus before and after integration of the morphological terms in the preprocessing components, using exactly the same grammar rules, and comparing the results obtained.", "labels": [], "entities": []}, {"text": "As the compounds are mainly nominal, they will be analyzed just as regular nouns by the grammar rules.", "labels": [], "entities": []}, {"text": "For example, if we parse the NP:  The results are straightforward: one observes a significant reduction in the number of parses as well as in the parsing time, and no change at all for sentences which do not contain technical terms.", "labels": [], "entities": []}, {"text": "Looking closer at the results shows that the parses ruled out by this method are semantically undesirable.", "labels": [], "entities": []}, {"text": "We discuss these results in the next section.", "labels": [], "entities": []}], "tableCaptions": []}