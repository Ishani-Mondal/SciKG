{"title": [{"text": "Formal aspects and parsing issues of dependency theory", "labels": [], "entities": []}], "abstractContent": [{"text": "The paper investigates the problem of providing a formal device for the dependency approach to syntax, and to link it with a parsing model.", "labels": [], "entities": []}, {"text": "After reviewing the basic tenets of the paradigm and the few existing mathematical results, we describe a dependency formalism which is able to deal with long-distance dependencies.", "labels": [], "entities": []}, {"text": "Finally, we present an Earley-style parser for the formalism and discuss the (polynomial) complexity results.", "labels": [], "entities": []}], "introductionContent": [{"text": "Many authors have developed dependency theories that cover cross-linguistically the most significant phenomena of natural language syntax: the approaches range from generative formalisms (), to lexically-based descriptions (, to hierarchical organizations of linguistic knowledge), to constrained categorial grammars.", "labels": [], "entities": []}, {"text": "Also, a number of parsers have been developed for some dependency frameworks)) () (Lombardo,, including a stochastic treatment) and an object-oriented parallel parsing method.", "labels": [], "entities": [{"text": "object-oriented parallel parsing", "start_pos": 135, "end_pos": 167, "type": "TASK", "confidence": 0.5865235726038615}]}, {"text": "However, dependency theories have never been explicitly linked to formal models.", "labels": [], "entities": []}, {"text": "Parsers and applications usually refer to grammars built around a core of dependency concepts, but there is a great variety in the description of syntactic constraints, from rules that are very similar to CFG productions to individual binary relations on words or syntactic categories).", "labels": [], "entities": []}, {"text": "know S UB/ SCOMP I ~likes SUB\u00a2 ~OBJ John beans.", "labels": [], "entities": [{"text": "S UB/ SCOMP I", "start_pos": 5, "end_pos": 18, "type": "METRIC", "confidence": 0.5837874591350556}, {"text": "OBJ John beans", "start_pos": 32, "end_pos": 46, "type": "DATASET", "confidence": 0.8054711023966471}]}, {"text": "A dependency tree for the sentence \"I know John likes beans\".", "labels": [], "entities": []}, {"text": "The leftward or rightward orientation of the edges represents the order constraints: the dependents that precede (respectively, follow) the headstand on its left (resp. right).", "labels": [], "entities": []}, {"text": "The basic idea of dependency is that the syntactic structure of a sentence is described in terms of binary relations (dependency relations) on pairs of words, ahead (parent), and a dependent (daughter), respectively; these relations usually form a tree, the dependency tree ().", "labels": [], "entities": []}, {"text": "The linguistic merits of dependency syntax have been widely debated (e.g.).", "labels": [], "entities": [{"text": "dependency syntax", "start_pos": 25, "end_pos": 42, "type": "TASK", "confidence": 0.862393707036972}]}, {"text": "Dependency syntax is attractive because of the immediate mapping of dependency trees on the predicate-arguments structure and because of the treatment of free-word order constructs ().", "labels": [], "entities": [{"text": "Dependency syntax", "start_pos": 0, "end_pos": 17, "type": "TASK", "confidence": 0.8360263407230377}]}, {"text": "Desirable properties of lexicalized formalisms, like finite ambiguity and decidability of string acceptance, intuitively hold for dependency syntax.", "labels": [], "entities": []}, {"text": "On the contrary, the formal studies on dependency theories are rare in the literature.", "labels": [], "entities": [{"text": "dependency theories", "start_pos": 39, "end_pos": 58, "type": "TASK", "confidence": 0.9164873957633972}]}, {"text": "showed that projective dependency grammars, expressed by dependency rules on syntactic categories, are weakly equivalent to context-free grammars.", "labels": [], "entities": []}, {"text": "And, in fact, it is possible to devise O(n 3) parsers for this formalism, or other projective variations).", "labels": [], "entities": []}, {"text": "On the controlled relaxation of projective constraints, has introduced the condition of pseudo\u00b0 projectivity, which provides some controlled looser constraints on arc crossing in a dependency tree, and has developed a polynomial parser based on a graph-structured stack.", "labels": [], "entities": []}, {"text": "have recently showed that the general recognition problem for non-projective dependency grammars (what they call discontinuous DG) is NP-complete.", "labels": [], "entities": []}, {"text": "They have devised a discontinuous DG with exclusively lexical categories (no traces, as most dependency theories do), and dealing with free word order constructs through a looser subtree ordering.", "labels": [], "entities": []}, {"text": "This formalism, considered as the most straightforward extension to a projective formalism, permits the reduction of the vertex cover problem to the dependency recognition problem, thus yielding the NP-completeness result.", "labels": [], "entities": [{"text": "dependency recognition", "start_pos": 149, "end_pos": 171, "type": "TASK", "confidence": 0.6999097913503647}]}, {"text": "However, even if banned from the dependency literature, the use of non lexical categories is only a notational variant of some graph structures already present in some formalisms (see, e.g., Word Grammar).", "labels": [], "entities": [{"text": "Word Grammar)", "start_pos": 191, "end_pos": 204, "type": "TASK", "confidence": 0.7095661560694376}]}, {"text": "This paper introduces a lexicalized dependency formalism, which deals with long distance dependencies, and a polynomial parsing algorithm.", "labels": [], "entities": [{"text": "polynomial parsing", "start_pos": 109, "end_pos": 127, "type": "TASK", "confidence": 0.6297767907381058}]}, {"text": "The formalism is projective, and copes with long-distance dependency phenomena through the introduction of non lexical categories.", "labels": [], "entities": []}, {"text": "The non lexical categories allow us to keep inalterate the condition of projectivity, encoded in the notion of derivation.", "labels": [], "entities": []}, {"text": "The core of the grammar relies on predicate-argument structures associated with lexical items, where the head is a word and dependents are categories linked by edges labelled with dependency relations.", "labels": [], "entities": []}, {"text": "Free word order constructs are dealt with by constraining displacements via a set data structure in the derivation relation.", "labels": [], "entities": []}, {"text": "The introduction of non lexical categories also permits the resolution of the inconsistencies pointed out by.", "labels": [], "entities": [{"text": "resolution", "start_pos": 60, "end_pos": 70, "type": "TASK", "confidence": 0.9660927057266235}]}, {"text": "The parser is an Earley type parser with a polynomial complexity, that encodes the dependency trees associated with a sentence.", "labels": [], "entities": []}, {"text": "The paper is organized as follows.", "labels": [], "entities": []}, {"text": "The next section presents a formal dependency system that describes the linguistic knowledge.", "labels": [], "entities": []}, {"text": "Section 3 presents an Earley-type parser: we illustrate the algorithm, trace an example, and discuss the complexity results.", "labels": [], "entities": []}, {"text": "Section 4 concludes the paper.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}