{"title": [], "abstractContent": [{"text": "Several methods are known for parsing languages generated by Tree Adjoining Grammars (TAGs) in O(n 6) worst case running time.", "labels": [], "entities": [{"text": "parsing languages generated by Tree Adjoining Grammars (TAGs)", "start_pos": 30, "end_pos": 91, "type": "TASK", "confidence": 0.871007889509201}]}, {"text": "In this paper we investigate which restrictions on TAGs and TAG derivations are needed in order to lower this O(n 6) time complexity, without introducing large runtime constants, and without losing any of the generative power needed to capture the syntactic constructions in natural language that can be handled by unrestricted TAGs.", "labels": [], "entities": []}, {"text": "In particular, we describe an algorithm for parsing a strict subclass of TAG in O(nS), and attempt to show that this subclass retains enough generative power to make it useful in the general case.", "labels": [], "entities": []}], "introductionContent": [{"text": "Several methods are known that can parse languages generated by Tree Adjoining Grammars (TAGs) in worst case time O(n6), where n is the length of the input string (see and references therein).", "labels": [], "entities": [{"text": "parse languages generated by Tree Adjoining Grammars (TAGs)", "start_pos": 35, "end_pos": 94, "type": "TASK", "confidence": 0.8353829443454742}]}, {"text": "Although asymptotically faster methods can be constructed, as discussed in, these methods are not of practical interest, due to large hidden constants.", "labels": [], "entities": []}, {"text": "More generally, in it has been argued that methods for TAG parsing running in time asymptotically faster than O(n 6) are unlikely to have small hidden constants.", "labels": [], "entities": [{"text": "TAG parsing", "start_pos": 55, "end_pos": 66, "type": "TASK", "confidence": 0.9582332670688629}]}, {"text": "A careful inspection of the proof provided in reveals that the source of the claimed computational complexity of TAG parsing resides in the fact that auxiliary trees can get adjunctions at (at least) two distinct nodes in their spine (the path connecting the root and the foot nodes).", "labels": [], "entities": [{"text": "TAG parsing", "start_pos": 113, "end_pos": 124, "type": "TASK", "confidence": 0.9702922105789185}]}, {"text": "The question then arises of whether the bound of two is tight.", "labels": [], "entities": []}, {"text": "More generally, in this paper we investigate which restrictions on TAGs are needed in order to lower the O(n 6) time complexity, still retaining the generative power that is needed to capture the syntactic constructions of natural language that unrestricted TAGs can handle.", "labels": [], "entities": [{"text": "O(n 6) time complexity", "start_pos": 105, "end_pos": 127, "type": "METRIC", "confidence": 0.7076855897903442}]}, {"text": "The contribution of this paper is twofold: \u2022 We define a strict subclass of TAG where adjunction of so-called wrapping trees at the spine is restricted to take place at no more than one distinct node.", "labels": [], "entities": []}, {"text": "We show that in this case the parsing problem for TAG can be solved in worst case time O(n5).", "labels": [], "entities": [{"text": "parsing", "start_pos": 30, "end_pos": 37, "type": "TASK", "confidence": 0.9741917252540588}, {"text": "TAG", "start_pos": 50, "end_pos": 53, "type": "TASK", "confidence": 0.6997190713882446}]}, {"text": "\u2022 We provide evidence that the proposed subclass still captures the vast majority of TAG analyses that have been currently proposed for the syntax of English and of several other languages.", "labels": [], "entities": []}, {"text": "Several restrictions on the adjunction operation for TAG have been proposed in the literature (.", "labels": [], "entities": [{"text": "TAG", "start_pos": 53, "end_pos": 56, "type": "TASK", "confidence": 0.9462710618972778}]}, {"text": "Differently from here, in all those works the main goal was one of characterizing, through the adjunction operation, the set of trees that can be generated by a context-free grammar (CFG).", "labels": [], "entities": []}, {"text": "For the sake of critical comparison, we discuss some common syntactic constructions found in current natural language TAG analyses, that can be captured by our proposal but fall outside of the restrictions mentioned above.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}