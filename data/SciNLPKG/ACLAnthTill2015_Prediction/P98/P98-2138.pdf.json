{"title": [{"text": "Combining Trigram and Winnow in Thai OCR Error Correction", "labels": [], "entities": [{"text": "Winnow", "start_pos": 22, "end_pos": 28, "type": "METRIC", "confidence": 0.9027653932571411}, {"text": "Thai", "start_pos": 32, "end_pos": 36, "type": "DATASET", "confidence": 0.6174224019050598}, {"text": "OCR Error Correction", "start_pos": 37, "end_pos": 57, "type": "METRIC", "confidence": 0.5383615791797638}]}], "abstractContent": [{"text": "For languages that have no explicit word boundary such as Thai, Chinese and Japanese, correcting words in text is harder than in English because of additional ambiguities in locating error words.", "labels": [], "entities": [{"text": "correcting words in text", "start_pos": 86, "end_pos": 110, "type": "TASK", "confidence": 0.8592295199632645}]}, {"text": "The traditional method handles this by hypothesizing that every substrings in the input sentence could be error words and trying to correct all of them.", "labels": [], "entities": []}, {"text": "In this paper, we propose the idea of reducing the scope of spelling correction by focusing only on dubious areas in the input sentence.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 60, "end_pos": 79, "type": "TASK", "confidence": 0.9486803412437439}]}, {"text": "Boundaries of these dubious areas could be obtained approximately by applying word segmentation algorithm and finding word sequences with low probability.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 78, "end_pos": 95, "type": "TASK", "confidence": 0.7513788640499115}]}, {"text": "To generate the candidate correction words, we used a modified edit distance which reflects the characteristic of Thai OCR errors.", "labels": [], "entities": [{"text": "edit distance", "start_pos": 63, "end_pos": 76, "type": "METRIC", "confidence": 0.8718588352203369}, {"text": "Thai OCR errors", "start_pos": 114, "end_pos": 129, "type": "DATASET", "confidence": 0.7575489481290182}]}, {"text": "Finally, a part-of-speech trigram model and Winnow algorithm are combined to determine the most probable correction.", "labels": [], "entities": []}], "introductionContent": [{"text": "Optical character recognition (OCR) is useful in a wide range of applications, such as office automation and information retrieval system.", "labels": [], "entities": [{"text": "Optical character recognition (OCR)", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.9112308621406555}, {"text": "information retrieval", "start_pos": 109, "end_pos": 130, "type": "TASK", "confidence": 0.8098749816417694}]}, {"text": "However, OCR in Thailand is still not widely used, partly because existing Thai OCRs are not quite satisfactory in terms of accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 124, "end_pos": 132, "type": "METRIC", "confidence": 0.9979808926582336}]}, {"text": "Recently, several research projects have focused on spelling correction for many types of errors including those from OCR.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 52, "end_pos": 71, "type": "TASK", "confidence": 0.8591486811637878}]}, {"text": "Nevertheless, the strategy is slightly different from language to language, since the characteristic of each language is different.", "labels": [], "entities": []}, {"text": "Two characteristics of Thai which make the task of error correction different from those of other languages are: (1) there is no explicit word boundary, and (2) characters are written in three levels; i.e., the middle, the upper and the lower levels.", "labels": [], "entities": [{"text": "error correction", "start_pos": 51, "end_pos": 67, "type": "TASK", "confidence": 0.6736859083175659}]}, {"text": "In order to solve the problem of OCR error correction, the first task is usually to detect error strings in the input sentence.", "labels": [], "entities": [{"text": "OCR error correction", "start_pos": 33, "end_pos": 53, "type": "TASK", "confidence": 0.9032097458839417}]}, {"text": "For languages that have explicit word boundary such as English in which each word is separated from the others by white spaces, this task is comparatively simple.", "labels": [], "entities": []}, {"text": "If the tokenized string is not found in the dictionary, it could bean error string or an unknown word.", "labels": [], "entities": []}, {"text": "However, for the languages that have no explicit word boundary such as Chinese, Japanese and Thai, this task is much more complicated.", "labels": [], "entities": []}, {"text": "Even without errors from OCR, it is difficult to determine word boundary in these languages.", "labels": [], "entities": []}, {"text": "The situation gets worse when noises are introduced in the text.", "labels": [], "entities": []}, {"text": "The existing approach for correcting the spelling error in the languages that have no word boundary assumes that all substrings in input sentence are error strings, and then tries to correct them.", "labels": [], "entities": [{"text": "correcting the spelling error", "start_pos": 26, "end_pos": 55, "type": "TASK", "confidence": 0.8050324767827988}]}, {"text": "This is computationally expensive since a large portion of the input sentence is correct.", "labels": [], "entities": []}, {"text": "The other characteristic of Thai writing system is that we have many levels for placing Thai characters and several characters can occupy more than one level.", "labels": [], "entities": []}, {"text": "These characters are easily connected to other characters in the upper or lower level.", "labels": [], "entities": []}, {"text": "These connected characters cause difficulties in the process of character segmentation which then cause errors in Thai OCR.", "labels": [], "entities": [{"text": "character segmentation", "start_pos": 64, "end_pos": 86, "type": "TASK", "confidence": 0.7268345206975937}]}, {"text": "Other than the above problems specific to Thai, real-word error is another source of errors that is difficult to correct.", "labels": [], "entities": []}, {"text": "Several previous works on spelling correction demonstrated that In this paper, a hybrid method for Thai OCR error correction is proposed.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 26, "end_pos": 45, "type": "TASK", "confidence": 0.9422237277030945}, {"text": "OCR error correction", "start_pos": 104, "end_pos": 124, "type": "TASK", "confidence": 0.7182001868883768}]}, {"text": "The method combines the part-of-speech (POS) trigram model with a feature-based model.", "labels": [], "entities": []}, {"text": "First, the POS trigram model is employed to correct non-word as well as real-word errors.", "labels": [], "entities": []}, {"text": "In this step, the number of non-word errors are mostly reduced, but some real-word errors still remain because the POS trigram model cannot capture some useful features in discriminating candidate words.", "labels": [], "entities": []}, {"text": "A feature-based approach using Winnow algorithm is then applied to correct the remaining errors.", "labels": [], "entities": []}, {"text": "In order to overcome the expensive computation cost of the existing approach, we propose the idea of reducing the scope of correction by using word segmentation algorithm to find the approximate error strings from the input sentence.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 143, "end_pos": 160, "type": "TASK", "confidence": 0.6953501254320145}]}, {"text": "Though the word segmentation algorithm cannot give the accurate boundary of an error string, many of them can give clues of unknown strings which maybe error strings.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 11, "end_pos": 28, "type": "TASK", "confidence": 0.7458778321743011}]}, {"text": "We can use this information to reduce the scope of correction from entire sentence to a more narrow scope.", "labels": [], "entities": []}, {"text": "Next, to capture the characteristic of Thai OCR errors, we have defined the modified edit distance and use it to enumerate plausible candidates which deviate from the word in question within k-edit distance.", "labels": [], "entities": [{"text": "Thai OCR errors", "start_pos": 39, "end_pos": 54, "type": "DATASET", "confidence": 0.6139723261197408}]}], "datasetContent": [{"text": "We have prepared the corpus containing about 9,000 sentences (140,000 words, 1,300,000 characters) for evaluating our methods.", "labels": [], "entities": []}, {"text": "The corpus is separated into two parts; the first part containing about 80 % of the whole corpus is used as a training set for both the trigram model and Winnow, and the rest is used as a test set.", "labels": [], "entities": [{"text": "Winnow", "start_pos": 154, "end_pos": 160, "type": "DATASET", "confidence": 0.8949065804481506}]}, {"text": "Based on the prepared corpus, experiments were conducted to compare our methods.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: The percentage of word error from  OCR", "labels": [], "entities": [{"text": "OCR", "start_pos": 45, "end_pos": 48, "type": "TASK", "confidence": 0.46794673800468445}]}, {"text": " Table 2: The percentage of corrected word er- rors after applying Trigram and Winnow", "labels": [], "entities": [{"text": "corrected word er- rors", "start_pos": 28, "end_pos": 51, "type": "METRIC", "confidence": 0.6640964150428772}, {"text": "Trigram", "start_pos": 67, "end_pos": 74, "type": "DATASET", "confidence": 0.9399491548538208}, {"text": "Winnow", "start_pos": 79, "end_pos": 85, "type": "DATASET", "confidence": 0.3957461416721344}]}]}