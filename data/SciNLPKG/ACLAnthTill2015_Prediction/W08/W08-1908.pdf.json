{"title": [{"text": "Extracting Sense Trees from the Romanian Thesaurus by Sense Segmentation & Dependency Parsing", "labels": [], "entities": [{"text": "Extracting Sense Trees from the Romanian Thesaurus", "start_pos": 0, "end_pos": 50, "type": "TASK", "confidence": 0.6927245812756675}, {"text": "Parsing", "start_pos": 86, "end_pos": 93, "type": "TASK", "confidence": 0.42600810527801514}]}], "abstractContent": [{"text": "This paper aims to introduce anew parsing strategy for large dictionary (thesauri) parsing, called Dictionary Sense Segmen-tation & Dependency (DSSD), devoted to obtain the sense tree, i.e. the hierarchy of the defined meanings, fora dictionary entry.", "labels": [], "entities": [{"text": "large dictionary (thesauri) parsing", "start_pos": 55, "end_pos": 90, "type": "TASK", "confidence": 0.7529424826304117}]}, {"text": "The real novelty of the proposed approach is that, contrary to dictionary 'standard' parsing, DSSD looks for and succeeds to separate the two essential processes within a dictionary entry parsing: sense tree construction and sense definition parsing.", "labels": [], "entities": [{"text": "dictionary 'standard' parsing", "start_pos": 63, "end_pos": 92, "type": "TASK", "confidence": 0.6446290969848633}, {"text": "dictionary entry parsing", "start_pos": 171, "end_pos": 195, "type": "TASK", "confidence": 0.6626866658528646}, {"text": "sense tree construction", "start_pos": 197, "end_pos": 220, "type": "TASK", "confidence": 0.6232794225215912}, {"text": "sense definition parsing", "start_pos": 225, "end_pos": 249, "type": "TASK", "confidence": 0.6930375297864279}]}, {"text": "The key tools to accomplish the task of (autonomous) sense tree building consist in defining the dictionary sense marker classes, establishing a tree-like hierarchy of these classes, and using a proper searching procedure of sense markers within the DSSD parsing algorithm.", "labels": [], "entities": [{"text": "sense tree building", "start_pos": 53, "end_pos": 72, "type": "TASK", "confidence": 0.7356414596239725}, {"text": "DSSD parsing", "start_pos": 250, "end_pos": 262, "type": "TASK", "confidence": 0.7270600199699402}]}, {"text": "A similar but more general approach, using the same techniques and data structures for (Romanian) free text parsing is SCD (Segmentation-Cohesion-Dependency) (Curteanu; 1988, 2006), which DSSD is inspired from.", "labels": [], "entities": [{"text": "free text parsing", "start_pos": 98, "end_pos": 115, "type": "TASK", "confidence": 0.686761736869812}]}, {"text": "A DSSD-based parser is implemented in Java, building currently 91% correct sense trees from DTLR (Dic\u0163ionarul Tezaur al", "labels": [], "entities": []}], "introductionContent": [{"text": "Since the last decade, researchers have proven the need for machine readable dictionaries.", "labels": [], "entities": []}, {"text": "The idea behind parsing a dictionary entry is the creation of a lexical-semantic tree of senses corresponding to the meanings that define the dictionary lexical entry.", "labels": [], "entities": [{"text": "parsing a dictionary entry", "start_pos": 16, "end_pos": 42, "type": "TASK", "confidence": 0.8250831216573715}]}, {"text": "The aim of this paper is to introduce anew parsing strategy for thesauri shallow parsing, called Dictionary Sense Segmentation & Dependency (DSSD), devoted to the task of extracting the sense tree, i.e. the hierarchy of the lexical-semantics defined meanings fora dictionary entry.", "labels": [], "entities": [{"text": "thesauri shallow parsing", "start_pos": 64, "end_pos": 88, "type": "TASK", "confidence": 0.5483930011590322}, {"text": "Dictionary Sense Segmentation & Dependency (DSSD)", "start_pos": 97, "end_pos": 146, "type": "TASK", "confidence": 0.5918446518480778}]}, {"text": "The concrete task which DSSD algorithm was used for is to obtain the sense tree from an entry of the Romanian Language Thesaurus (DTLR -Dic\u0163ionarul Tezaur al Limbii Rom\u00e2ne) within the eDTLR research project () devised for DTLR electronic acquisition and processing (.", "labels": [], "entities": [{"text": "Romanian Language Thesaurus (DTLR -Dic\u0163ionarul Tezaur al Limbii Rom\u00e2ne)", "start_pos": 101, "end_pos": 172, "type": "DATASET", "confidence": 0.7863325923681259}, {"text": "DTLR electronic acquisition and processing", "start_pos": 222, "end_pos": 264, "type": "TASK", "confidence": 0.7990922689437866}]}, {"text": "In order to obtain the sense tree fora headword, the dictionary entry is divided into primary and secondary senses, respecting a sense hierarchy introduced by sense markers.", "labels": [], "entities": []}, {"text": "For the DTLR dictionary, the sense markers hierarchy (presented in Section 3) includes 5 levels.", "labels": [], "entities": [{"text": "DTLR dictionary", "start_pos": 8, "end_pos": 23, "type": "DATASET", "confidence": 0.7836690247058868}]}, {"text": "Those are, from the topmost level: capital letter markers (A., B., etc.), Roman numeral markers (I., II., etc.), Arabic numeral markers (1., 2., etc.), filled diamond \u2666 and empty diamond \u25ca.", "labels": [], "entities": []}, {"text": "Besides the five levels, there exists also a special marker category, the so-called literal enumeration, consisting of lowercase letter markers a), b), c), etc.", "labels": [], "entities": []}, {"text": "The literal enumeration can appear at any of the 5 levels, as presented in Section 3.", "labels": [], "entities": []}, {"text": "Thus, using the sense markers, any dictionary entry is represented as a tree of senses, the lower levels being more specific instances of the higher levels.", "labels": [], "entities": []}, {"text": "For example, for the dictionary entry verb, the sense tree contains 3 senses corresponding to level 3, one of them having a sub-sense corresponding to level 5.", "labels": [], "entities": []}, {"text": "Each sense/sub-sense can have its own definition (gloss) or examples.", "labels": [], "entities": []}, {"text": "<entry> <hw>VERB</hw> <senses> <marker level=\"3\">1.", "labels": [], "entities": [{"text": "VERB", "start_pos": 12, "end_pos": 16, "type": "METRIC", "confidence": 0.8645156621932983}]}, {"text": "<definition>\u2026</definition> <marker level=\"5\">\u25ca <definition>\u2026</definition> </marker> </marker> <marker level=\"3\">2.", "labels": [], "entities": []}, {"text": "<definition>\u2026</definition> </marker> <marker level=\"3\">3.", "labels": [], "entities": []}, {"text": "<definition>\u2026</definition> </marker> </senses> </entry> The presented method can be applied to any dictionary, provided that a hierarchy of the sense markers of the dictionary is established.", "labels": [], "entities": []}, {"text": "The paper is organized as follows: Section 2 points out the characteristic features of DSSD strategy, discussing the special relationship between DSSD and SCD parsing strategy for general text, on one hand, and between DSSD and the standard dictionary entry parsing (DEP), on the other hand.", "labels": [], "entities": [{"text": "SCD parsing", "start_pos": 155, "end_pos": 166, "type": "TASK", "confidence": 0.7734498679637909}, {"text": "dictionary entry parsing (DEP)", "start_pos": 241, "end_pos": 271, "type": "TASK", "confidence": 0.7658417324225107}]}, {"text": "Section 3 presents the main components of the DSSD strategy: DTLR sense marker classes, their dependency hyper-tree structure, and the DSSD parsing algorithm.", "labels": [], "entities": [{"text": "DSSD", "start_pos": 46, "end_pos": 50, "type": "TASK", "confidence": 0.9416170120239258}, {"text": "DSSD parsing", "start_pos": 135, "end_pos": 147, "type": "TASK", "confidence": 0.8649566471576691}]}, {"text": "The final Section 4 discusses the current stage implementation (in Java) of the DSSD algorithm, exposing several parsed examples.", "labels": [], "entities": []}, {"text": "Possible sources of error and ambiguity in the DSSD parsing process are discussed, and further developments of DSSD analysis software are outlined.", "labels": [], "entities": [{"text": "DSSD parsing", "start_pos": 47, "end_pos": 59, "type": "TASK", "confidence": 0.9456908106803894}, {"text": "DSSD analysis", "start_pos": 111, "end_pos": 124, "type": "TASK", "confidence": 0.9295636415481567}]}], "datasetContent": [], "tableCaptions": []}