{"title": [{"text": "A Framework for Building Conversational Agents Based on a Multi-Expert Model", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper presents a novel framework for building symbol-level control modules of animated agents and robots having a spoken dialogue interface.", "labels": [], "entities": []}, {"text": "It features distributed modules called experts each of which is specialized to perform certain kinds of tasks.", "labels": [], "entities": []}, {"text": "A common interface that all experts must support is specified, and any kind of expert can be incorporated if it has the interface.", "labels": [], "entities": []}, {"text": "Several modules running in parallel coordinate the experts by accessing them through the interface, so that the whole system can achieve flexible control, such as interruption handling and parallel task execution.", "labels": [], "entities": [{"text": "interruption handling", "start_pos": 163, "end_pos": 184, "type": "TASK", "confidence": 0.6953216046094894}]}], "introductionContent": [{"text": "As much attention is recently paid to autonomous agents such as robots and animated agents, spoken dialogue is expected to be a natural interface between users and such agents.", "labels": [], "entities": []}, {"text": "Our objective is to establish a framework for developing the intelligence module of such agents.", "labels": [], "entities": []}, {"text": "In establishing such a framework, we focus on achieving the following features.", "labels": [], "entities": []}, {"text": "(1) Multi-domain dialogue: Since agents are usually expected to perform multiple kinds of tasks, they need to work in multiple domains and switch domains according to user utterances.", "labels": [], "entities": [{"text": "Multi-domain dialogue", "start_pos": 4, "end_pos": 25, "type": "TASK", "confidence": 0.7654865980148315}]}, {"text": "(2) Interruption handling: It is crucial for human-agent interaction to be able to handle users' interrupting utterances while speaking or performing tasks.", "labels": [], "entities": [{"text": "Interruption handling", "start_pos": 4, "end_pos": 25, "type": "TASK", "confidence": 0.9182056784629822}]}, {"text": "(3) Parallel task execution: Agents, especially robots that perform physical actions, are expected to be able to execute multiple tasks in parallel when possible.", "labels": [], "entities": [{"text": "Parallel task execution", "start_pos": 4, "end_pos": 27, "type": "TASK", "confidence": 0.6406945983568827}]}, {"text": "For example, robots should be able to engage in a dialogue while moving.", "labels": [], "entities": []}, {"text": "(4) Extensibility: Since the agents can be used fora variety of tasks, various strategies for dialogue and task planning should be able to be incorporated.", "labels": [], "entities": []}, {"text": "Although a number of models for conversational agents have been proposed, no model has all of the above properties.", "labels": [], "entities": []}, {"text": "Several multi-domain dialogue system models have been proposed and they are extensible, but it is not clear how they handle interruptions to system utterances and actions (e.g.,,).", "labels": [], "entities": []}, {"text": "There are several spoken dialogue agents and robots that can handle interruptions thanks to their asynchronous control (), they do not focus on making it easy to add new dialogue domains with a variety of dialogue strategies.", "labels": [], "entities": []}, {"text": "This paper presents a framework called RIME (Robot Intelligence based on Multiple Experts), which employs modules called experts.", "labels": [], "entities": [{"text": "RIME", "start_pos": 39, "end_pos": 43, "type": "METRIC", "confidence": 0.8731001019477844}]}, {"text": "1 Each expert is specialized for achieving certain kinds of tasks by performing physical actions and engaging in dialogues.", "labels": [], "entities": []}, {"text": "It corresponds to the symbol-level control module of a system that can engage in tasks in a single small domain, and it employs fixed control strategies.", "labels": [], "entities": []}, {"text": "Only some of the experts take charge in understanding user utterances and decide actions.", "labels": [], "entities": [{"text": "understanding user utterances", "start_pos": 40, "end_pos": 69, "type": "TASK", "confidence": 0.7599191268285116}]}, {"text": "The basic idea behind RIME is to specify a common interface of experts for coordinating them and to achieve flexible control.", "labels": [], "entities": [{"text": "RIME", "start_pos": 22, "end_pos": 26, "type": "TASK", "confidence": 0.761498212814331}]}, {"text": "In RIME, several mod-ules run in parallel for coordinating experts.", "labels": [], "entities": [{"text": "RIME", "start_pos": 3, "end_pos": 7, "type": "DATASET", "confidence": 0.7904784679412842}]}, {"text": "They are understander, which is responsible for speech understanding, action selector, which is responsible for selecting actions, and task planner, which is responsible for deciding which expert should work to achieve tasks.", "labels": [], "entities": [{"text": "speech understanding", "start_pos": 48, "end_pos": 68, "type": "TASK", "confidence": 0.7961584031581879}]}, {"text": "RIME achieves the above mentioned features.", "labels": [], "entities": [{"text": "RIME", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.6452569961547852}]}, {"text": "Multi-domain dialogues are possible by selecting an appropriate expert which is specialized to dialogues in a certain domain.", "labels": [], "entities": []}, {"text": "Interruption handling is possible because each expert must have methods to detect interruptions and decide actions to handle interruptions, and coordinating modules can use these methods.", "labels": [], "entities": [{"text": "Interruption handling", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.9025755822658539}]}, {"text": "Parallel task execution is possible because experts have methods for providing information to decide which experts can take charge at the same time, and the task planner utilizes that information.", "labels": [], "entities": [{"text": "Parallel task execution", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.6084897319475809}]}, {"text": "Extensibility is achieved because any kind of expert can be incorporated if it supports the common interface.", "labels": [], "entities": []}, {"text": "This makes it possible for agent developers to build a variety of conversational agents.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}