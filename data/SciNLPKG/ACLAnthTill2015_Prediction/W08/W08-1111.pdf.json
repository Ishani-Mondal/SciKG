{"title": [], "abstractContent": [{"text": "We present a technique that opens up grammar-based generation to a wider range of practical applications by dramatically reducing the development costs and linguistic expertise that are required.", "labels": [], "entities": [{"text": "grammar-based generation", "start_pos": 37, "end_pos": 61, "type": "TASK", "confidence": 0.7312323451042175}]}, {"text": "Our method infers the grammatical resources needed for generation from a set of declarative examples that link surface expressions directly to the application's available semantic representations.", "labels": [], "entities": []}, {"text": "The same examples further serve to optimize a run-time search strategy that generates the best output that can be found within an application-specific time frame.", "labels": [], "entities": []}, {"text": "Our method offers substantially lower development costs than hand-crafted grammars for application-specific NLG, while maintaining high output quality and diversity.", "labels": [], "entities": []}], "introductionContent": [{"text": "This paper presents anew example-based generation technique designed to reduce the development costs and linguistic expertise needed to integrate a grammar-based generation component into an existing application.", "labels": [], "entities": []}, {"text": "We believe this approach will broaden the class of applications in which grammarbased generation may feasibly be deployed.", "labels": [], "entities": []}, {"text": "In principle, grammar-based generation offers significant advantages for many applications, when compared with simpler template-based or canned text output solutions, by providing productive coverage and greater output variety.", "labels": [], "entities": [{"text": "grammar-based generation", "start_pos": 14, "end_pos": 38, "type": "TASK", "confidence": 0.6994533836841583}]}, {"text": "However, realizing these advantages can require significant development costs (.", "labels": [], "entities": []}, {"text": "One possible strategy is to exploit a widecoverage realizer that aims for applicability in multiple application domains (.", "labels": [], "entities": []}, {"text": "These realizers provide a sound wide-coverage grammar (or robust widecoverage language model) for free, but demand a specific input format that is otherwise foreign to an existing application.", "labels": [], "entities": []}, {"text": "Unfortunately, the development burden of implementing the translation between the system's available semantic representations and the required input format can be quite substantial (.", "labels": [], "entities": []}, {"text": "Indeed, implementing the translation might require as much effort as would be required to build a simple custom generator; cf..", "labels": [], "entities": []}, {"text": "Thus, there currently are many applications where using a widecoverage generator remains impractical.", "labels": [], "entities": []}, {"text": "Another strategy is for system builders to handcraft an application-specific grammar for generation.", "labels": [], "entities": []}, {"text": "This approach can be initially attractive to system builders because it allows syntactic coverage and semantic modeling to be tailored directly to application needs.", "labels": [], "entities": []}, {"text": "However, writing grammatical rules by hand ultimately requires a painstaking, time-consuming effort by a developer who has detailed linguistic knowledge as well as detailed application knowledge.", "labels": [], "entities": []}, {"text": "Further, the resulting coverage is inevitably limited to the set of linguistic constructions that have been selected for careful modeling.", "labels": [], "entities": []}, {"text": "A third strategy is to use an example-based approach () in which the connection between available application semantic representations and desired output utterances is specified by example.", "labels": [], "entities": []}, {"text": "Example-based approaches aim to allow system builders to specify a productive generation capacity while leaving the representations and reasoning that underlie that productive capacity mostly implicit in a set of training examples.", "labels": [], "entities": []}, {"text": "This methodology insulates system builders from the detailed expertise and technical infrastructure needed to implement the productive capacity directly, and has made example-based approaches attractive not only in text generation but also in related areas such as concatenative speech synthesis and motion capture based animation; see, e.g.,).", "labels": [], "entities": [{"text": "text generation", "start_pos": 215, "end_pos": 230, "type": "TASK", "confidence": 0.7876110970973969}, {"text": "concatenative speech synthesis", "start_pos": 265, "end_pos": 295, "type": "TASK", "confidence": 0.6356521050135294}, {"text": "motion capture based animation", "start_pos": 300, "end_pos": 330, "type": "TASK", "confidence": 0.6304285973310471}]}, {"text": "The technique we present in this paper is anew example-based approach to specifying applicationspecific text generation.", "labels": [], "entities": [{"text": "specifying applicationspecific text generation", "start_pos": 73, "end_pos": 119, "type": "TASK", "confidence": 0.7238134890794754}]}, {"text": "As in other hand-crafted and example-based approaches, our technique allows syntactic coverage and semantic modeling to follow the needs and available semantic representations in an application.", "labels": [], "entities": [{"text": "semantic modeling", "start_pos": 99, "end_pos": 116, "type": "TASK", "confidence": 0.708729162812233}]}, {"text": "One contribution of our technique is to relieve the generation content author of the burden of manual syntactic modeling by leveraging an off-the-shelf parser; defects in the syntax provided by the parser are effectively overcome using a machine learning technique.", "labels": [], "entities": []}, {"text": "Additionally, our technique organizes the authoring task in away that relieves the generation author of carefully modeling the connections between particular syntactic constructions and available semantic representations.", "labels": [], "entities": []}, {"text": "Together, we argue, these features dramatically reduce the linguistic expertise and other development costs that are required to integrate a grammarbased generation component into an existing system.", "labels": [], "entities": []}, {"text": "Ina case study application, we show that our approach allows an application developer who lacks detailed linguistic knowledge to extend grammatical coverage at an expense of less than one minute per additional lexical entry.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}