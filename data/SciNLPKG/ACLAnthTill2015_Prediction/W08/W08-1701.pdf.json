{"title": [{"text": "TuLiPA: Towards a Multi-Formalism Parsing Environment for Grammar Engineering", "labels": [], "entities": [{"text": "Grammar Engineering", "start_pos": 58, "end_pos": 77, "type": "TASK", "confidence": 0.893043577671051}]}], "abstractContent": [{"text": "In this paper, we present an open-source parsing environment (T\u00fcbingen Linguistic Parsing Architecture, TuLiPA) which uses Range Concatenation Grammar (RCG) as a pivot formalism, thus opening the way to the parsing of several mildly context-sensitive formalisms.", "labels": [], "entities": [{"text": "T\u00fcbingen Linguistic Parsing Architecture, TuLiPA)", "start_pos": 62, "end_pos": 111, "type": "DATASET", "confidence": 0.7166830386434283}]}, {"text": "This environment currently supports tree-based grammars (namely Tree-Adjoining Grammars (TAG) and Multi-Component Tree-Adjoining Grammars with Tree Tuples (TT-MCTAG)) and allows computation not only of syntactic structures, but also of the corresponding semantic representations.", "labels": [], "entities": []}, {"text": "It is used for the development of a tree-based grammar for German.", "labels": [], "entities": []}], "introductionContent": [{"text": "Grammars and lexicons represent important linguistic resources for many NLP applications, among which one may cite dialog systems, automatic summarization or machine translation.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 158, "end_pos": 177, "type": "TASK", "confidence": 0.7190364301204681}]}, {"text": "Developing such resources is known to be a complex task that needs useful tools such as parsers and generators.", "labels": [], "entities": []}, {"text": "Furthermore, there is alack of a common framework allowing for multi-formalism grammar engineering.", "labels": [], "entities": [{"text": "multi-formalism grammar engineering", "start_pos": 63, "end_pos": 98, "type": "TASK", "confidence": 0.712701658407847}]}, {"text": "Thus, many formalisms have been proposed to model natural language, each coming with specific implementations.", "labels": [], "entities": []}, {"text": "Having a common framework would facilitate the comparison between formalisms (e.g., in terms of parsing complexity in practice), and would allow fora better sharing of resources (e.g., having a common lexicon, from which different features would be extracted depending on the target formalism).", "labels": [], "entities": []}, {"text": "In this context, we present a parsing environment relying on a general architecture that can be used for parsing with mildly context-sensitive (MCS) formalisms 1.", "labels": [], "entities": [{"text": "parsing", "start_pos": 30, "end_pos": 37, "type": "TASK", "confidence": 0.9619121551513672}, {"text": "parsing", "start_pos": 105, "end_pos": 112, "type": "TASK", "confidence": 0.9679700136184692}]}, {"text": "Its underlying idea is to use Range Concatenation Grammar (RCG) as a pivot formalism, for RCG has been shown to strictly include MCS languages while being parsable in polynomial time).", "labels": [], "entities": [{"text": "Range Concatenation Grammar (RCG)", "start_pos": 30, "end_pos": 63, "type": "TASK", "confidence": 0.717144658168157}]}, {"text": "Currently, this architecture supports tree-based grammars (Tree-Adjoining Grammars and MultiComponent Tree-Adjoining Grammars with Tree Tuples).", "labels": [], "entities": []}, {"text": "More precisely, treebased grammars are first converted into equivalent RCGs, which are then used for parsing.", "labels": [], "entities": []}, {"text": "The result of RCG parsing is finally interpreted to extract a derivation structure for the input grammar, as well as to perform additional processings (e.g., semantic calculus, extraction of dependency views).", "labels": [], "entities": [{"text": "RCG parsing", "start_pos": 14, "end_pos": 25, "type": "TASK", "confidence": 0.685369610786438}, {"text": "semantic calculus", "start_pos": 158, "end_pos": 175, "type": "TASK", "confidence": 0.7271373271942139}]}, {"text": "The paper is structured as follows.", "labels": [], "entities": []}, {"text": "In section 2, we present the architecture of the TuLiPA parsing environment and show how the use of RCG as a pivot formalism makes it easier to design a modular system that can be extended to support several dimensions (syntax, semantics) and/or formalisms.", "labels": [], "entities": [{"text": "TuLiPA parsing", "start_pos": 49, "end_pos": 63, "type": "TASK", "confidence": 0.6972752809524536}]}, {"text": "In section 3, we give some desiderata for grammar engineering and present TuLiPA's current state A formalism is said to be mildly context sensitive (MCS) iff (i) it generates limited cross-serial dependencies, (ii) it is polynomially parsable, and (iii) the string languages generated by the formalism have the constant growth property (e.g., {a 2 n |n \u2265 0} does not have this property).", "labels": [], "entities": []}, {"text": "Examples of MCS formalisms include Tree-Adjoining Grammars, Combinatory Categorial Grammars and Linear Indexed with respect to these.", "labels": [], "entities": []}, {"text": "In section 4, we compare this system with existing approaches for parsing and more generally for grammar engineering.", "labels": [], "entities": [{"text": "grammar engineering", "start_pos": 97, "end_pos": 116, "type": "TASK", "confidence": 0.8897540271282196}]}, {"text": "Finally, in section 5, we conclude by presenting future work.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}