{"title": [], "abstractContent": [{"text": "Type checking defines and constrains system output and intermediate representations.", "labels": [], "entities": [{"text": "Type checking", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.862350344657898}]}, {"text": "We report on the advantages of introducing multiple levels of type checking in deep parsing systems , even with untyped formalisms.", "labels": [], "entities": [{"text": "type checking", "start_pos": 62, "end_pos": 75, "type": "TASK", "confidence": 0.9352698624134064}]}], "introductionContent": [{"text": "Some formalisms have type checking as an inherent part of their theory).", "labels": [], "entities": [{"text": "type checking", "start_pos": 21, "end_pos": 34, "type": "TASK", "confidence": 0.9661249220371246}]}, {"text": "However, many formalisms do not require type checking.", "labels": [], "entities": [{"text": "type checking", "start_pos": 40, "end_pos": 53, "type": "TASK", "confidence": 0.9086053669452667}]}, {"text": "We report on our experiences with a broad-coverage system for mapping English text into semantic representations for search applications.", "labels": [], "entities": []}, {"text": "This system uses the XLE LFG parser for converting from text to syntactic structures and the XLE ordered-rewriting system to convert from syntax to semantic structures.", "labels": [], "entities": []}, {"text": "Neither component formally requires type checking.", "labels": [], "entities": [{"text": "type checking", "start_pos": 36, "end_pos": 49, "type": "TASK", "confidence": 0.9420929253101349}]}, {"text": "However, type checking was introduced into the syntactic parser and at multiple levels in the semantics in response to the engineering requirements on a largescale, multi-developer, multi-site system.", "labels": [], "entities": [{"text": "type checking", "start_pos": 9, "end_pos": 22, "type": "TASK", "confidence": 0.9463138282299042}]}], "datasetContent": [], "tableCaptions": []}