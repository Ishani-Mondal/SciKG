{"title": [{"text": "Semantic Dependency Graph Parsing Using Tree Approximation\u0161", "labels": [], "entities": [{"text": "Semantic Dependency Graph Parsing", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.7546427249908447}]}], "abstractContent": [{"text": "In this contribution, we deal with graph parsing, i.e., mapping input strings to graph-structured output representations, using tree approximations.", "labels": [], "entities": [{"text": "graph parsing", "start_pos": 35, "end_pos": 48, "type": "TASK", "confidence": 0.7553674280643463}]}, {"text": "We experiment with the data from the SemEval 2014 Semantic Dependency Parsing (SDP) task.", "labels": [], "entities": [{"text": "SemEval 2014 Semantic Dependency Parsing (SDP) task", "start_pos": 37, "end_pos": 88, "type": "TASK", "confidence": 0.9026752842797173}]}, {"text": "We define various tree approximation schemes for graphs, and make twofold use of them.", "labels": [], "entities": []}, {"text": "First, we statically analyze the semantic dependency graphs, seeking to unscover which linguistic phenomena in particular require the additional annotation expressivity provided by moving from trees to graphs.", "labels": [], "entities": []}, {"text": "We focus on undirected base cycles in the SDP graphs, and discover strong connections to grammatical control and coordination.", "labels": [], "entities": []}, {"text": "Second, we make use of the approximations in a statistical parsing scenario.", "labels": [], "entities": [{"text": "statistical parsing", "start_pos": 47, "end_pos": 66, "type": "TASK", "confidence": 0.7537430226802826}]}, {"text": "In it, we convert the training set graphs to dependency trees, and use the resulting treebanks to build standard dependency tree parsers.", "labels": [], "entities": []}, {"text": "We perform lossy graph reconstructions on parser outputs, and evaluate our models as dependency graph parsers.", "labels": [], "entities": [{"text": "lossy graph reconstructions", "start_pos": 11, "end_pos": 38, "type": "TASK", "confidence": 0.7177918155988058}]}, {"text": "Our system outperforms the baselines by a large margin, and evaluates as the best non-voting tree approximation-based parser on the SemEval 2014 data, scoring at just over 81% in labeled F 1 .", "labels": [], "entities": [{"text": "SemEval 2014 data", "start_pos": 132, "end_pos": 149, "type": "DATASET", "confidence": 0.829200804233551}]}], "introductionContent": [{"text": "Recent years have seen growing interest in the development of parsing systems that support graphstructured target representations, notably various forms of semantic dependency graphs, where it is natural to move beyond fully connected trees, as are dominant in syntactic dependency parsing.", "labels": [], "entities": [{"text": "syntactic dependency parsing", "start_pos": 261, "end_pos": 289, "type": "TASK", "confidence": 0.6443728804588318}]}, {"text": "The SemEval 2014 and 2015 tasks on Semantic Dependency Parsing (SDP;) have made available large training and test corpora, annotating the Wall Street Journal (WSJ) corpus of the Penn Treebank (PTB;) with three different representations of predicate-argument structure.", "labels": [], "entities": [{"text": "SemEval 2014 and 2015 tasks on Semantic Dependency Parsing (SDP", "start_pos": 4, "end_pos": 67, "type": "TASK", "confidence": 0.7100209973075173}, {"text": "Wall Street Journal (WSJ) corpus of the Penn Treebank (PTB", "start_pos": 138, "end_pos": 196, "type": "DATASET", "confidence": 0.9084375684077923}]}, {"text": "Participating systems in the SDP tasks can be broadly classified into one of the two groups.", "labels": [], "entities": [{"text": "SDP tasks", "start_pos": 29, "end_pos": 38, "type": "TASK", "confidence": 0.9267156422138214}]}, {"text": "They either (1) developed dedicated graph parsers, mainly by adapting existing dependency parsers to perform graph parsing, or (2) applied tree approximations, lossily converting graphs to trees in pre-processing, trained standard dependency tree parsers, and finally converted their outputs to graphs in post-processing.", "labels": [], "entities": [{"text": "graph parsing", "start_pos": 109, "end_pos": 122, "type": "TASK", "confidence": 0.7562209069728851}]}, {"text": "Contributions All submissions for the SDP shared task are short and to the point, i.e., they focus exclusively on describing and evaluating the systems.", "labels": [], "entities": [{"text": "SDP shared task", "start_pos": 38, "end_pos": 53, "type": "TASK", "confidence": 0.8968340754508972}]}, {"text": "We note an interesting underlying theme in the tree approximation-based systems, which constitute a majority of the SDP submissions.", "labels": [], "entities": [{"text": "SDP submissions", "start_pos": 116, "end_pos": 131, "type": "TASK", "confidence": 0.9002556800842285}]}, {"text": "This theme is the apparent practical utility of using dependency trees instead of graphs, despite the formal mismatch in target representations.", "labels": [], "entities": []}, {"text": "In our paper, we contribute with the following main points.", "labels": [], "entities": []}, {"text": "First, we take the standpoint of using dependency tree parsers for graph parsing via tree approximations, because: 1.", "labels": [], "entities": [{"text": "dependency tree parsers", "start_pos": 39, "end_pos": 62, "type": "TASK", "confidence": 0.646753321091334}, {"text": "graph parsing", "start_pos": 67, "end_pos": 80, "type": "TASK", "confidence": 0.7575047314167023}]}, {"text": "These parsers are well-tested in syntactic parsing on numerous languages and datasets, and are shown to be accurate, efficient, and robust.", "labels": [], "entities": [{"text": "syntactic parsing", "start_pos": 33, "end_pos": 50, "type": "TASK", "confidence": 0.7322352528572083}]}, {"text": "2. By probing the feasibility and limits of tree approximations, we inquire into the nature of the underlying representations.", "labels": [], "entities": []}, {"text": "We implicitly ask why and where are graphs needed to encode semantic relations, and are graph-specific structures used by convention or with strong linguistic support.", "labels": [], "entities": []}, {"text": "Second, we expose the underlying properties of the semantic graph representations in SDP from a more linguistically informed, though still quantitative and empirical viewpoint.", "labels": [], "entities": []}, {"text": "Third, we use these insights to design better tree approximations.", "labels": [], "entities": []}, {"text": "Namely, we empirically pinpoint a tree approximation which offers a good balance between graph coverage, i.e., reduced lossiness, and at the same time, it provides improvements in statistical graph parsing.", "labels": [], "entities": [{"text": "statistical graph parsing", "start_pos": 180, "end_pos": 205, "type": "TASK", "confidence": 0.7358235915501913}]}, {"text": "For this, we submit detailed evaluation.", "labels": [], "entities": []}, {"text": "Finally, the system we create is currently the best non-voting tree approximation-based parser for dependency graphs in the SDP evaluation framework.", "labels": [], "entities": [{"text": "SDP evaluation", "start_pos": 124, "end_pos": 138, "type": "TASK", "confidence": 0.878192663192749}]}, {"text": "This system implements a tree approximation that strikes a good and linguistically plausible empirical balance between loss minimization and parsing accuracy.", "labels": [], "entities": [{"text": "parsing", "start_pos": 141, "end_pos": 148, "type": "TASK", "confidence": 0.9575567841529846}, {"text": "accuracy", "start_pos": 149, "end_pos": 157, "type": "METRIC", "confidence": 0.8458678722381592}]}, {"text": "Outline We provide a detailed account of the properties of SDP graphs ( \u00a72), introduce approaches to tree approximations ( \u00a73) and evaluate them ( \u00a74).", "labels": [], "entities": []}, {"text": "We use this linguistic insight to produce a linguistically motivated tree approximation-based parsing framework, which we evaluate as the top-performing nonvoting parser based on tree approximations on the SDP data ( \u00a75).", "labels": [], "entities": [{"text": "tree approximation-based parsing", "start_pos": 69, "end_pos": 101, "type": "TASK", "confidence": 0.5931781331698099}]}, {"text": "Related work In the SDP 2014 campaign, adapted the tree parsing algorithm of Eisner (1996), while implement a novel approach to graph parsing.) for graph processing, and utilize the parser of.", "labels": [], "entities": [{"text": "SDP 2014 campaign", "start_pos": 20, "end_pos": 37, "type": "TASK", "confidence": 0.845308760801951}, {"text": "tree parsing", "start_pos": 51, "end_pos": 63, "type": "TASK", "confidence": 0.7296613454818726}, {"text": "graph parsing.", "start_pos": 128, "end_pos": 142, "type": "TASK", "confidence": 0.7349343597888947}, {"text": "graph processing", "start_pos": 148, "end_pos": 164, "type": "TASK", "confidence": 0.7607553005218506}]}, {"text": "Graph parsing by tree approximations and post-processing was most notably performed by the topperforming system of the competition, the one by.", "labels": [], "entities": [{"text": "Graph parsing", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.869156152009964}]}, {"text": "Their tree approximations are obtained by depth-first and breadth-first graph traversals, possibly changing the edge directions in the direction of the traversal.", "labels": [], "entities": []}, {"text": "However, this was not sufficient to win the competition, since two other teams - and Agi\u00b4c -also implemented a similar approach and scored in the mid range.", "labels": [], "entities": [{"text": "Agi\u00b4c", "start_pos": 85, "end_pos": 90, "type": "DATASET", "confidence": 0.8501883745193481}]}, {"text": "For overall premium accuracy, applied voting over the outputs of 17 different tree approximation-based systems, which arguably makes fora computationally inefficient resulting system.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 20, "end_pos": 28, "type": "METRIC", "confidence": 0.989861011505127}]}, {"text": "The single top-performing tree approximation system was the one by, which is closely followed by Agi\u00b4c.", "labels": [], "entities": []}, {"text": "The latter one are the only to provide some linguistic insight into the SDP graphs.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Distributions of coarse-grained parts of speech for nodes participating in base cycles.", "labels": [], "entities": []}, {"text": " Table 2: Upper bound evaluation for the tree approximations. Radical and conservative triangle () and  square () base cycle trimming and untrimming are compared with the baselines. Scores are provided  for the whole SDP training set as no parsing is performed.", "labels": [], "entities": []}, {"text": " Table 3: Graph parsing results. The radical and conservative, triangle () and square () trimmings are  compared with DFS in closed and open track evaluation scenarios. We evaluate for labeled F 1 score (LF),  and for labeled exact match (LM). The tree parsing labeled attachment score (LAS) is also provided.", "labels": [], "entities": [{"text": "Graph parsing", "start_pos": 10, "end_pos": 23, "type": "TASK", "confidence": 0.8055568337440491}, {"text": "F 1 score (LF)", "start_pos": 193, "end_pos": 207, "type": "METRIC", "confidence": 0.9386540055274963}, {"text": "labeled exact match (LM)", "start_pos": 218, "end_pos": 242, "type": "METRIC", "confidence": 0.7963617990414301}, {"text": "tree parsing labeled attachment score (LAS)", "start_pos": 248, "end_pos": 291, "type": "METRIC", "confidence": 0.8272630050778389}]}]}