{"title": [{"text": "Improving Translation Memory Matching through Clause Splitting", "labels": [], "entities": [{"text": "Improving Translation Memory Matching", "start_pos": 0, "end_pos": 37, "type": "TASK", "confidence": 0.8945619165897369}, {"text": "Clause Splitting", "start_pos": 46, "end_pos": 62, "type": "TASK", "confidence": 0.7043092846870422}]}], "abstractContent": [{"text": "We propose the integration of clause splitting as a pre-processing step for match retrieval in Translation Memory (TM) systems to increase the number of relevant sub-segment matches.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 30, "end_pos": 46, "type": "TASK", "confidence": 0.8029826581478119}, {"text": "match retrieval", "start_pos": 76, "end_pos": 91, "type": "TASK", "confidence": 0.7174941599369049}, {"text": "Translation Memory (TM)", "start_pos": 95, "end_pos": 118, "type": "TASK", "confidence": 0.799395763874054}]}, {"text": "Through a series of experiments, we investigate the impact of clause splitting in instances where the input does not match an entire segment in the TM, but only a clause from a segment.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 62, "end_pos": 78, "type": "TASK", "confidence": 0.7423403114080429}]}, {"text": "Our results show that there is a statistically significant increase in the number of retrieved matches when both the input segments and the segments in the TM are first processed with a clause splitter.", "labels": [], "entities": [{"text": "clause splitter", "start_pos": 186, "end_pos": 201, "type": "TASK", "confidence": 0.7150198370218277}]}], "introductionContent": [], "datasetContent": [{"text": "Experiments were performed to study the impact of clause splitting when used in preprocessing for the retrieval of segments in a TM.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 50, "end_pos": 66, "type": "TASK", "confidence": 0.7556473016738892}]}, {"text": "Our hypothesis is that when a clause splitter is used, the number of relevant retrieved matches will increase.", "labels": [], "entities": [{"text": "clause splitter", "start_pos": 30, "end_pos": 45, "type": "TASK", "confidence": 0.7103232145309448}]}, {"text": "The effect of clause splitting is examined by comparing the number of matches retrieved when TM tools are used as is and when both the input segments and the segments in the translation memory are first processed with a clause splitter before being imported into the TM tools.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 14, "end_pos": 30, "type": "TASK", "confidence": 0.8174646496772766}]}, {"text": "The tools used are Wordfast Professional 3 and Trados Studio 2009, which are among the most widely used TM tools).", "labels": [], "entities": [{"text": "Wordfast Professional 3", "start_pos": 19, "end_pos": 42, "type": "DATASET", "confidence": 0.8678337931632996}, {"text": "Trados Studio 2009", "start_pos": 47, "end_pos": 65, "type": "DATASET", "confidence": 0.7415227591991425}]}, {"text": "Segments used as the input were selected from the Edinburgh paraphrase corpus).", "labels": [], "entities": [{"text": "Edinburgh paraphrase corpus", "start_pos": 50, "end_pos": 77, "type": "DATASET", "confidence": 0.9734075466791788}]}, {"text": "We use a paraphrase corpus because we wish to investigate the effect of using a clause splitter in pre-processing to retrieve both segments that contain the entire input clause and segments that do not contain the exact input clause but may still be relevant as they contain a clause that shares a considerable degree of similarity with the input.", "labels": [], "entities": []}, {"text": "We examine the segments retrieved using both the default fuzzy match threshold (75% for Wordfast and 70% for SDL Trados) and the minimum threshold (40% for Wordfast and 30% for Trados).", "labels": [], "entities": [{"text": "Wordfast", "start_pos": 88, "end_pos": 96, "type": "DATASET", "confidence": 0.9564498066902161}, {"text": "Wordfast", "start_pos": 156, "end_pos": 164, "type": "DATASET", "confidence": 0.9407423734664917}]}, {"text": "It is not normally recommended for translators to set a low fuzzy match threshold, as this might result in the retrieval of too many irrelevant segments if the translation memory is large.", "labels": [], "entities": []}, {"text": "However, in this study, we argue it would be beneficial to examine matches retrieved with the minimum threshold as well.", "labels": [], "entities": []}, {"text": "Given that translation memory match scores are mainly calculated using Levenshtein distance, if only one clause in a segment in the TM matches the input, there is a greater chance of the segment being retrieved with a lower threshold.", "labels": [], "entities": []}, {"text": "We therefore wish to examine whether the employment of clause splitting will still result in a considerable improvement from using the Levenshtein distance-based matching algorithm inmost TM tools if the match threshold setting is already optimised for the retrieval of sub-segment clauses.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 55, "end_pos": 71, "type": "TASK", "confidence": 0.8036626279354095}]}, {"text": "It must also be noted that for this study, we are working with the source segments only.", "labels": [], "entities": []}, {"text": "Therefore, in the TM files used, both the source and target segments are in English.", "labels": [], "entities": []}, {"text": "We conducted two main sets of experiments referred to as Set A and Set B which are outlined below.", "labels": [], "entities": []}, {"text": "In Set A we selected sentences from the Edinburgh corpus that contained more than one clause.", "labels": [], "entities": [{"text": "Edinburgh corpus", "start_pos": 40, "end_pos": 56, "type": "DATASET", "confidence": 0.9919524490833282}]}, {"text": "We use one clause, or part of it, as the input segment, and we store the entire sentence in the TM.", "labels": [], "entities": []}, {"text": "In the experiments where no clause splitting is done, the sentence is stored as is.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 28, "end_pos": 44, "type": "TASK", "confidence": 0.7237088680267334}]}, {"text": "In the experiments with clause splitting, the original input segments are split into clauses (if there are more than one) and the segments in the TM are the component clauses of the original sentence.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 24, "end_pos": 40, "type": "TASK", "confidence": 0.7647551894187927}]}, {"text": "For the experiments done without clause splitting, there are 150 input segments and for each one, we test whether the longer corresponding segment in the TM can be retrieved.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 33, "end_pos": 49, "type": "TASK", "confidence": 0.7600680887699127}]}, {"text": "For the experiments where clause splitting is used, the 150 input segments are split into 180 segments as some of these segments contain more than one clause.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 26, "end_pos": 42, "type": "TASK", "confidence": 0.8067359626293182}]}, {"text": "We then test whether the corresponding clause from the original longer sentence can be retrieved.", "labels": [], "entities": []}, {"text": "An example is presented in.", "labels": [], "entities": []}, {"text": "The underlined segments are the corresponding segments that should be retrieved.", "labels": [], "entities": []}, {"text": "In Set B there are also 150 input segments for the experiments where no clause splitting is used, and the corresponding segment in the TM is a longer sentence containing a paraphrase of the input segment.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 72, "end_pos": 88, "type": "TASK", "confidence": 0.7509695291519165}]}, {"text": "For the experiments with clause splitting, there are 185 input segments (as in set A, some of the original 150 have more than one clause) and in the TM, the component clauses of the original longer segment are stored, and we test whether the clause that is a paraphrase of the input can be retrieved.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 25, "end_pos": 41, "type": "TASK", "confidence": 0.7577812373638153}]}], "tableCaptions": [{"text": " Table 2. Set B Example", "labels": [], "entities": []}, {"text": " Table 3. Percentage of correctly retrieved  segments in Set A", "labels": [], "entities": [{"text": "Percentage", "start_pos": 10, "end_pos": 20, "type": "METRIC", "confidence": 0.9674050211906433}]}, {"text": " Table 5. Paired t-test on all experiments", "labels": [], "entities": [{"text": "Paired", "start_pos": 10, "end_pos": 16, "type": "METRIC", "confidence": 0.9659184813499451}, {"text": "t-test", "start_pos": 17, "end_pos": 23, "type": "METRIC", "confidence": 0.5220689177513123}]}]}