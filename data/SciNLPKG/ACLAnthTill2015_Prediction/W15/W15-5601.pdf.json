{"title": [{"text": "JCLexT: A Java Tool for Compiling Finite-State Transducers from Full-Form Lexicons", "labels": [], "entities": []}], "abstractContent": [{"text": "JCLexT is a compiler of finite-state transducers from full-form lexicons, this tool seems to be the first Java implementation of such functionality.", "labels": [], "entities": [{"text": "JCLexT", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.909791886806488}]}, {"text": "A comparison between JCLexT and Foma was performed based on extensive data from Portuguese.", "labels": [], "entities": [{"text": "JCLexT", "start_pos": 21, "end_pos": 27, "type": "DATASET", "confidence": 0.8713886141777039}, {"text": "Foma", "start_pos": 32, "end_pos": 36, "type": "DATASET", "confidence": 0.8946111798286438}]}, {"text": "The main disadvantage of JCLexT is the slower compilation time, in comparison to Foma.", "labels": [], "entities": [{"text": "Foma", "start_pos": 81, "end_pos": 85, "type": "DATASET", "confidence": 0.9002519249916077}]}, {"text": "However, this is negated by the fact that a large transducer compiled with JCLexT was shown to be 8.6% smaller than the Foma created counterpart.", "labels": [], "entities": [{"text": "JCLexT", "start_pos": 75, "end_pos": 81, "type": "DATASET", "confidence": 0.8855369091033936}, {"text": "Foma created", "start_pos": 120, "end_pos": 132, "type": "DATASET", "confidence": 0.9542936086654663}]}], "introductionContent": [{"text": "Finite-state transducers (FSTs) have been the preferred devices used to implement morphological parsers).", "labels": [], "entities": []}, {"text": "They store information in a compact manner and allow for quick lookup times, being superior to concurring alternatives.", "labels": [], "entities": []}, {"text": "Computing is increasingly moving towards mobile platforms.", "labels": [], "entities": []}, {"text": "Due to this, the need for natural language processing tools which are designed for the specifics of this setting has emerged., for example, addresses this issue with the proposal of JMorpher, a finite-state morphological parser in Java able to natively run on Android devices.", "labels": [], "entities": []}, {"text": "However, the JMorpher tool is limited in its functionality, as it was designed to apply an existing finite-state transducer to an input text.", "labels": [], "entities": []}, {"text": "JCLexT aims to resolve this limitation, it is a Java tool that can compile a fullform lexicon into a finite-state transducer.", "labels": [], "entities": [{"text": "JCLexT", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.8689945936203003}]}, {"text": "JCLext emulates the read spaced-text command found in XFST, Foma and HFST.", "labels": [], "entities": [{"text": "Foma", "start_pos": 60, "end_pos": 64, "type": "DATASET", "confidence": 0.8251935243606567}, {"text": "HFST", "start_pos": 69, "end_pos": 73, "type": "DATASET", "confidence": 0.7336587309837341}]}, {"text": "It is the first Java tool of this sort that we are aware of, furthermore it was not based on any existing implementation.", "labels": [], "entities": []}, {"text": "JCLexT was inspired by the minimization algorithm for acyclic deterministic automata (DFSA) proposed by.", "labels": [], "entities": [{"text": "JCLexT", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.8744282722473145}]}, {"text": "As a pure Java implementation, JCLexT inherits the advantages of this programming language, this includes better portability, such as being able to run on Android, desktop, servers or as a web service with minor changes to the existing implementation.", "labels": [], "entities": []}, {"text": "Furthermore being written in Java keeps JCLexT platform compatible with the existing JMorpher software.", "labels": [], "entities": []}, {"text": "The main purpose of this work was to emulate and improve on the existing functionality of Foma, with the goal of trying to achieve better results with very large full-form lexicons.", "labels": [], "entities": [{"text": "Foma", "start_pos": 90, "end_pos": 94, "type": "DATASET", "confidence": 0.882996678352356}]}, {"text": "It is worth noting as a result of this work we created LEXPT01, a lexical transducer of Portuguese which contains approximately 4 million paths.", "labels": [], "entities": []}, {"text": "As far as we know, this is the largest lexical transducer of Portuguese currently in existence.", "labels": [], "entities": []}], "datasetContent": [{"text": "In order to carryout the evaluation, two FSTs were compiled from the full-form lexicon DIC.", "labels": [], "entities": [{"text": "FSTs", "start_pos": 41, "end_pos": 45, "type": "TASK", "confidence": 0.6459253430366516}]}, {"text": "These were LEXPT01-J and LEXPT01-F, the J and F referring to the fact they were compiled by JCLexT and Foma.", "labels": [], "entities": [{"text": "LEXPT01-F", "start_pos": 25, "end_pos": 34, "type": "METRIC", "confidence": 0.745854377746582}, {"text": "F", "start_pos": 46, "end_pos": 47, "type": "METRIC", "confidence": 0.8062266111373901}, {"text": "Foma", "start_pos": 103, "end_pos": 107, "type": "DATASET", "confidence": 0.9092089533805847}]}, {"text": "Five aspects were considered in the tests: (i) correctness, (ii) size, (iii) complexity, (iv) compilation times, and (v) parsing times.", "labels": [], "entities": [{"text": "correctness", "start_pos": 47, "end_pos": 58, "type": "METRIC", "confidence": 0.9571590423583984}, {"text": "parsing", "start_pos": 121, "end_pos": 128, "type": "TASK", "confidence": 0.956761360168457}]}, {"text": "Correctness was tested using Foma.", "labels": [], "entities": [{"text": "Correctness", "start_pos": 0, "end_pos": 11, "type": "METRIC", "confidence": 0.9885529279708862}, {"text": "Foma.", "start_pos": 29, "end_pos": 34, "type": "DATASET", "confidence": 0.7530227303504944}]}, {"text": "The word-parse pairs from LEXPT01-J were thus shown to be isomorphic to DIC.", "labels": [], "entities": []}, {"text": "Additionally, both LEXPT01-J and LEXPT01-F were applied to MACM and NAT, the word-parse pairs outputted being identical.", "labels": [], "entities": [{"text": "LEXPT01-J", "start_pos": 19, "end_pos": 28, "type": "METRIC", "confidence": 0.8865472078323364}]}, {"text": "This shows that the FST created with JCLexT is valid and correct.", "labels": [], "entities": [{"text": "FST", "start_pos": 20, "end_pos": 23, "type": "TASK", "confidence": 0.5768075585365295}, {"text": "JCLexT", "start_pos": 37, "end_pos": 43, "type": "DATASET", "confidence": 0.8173815608024597}]}, {"text": "summarizes the results of test (ii), the most important being that JCLexT compiled an FST requiring 8.6% less disk space than the Foma FST.", "labels": [], "entities": [{"text": "Foma FST", "start_pos": 130, "end_pos": 138, "type": "DATASET", "confidence": 0.936369389295578}]}, {"text": "To assess complexity, two aspects were considered: firstly, if the FST is sequential, meaning it is deterministic on the input side and secondly, if the FST is restricted or unrestricted.", "labels": [], "entities": []}, {"text": "To detect if an FST is sequential, it is applied to a list of word forms from the input full-form lexicon using a deterministic parsing algorithm, the output is tested for correctness by comparing it to the input lexicon.", "labels": [], "entities": [{"text": "FST", "start_pos": 16, "end_pos": 19, "type": "TASK", "confidence": 0.9718047380447388}]}, {"text": "To verify the restricted nature of the FSTs, an analogous procedure was applied, using JMorpher's RestrictedFST class.", "labels": [], "entities": [{"text": "FSTs", "start_pos": 39, "end_pos": 43, "type": "TASK", "confidence": 0.6717636585235596}, {"text": "JMorpher's RestrictedFST class", "start_pos": 87, "end_pos": 117, "type": "DATASET", "confidence": 0.7980706691741943}]}, {"text": "Both LEXPT01-F and LEXPT01-J were found to be nonsequential and restricted.", "labels": [], "entities": [{"text": "LEXPT01-F", "start_pos": 5, "end_pos": 14, "type": "METRIC", "confidence": 0.8869561553001404}, {"text": "LEXPT01-J", "start_pos": 19, "end_pos": 28, "type": "METRIC", "confidence": 0.7589098215103149}]}, {"text": "Therefore, by these two criteria, they are of similar complexity.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1. Size of the FSTs generated by JCLexT and Foma", "labels": [], "entities": [{"text": "FSTs", "start_pos": 22, "end_pos": 26, "type": "TASK", "confidence": 0.8277140855789185}, {"text": "JCLexT", "start_pos": 40, "end_pos": 46, "type": "DATASET", "confidence": 0.9196126461029053}, {"text": "Foma", "start_pos": 51, "end_pos": 55, "type": "DATASET", "confidence": 0.8584616184234619}]}]}