{"title": [{"text": "A Cloud-Based Editor for Multilingual Grammars", "labels": [], "entities": []}], "abstractContent": [{"text": "Writing deep linguistic grammars has been considered a highly specialized skill, requiring the use of tools with steep learning curves and complex installation procedures.", "labels": [], "entities": [{"text": "Writing deep linguistic grammars", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.7369122803211212}]}, {"text": "As the use of statistical methods has increased, new generations of computational linguists are getting less and less prepared for grammar writing tasks.", "labels": [], "entities": [{"text": "grammar writing tasks", "start_pos": 131, "end_pos": 152, "type": "TASK", "confidence": 0.8298566937446594}]}, {"text": "In an aim to provide a better learning experience for grammar writers, we present a grammar engineering tool that resides in the cloud.", "labels": [], "entities": []}, {"text": "It has been used in several tu-torial courses and self-studies, and it allows absolute beginners to write their first grammars and parse examples in 10 minutes.", "labels": [], "entities": []}, {"text": "The cloud-based grammar engineering tool is built on top of GF (Grammatical Framework), a grammar formalism that has an explicit tecto/phenogrammar distinction , is based on ideas from type theory and functional programming and comes equipped with a grammar library supporting 30 languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "Writing deep linguistic grammars has been considered a highly specialized skill.", "labels": [], "entities": [{"text": "Writing deep linguistic grammars", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.6746760457754135}]}, {"text": "As the use of statistical methods has increased, new generations of computational linguists are getting less and less prepared for grammar writing tasks.", "labels": [], "entities": [{"text": "grammar writing tasks", "start_pos": 131, "end_pos": 152, "type": "TASK", "confidence": 0.8298566937446594}]}, {"text": "A part of the problem is the steep learning curve in tools: systems like LKB) and XLE (Xerox Linguistic Environment) are designed for professional linguists.", "labels": [], "entities": []}, {"text": "Getting started with their use requires substantial training, and installing the tools requires large and unfamiliar software packages, in addition to a firm knowledge of operating system command-line tools.", "labels": [], "entities": []}, {"text": "GF) is a more recent grammar formalism, born so to say in the middle of the statistical era.", "labels": [], "entities": []}, {"text": "GF shares the ambition of the \"classical\" formalisms to enable deep linguistic descriptions, which it wants to support with some new ideas: type theory, functional programming, and an explicit tecto/phenogrammar distinction.", "labels": [], "entities": [{"text": "GF", "start_pos": 0, "end_pos": 2, "type": "DATASET", "confidence": 0.860863983631134}, {"text": "type theory", "start_pos": 140, "end_pos": 151, "type": "TASK", "confidence": 0.8895037174224854}]}, {"text": "However, GF was also meant to be a formalism for \"ordinary\" programmers without linguistic training.", "labels": [], "entities": []}, {"text": "Thus the majority of the currently 30 languages included in the GF Resource Grammar Library) are in fact written by students and scholars in computer science, who find the GF style of programming familiar from other contexts, in particular compiler construction.", "labels": [], "entities": [{"text": "GF Resource Grammar Library", "start_pos": 64, "end_pos": 91, "type": "DATASET", "confidence": 0.8939167261123657}, {"text": "compiler construction", "start_pos": 240, "end_pos": 261, "type": "TASK", "confidence": 0.7691523432731628}]}, {"text": "However, the GF approach has a \"nerdy\" flavour to it, in particular requiring coping with command line tools, text editors, and Haskell libraries.", "labels": [], "entities": []}, {"text": "Some programmers are helped by the Eclipse plug-in, but installing both GF and Eclipse on a personal computer can be a daunting task for many.", "labels": [], "entities": [{"text": "GF", "start_pos": 72, "end_pos": 74, "type": "DATASET", "confidence": 0.9209564328193665}]}, {"text": "The present paper describes an attempt to eliminate all trouble with software installation from linguistic grammar writing.", "labels": [], "entities": [{"text": "linguistic grammar writing", "start_pos": 96, "end_pos": 122, "type": "TASK", "confidence": 0.6953781247138977}]}, {"text": "We describe a grammar engineering tool that resides in the cloud and can be used in ordinary web browsers.", "labels": [], "entities": [{"text": "grammar engineering", "start_pos": 14, "end_pos": 33, "type": "TASK", "confidence": 0.7714715003967285}]}, {"text": "The tool supports writing grammars in the cloud, compiling them to executable parsers and translation systems, and finally running and testing them in the cloud.", "labels": [], "entities": []}, {"text": "Thus an entire grammar project can be written and used without installing any specific software.", "labels": [], "entities": []}, {"text": "The project can also be published and shared, so that many users can work on the same grammars (although not simultaneously yet in the current version).", "labels": [], "entities": []}, {"text": "The cloud-based GF editor has been used on several tutorial courses and self-studies.", "labels": [], "entities": []}, {"text": "It enables absolute beginners to write their first grammar and parse examples in 10 minutes.", "labels": [], "entities": []}, {"text": "It scales up to most of the grammars described in the GF book, although it has some limitations, in partic- Very : Quality -> Quality; Bad, Good : Quality; Cold, Warm : Quality; }: Abstract syntax Food.gf. ular a simplified module system, which makes it unpractical for larger tasks.", "labels": [], "entities": [{"text": "GF book", "start_pos": 54, "end_pos": 61, "type": "DATASET", "confidence": 0.9506698846817017}]}, {"text": "But students who have got the first experience of grammar writing without the overhead of installation troubles are more likely to proceed to the full-scale systems when they feel the need for it.", "labels": [], "entities": [{"text": "grammar writing", "start_pos": 50, "end_pos": 65, "type": "TASK", "confidence": 0.838969886302948}]}], "datasetContent": [], "tableCaptions": []}