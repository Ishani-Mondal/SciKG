{"title": [{"text": "Grammar Design with Multi-tape Automata and Composition", "labels": [], "entities": [{"text": "Grammar Design", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.8367727696895599}]}], "abstractContent": [{"text": "In this paper we show how traditional composition-based finite-state grammars can be augmented to preserve intermediate results in a chain of compositions.", "labels": [], "entities": []}, {"text": "These intermediate strings can be very helpful for various tasks: enriching information while parsing or generating, providing accurate information for debugging purposes as well as offering explicit alignment information between morphemes and tags in morphological grammars.", "labels": [], "entities": [{"text": "parsing or generating", "start_pos": 94, "end_pos": 115, "type": "TASK", "confidence": 0.8467989365259806}]}, {"text": "The implementation strategies discussed in the paper hinge on a representation of multi-tape au-tomata as a single-tape automaton.", "labels": [], "entities": []}, {"text": "A simple composition algorithm for such multi-tape automata is provided.", "labels": [], "entities": []}], "introductionContent": [{"text": "Applications for morphological and phonological analysis using finite-state techniques tend to follow established design patterns based on the composition of transducers that encode morphotactics and morphophonological alternations.", "labels": [], "entities": [{"text": "morphological and phonological analysis", "start_pos": 17, "end_pos": 56, "type": "TASK", "confidence": 0.6781200990080833}]}, {"text": "Not counting a few exceptions that concern nonconcatenative morphologies, this well-established approach is indeed quite successful and streamlined in the domain of morphophonology if the goal is to produce a monolithic transducer that provides mappings between lemmas/tags and actual surface forms of words.", "labels": [], "entities": []}, {"text": "Some types of grammatical information are difficult to include in such a design, however.", "labels": [], "entities": []}, {"text": "In morphological modeling, one may want to recover the alignment of morphological tags to the actual morphemes; in phonological modeling, one may want to recover intermediate representations that show how a particular phonological alternation targets specific segments in a word, what order phonological alternations occurred in, and what they were conditioned on.", "labels": [], "entities": []}, {"text": "The ability to do so would make finite-state devices more attractive for linguistic research, where computational methods could help streamline the work of lining up large amounts of data and testing hypothetical generalizations; it might therefore increase linguists' use of finite-state methods, whose potential has to date been underexploited in the linguistics literature.", "labels": [], "entities": []}, {"text": "In this paper, we argue that a multi-tape model constructed by composition of individual multitape lexicon or alternation transducers offers a simple framework that addresses the problem of intermediate forms, while at the same time retaining the straightforward design of morphology and morphophonology.", "labels": [], "entities": []}, {"text": "Apart from expanding the expressive power of the grammar, the method also offers the grammar designer the option to re-convert the multi-tape grammar to a simple underlying-to-surface transducer, if desiredas maybe the case if the multi-tape representation is only used for obtaining debugging information.", "labels": [], "entities": []}, {"text": "When drafting a morphological grammar, debugging the alternation rules and lexicon description becomes much less burdensome under the multi-tape model, since information about each step in the process of mapping from underlying to surface form is retained and is available for inspection.", "labels": [], "entities": []}, {"text": "2 Traditional rewrite-rule grammars A significant portion of morphological analysis tools are written with the design alluded to above: (1) a transducer that encodes morphotactics and tag sequences, and (2) a series of transducers that model morphophonological/orthographic alternation.", "labels": [], "entities": []}, {"text": "The latter maybe expressed as Sound Pattern of English-inspired 'rewrite rules': Interaction of multiple phonological processes in Lardil.", "labels": [], "entities": [{"text": "Lardil", "start_pos": 131, "end_pos": 137, "type": "DATASET", "confidence": 0.9526825547218323}]}, {"text": "(, the former being the arguably more popular choice at present.", "labels": [], "entities": []}, {"text": "The result of composing the lexicon transducer and the morphophonological transducers is one monolithic transducer that directly performs the bidirectional mapping from underlying-to-surface forms (generation) and vice versa (parsing).", "labels": [], "entities": []}, {"text": "The prevalence of this design is probably partly due to known algorithms ( or software tools designed around this paradigm (such as Xerox's lexc/xfst/twol, foma (Hulden, 2009b), or Kleene (Beesley, 2012)).", "labels": [], "entities": []}, {"text": "In the following, we shall assume the more common 'rewrite-rule' paradigm.", "labels": [], "entities": []}, {"text": "illustrates this standard design using some example words from a grammar of Lardilan example language often used to illustrate complex rule ordering and word-final phonology with rules that are sensitive to ordering.", "labels": [], "entities": []}, {"text": "The original data stems from, and we follow analyses by; Hayes (2011);.", "labels": [], "entities": []}, {"text": "Due to the rich interaction of word-final deletion rules, this is a widely used data set that has been a target of many analyses, all of which illustrate the difficulty of marshaling a complex set of phonological alternations.", "labels": [], "entities": []}, {"text": "To explain the workings of the grammar, we show all the intermediate steps in mapping from lemmaand-inflection forms to actual surface realizations.", "labels": [], "entities": []}, {"text": "In actuality, if modeled by transducer composition, all the intermediate forms are lost through the composition process, which is one of the shortcomings addressed below.", "labels": [], "entities": []}, {"text": "That is, a final composite transducer simply provides mappings between parse and surface.", "labels": [], "entities": []}, {"text": "For phonological analysis, possible grammar debugging, and perhaps language documentation purposes, it would be very desirable to be able to produce a rich representation such as the one in table 1 from either an underlying form (morphological information) or the surface form showing all the processes that the word undergoes step-by-step.", "labels": [], "entities": [{"text": "grammar debugging", "start_pos": 36, "end_pos": 53, "type": "TASK", "confidence": 0.7641505300998688}]}, {"text": "Under the standard composition model, there is no easy way to do this, save by applying an underlying form to each of the individual transducers representing the alternation rules in order, saving the results, and passing them on as input to the next transducer.", "labels": [], "entities": []}, {"text": "However, in the inverse direction, such a strategy is not directly feasible, in addition to the fact that not composing the transducers partly defeats the purpose of using a finitestate model in the first place.", "labels": [], "entities": []}, {"text": "There is no principled reason, however, why the composition algorithm should destroy the intermediate representations if they are desired later.", "labels": [], "entities": []}, {"text": "In other words, when creating a composite transducer modeling x:z from transducers x:y and y:z, one can in principle expand the composition algorithm to yield x:y:z in some representation, retaining all the intermediate information.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}