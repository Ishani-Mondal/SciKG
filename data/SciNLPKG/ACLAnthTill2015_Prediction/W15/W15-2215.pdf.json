{"title": [{"text": "Stacking or Supertagging for Dependency Parsing - What's the Difference?", "labels": [], "entities": [{"text": "Stacking or Supertagging for Dependency Parsing - What's the Difference?", "start_pos": 0, "end_pos": 72, "type": "TASK", "confidence": 0.6804083536068598}]}], "abstractContent": [{"text": "Supertagging was recently proposed to provide syntactic features for statistical dependency parsing, contrary to its traditional use as a disambiguation step.", "labels": [], "entities": [{"text": "statistical dependency parsing", "start_pos": 69, "end_pos": 99, "type": "TASK", "confidence": 0.732895036538442}]}, {"text": "We conduct abroad range of controlled experiments to compare this specific application of supertagging with another method for providing syntactic features, namely stacking.", "labels": [], "entities": [{"text": "stacking", "start_pos": 164, "end_pos": 172, "type": "TASK", "confidence": 0.9649311900138855}]}, {"text": "We find that in this context su-pertagging is a form of stacking.", "labels": [], "entities": []}, {"text": "We furthermore show that (i) a fast parser and a sequence labeler are equally beneficial in supertagging, (ii) supertagging/stacking improve parsing also in a cross-domain setting, and (iii) there are small gains when combining supertagging and stacking, but only if both methods use different tools.", "labels": [], "entities": []}, {"text": "The important consideration is therefore not the method but rather the diversity of the tools involved.", "labels": [], "entities": []}], "introductionContent": [{"text": "We present a systematic comparison of two methods that have been proposed to improve statistical dependency parsers: supertagging and stacking.", "labels": [], "entities": [{"text": "statistical dependency parsers", "start_pos": 85, "end_pos": 115, "type": "TASK", "confidence": 0.6774693330128988}, {"text": "stacking", "start_pos": 134, "end_pos": 142, "type": "TASK", "confidence": 0.9622424244880676}]}, {"text": "Supertags are labels for tokens much like POS tags but they also encode syntactic information, e.g. the head direction or the subcategorization frame.", "labels": [], "entities": []}, {"text": "Supertagging was developed for deep grammar formalisms as the disambiguation of supertag assignment prior to parsing).", "labels": [], "entities": []}, {"text": "Recently, it was presented as a method to provide syntactic information to the feature model of a statistical dependency parser.", "labels": [], "entities": [{"text": "statistical dependency parser", "start_pos": 98, "end_pos": 127, "type": "TASK", "confidence": 0.6260437270005544}]}, {"text": "provide CCG supertags to a dependency parser, whereas extract their supertag tag set from a dependency treebank (see.", "labels": [], "entities": []}, {"text": "In this paper, we adopt tree: John loves Mary stags: subj/R root/L+L R obj/L root subj obj Figure 1: Supertags that are derived from dependency trees for each token.", "labels": [], "entities": []}, {"text": "They encode the label, the head direction, and the presence of left and right dependents.", "labels": [], "entities": []}, {"text": "this particular definition and take supertagging as away of incorporating syntactic features instead of the traditional use for disambiguation.", "labels": [], "entities": []}, {"text": "Parser stacking was introduced by and.", "labels": [], "entities": [{"text": "Parser stacking", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.762196958065033}]}, {"text": "In stacking, two parsers are run in sequence so that the second parser can use the output of the first parser as features, for example, whether a particular arc was already predicted by the first parser.", "labels": [], "entities": []}, {"text": "When supertags were first proposed by, they called supertagging almost parsing, because supertags anticipate a lot of syntactic disambiguation.", "labels": [], "entities": []}, {"text": "In stacking, the first step is running a parser, or in other words: real parsing.", "labels": [], "entities": [{"text": "stacking", "start_pos": 3, "end_pos": 11, "type": "TASK", "confidence": 0.9706827998161316}]}, {"text": "In this paper, we investigate the difference between almost and real parsing for improving a statistical dependency parser.", "labels": [], "entities": [{"text": "statistical dependency parser", "start_pos": 93, "end_pos": 122, "type": "TASK", "confidence": 0.6928775310516357}]}, {"text": "We conduct an extensive number of comparative experiments with two state-of-the-art dependency parsers and a state-of-the-art sequence labeler on 10 different data sets.", "labels": [], "entities": []}, {"text": "In the first set of experiments, we use only the two parsers and compare both methods in artificial and realistic settings.", "labels": [], "entities": []}, {"text": "In the second set of experiments, we control for the methods and compare different ways of realizing them.", "labels": [], "entities": []}, {"text": "In the last set, we evaluate the benefit of combining both methods.", "labels": [], "entities": []}, {"text": "Intuitively, stacking should give higher improvements than the version of supertagging defined by, since trees in stacking are more informative than supertag sequences in supertagging.", "labels": [], "entities": [{"text": "stacking", "start_pos": 13, "end_pos": 21, "type": "TASK", "confidence": 0.9776133894920349}]}, {"text": "However, our experiments show that both methods perform on par.", "labels": [], "entities": []}, {"text": "Based on an in-depth analysis of these findings, we argue that supertagging is a form of stacking.", "labels": [], "entities": [{"text": "stacking", "start_pos": 89, "end_pos": 97, "type": "TASK", "confidence": 0.9667955040931702}]}, {"text": "One apparent advantage of supertagging is the fact that one can predict supertags without a parser and thus possibly faster.", "labels": [], "entities": []}, {"text": "However, greedy transition-based parsers are extremely fast as well.", "labels": [], "entities": []}, {"text": "We show that the output of a CRF sequence labeler and a greedy transition-based parser are of equal usefulness when used in supertagging.", "labels": [], "entities": []}, {"text": "This setup suggests application to large-scale (e.g. web) data.", "labels": [], "entities": []}, {"text": "We test both methods on the English Web Treebank () and show that they also improve parsing in a cross-domain setting.", "labels": [], "entities": [{"text": "English Web Treebank", "start_pos": 28, "end_pos": 48, "type": "DATASET", "confidence": 0.9607617855072021}, {"text": "parsing", "start_pos": 84, "end_pos": 91, "type": "TASK", "confidence": 0.9643676280975342}]}, {"text": "Our experiments on combining supertagging and stacking show small gains only when supertags and trees are predicted by different tools.", "labels": [], "entities": [{"text": "stacking", "start_pos": 46, "end_pos": 54, "type": "TASK", "confidence": 0.9695740342140198}]}, {"text": "demonstrate that diversity of algorithms is important when stacking parsers.", "labels": [], "entities": []}, {"text": "Since supertagging is a form of stacking, this also holds for supertagging, and we argue that this is a more important factor than the choice between the two methods.", "labels": [], "entities": []}, {"text": "We give background on supertagging and stacking in Section 2 and describe our experimental setup in Section 3.", "labels": [], "entities": [{"text": "stacking", "start_pos": 39, "end_pos": 47, "type": "TASK", "confidence": 0.9714947938919067}]}, {"text": "We present our experiments in Sections 4 to 6 and conclude with Section 7.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluate the parsing experiments using Labeled Attachment Score (LAS).", "labels": [], "entities": [{"text": "parsing", "start_pos": 16, "end_pos": 23, "type": "TASK", "confidence": 0.9681545495986938}, {"text": "Labeled Attachment Score (LAS)", "start_pos": 42, "end_pos": 72, "type": "METRIC", "confidence": 0.9113726516564687}]}, {"text": "We mark statistical significance against respective baselines by \u2020 and \u2021, denoting p-value < 0.05 and p-value < 0.01 respectively.", "labels": [], "entities": [{"text": "statistical significance", "start_pos": 8, "end_pos": 32, "type": "METRIC", "confidence": 0.7155975699424744}]}, {"text": "Significance testing is carried out using the Wilcoxon signed-rank test.", "labels": [], "entities": []}, {"text": "Averages and oracle experiments are not tested for significance.", "labels": [], "entities": []}, {"text": "In order to assess the potential utility of supertags we provided the parsers with gold supertags.", "labels": [], "entities": []}, {"text": "We expect the gold supertags to give a considerable boost to accuracy as they encode correct syntactic information.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 61, "end_pos": 69, "type": "METRIC", "confidence": 0.99935382604599}]}, {"text": "Intuitively, we would expect the corresponding stacking experiment (providing gold trees) to reach 100% accuracy since the parser receives the full solution as features.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 104, "end_pos": 112, "type": "METRIC", "confidence": 0.9992076754570007}]}, {"text": "However, this assumption turns out not to hold.", "labels": [], "entities": []}, {"text": "Row in shows the results for the supertag experiments.", "labels": [], "entities": []}, {"text": "Comparing row 4 with row 2 , we find big jumps (between 7 and 20% absolute) in performance.", "labels": [], "entities": []}, {"text": "For German, English, and Polish performance goes up even to 97/98%.", "labels": [], "entities": []}, {"text": "These huge jumps are due to the amount of syntactic information encoded in the supertags, which is much higher than in POS tags for example.", "labels": [], "entities": []}, {"text": "Row in shows the results for the stacking experiments.", "labels": [], "entities": [{"text": "stacking", "start_pos": 33, "end_pos": 41, "type": "TASK", "confidence": 0.982715368270874}]}, {"text": "Surprisingly, stacking with gold dependency trees does not reach 100% accuracy.", "labels": [], "entities": [{"text": "stacking", "start_pos": 14, "end_pos": 22, "type": "TASK", "confidence": 0.9759042859077454}, {"text": "accuracy", "start_pos": 70, "end_pos": 78, "type": "METRIC", "confidence": 0.9986054301261902}]}, {"text": "Moreover, comparing rows 4 and 5 we find that on average supertagging and stacking improve performance of a parser to the same extent.", "labels": [], "entities": []}, {"text": "The fact that gold supertags do not yield maximum accuracy is not so surprising since a supertag sequence does not encode the full dependency tree, but merely indicates direction of heads and dependents.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 50, "end_pos": 58, "type": "METRIC", "confidence": 0.9958158135414124}]}, {"text": "However, it is puzzling that stacking with gold trees does not lead to perfect parsing results.", "labels": [], "entities": [{"text": "stacking", "start_pos": 29, "end_pos": 37, "type": "TASK", "confidence": 0.9619175791740417}]}, {"text": "In case of the transition-based parser, the reason might be that the parser does not do exhaustive search but uses beam search to explore only a fraction of the search space.", "labels": [], "entities": []}, {"text": "That is, the gold solution can get pruned early enough that the parser never considers it.", "labels": [], "entities": []}, {"text": "For the graph-based parser this result is more unexpected since this parser does exact search.", "labels": [], "entities": []}, {"text": "We currently do not have any explanation for this, however we hypothesize that the lack of regularization during training might assign enough weight on the regular features such that they can override the few stacking features that convey the correct solution.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Tag set sizes for training sets.", "labels": [], "entities": []}, {"text": " Table 5: Parsing results (LAS) on test sets.", "labels": [], "entities": [{"text": "Parsing results (LAS)", "start_pos": 10, "end_pos": 31, "type": "METRIC", "confidence": 0.6837074220180511}]}, {"text": " Table 6: Results (LAS) for the graph-based parser for different experiments on development sets.", "labels": [], "entities": [{"text": "LAS)", "start_pos": 19, "end_pos": 23, "type": "METRIC", "confidence": 0.8665978908538818}]}, {"text": " Table 7: Results (LAS) for the transition-based parser for different experiments on development sets.", "labels": [], "entities": [{"text": "LAS)", "start_pos": 19, "end_pos": 23, "type": "METRIC", "confidence": 0.9038689136505127}]}, {"text": " Table 8: Parsing results (LAS) with a sequence labeler and a greedy transition-based parser on develop- ment sets.", "labels": [], "entities": []}, {"text": " Table 9: Results (LAS) on the English Web Tree- bank.", "labels": [], "entities": [{"text": "English Web Tree- bank", "start_pos": 31, "end_pos": 53, "type": "DATASET", "confidence": 0.9794458389282227}]}, {"text": " Table 10: Results (LAS) on development sets for combining supertags and stacking.", "labels": [], "entities": [{"text": "LAS", "start_pos": 20, "end_pos": 23, "type": "METRIC", "confidence": 0.8966142535209656}, {"text": "stacking", "start_pos": 73, "end_pos": 81, "type": "TASK", "confidence": 0.9652453064918518}]}]}