{"title": [], "abstractContent": [{"text": "Suppose we have a large dictionary of strings.", "labels": [], "entities": []}, {"text": "Each entry starts with a figure of merit (popularity).", "labels": [], "entities": []}, {"text": "We wish to find the k-best matches fora substring, s, in a dicti-noary, dict.", "labels": [], "entities": []}, {"text": "That is, grep s dict | sort-n | head-k, but we would like to do this in sublinear time.", "labels": [], "entities": []}, {"text": "Example applications: (1) web queries with popularities, (2) products with prices and (3) ads with click through rates.", "labels": [], "entities": []}, {"text": "This paper proposes a novel index, k-best suffix arrays, based on ideas borrowed from suffix arrays and kd-trees.", "labels": [], "entities": []}, {"text": "A standard suffix array sorts the suffixes by a single order (lexicographic) whereas k-best suffix arrays are sorted by two orders (lexicographic and popularity).", "labels": [], "entities": []}, {"text": "Lookup time is between log N and sqrt N.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}