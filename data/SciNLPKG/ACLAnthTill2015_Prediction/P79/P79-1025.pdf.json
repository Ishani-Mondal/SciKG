{"title": [{"text": "RESPONSE GENERATION IN QUESTION -ANSWERING SYSTEMS", "labels": [], "entities": [{"text": "RESPONSE GENERATION IN QUESTION -ANSWERING SYSTEMS", "start_pos": 0, "end_pos": 50, "type": "METRIC", "confidence": 0.594925309930529}]}], "abstractContent": [], "introductionContent": [{"text": "AS part of our long-term research into techniques for information retrieval from natural language data bases, we have developed over the past few years a natural language interface for database retrieval.", "labels": [], "entities": [{"text": "information retrieval from natural language", "start_pos": 54, "end_pos": 97, "type": "TASK", "confidence": 0.823901790380478}, {"text": "database retrieval", "start_pos": 185, "end_pos": 203, "type": "TASK", "confidence": 0.7947969138622284}]}, {"text": "In developing this system, we have sought general, conceptually simple, linguistically-based solutlons to problems of semantic representation and interpretation.", "labels": [], "entities": [{"text": "semantic representation and interpretation", "start_pos": 118, "end_pos": 160, "type": "TASK", "confidence": 0.7496245726943016}]}, {"text": "One component of the system, which we have recently redesigned and are now implementing in its revised form, involves the generation of responses.", "labels": [], "entities": []}, {"text": "This paper will briefly describe our approach, and how this approach simplifies some of the problems of response generation.", "labels": [], "entities": [{"text": "response generation", "start_pos": 104, "end_pos": 123, "type": "TASK", "confidence": 0.8671628832817078}]}, {"text": "Our system processes a query in four stages: syntactic analysis, semantic analysis, simplification, and retrieval (see).", "labels": [], "entities": [{"text": "syntactic analysis", "start_pos": 45, "end_pos": 63, "type": "TASK", "confidence": 0.7297213971614838}, {"text": "semantic analysis", "start_pos": 65, "end_pos": 82, "type": "TASK", "confidence": 0.775763213634491}]}, {"text": "The syntactic analysis, which is performed by the Linguistic String Parser, constructs a parse tree a~d then applies a series of transformations which decompose the sentence into a operator-operandadjunct tree, The semantic analysis first translates this tree into a formula of the predicate calculus with set-formers and quantification over sets.", "labels": [], "entities": []}, {"text": "This is followed by anaphora resolution (replacement of pronouns with their antecedents) and predicate expansion (replacement of predicates not appearing in the database by their definitions in terms of predicates in the data base).", "labels": [], "entities": [{"text": "anaphora resolution", "start_pos": 20, "end_pos": 39, "type": "TASK", "confidence": 0.6690679341554642}, {"text": "predicate expansion", "start_pos": 93, "end_pos": 112, "type": "TASK", "confidence": 0.9097262918949127}]}, {"text": "The simplification stage performs certain optimizations on nested quantifiers, after which the retrieval component evaluates the formula with respect to the database and generates a response.", "labels": [], "entities": []}, {"text": "Our original system, like many current question-answering systems, had simple mechanisms for generating lists and tables in response to questions.", "labels": [], "entities": []}, {"text": "As we broadened our system's coverage, however, to include predicate expansion and to handle abroad range of conjoined struc~:ures, the number of ad hoc rules for generating answers grew considerably.", "labels": [], "entities": []}, {"text": "We decided therefore to introduce a much more general mechanism, for translating predicate calculus expressions back into English.", "labels": [], "entities": [{"text": "translating predicate calculus expressions", "start_pos": 69, "end_pos": 111, "type": "TASK", "confidence": 0.8587083518505096}]}], "datasetContent": [], "tableCaptions": []}