{"title": [{"text": "GENF~ALIZED AUGMENTED TRANSITION NETWORK GRAMMARS FOR GENERATION FROM SD\u00a3%NTIC NETWORKS", "labels": [], "entities": [{"text": "ALIZED AUGMENTED TRANSITION NETWORK GRAMMARS FOR GENERATION FROM SD\u00a3%NTIC", "start_pos": 5, "end_pos": 78, "type": "METRIC", "confidence": 0.689507470889525}, {"text": "NETWORKS", "start_pos": 79, "end_pos": 87, "type": "TASK", "confidence": 0.5018795728683472}]}], "abstractContent": [{"text": "I. YNTRODUCTYON Augmented transition network (ATN) grammars have, since their development by Woods [ 7; ~, become the most used method of describing grammars for natural language understanding end question answering systems.", "labels": [], "entities": [{"text": "YNTRODUCTYON", "start_pos": 3, "end_pos": 15, "type": "METRIC", "confidence": 0.8913928270339966}, {"text": "natural language understanding end question answering", "start_pos": 162, "end_pos": 215, "type": "TASK", "confidence": 0.7662538637717565}]}, {"text": "The advantages of the ATN notation have been su,naarized as \"I) perspicuity, 2) generative power, 3) efficiency of representation, 4) the ability to capture linguistic regularities and generalities, and 5) efficiency of operation., [ I ,p.191 ].", "labels": [], "entities": []}, {"text": "The usual method of utilizing an ATN grammar in a natural language system is to provide an interpreter which can take any ATH graam~ar, a lexicon , and a sentence as data and produce either a parse of a sentence or a message that the sentence does not conform to the granunar.", "labels": [], "entities": []}, {"text": "A compiler has been written [2;3 ] which takes an ATH grammar as input and produces a specialized parser for that grammar, but in this paper we will presume that an Interpreter is being used.", "labels": [], "entities": []}, {"text": "A particular ATN grammar maybe viewed as a program written in the ATH language.", "labels": [], "entities": [{"text": "ATH language", "start_pos": 66, "end_pos": 78, "type": "DATASET", "confidence": 0.8997390568256378}]}, {"text": "The program takes a sentence , a linear sequence of symbols, as input, and produces as output a parse which is usually a parse tree (often represented by a LISP S-expression) or some \"k~ewledge reprssentatioc\" such as a semantic network.", "labels": [], "entities": []}, {"text": "The operation of the program depends on the interpreter being used and the particular program (grannar), as well as on the input (sentence) being processed.", "labels": [], "entities": []}, {"text": "Several methods have been described for using ATN grammars for sentence generation.", "labels": [], "entities": [{"text": "sentence generation", "start_pos": 63, "end_pos": 82, "type": "TASK", "confidence": 0.7808819115161896}]}, {"text": "One method [1,p.235]is to replace the usual interpreter by a generation interpreter which con take an ATN grammar written for parsing and use it to produce random sentences conforming to the grammar.", "labels": [], "entities": []}, {"text": "This is useful for testing and debug-ging the granmmLr.", "labels": [], "entities": []}, {"text": "Another method [5 ] uses a modified interpreter to generate sentences from a semantic network.", "labels": [], "entities": []}, {"text": "In this method, an ATN register is initialized to hold anode of the semantic network and the input to the grammar is a linear string of symbols providing a pattern of the sentence to be generated.", "labels": [], "entities": []}, {"text": "Another method [4 ] also generates sentences from a semantic network.", "labels": [], "entities": []}, {"text": "In this method, input to the granmmr is the semantic network itself.", "labels": [], "entities": []}, {"text": "That is, instead of successive words of a surface sentence or successive symbols of a linear sentence pattern being scanned as the ATM grammar is traversed by the interpreter, different nodes of the ssmantic network are scanned.", "labels": [], "entities": []}, {"text": "The gramnar controls the syntax of the generated sentence based on the structural properties of the semantic network and the information contained therein.", "labels": [], "entities": []}, {"text": "It was intended that a single ATN interpreter could be used both for standard ATN parsing and for generation based on this last method.", "labels": [], "entities": [{"text": "ATN parsing", "start_pos": 78, "end_pos": 89, "type": "TASK", "confidence": 0.6912608444690704}]}, {"text": "However, a special interpreter was written for generation grammars of the type described in [4 ], and, indeed, the definition of the ATN formalism given in that paper, though based on the standard ATN formalism, was inconsistent enough with the standard notation that a single interpreter could not be used.", "labels": [], "entities": [{"text": "ATN", "start_pos": 133, "end_pos": 136, "type": "DATASET", "confidence": 0.8401708006858826}]}, {"text": "This paper reports the results of work carried out to remo~ those inconsistencies.", "labels": [], "entities": []}, {"text": "A generalization of the ATN formalism has been derived which allows a single interpreter to be used for both parsing and generating gras~re.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}