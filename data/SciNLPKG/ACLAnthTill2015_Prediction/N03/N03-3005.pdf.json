{"title": [], "abstractContent": [{"text": "This paper presents recent developments of an indexing technique aimed at improving parsing times.", "labels": [], "entities": [{"text": "parsing", "start_pos": 84, "end_pos": 91, "type": "TASK", "confidence": 0.981723427772522}]}, {"text": "Although several methods exist today that serve this purpose, most of them rely on statistical data collected during lengthy training phases.", "labels": [], "entities": []}, {"text": "Our goal is to obtain a reliable method that exhibits an optimal efficiency/cost ratio, without lengthy training processes.", "labels": [], "entities": []}, {"text": "We focus hereon static analysis of the grammar, a method that has unworthily received less attention in the last few years in computational linguistics.", "labels": [], "entities": [{"text": "static analysis of the grammar", "start_pos": 16, "end_pos": 46, "type": "TASK", "confidence": 0.8300812005996704}]}, {"text": "The paper is organized as follows: first, the parsing and indexing problem are introduced , followed by a description of the general indexing strategy for chart parsing; second , a detailed overview and performance analysis of the indexing technique used for typed-feature structure grammars is presented; finally, conclusions and future work are outlined.", "labels": [], "entities": [{"text": "parsing", "start_pos": 46, "end_pos": 53, "type": "TASK", "confidence": 0.9731442928314209}, {"text": "chart parsing", "start_pos": 155, "end_pos": 168, "type": "TASK", "confidence": 0.7629496455192566}]}], "introductionContent": [{"text": "One of the major obstacles in developing efficient parsers for natural language grammars is the slow parsing time.", "labels": [], "entities": []}, {"text": "As recent years witnessed an increase in the use of unification-based grammars (UBG) or large-scale context-free grammars, the need for improving the recognition (parsing) times is more stringent.", "labels": [], "entities": [{"text": "recognition (parsing)", "start_pos": 150, "end_pos": 171, "type": "TASK", "confidence": 0.7203273177146912}]}, {"text": "Our approach is based on the observation that CFG or UBG parsing has to deal with large amount of data and/or data with complex structure, which leads to slower processing times.", "labels": [], "entities": [{"text": "UBG parsing", "start_pos": 53, "end_pos": 64, "type": "TASK", "confidence": 0.7432958483695984}]}, {"text": "This problem is similar to that of the retrieval/updating process in databases, and for this area, it was solved by indexing.", "labels": [], "entities": []}, {"text": "This similarity leads to the assumption that the same solution could be applied to parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 83, "end_pos": 90, "type": "TASK", "confidence": 0.9704182744026184}]}, {"text": "For chart-parsing techniques, one of the most timeconsuming operations is the retrieval of categories from the chart.", "labels": [], "entities": []}, {"text": "This is a look-up process: the retrieved category should match a daughter description from the grammar.", "labels": [], "entities": []}, {"text": "For large-scale CFGs, one position in the chart could contain a large amount of categories; for UBGs, this amount is usually smaller, but the unification process itself is very costly.", "labels": [], "entities": []}, {"text": "Thus, as mentioned in, an indexing method that reduces the number of unifications is much needed.", "labels": [], "entities": []}], "datasetContent": [{"text": "Several experiments were carried to determine the actual run-times of the EFD and indexed EFD parsers for CFGs.", "labels": [], "entities": [{"text": "EFD", "start_pos": 74, "end_pos": 77, "type": "DATASET", "confidence": 0.8190984129905701}, {"text": "CFGs", "start_pos": 106, "end_pos": 110, "type": "DATASET", "confidence": 0.8563469648361206}]}, {"text": "Nine CFGs with atomic categories were built from the Wall Street Journal (Penn Tree Bank release 2) annotated parse trees, by constructing a rule from each sub-tree of every parse tree, and removing the duplicates.", "labels": [], "entities": [{"text": "Wall Street Journal (Penn Tree Bank release 2) annotated parse trees", "start_pos": 53, "end_pos": 121, "type": "DATASET", "confidence": 0.9385899717991169}]}, {"text": "For all experiments we chose a test set of 5 sentences (with lengths of 15, 14, 15, 13, and 18 words) such that each grammar will parse successfully all sentences and each word has only one lexical use in all 5 parses.", "labels": [], "entities": []}, {"text": "The number of rules varied from 124 to 3196.", "labels": [], "entities": []}, {"text": "shows that even fora smaller number of rules, the indexed parser outperforms the non-indexed version.", "labels": [], "entities": []}, {"text": "As the number of rules increases, the need for indexing becomes more stringent.", "labels": [], "entities": [{"text": "indexing", "start_pos": 47, "end_pos": 55, "type": "TASK", "confidence": 0.9551101326942444}]}, {"text": "Although unification costs are small for atomic CFGs, using an indexing method is well justified.", "labels": [], "entities": []}, {"text": "The performance measurements for all CFG experiments (as well as for TFSG experiments presented later) were carried on a Sun Workstation with an UltraSparc v.9 processor at 440 MHz and with 1024 MB of memory.", "labels": [], "entities": []}, {"text": "The parser was implemented in SICStus 3.8.6 for Solaris 8.", "labels": [], "entities": []}, {"text": "For both statistical and non-statistical indexing schemes, a simplified version of the MERGE grammar was used.", "labels": [], "entities": [{"text": "MERGE grammar", "start_pos": 87, "end_pos": 100, "type": "DATASET", "confidence": 0.8269438743591309}]}, {"text": "MERGE is the adaptation for TRALE () of the English Resource Grammar).", "labels": [], "entities": [{"text": "MERGE", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.6440508961677551}, {"text": "TRALE", "start_pos": 28, "end_pos": 33, "type": "METRIC", "confidence": 0.9803785681724548}, {"text": "English Resource Grammar", "start_pos": 44, "end_pos": 68, "type": "DATASET", "confidence": 0.8667261600494385}]}, {"text": "The simplified version has 13 rules with 2 daughters each and 4 unary rules, and 136 lexical entries.", "labels": [], "entities": []}, {"text": "The type hierarchy contains 1157 types, with 144 features introduced.", "labels": [], "entities": []}, {"text": "The features are encoded as Prolog terms (lists of length 13) according to their feature-graph colouring.", "labels": [], "entities": []}, {"text": "For performance measurements, we used a test set containing 40 sentences of lengths from 2 to 9 words 3 (5 sentences for each length).", "labels": [], "entities": []}, {"text": "For training the statistical indexing scheme we use an additional corpus of 60 sentences.", "labels": [], "entities": [{"text": "statistical indexing", "start_pos": 17, "end_pos": 37, "type": "TASK", "confidence": 0.7639493048191071}]}], "tableCaptions": [{"text": " Table 1: Successful unification rate for non-indexing parser (for  the CFGs from Section 4.2.)", "labels": [], "entities": [{"text": "CFGs", "start_pos": 72, "end_pos": 76, "type": "DATASET", "confidence": 0.9534990191459656}]}, {"text": " Table 2: Average parsing times [msec] for statistical indexing,  using the converted MERGE grammar.", "labels": [], "entities": [{"text": "statistical indexing", "start_pos": 43, "end_pos": 63, "type": "TASK", "confidence": 0.7677275538444519}, {"text": "MERGE grammar", "start_pos": 86, "end_pos": 99, "type": "DATASET", "confidence": 0.7909786999225616}]}]}