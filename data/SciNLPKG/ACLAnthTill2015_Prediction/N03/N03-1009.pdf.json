{"title": [{"text": "Simpler and More General Minimization for Weighted Finite-State Automata", "labels": [], "entities": [{"text": "Simpler", "start_pos": 0, "end_pos": 7, "type": "METRIC", "confidence": 0.9142182469367981}]}], "abstractContent": [{"text": "Previous work on minimizing weighted finite-state automata (including transducers) is limited to particular types of weights.", "labels": [], "entities": [{"text": "minimizing weighted finite-state automata", "start_pos": 17, "end_pos": 58, "type": "TASK", "confidence": 0.8778137266635895}]}, {"text": "We present efficient new minimization algorithms that apply much more generally, while being simpler and about as fast.", "labels": [], "entities": []}, {"text": "We also point out theoretical limits on minimization algorithms.", "labels": [], "entities": [{"text": "minimization", "start_pos": 40, "end_pos": 52, "type": "TASK", "confidence": 0.974816083908081}]}, {"text": "We characterize the kind of \"well-behaved\" weight semirings where our methods work.", "labels": [], "entities": []}, {"text": "Outside these semirings, minimization is not well-defined (in the sense of producing a unique minimal automaton), and even finding the minimum number of states is in general NP-complete and inapproximable.", "labels": [], "entities": []}], "introductionContent": [{"text": "It is well known how to efficiently minimize a deterministic finite-state automaton (DFA), in the sense of constructing another DFA that recognizes the same language as the original but with as few states as possible (.", "labels": [], "entities": []}, {"text": "This DFA also has as few arcs as possible.", "labels": [], "entities": []}, {"text": "Minimization is useful for saving memory, as when building very large automata or deploying NLP systems on small hand-held devices.", "labels": [], "entities": []}, {"text": "When automata are built up through complex regular expressions, the savings from minimization can be considerable, especially when applied at intermediate stages of the construction, since (for example) smaller automata can be intersected faster.", "labels": [], "entities": []}, {"text": "Recently the computational linguistics community has turned its attention to weighted automata that compute interesting functions of their input strings.", "labels": [], "entities": []}, {"text": "A traditional automaton only returns an boolean from the set K = {true, f alse}, which indicates whether it has accepted the input.", "labels": [], "entities": []}, {"text": "But a probabilistic automaton returns a probability in K =, or equivalently, a negated logprobability in K =.", "labels": [], "entities": []}, {"text": "A transducer returns an output string from K = \u2206 * (for some alphabet \u2206).", "labels": [], "entities": []}, {"text": "Celebrated algorithms by have recently made it possible to minimize deterministic automata whose weights (outputs) are log-probabilities or strings.", "labels": [], "entities": []}, {"text": "These cases are of central interest in language and speech processing.", "labels": [], "entities": [{"text": "language and speech processing", "start_pos": 39, "end_pos": 69, "type": "TASK", "confidence": 0.6606780514121056}]}, {"text": "However, automata with other kinds of weights can also be defined.", "labels": [], "entities": []}, {"text": "The general formulation of weighted automata) permits any weight set K, if appropriate operations \u2295 and \u2297 are provided for combining weights from the different arcs of the automaton.", "labels": [], "entities": []}, {"text": "The triple (K, \u2295, \u2297) is called a weight semiring and will be explained below.", "labels": [], "entities": []}, {"text": "K-valued functions that can be computed by finite-state automata are called rational functions.", "labels": [], "entities": []}, {"text": "How does minimization generalize to arbitrary weight semirings?", "labels": [], "entities": [{"text": "minimization generalize", "start_pos": 9, "end_pos": 32, "type": "TASK", "confidence": 0.9641131460666656}]}, {"text": "The question is of practical as well as theoretical interest.", "labels": [], "entities": []}, {"text": "Some NLP automata use the real semiring (R, +, \u00d7), or its log equivalent, to compute unnormalized probabilities or other scores outside the range ().", "labels": [], "entities": []}, {"text": "Expectation semirings) are used to handle bookkeeping when training the parameters of a probabilistic transducer.", "labels": [], "entities": []}, {"text": "A byproduct of this paper is a minimization algorithm that works fully with those semirings, anew result permitting more efficient automaton processing in those situations.", "labels": [], "entities": []}, {"text": "Surprisingly, we will see that minimization is not even well-defined for all weight semirings!", "labels": [], "entities": [{"text": "minimization", "start_pos": 31, "end_pos": 43, "type": "TASK", "confidence": 0.9646106362342834}]}, {"text": "We will then (nearly) characterize the semirings where it is welldefined, and give a recipe for constructing minimization algorithms similar to Mohri's in such semirings.", "labels": [], "entities": []}, {"text": "Finally, we follow this recipe to obtain a specific, simple and practical algorithm that works for all division semirings.", "labels": [], "entities": []}, {"text": "All the cases above either fall within this framework or can be forced into it by adding multiplicative inverses to the semiring.", "labels": [], "entities": []}, {"text": "The new algorithm provides arguably simpler minimization for the cases that Mohri has already treated, and also handles additional cases.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}