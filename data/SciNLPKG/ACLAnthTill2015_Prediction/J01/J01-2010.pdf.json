{"title": [{"text": "A Descriptive Approach to Language-Theoretic Complexity", "labels": [], "entities": []}], "abstractContent": [{"text": "This interesting and original work applies descriptive complexity theory to the study of natural languages.", "labels": [], "entities": [{"text": "descriptive complexity theory", "start_pos": 43, "end_pos": 72, "type": "TASK", "confidence": 0.6701200008392334}]}, {"text": "The first part of the book (64 pages) characterizes the strong generative capacity of context-free grammars in logical terms.", "labels": [], "entities": []}, {"text": "The second part (122 pages) discusses the generative capacity of government and binding (GB) theories.", "labels": [], "entities": [{"text": "generative capacity", "start_pos": 42, "end_pos": 61, "type": "TASK", "confidence": 0.9217977821826935}]}, {"text": "The book deserves the close attention of computational linguists, and also of GB theorists who wish to gain a better understanding of the formal properties and consequences of their theory.", "labels": [], "entities": []}, {"text": "Mathematical linguistics was founded on the enormously influential results published by Chomsky in 1959.", "labels": [], "entities": [{"text": "Mathematical linguistics", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.9472567737102509}]}, {"text": "(We save space by not repeating bibliographical items: our reference list includes only items that Rogers does not cite.)", "labels": [], "entities": []}, {"text": "Thus it was based on the theory of rewriting systems and automata.", "labels": [], "entities": []}, {"text": "But theoretical computer science and linguistics have diverged since 1959, and the emergence of descriptive complexity theory is one of the results.", "labels": [], "entities": [{"text": "descriptive complexity theory", "start_pos": 96, "end_pos": 125, "type": "TASK", "confidence": 0.7015336155891418}]}, {"text": "This field is most often taken (as, for example, by Immer-man [1998]) to originate with Fagin's beautiful result (1973, 1974): the class of graph-theoretic problems solvable in polynomial time on a nondeterministic Turing machine is exactly the class that can be stated using a second-order existential sentence-that is, a sentence of the form 3X1...", "labels": [], "entities": []}, {"text": "~Xn[~9], where the Xi are variables over properties or relations and q~ contains only first-order quantifiers.", "labels": [], "entities": []}, {"text": "Fagin's work established anew way to measure computational complexity: instead of asking fora measure of how many tape squares or Turing machine operations are needed for the computation that solves some problem, one can ask instead: \"How rich a logic it would take to state this kind of problem?\"", "labels": [], "entities": []}, {"text": "This has led to a significant new branch of theoretical computer science.", "labels": [], "entities": []}, {"text": "It has antecedents in earlier research.", "labels": [], "entities": []}, {"text": "In the late 1950s it was proved by J. R. Btichi and by C. C. Elgot that the sets of strings definable by existential sentences of monadic second-order logic (MSO) were exactly the regular languages; that is, a set of strings is regular if and only if it is a model of a sentence of the form ~X1...", "labels": [], "entities": []}, {"text": "~Xn[~] , where the Xi are variables over properties of elements, e.g., the property of being an a or being ab, and there is a strict ordering on the elements.", "labels": [], "entities": []}, {"text": "Between 1967 and 1970, work by James W. Thatcher, J. B. Wright, Michael O. Rabin, and John Doner extended this result in various ways, considering trees as models for MSO sentences, and from this work it emerged that 304", "labels": [], "entities": [{"text": "MSO sentences", "start_pos": 167, "end_pos": 180, "type": "TASK", "confidence": 0.8791437745094299}]}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}