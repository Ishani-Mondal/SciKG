{"title": [], "abstractContent": [{"text": "There is considerable interest among computational linguists in lexicalized grammatical frameworks ; lexicalized tree adjoining grammar (LTAG) is one widely studied example.", "labels": [], "entities": []}, {"text": "In this paper, we investigate how derivations in LTAG can be viewed not as manipulations of trees but as manipulations of tree descriptions.", "labels": [], "entities": []}, {"text": "Changing the way the lexicalized formalism is viewed raises questions as to the desirability of certain aspects of the formalism.", "labels": [], "entities": []}, {"text": "We present anew formalism, d-tree substitution grammar (DSG).", "labels": [], "entities": [{"text": "d-tree substitution grammar (DSG)", "start_pos": 27, "end_pos": 60, "type": "TASK", "confidence": 0.7669446070988973}]}, {"text": "Derivations in DSG involve the composition of d-trees, special kinds of tree descriptions.", "labels": [], "entities": []}, {"text": "Trees are read off from derived d-trees.", "labels": [], "entities": []}, {"text": "We show how the DSG formalism, which is designed to inherit many of the characterestics of LTAG, can be used to express a variety of linguistic analyses not available in LTAG.", "labels": [], "entities": []}], "introductionContent": [{"text": "There is considerable interest among computational linguists in lexicalized grammatical frameworks.", "labels": [], "entities": []}, {"text": "From a theoretical perspective, this interest is motivated by the widely held assumption that grammatical structure is projected from the lexicon.", "labels": [], "entities": []}, {"text": "From a practical perspective, the interest stems from the growing importance of word-based corpora in natural language processing.", "labels": [], "entities": [{"text": "natural language processing", "start_pos": 102, "end_pos": 129, "type": "TASK", "confidence": 0.6420800785223643}]}, {"text": "defines a lexicalized grammar as a grammar in which every elementary structure (rules, trees, etc.) is associated with a lexical item and every lexical item is associated with a finite set of elementary structures of the grammar.", "labels": [], "entities": []}, {"text": "Lexicalized tree adjoining grammar (LTAG) is a widely studied example of a lexicalized grammatical formalism.", "labels": [], "entities": [{"text": "Lexicalized tree adjoining grammar (LTAG)", "start_pos": 0, "end_pos": 41, "type": "TASK", "confidence": 0.7738983631134033}]}, {"text": "1 In LTAG, the elementary structures of the grammar are phrase structure trees.", "labels": [], "entities": []}, {"text": "Because of the extended domain of locality of a tree (as compared to a context-free string rewriting rule), the elementary trees of an LTAG can provide possible syntactic contexts for the lexical item or items that anchor the tree, i.e., from which the syntactic structure in the tree is projected.", "labels": [], "entities": []}, {"text": "LTAG provides two operations for combining trees: substitution and adjunction.", "labels": [], "entities": [{"text": "LTAG", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9257299304008484}]}, {"text": "The substitution operation appends one tree at a frontier node of another tree.", "labels": [], "entities": []}, {"text": "The adjunction operation is more powerful: it can be used to insert one tree within another.", "labels": [], "entities": []}, {"text": "This property of adjoining has been widely used in the LTAG literature to provide an account for long-distance dependencies.", "labels": [], "entities": [{"text": "LTAG literature", "start_pos": 55, "end_pos": 70, "type": "DATASET", "confidence": 0.9262940287590027}]}, {"text": "shows atypical analysis of topicalization.", "labels": [], "entities": []}, {"text": "The related nodes for the filler and the gap in the elementary tree c~ are moved further apart when the tree 7 is obtained by adjoining the auxiliary tree fl within ~.", "labels": [], "entities": []}, {"text": "This shows that adjunction changes the structural relationship between some of the nodes in the tree into which adjunction occurs.", "labels": [], "entities": []}, {"text": "In LTAG, the lexicalized elementary objects are defined in such away that the structural relationships between the anchor and each of its dependents change during the course of a derivation through the operation of adjunction, as just illustrated.", "labels": [], "entities": []}, {"text": "This approach is not the only possibility.", "labels": [], "entities": []}, {"text": "An alternative would be to define the relationships between the nodes of the elementary objects in such away that these relationships hold throughout the derivation, regardless of how the derivation proceeds.", "labels": [], "entities": []}, {"text": "This perspective on the LTAG formalism was explored in Vijay-Shanker (1992) where, following the principles of d-theory parsing, LTAG was seen as a system manipulating descriptions of trees rather than as a tree rewriting formalism.", "labels": [], "entities": []}, {"text": "Elementary objects are descriptions of possible syntactic contexts for the anchor, formalized in a logic for describing nodes and the relationships (dominance, immediate dominance, linear precedence) that hold between them.", "labels": [], "entities": []}, {"text": "From this perspective, instead of positing the elementary tree ~ in, we can describe the projection of syntactic structure from the transitive verb.", "labels": [], "entities": []}, {"text": "This description is presented pictorially as c~ ~ in.", "labels": [], "entities": []}, {"text": "The solid lines indicate immediate domination, whereas the dashed lines indicate a domination of arbitrary length.", "labels": [], "entities": []}, {"text": "The description a ~ not only partially describes the tree c~ (by taking the dominations to be those of length 0) but also any tree (such as \"~) that can be derived by using the operations of adjunction and substitution starting from c~.", "labels": [], "entities": []}, {"text": "In fact, (~t describes exactly what is common among these trees.", "labels": [], "entities": []}, {"text": "By expressing elementary objects in terms of tree descriptions, we can describe syntactic structure projected from a lexical item in away that is independent of the derivations in which it is used.", "labels": [], "entities": []}, {"text": "This is achieved by employing composition operations that produce descriptions that are compatible with the descriptions being combined.", "labels": [], "entities": []}, {"text": "For instance, adjoining, seen from this perspective, serves to further specify the underspecified dominations.", "labels": [], "entities": []}, {"text": "In, the description -y~ is obtained by additionally stating that the domination between the two nodes labeled S in c~ ~ is now given by the domination relation between the two nodes labeled S in fl~.", "labels": [], "entities": []}, {"text": "As we will explore in this paper, changing the way the lexicalized formalism is viewed, from tree rewriting to tree descriptions, raises questions as to the desirability of certain aspects of the formalism.", "labels": [], "entities": []}, {"text": "Specifically, we claim that the following two aspects of LTAG appear unnecessarily restrictive from the perspective of tree description: . .", "labels": [], "entities": [{"text": "tree description", "start_pos": 119, "end_pos": 135, "type": "TASK", "confidence": 0.7241270542144775}]}, {"text": "In LTAG, the root and foot of auxiliary trees must be labeled by the same nonterminal symbol.", "labels": [], "entities": []}, {"text": "This is not a minor issue since it derives from one of the most fundamental principles of LTAG, factoring of recursion.", "labels": [], "entities": []}, {"text": "This principle states that auxiliary trees express factored out recursion, which can be reintroduced via the adjunction operation.", "labels": [], "entities": []}, {"text": "It has had a profound influence on the way that the formalism has been applied linguistically.", "labels": [], "entities": []}, {"text": "An example of how this can create problems is shown in.", "labels": [], "entities": []}, {"text": "In this case, the \"adjoined\" tree has a root labeled Sand afoot labeled VP, something that is not permissible in LTAG.", "labels": [], "entities": []}, {"text": "Note that without this constraint, the combination would appear to be exactly like adjoining.", "labels": [], "entities": []}, {"text": "We consider this aspect in more detail in Section 4.1.", "labels": [], "entities": []}, {"text": "The adjunction operation embeds all of the adjoined tree within that part of the tree at which adjunction occurs.", "labels": [], "entities": []}, {"text": "This is illustrated in -y') where both parts (separated by domination) of fl~ appear within one underspecified domination relationship in c~'.", "labels": [], "entities": []}, {"text": "The foot node of tree fl in corresponds to a required argument of the lexical anchor, thought.", "labels": [], "entities": []}, {"text": "The adjunction operation accomplishes the role of expanding this argument node.", "labels": [], "entities": []}, {"text": "Unlike the substitution operation, where an entire tree is inserted below the argument node, with adjunction, only a subtree of ~ appears below the argument node; the remainder appears in its entirety above the root node of ft.", "labels": [], "entities": []}, {"text": "However, if we view the trees as descriptions, as in, and if we take the expansion of the foot node as the main goal served by adjunction, it is not clear why the composition should have anything to say about the domination relationship between the other parts of the two objects being combined.", "labels": [], "entities": []}, {"text": "In the description approach, in order to obtain 3/we (in a", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}