{"title": [], "abstractContent": [{"text": "This paper presents a model for deterministic parsing which was designed to simplify the task of writing and understanding a deterministic grammar.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 32, "end_pos": 53, "type": "TASK", "confidence": 0.7666231691837311}]}, {"text": "While retaining structures and operations similar to those of Mareus's PARSIFAL parser [Marcus 80] the grammar language incorporates the following changes.", "labels": [], "entities": [{"text": "Mareus's PARSIFAL parser [Marcus 80", "start_pos": 62, "end_pos": 97, "type": "DATASET", "confidence": 0.823778782572065}]}, {"text": "(1) The use of productions operating in parallel has essentially been eliminated and instead the productions are organized into sequences.", "labels": [], "entities": []}, {"text": "Not only does this improve the understandability of the grammar, it is felt that, this organization corresponds more closely to the task of performing the sequence of buffer transformations and attachments required to parse the most common constituent types.", "labels": [], "entities": []}, {"text": "(2) A general method for interfacing between the parser and a semavtic representation system is introduced.", "labels": [], "entities": []}, {"text": "This interface is independent of the particular semantic representation used and hides all details of the semantic processing from the grammar writer.", "labels": [], "entities": []}, {"text": "(3) The interface also provides a general method for dealing with syntactic ambiguities which arise from the attachment of optional modifiers such as prepo-sitional phrases.", "labels": [], "entities": []}, {"text": "This frees the grammar writer from determining each point at which such ambiguities can occur.", "labels": [], "entities": []}], "introductionContent": [{"text": "Marcus has effectively described the advantages of a deterministic parsing model as is embodied in his PARSIFAL system.", "labels": [], "entities": []}, {"text": "Unfortunately a hindrance to the usability of PARSIFAL is the complexity of its grammar.", "labels": [], "entities": [{"text": "PARSIFAL", "start_pos": 46, "end_pos": 54, "type": "DATASET", "confidence": 0.5027413964271545}]}, {"text": "The popularity of Woods' ATN parsing model] demonstrates that the ease with which a grammar can be written and understood is one of the greatest factors contributing to its usability.", "labels": [], "entities": [{"text": "ATN parsing", "start_pos": 25, "end_pos": 36, "type": "TASK", "confidence": 0.7699355483055115}]}, {"text": "This paper describes DPARSER (Deterministic PARSER) which is an implementation of an alternate deterministic parsing model intended to reduce the complexity of deterministic grammars.", "labels": [], "entities": []}, {"text": "DPARSER has been implemented and a small grammar written.", "labels": [], "entities": [{"text": "DPARSER", "start_pos": 0, "end_pos": 7, "type": "DATASET", "confidence": 0.8637527823448181}]}, {"text": "In developing the grammar the focus has been on dealing with the syntactic ambiguities between the attachment of phrases and thus it can currently handle only simple noun and verb phrases.", "labels": [], "entities": []}, {"text": "2. CONSTITUENT BUFFER DPARSER maintains a constituent buffer which is manipulated by the grammar to derive the constituent structure of the input sentence.", "labels": [], "entities": [{"text": "CONSTITUENT", "start_pos": 3, "end_pos": 14, "type": "METRIC", "confidence": 0.6732922196388245}, {"text": "BUFFER DPARSER", "start_pos": 15, "end_pos": 29, "type": "METRIC", "confidence": 0.6322658956050873}]}, {"text": "Each node of the buffer contains a constituent consisting of a set of feature-type, feature-value pairs, and a set of subconstituents.", "labels": [], "entities": []}, {"text": "When parsing begins the constituent buffer contains a single node with an associated subgrammar for parsing sentence constituents.", "labels": [], "entities": [{"text": "parsing", "start_pos": 5, "end_pos": 12, "type": "TASK", "confidence": 0.9720887541770935}, {"text": "parsing sentence constituents", "start_pos": 100, "end_pos": 129, "type": "TASK", "confidence": 0.9027764399846395}]}, {"text": "As the subgrammar of the sentence node examines the buffer positions to its right, words are brought in from the input sentence to fill the empty positions.", "labels": [], "entities": []}, {"text": "When the grammar discovers a subconstituent phrase to be parsed, it performs a PUSH operation specifying a subgrammar for parsing the constituent and the position of the rightmost word in the constituent phrase.", "labels": [], "entities": [{"text": "PUSH", "start_pos": 79, "end_pos": 83, "type": "METRIC", "confidence": 0.9868096113204956}]}, {"text": "The PUSIt operation inserts anew node into the buffer immediately preceding the constituent phrase and begins executing the specified subgrammar.", "labels": [], "entities": []}, {"text": "This subgrammar may of course perform its own PUSH operations and the same process will be repeated.", "labels": [], "entities": [{"text": "PUSH", "start_pos": 46, "end_pos": 50, "type": "METRIC", "confidence": 0.9704781174659729}]}, {"text": "Once the subeonstituent is complete control returns to the sentence node and the buffer will contain the parsed constituent in place of those which made up the constituent phrase.", "labels": [], "entities": []}, {"text": "The sentence node can now attach the parsed constituent removing it from the buffer.", "labels": [], "entities": []}, {"text": "When all the subconstituents of the sentence node have been attached the parsing is complete.", "labels": [], "entities": []}, {"text": "To familiarize the reader with the form of the constituent buffer we consider the processing of the sentence Jones teaches the course, as the final NP is about to be parsed.", "labels": [], "entities": []}, {"text": "shows the current state of each buffer node giving its position, state of execution, essential syntactic features, and the phrase which it dominates so far.", "labels": [], "entities": []}, {"text": "Following the terminology of Marcus we refer to the nodes which have associated subgrammars as active nodes and the one currently executing is called the current active node.", "labels": [], "entities": []}, {"text": "All buffer positions are given relative to the current active node whose position is labeled **\" . The buffer in its current state contains two active nodes: the original sentence node and anew node which was created to parse the sentence predicate (i.e. verb phrase and its complements}.", "labels": [], "entities": []}, {"text": "The next modification of the buffer takes place when the subgrammar for the predicate node examines its first position causing the word the to be inserted in that position.", "labels": [], "entities": []}, {"text": "At this point a bottom-up parsing mechanism recognizes that this is the beginning of a noun phrase and a PUSH is performed to parse it; this leaves the buffer in the state shown in . The subgrammar for the noun phrase now executes and attaches the words the and course.", "labels": [], "entities": [{"text": "PUSH", "start_pos": 105, "end_pos": 109, "type": "METRIC", "confidence": 0.9918571710586548}]}, {"text": "It then examines the buffer for modifiers of the simple NP which causes the final punctuation, \".\", to be inserted into the buffer.", "labels": [], "entities": []}, {"text": "Since the period cannot be part of a noun phrase, the subgrammar ends its execution, the PUSH is pxrsin~ the noun phrase completed, and the predicate node again becomes the current active node.", "labels": [], "entities": [{"text": "PUSH", "start_pos": 89, "end_pos": 93, "type": "METRIC", "confidence": 0.9957793951034546}]}, {"text": "The resulting state of the buffer is shown in; the words the and course have been replaced by the noun phrase constituent which dominates them.", "labels": [], "entities": []}, {"text": "Aside from PUSH and ATTACH, the following three operations are commonly used by the grammar to manipulate the constituent buffer.", "labels": [], "entities": [{"text": "PUSH", "start_pos": 11, "end_pos": 15, "type": "METRIC", "confidence": 0.658699631690979}, {"text": "ATTACH", "start_pos": 20, "end_pos": 26, "type": "METRIC", "confidence": 0.9391233921051025}]}, {"text": "LABEL label a constituent with a syntactic feature MOVE move a constituent from one position to another INSERT insert a word into a specified position Examples of these actions are presented in the following section.", "labels": [], "entities": [{"text": "MOVE", "start_pos": 51, "end_pos": 55, "type": "METRIC", "confidence": 0.9253334999084473}]}, {"text": "The differences between the data structures maintained by PARSIFAL and DPARSER are for the most part conceptual.", "labels": [], "entities": [{"text": "PARSIFAL", "start_pos": 58, "end_pos": 66, "type": "DATASET", "confidence": 0.6540197730064392}, {"text": "DPARSER", "start_pos": 71, "end_pos": 78, "type": "DATASET", "confidence": 0.8603681325912476}]}, {"text": "PARSIFAL's active nodes are stored in an active node stack which is separate from the constituent buffer.", "labels": [], "entities": [{"text": "PARSIFAL", "start_pos": 0, "end_pos": 8, "type": "DATASET", "confidence": 0.6030913591384888}]}, {"text": "To allow active nodes to parse constituent phrases which are not at the front of the buffer an offset into the buffer can be associated with an active node.", "labels": [], "entities": []}, {"text": "The control of which active node is currently executing is affected through operations which explicitly manipulate the active node stack.", "labels": [], "entities": []}, {"text": "after the push is completed buffer.", "labels": [], "entities": []}, {"text": "The grammar rules try to attach nodes from the lower buffer to those in the upper buffer.", "labels": [], "entities": []}, {"text": "While this structure is similar to PARSIFAL's, it does not draw such a rigid distinction between active and inactive nodes.", "labels": [], "entities": []}, {"text": "There are no separate subgrammars associated with the nodes which constituents are being attached to, and nodes maybe moved freely from one buffer to the other allowing them to be attached before they are complete.", "labels": [], "entities": []}, {"text": "While our constituent structure does maintain active nodes with separate subgrammars, the control of the parsing process is similar to that used by Church in that it is possible for incomplete nodes to be attached.", "labels": [], "entities": [{"text": "parsing", "start_pos": 105, "end_pos": 112, "type": "TASK", "confidence": 0.9697863459587097}]}, {"text": "As will be seen in a latter section this is an essential feature of DPARSER's constituent buffer.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}