{"title": [{"text": "LR Pa rse rs For Natural Languages", "labels": [], "entities": []}], "abstractContent": [{"text": "MLR, an extended LR parser, is introduced, and its application to natural language parsing is discussed.", "labels": [], "entities": [{"text": "MLR", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.7590282559394836}, {"text": "natural language parsing", "start_pos": 66, "end_pos": 90, "type": "TASK", "confidence": 0.666159192721049}]}, {"text": "An LR parser is a ~;hift-reduce parser which is doterministically guided by a parsing table.", "labels": [], "entities": []}, {"text": "A parsing table can be obtained automatically from a context-free phrase structure grammar.", "labels": [], "entities": []}, {"text": "LR parsers cannot manage antl)iguous grammars such as natural language grammars, because their I)arsing tables would have multiply-defined entries, which precludes deterministic parsing.", "labels": [], "entities": []}, {"text": "MLR, however, can handle mulliply-defined entries, using a dynamic programnting method.", "labels": [], "entities": [{"text": "MLR", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.9038430452346802}]}, {"text": "When an input sentence is ambiguous, the MI.R parser produces all possible parse trees witftoul parsing any part of the input sentenc:e more than once in the same way, despite the fact that the parser does not maintain a chart as in chart par~ing.", "labels": [], "entities": []}, {"text": "Our method also prnvkles an elegant solution to the problem of multi-part-of-speech words such as \"that\".", "labels": [], "entities": []}, {"text": "The MLR parser and its parsing table generator have been implemented at Carnegie-Mellon University.", "labels": [], "entities": [{"text": "MLR parser", "start_pos": 4, "end_pos": 14, "type": "TASK", "confidence": 0.5887285470962524}]}], "introductionContent": [{"text": "LR parsers have been developed originally for programming language of compilers.", "labels": [], "entities": []}, {"text": "An LR parser is a shiftreduce parser which is detenninistically guided by a par.~it~g table indicating what action should betaken next.", "labels": [], "entities": []}, {"text": "The parsing table can be obtained automatically from a context-free phrase structure grammar, using an algorithm first developed by DeRemer.", "labels": [], "entities": []}, {"text": "We do not describe the algorithm here, reffering the render to Chapter 6 in Aho and UIIman.", "labels": [], "entities": [{"text": "Aho and UIIman", "start_pos": 76, "end_pos": 90, "type": "DATASET", "confidence": 0.783584455649058}]}, {"text": "The LR parsers have seldom been used for Natural Language Processing probably because: 1.", "labels": [], "entities": [{"text": "Natural Language Processing", "start_pos": 41, "end_pos": 68, "type": "TASK", "confidence": 0.6175140341122946}]}, {"text": "It has been thought that natural languages are not context-free, whereas LR parsers can deal only with context-free languages.", "labels": [], "entities": []}, {"text": "2. Natural languages are ambiguous, while standard LR parsers cannot handle ambi~juous languages.", "labels": [], "entities": []}, {"text": "The recent literature shows that the belief \"natural languages are not context-free\" is not necessarily true, and there is no reason for us to give up the context-freedom of natural languages.", "labels": [], "entities": []}, {"text": "We (to not discuss on this matter further, considering the fact that even if natural languages are not context-free, a fairly comprehensive grammar fora subset of natural language suflicient for practical systems can be written in context.free phrase structure.", "labels": [], "entities": []}, {"text": "lhtJ.% our main concern is how to cope with the ambiguity of natural languages, and this concern is addressed in the fallowing section.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}