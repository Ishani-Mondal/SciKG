{"title": [{"text": "Querying XML documents with multi-dimensional markup", "labels": [], "entities": []}], "abstractContent": [{"text": "XML documents annotated by different NLP tools accommodate multi-dimensional markup in a single hierarchy.", "labels": [], "entities": []}, {"text": "To query such documents one has to account for different possible nesting structures of the annotations and the original markup of a document.", "labels": [], "entities": []}, {"text": "We propose an expressive pattern language with extended semantics of the sequence pattern, supporting negation, permutation and regular patterns that is especially appropriate for querying XML annotated documents with multi-dimensional markup.", "labels": [], "entities": []}, {"text": "The concept of fuzzy matching allows matching of sequences that contain tex-tual fragments and known XML elements independently of how concurrent annotations and original markup are merged.", "labels": [], "entities": [{"text": "fuzzy matching", "start_pos": 15, "end_pos": 29, "type": "TASK", "confidence": 0.7701207995414734}]}, {"text": "We extend the usual notion of sequence as a sequence of siblings allowing matching of sequence elements on the different levels of nesting and abstract so from the hierarchy of the XML document.", "labels": [], "entities": []}, {"text": "Extended sequence semantics in combination with other language patterns allows more powerful and expressive queries than queries based on regular patterns.", "labels": [], "entities": []}], "introductionContent": [{"text": "XML is widely used by NLP tools for annotating texts.", "labels": [], "entities": []}, {"text": "Different NLP tools can produce overlapping annotations of text fragments.", "labels": [], "entities": []}, {"text": "While a common way to cope with concurrent markup is using stand-off markup) with XPointer references to the annotated regions in the source document, another solution is to consolidate the annotations in a single document for easier processing.", "labels": [], "entities": []}, {"text": "In that case concurrent markup has to be merged and accommodated in a single hierarchy.", "labels": [], "entities": []}, {"text": "There are many ways to merge the overlapping markup so that different nesting structures are possible.", "labels": [], "entities": []}, {"text": "Besides, the annotations have to be merged with the original markup of the document (e.g. in case of a HTML document).", "labels": [], "entities": []}, {"text": "The problem of merging overlapping markup has been treated in) and we do not consider it here.", "labels": [], "entities": []}, {"text": "Instead we focus on the problem of finding a universal querying mechanism for documents with multi-dimensional markup.", "labels": [], "entities": []}, {"text": "The query language should abstract from the concrete merging algorithm for concurrent markup, that is to identify desired elements and sequences of elements independently from the concrete nesting structure.", "labels": [], "entities": []}, {"text": "The development of the query language was motivated by an application in text mining.", "labels": [], "entities": [{"text": "text mining", "start_pos": 73, "end_pos": 84, "type": "TASK", "confidence": 0.797437995672226}]}, {"text": "In some text mining systems the linguistic patterns that comprise text and XML annotations (such as syntactic annotations, POS tags) made by linguistic tools are matched with semistructured texts to find desired information.", "labels": [], "entities": []}, {"text": "These texts can be HTML documents that are enriched with linguistic information by NLP tools and therefore contain multidimensional markup.", "labels": [], "entities": []}, {"text": "The linguistic annotations are specified by XML elements that contain the annotated text fragment as CDATA.", "labels": [], "entities": []}, {"text": "Due to the deliberate structure of the HTML document the annotations can be nested in arbitrary depth and vice versa -the linguistic XML element can contain some HTML elements with nested text it refers to.", "labels": [], "entities": []}, {"text": "To find a linguistic pattern we have to abstract from the concrete DTD and actual structure of the XML document ignoring irrelevant markup, which leads to some kind of \"fuzzy\" matching.", "labels": [], "entities": []}, {"text": "Hence it is sufficient to specify a sequence of text fragments and known XML elements (e.g. linguistic tags) without knowing by what elements they are nested.", "labels": [], "entities": []}, {"text": "During the matching process the nesting markup will be omitted even if the sequence elements are on different nesting levels.", "labels": [], "entities": []}, {"text": "We propose an expressive pattern language with the extended semantics of the sequence pattern, permutation, negation and regular patterns that is especially appropriate for querying XML annotated documents.", "labels": [], "entities": []}, {"text": "The language provides a rich tool set for specifying complex sequences of XML elements and textual fragments.", "labels": [], "entities": []}, {"text": "We ignore some important aspects of a fully-fledged XML query language such as construction of result sets, aggregate functions or support of all XML Schema structures focusing instead on the semantics of the language.", "labels": [], "entities": []}, {"text": "Some modern XML query languages impose a relational view of data contained in the XML document aiming at retrieval of sets of elements with certain properties.", "labels": [], "entities": []}, {"text": "While these approaches are adequate for database-like XML documents, they are less appropriate for documents in that XML is used rather for annotation than for representation of data.", "labels": [], "entities": []}, {"text": "Taking the rather textual view of a XML document its querying can be regarded as finding patterns that comprise XML elements and textual content.", "labels": [], "entities": []}, {"text": "One of the main differences when querying annotated texts is that the query typically captures parts of the document that go beyond the boundaries of a single element disrupting the XML tree structure while querying a database-like document returns its subtrees remaining within a scope of an element.", "labels": [], "entities": []}, {"text": "Castagna) distinguishes path expressions that rather correspond to the database view and regular expression patterns as complementary \"extraction primitives\" for XML data.", "labels": [], "entities": []}, {"text": "Our approach enhances the concept of regular expression patterns making them mutually recursive and matching across the element boundaries.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}