{"title": [{"text": "Maximum Spanning Tree Algorithm for Non-projective Labeled Dependency Parsing", "labels": [], "entities": [{"text": "Parsing", "start_pos": 70, "end_pos": 77, "type": "TASK", "confidence": 0.7642164826393127}]}], "abstractContent": [{"text": "Following (McDonald et al., 2005), we present an application of a maximum spanning tree algorithm fora directed graph to non-projective labeled dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 144, "end_pos": 162, "type": "TASK", "confidence": 0.7245689332485199}]}, {"text": "Using a variant of the voted perceptron (Collins, 2002; Collins and Roark, 2004; Crammer and Singer, 2003), we discriminatively trained our parser in an on-line fashion.", "labels": [], "entities": [{"text": "Collins, 2002; Collins and Roark", "start_pos": 41, "end_pos": 73, "type": "DATASET", "confidence": 0.8867718236786979}]}, {"text": "After just one epoch of training, we were generally able to attain average results in the CoNLL 2006 Shared Task.", "labels": [], "entities": [{"text": "CoNLL 2006 Shared Task", "start_pos": 90, "end_pos": 112, "type": "DATASET", "confidence": 0.8782409876585007}]}], "introductionContent": [{"text": "Recently, we have seen dependency parsing grow more popular.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 23, "end_pos": 41, "type": "TASK", "confidence": 0.9009334743022919}]}, {"text": "It is not rare to see dependency relations used as features, in tasks such as relation extraction () and machine translation).", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 78, "end_pos": 97, "type": "TASK", "confidence": 0.8156136572360992}, {"text": "machine translation", "start_pos": 105, "end_pos": 124, "type": "TASK", "confidence": 0.8024494051933289}]}, {"text": "Although English dependency relations are mostly projective, in other languages with more flexible word order, such as Czech, non-projective dependencies are more frequent.", "labels": [], "entities": []}, {"text": "There are generally two methods for learning non-projective dependencies.", "labels": [], "entities": []}, {"text": "You could map a non-projective dependency tree to a projective one, learn and predict the tree, then bring it back to the non-projective dependency tree ).", "labels": [], "entities": []}, {"text": "Non-projective dependency parsing can also be represented as search fora maximum spanning tree in a directed graph, and this technique has been shown to perform well in Czech ().", "labels": [], "entities": [{"text": "Non-projective dependency parsing", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.7508119344711304}]}, {"text": "In this paper, we investigate the effectiveness of) in the various languages given by the CoNLL 2006 shared task for non-projective labeled dependency parsing.", "labels": [], "entities": [{"text": "CoNLL 2006 shared task", "start_pos": 90, "end_pos": 112, "type": "DATASET", "confidence": 0.9085938334465027}, {"text": "non-projective labeled dependency parsing", "start_pos": 117, "end_pos": 158, "type": "TASK", "confidence": 0.623560406267643}]}, {"text": "The paper is structured as follows: in section 2 and 3, we review the decoding and learning aspects of), and in section 4, we describe the extension of the algorithm and the features needed for the CoNLL 2006 shared task.", "labels": [], "entities": [{"text": "CoNLL 2006 shared task", "start_pos": 198, "end_pos": 220, "type": "DATASET", "confidence": 0.8666358143091202}]}], "datasetContent": [{"text": "Our experiments were conducted on CoNLL-X shared task, with various datasets", "labels": [], "entities": [{"text": "CoNLL-X shared task", "start_pos": 34, "end_pos": 53, "type": "DATASET", "confidence": 0.8297531803448995}]}], "tableCaptions": [{"text": " Table 3: Labeled and Unlabeled Attachment Score", "labels": [], "entities": []}]}