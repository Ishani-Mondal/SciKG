{"title": [{"text": "CCG Chart Realization from Disjunctive Inputs", "labels": [], "entities": [{"text": "CCG Chart Realization", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.6815133293469747}]}], "abstractContent": [{"text": "This paper presents a novel algorithm for efficiently generating paraphrases from disjunctive logical forms.", "labels": [], "entities": []}, {"text": "The algorithm is couched in the framework of Combina-tory Categorial Grammar (CCG) and has been implemented as an extension to the OpenCCG surface realizer.", "labels": [], "entities": [{"text": "OpenCCG surface realizer", "start_pos": 131, "end_pos": 155, "type": "TASK", "confidence": 0.7293027440706888}]}, {"text": "The algorithm makes use of packed representations similar to those initially proposed by Shem-tov (1997), generalizing the approach in a more straightforward way than in the algorithm ultimately adopted therein.", "labels": [], "entities": []}], "introductionContent": [{"text": "In recent years, the generate-and-select paradigm of natural language generation has attracted increasing attention, particularly for the task of surface realization.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 53, "end_pos": 80, "type": "TASK", "confidence": 0.6745539704958597}, {"text": "surface realization", "start_pos": 146, "end_pos": 165, "type": "TASK", "confidence": 0.7296201139688492}]}, {"text": "In this paradigm, symbolic methods are used to generate a space of possible phrasings, and statistical methods are used to select one or more outputs from this space.", "labels": [], "entities": []}, {"text": "To specify the desired paraphrase space, one may either provide an input logical form that underspecifies certain realization choices, or include explicit disjunctions in the input LF (or both).", "labels": [], "entities": []}, {"text": "Our experience suggests that disjunctive LFs are an important capability, especially as one seeks to make grammars reusable across applications, and to employ domain-specific, sentence-level paraphrases (.", "labels": [], "entities": []}, {"text": "Prominent examples of surface realizers in the generate-and-select paradigm include Nitrogen/Halogen) and Fergus).", "labels": [], "entities": [{"text": "surface realizers", "start_pos": 22, "end_pos": 39, "type": "TASK", "confidence": 0.789009153842926}]}, {"text": "More recently, generate-and-select realizers in the chart realization tradition have appeared, including the OpenCCG and) realizers.", "labels": [], "entities": [{"text": "OpenCCG", "start_pos": 109, "end_pos": 116, "type": "DATASET", "confidence": 0.9374915957450867}]}, {"text": "Chart realizers make it possible to use the same reversible grammar for both parsing and realization, and employ well-defined methods of semantic composition to construct semantic representations that can properly represent the scope of logical operators.", "labels": [], "entities": [{"text": "Chart realizers", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.7087300270795822}, {"text": "parsing and realization", "start_pos": 77, "end_pos": 100, "type": "TASK", "confidence": 0.6833536128203074}]}, {"text": "In the chart realization tradition, previous work has not generally supported disjunctive logical forms, with as the only published exception (to the author's knowledge).", "labels": [], "entities": [{"text": "chart realization", "start_pos": 7, "end_pos": 24, "type": "TASK", "confidence": 0.7541973292827606}]}, {"text": "Arguably, part of the reason that disjunctive have not yet been embraced more broadly by those working on chart realization is that Shemtov's solution, while ingenious, is dauntingly complex.", "labels": [], "entities": [{"text": "chart realization", "start_pos": 106, "end_pos": 123, "type": "TASK", "confidence": 0.7310681939125061}]}, {"text": "Looking beyond chart realizers, both Nitrogen/Halogen and Fergus support some forms of disjunctive input; however, in comparison to Shemtov's inputs, theirs are less expressive, in that they do not allow disjunctions across different levels of the input structure.", "labels": [], "entities": []}, {"text": "As an alternative to Shemtov's method, this paper presents a chart realization algorithm for generating paraphrases from disjunctive logical forms that is more straightforward to implement, together with an initial case study of the algorithm's efficiency.", "labels": [], "entities": [{"text": "chart realization", "start_pos": 61, "end_pos": 78, "type": "TASK", "confidence": 0.7810212671756744}]}, {"text": "As discussed in Section 5, the algorithm makes use of packed representations similar to those initially proposed by Shemtov, generalizing the approach in away that avoids the problems that led Shemtov to reject his preliminary method.", "labels": [], "entities": []}, {"text": "The algorithm is couched in the framework of Steedman's (2000) Combinatory Categorial Grammar (CCG) and has been implemented as an extension to the OpenCCG surface realizer.", "labels": [], "entities": [{"text": "OpenCCG surface realizer", "start_pos": 148, "end_pos": 172, "type": "TASK", "confidence": 0.6965373754501343}]}, {"text": "Though the algorithm is well suited to CCG, it is expected to be applicable to other constraint-based grammatical frameworks as well.", "labels": [], "entities": []}, {"text": "Figure 1: Example semantic dependency graphs from the COMIC dialogue system.", "labels": [], "entities": [{"text": "COMIC dialogue system", "start_pos": 54, "end_pos": 75, "type": "DATASET", "confidence": 0.9109509587287903}]}, {"text": "\u2227 @v(Villeroy and Boch) (c): HLDS for examples in.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Comparison of average run times (in sec- onds) and edges created vs. sequential realization", "labels": [], "entities": []}]}