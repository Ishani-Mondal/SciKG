{"title": [{"text": "Parsing TAG with Abstract Categorial Grammar", "labels": [], "entities": [{"text": "Parsing TAG", "start_pos": 0, "end_pos": 11, "type": "TASK", "confidence": 0.8484646081924438}]}], "abstractContent": [{"text": "This paper presents informally an Earley algorithm for TAG which behaves as the algorithm given by (Schabes and Joshi, 1988).", "labels": [], "entities": [{"text": "TAG", "start_pos": 55, "end_pos": 58, "type": "TASK", "confidence": 0.9323115944862366}]}, {"text": "This algorithm is a specialization to TAG of a more general algorithm dedicated to second order ACGs.", "labels": [], "entities": [{"text": "TAG", "start_pos": 38, "end_pos": 41, "type": "METRIC", "confidence": 0.8654487729072571}]}, {"text": "As second order ACGs allows to encode Linear Context Free Rewriting Systems (LCFRS) (de Groote and Pogodalla, 2004), the presentation of this algorithm gives a rough presentation of the formal tools which can be used to design efficient algorithms for LCFRS.", "labels": [], "entities": []}, {"text": "Furthermore, as these tools allow to parse linear \u03bb-terms, they can be used as a basis for developping algorithms for generation.", "labels": [], "entities": []}], "introductionContent": [{"text": "The algorithm we present is a specialization to TAGs of a more general one dedicated to second order Abstract Categorial Grammars (ACGs) ().", "labels": [], "entities": []}, {"text": "Our aim is to give here an informal presentation of tools that can be used to design efficient parsing algorithms for formalisms more expressive than TAG.", "labels": [], "entities": []}, {"text": "Therefore, we only give a representation of TAGs with linear \u03bb-terms together with simple derivation rules; we do not give incomplete details the technical relation with ACGs.", "labels": [], "entities": []}, {"text": "For some more information about ACGs and their relation to TAGs, one may read ( and ().", "labels": [], "entities": []}, {"text": "The advantage of using ACG is that they are defined with very few primitives, but can encode many formalisms.", "labels": [], "entities": []}, {"text": "Thus they are well suited to study from a general perspective a full class of formalisms.", "labels": [], "entities": []}, {"text": "In particular, a special class of ACGs (second order ACGs) embeds LCFRS (de), i.e. mildly context sensitive languages.", "labels": [], "entities": []}, {"text": "Therefore, the study of second order ACGs leads to insights on mildly context sensitive languages.", "labels": [], "entities": []}, {"text": "Having a general framework to describe parsing algorithms for mildly context sensitive languages may give some help to transfer some interesting parsing technique from one formalism to another.", "labels": [], "entities": []}, {"text": "It can be, for example, a good mean to obtain prefix-valid algorithms, LC algorithms, LR algorithms.", "labels": [], "entities": []}, {"text": "for the full class of mildly context sensitive languages.", "labels": [], "entities": []}, {"text": "The class of languages described by second order ACGs is wider than mildly context sensitive languages.", "labels": [], "entities": []}, {"text": "They can encode tree languages, and more generally languages of linear \u03bb-terms.", "labels": [], "entities": []}, {"text": "As Montague style semantics is based on \u03bb-calculus, being able to parse linear \u03bb-term is a first step towards generation algorithms seen as parsing algorithm.", "labels": [], "entities": []}, {"text": "Furthermore, since this parsing algorithm is a generalization of algorithms\u00e0 algorithms`algorithms\u00e0 la Earley for CFGs and TAGs, the more general algorithm that can be used for generation (when semantic formulae are linear) can be considered as efficient.", "labels": [], "entities": []}, {"text": "The paper is organized as follows: section two gives basic defintions and tools concerning the linear \u03bb-calculus.", "labels": [], "entities": []}, {"text": "Section three explains how the indices usually used by parsers are represented for the linear \u03bb-calculus.", "labels": [], "entities": []}, {"text": "Section four gives a rough explaination of the encoding of TAGs within a compiled representation of second order ACGs.", "labels": [], "entities": []}, {"text": "Section five explains the parsing algorithm and we conclude with section six.", "labels": [], "entities": [{"text": "parsing", "start_pos": 26, "end_pos": 33, "type": "TASK", "confidence": 0.9783660173416138}]}], "datasetContent": [], "tableCaptions": []}