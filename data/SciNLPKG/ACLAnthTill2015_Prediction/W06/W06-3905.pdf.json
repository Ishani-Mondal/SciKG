{"title": [], "abstractContent": [{"text": "Dependency Tree Semantics (DTS) is an underspecified formalism for representing quantifier scope ambiguities in natural language.", "labels": [], "entities": [{"text": "Dependency Tree Semantics (DTS)", "start_pos": 0, "end_pos": 31, "type": "TASK", "confidence": 0.6420718729496002}]}, {"text": "DTS features a direct interface with a Dependency grammar and an incremental, constraint-based disambiguation mechanism.", "labels": [], "entities": [{"text": "DTS", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8815011382102966}]}, {"text": "In this paper, we discuss the meaning of quantifier dependency in DTS by translating its well formed structures into formulae of a Second Order Logic augmented with Mostowskian generalized quantifiers.", "labels": [], "entities": []}], "introductionContent": [{"text": "Dependency Tree Semantics (DTS) is an underspecified formalism for dealing with quantifier scope ambiguity.", "labels": [], "entities": [{"text": "Dependency Tree Semantics (DTS)", "start_pos": 0, "end_pos": 31, "type": "TASK", "confidence": 0.6672234982252121}]}, {"text": "DTS tries to keep the advantages of most common underspecification techniques: it has a straightforward syntaxsemantics interface with a Dependency Grammar, just as QLF has, and it allows for monotonically adding constraints to take partial disambiguations into account, just as in UDRT, MRS or CLLS.", "labels": [], "entities": [{"text": "DTS", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.7600858807563782}]}, {"text": "These features have been presented in and, whereas in DTS is proposed as a possible underspecified semantic structure of Meaning\u21d4Text Theory.", "labels": [], "entities": [{"text": "Meaning\u21d4Text Theory", "start_pos": 121, "end_pos": 140, "type": "TASK", "confidence": 0.6797383576631546}]}, {"text": "This paper discusses a third property of DTS in further depth: the possibility to represent branching quantifier (BQ) readings.", "labels": [], "entities": []}, {"text": "Branching quantification in DTS has partially been discussed in and, in which we compared DTS with First Order Logic (FOL).", "labels": [], "entities": [{"text": "Branching quantification", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.9161592125892639}]}, {"text": "However, FOL is limited in that it allows to represent only standard quantifiers (\u2203 and \u2200); in this paper we compare DTS with the logic developed in and, which is a fragment of Second Order Logic which allows fora representation of branching quantification with Generalized Quantifiers.", "labels": [], "entities": [{"text": "FOL", "start_pos": 9, "end_pos": 12, "type": "METRIC", "confidence": 0.6187674403190613}]}], "datasetContent": [], "tableCaptions": []}