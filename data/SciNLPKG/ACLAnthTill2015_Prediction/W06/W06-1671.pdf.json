{"title": [{"text": "Learning Field Compatibilities to Extract Database Records from Unstructured Text", "labels": [], "entities": []}], "abstractContent": [{"text": "Named-entity recognition systems extract entities such as people, organizations, and locations from unstructured text.", "labels": [], "entities": [{"text": "Named-entity recognition", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.7357661426067352}]}, {"text": "Rather than extract these mentions in isolation, this paper presents a record extraction system that assembles mentions into records (i.e. database tuples).", "labels": [], "entities": []}, {"text": "We construct a probabilistic model of the compatibility between field values, then employ graph partitioning algorithms to cluster fields into cohesive records.", "labels": [], "entities": []}, {"text": "We also investigate compatibility functions over sets of fields, rather than simply pairs of fields, to examine how higher representational power can impact performance.", "labels": [], "entities": []}, {"text": "We apply our techniques to the task of extracting contact records from faculty and student home-pages, demonstrating a 53% error reduction over baseline approaches.", "labels": [], "entities": [{"text": "error reduction", "start_pos": 123, "end_pos": 138, "type": "METRIC", "confidence": 0.9765062928199768}]}], "introductionContent": [{"text": "Information extraction (IE) algorithms populate a database with facts discovered from unstructured text.", "labels": [], "entities": [{"text": "Information extraction (IE)", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.8510879158973694}]}, {"text": "This database is often used by higher-level tasks such as question answering or knowledge discovery.", "labels": [], "entities": [{"text": "question answering", "start_pos": 58, "end_pos": 76, "type": "TASK", "confidence": 0.8883355259895325}, {"text": "knowledge discovery", "start_pos": 80, "end_pos": 99, "type": "TASK", "confidence": 0.781828910112381}]}, {"text": "The richer the structure of the database, the more useful it is to higher-level tasks.", "labels": [], "entities": []}, {"text": "A common IE task is named-entity recognition (NER), the problem of locating mentions of entities in text, such as people, places, and organizations.", "labels": [], "entities": [{"text": "IE", "start_pos": 9, "end_pos": 11, "type": "TASK", "confidence": 0.9904735684394836}, {"text": "named-entity recognition (NER)", "start_pos": 20, "end_pos": 50, "type": "TASK", "confidence": 0.8674996018409729}, {"text": "locating mentions of entities in text, such as people, places, and organizations", "start_pos": 67, "end_pos": 147, "type": "TASK", "confidence": 0.6696071326732635}]}, {"text": "NER techniques range from regular expressions to finite-state sequence models ().", "labels": [], "entities": [{"text": "NER", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.9469999670982361}]}, {"text": "NER can be viewed as method of populating a database with single-tuple records, e.g. PERSON=Cecil Conner or ORGANIZATION= IBM.", "labels": [], "entities": [{"text": "PERSON", "start_pos": 85, "end_pos": 91, "type": "METRIC", "confidence": 0.94278883934021}, {"text": "ORGANIZATION", "start_pos": 108, "end_pos": 120, "type": "METRIC", "confidence": 0.9605168104171753}, {"text": "IBM", "start_pos": 122, "end_pos": 125, "type": "DATASET", "confidence": 0.8827106952667236}]}, {"text": "We can add richer structure to these single-tuple records by extracting the associations among entities.", "labels": [], "entities": []}, {"text": "For example, we can populate multi-field records such as a contact record [PERSON=Steve Jobs, JOBTITLE = CEO, COMPANY = Apple, CITY = Cupertino, STATE = CA].", "labels": [], "entities": []}, {"text": "The relational information in these types of records presents a greater opportunity for text analysis.", "labels": [], "entities": [{"text": "text analysis", "start_pos": 88, "end_pos": 101, "type": "TASK", "confidence": 0.8465455174446106}]}, {"text": "The task of associating together entities is often framed as a binary relation extraction task: Given a pair of entities, label the relation between them (e.g. Steve Jobs LOCATED-IN Cupertino).", "labels": [], "entities": [{"text": "binary relation extraction", "start_pos": 63, "end_pos": 89, "type": "TASK", "confidence": 0.7832722663879395}]}, {"text": "Common approaches to relation extraction include pattern matching) and classification ().", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 21, "end_pos": 40, "type": "TASK", "confidence": 0.9314624071121216}, {"text": "pattern matching", "start_pos": 49, "end_pos": 65, "type": "TASK", "confidence": 0.7826833426952362}, {"text": "classification", "start_pos": 71, "end_pos": 85, "type": "TASK", "confidence": 0.9580258131027222}]}, {"text": "However, binary relation extraction alone is not well-suited for the contact record example above, which requires associating together many fields into one record.", "labels": [], "entities": [{"text": "binary relation extraction", "start_pos": 9, "end_pos": 35, "type": "TASK", "confidence": 0.7378394603729248}]}, {"text": "We refer to this task of piecing together many fields into a single record as record extraction.", "labels": [], "entities": [{"text": "record extraction", "start_pos": 78, "end_pos": 95, "type": "TASK", "confidence": 0.7274177074432373}]}, {"text": "Consider the task of extracting contact records from personal homepages.", "labels": [], "entities": []}, {"text": "An NER system may label all mentions of cities, people, organizations, phone numbers, job titles, etc.", "labels": [], "entities": []}, {"text": "on a page, from both semi-structured an unstructured text.", "labels": [], "entities": []}, {"text": "Even with a highly accurate NER system, it is not obvious which fields belong to the same record.", "labels": [], "entities": [{"text": "NER", "start_pos": 28, "end_pos": 31, "type": "TASK", "confidence": 0.7697916030883789}]}, {"text": "For example, a single document could contain five names, three phone numbers and only one email.", "labels": [], "entities": []}, {"text": "Additionally, the layout of certain fields maybe convoluted or vary across documents.", "labels": [], "entities": []}, {"text": "Intuitively, we would like to learn the compatibility among fields, for example the likelihood that the organization University of North Dakota is located in the state North Dakota, or that phone numbers with area code 212 co-occur with the city New York.", "labels": [], "entities": []}, {"text": "Additionally, the system should take into account page layout information, so that nearby fields are more likely to be grouped into the same record.", "labels": [], "entities": []}, {"text": "In this paper, we describe a method to induce a probabilistic compatibility function between sets of fields.", "labels": [], "entities": []}, {"text": "Embedding this compatibility function within a graph partitioning method, we describe how to cluster highly compatible fields into records.", "labels": [], "entities": []}, {"text": "We evaluate our approach on personal homepages that have been manually annotated with contact record information, and demonstrate a 53% error reduction over baseline methods.", "labels": [], "entities": [{"text": "error", "start_pos": 136, "end_pos": 141, "type": "METRIC", "confidence": 0.9824200868606567}]}, {"text": "present clustering techniques to extract complex relations, i.e. relations with more than two arguments.", "labels": [], "entities": []}, {"text": "Record extraction can be viewed as an instance of complex relation extraction.", "labels": [], "entities": [{"text": "Record extraction", "start_pos": 0, "end_pos": 17, "type": "TASK", "confidence": 0.6510544717311859}, {"text": "complex relation extraction", "start_pos": 50, "end_pos": 77, "type": "TASK", "confidence": 0.6218314965566}]}, {"text": "We build upon this work in three ways: (1) Our system learns the compatibility between sets of fields, rather than just pairs of field; (2) our system is not restricted to relations between entities in the same sentence; and (3) our problem domain has a varying number of fields per record, as opposed to the fixed schema in. present algorithms for the related task of correlational clustering: finding an optimal clustering from a matrix of pairwise compatibility scores.", "labels": [], "entities": []}, {"text": "The correlational clustering approach does not handle compatibility scores calculated over sets of nodes, which we address in this paper.", "labels": [], "entities": [{"text": "correlational clustering", "start_pos": 4, "end_pos": 28, "type": "TASK", "confidence": 0.827856034040451}]}, {"text": "discriminatively train a model to learn binary coreference decisions, then perform joint inference using graph partitioning.", "labels": [], "entities": []}, {"text": "This is analogous to our work, with two distinctions.", "labels": [], "entities": []}, {"text": "First, instead of binary coreference decisions, our model makes binary compatibility decisions, reflecting whether a set of fields belong together in the same record.", "labels": [], "entities": []}, {"text": "Second, whereas factor the coreference decisions into pairs of vertices, our compatibility decisions are made between sets of vertices.", "labels": [], "entities": []}, {"text": "As we show in our experiments, factoring decisions into sets of vertices enables more powerful features that can improve performance.", "labels": [], "entities": []}, {"text": "These higher-order features have also recently been investigated in other models of coreference, both discriminative () and generative ().", "labels": [], "entities": [{"text": "generative", "start_pos": 124, "end_pos": 134, "type": "TASK", "confidence": 0.970150351524353}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Precision, recall, and F1 performance for  the record extraction task. The standard error is  calculated over 10 cross-validation trials.", "labels": [], "entities": [{"text": "Precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9987541437149048}, {"text": "recall", "start_pos": 21, "end_pos": 27, "type": "METRIC", "confidence": 0.9983354210853577}, {"text": "F1", "start_pos": 33, "end_pos": 35, "type": "METRIC", "confidence": 0.9997910857200623}, {"text": "record extraction task", "start_pos": 57, "end_pos": 79, "type": "TASK", "confidence": 0.7901253501574198}, {"text": "standard error", "start_pos": 85, "end_pos": 99, "type": "METRIC", "confidence": 0.9384754002094269}]}]}