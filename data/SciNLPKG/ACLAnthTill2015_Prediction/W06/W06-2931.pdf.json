{"title": [{"text": "Dependency Parsing Based on Dynamic Local Optimization", "labels": [], "entities": [{"text": "Dependency Parsing", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.8082109689712524}]}], "abstractContent": [{"text": "This paper presents a deterministic parsing algorithm for projective dependency grammar.", "labels": [], "entities": [{"text": "projective dependency grammar", "start_pos": 58, "end_pos": 87, "type": "TASK", "confidence": 0.6250732243061066}]}, {"text": "Ina bottom-up way the algorithm finds the local optimum dynamically.", "labels": [], "entities": []}, {"text": "A constraint procedure is made to use more structure information.", "labels": [], "entities": []}, {"text": "The algorithm parses sentences in linear time and labeling is integrated with the parsing.", "labels": [], "entities": []}, {"text": "This parser achieves 63.29% labeled attachment score on the average in CoNLL-X Shared Task.", "labels": [], "entities": [{"text": "labeled attachment score", "start_pos": 28, "end_pos": 52, "type": "METRIC", "confidence": 0.8637410402297974}]}], "introductionContent": [{"text": "Recently, dependency grammar has gained renewed attention in the parsing community.", "labels": [], "entities": [{"text": "dependency grammar", "start_pos": 10, "end_pos": 28, "type": "TASK", "confidence": 0.8998915255069733}, {"text": "parsing", "start_pos": 65, "end_pos": 72, "type": "TASK", "confidence": 0.9727547764778137}]}, {"text": "Good results have been achieved in some dependency parsers).", "labels": [], "entities": []}, {"text": "With the availability of many dependency treebanks (van der) and more other treebanks which can be converted to dependency annotation (), multi-lingual dependency parsing is proposed in CoNLL shared task).", "labels": [], "entities": [{"text": "multi-lingual dependency parsing", "start_pos": 138, "end_pos": 170, "type": "TASK", "confidence": 0.6975714763005575}]}, {"text": "Many previous works focus on unlabeled parsing, in which exhaustive methods are often used.", "labels": [], "entities": []}, {"text": "Their global searching performs well in the unlabeled dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 54, "end_pos": 72, "type": "TASK", "confidence": 0.6727828532457352}]}, {"text": "But with the increase of parameters, efficiency has to be considered in labeled dependency parsing.", "labels": [], "entities": [{"text": "labeled dependency parsing", "start_pos": 72, "end_pos": 98, "type": "TASK", "confidence": 0.5953042805194855}]}, {"text": "Thus deterministic parsing was proposed as a robust and efficient method in recent years.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 5, "end_pos": 26, "type": "TASK", "confidence": 0.7590462267398834}]}, {"text": "Such method breaks the construction of dependency tree into a series of actions.", "labels": [], "entities": []}, {"text": "A classifier is often used to choose the most probable action to assemble the dependency tree.", "labels": [], "entities": []}, {"text": "() defined three actions and used a SVM classifier to choose one of them in a bottom-up way.", "labels": [], "entities": []}, {"text": "The algorithm in) is a blend of bottom-up and top-down processing.", "labels": [], "entities": []}, {"text": "Its classifier is trained by memory-based learning.", "labels": [], "entities": []}, {"text": "Deterministic parsing derives an analysis without redundancy or backtracking, and linear time can be achieved.", "labels": [], "entities": [{"text": "Deterministic parsing", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.6790526509284973}]}, {"text": "But when searching the local optimum in the order of left-to-right, some wrong reduce may prevent next analysis with more possibility.", "labels": [], "entities": []}, {"text": "() used a two-phase shift-reduce to decrease such errors, and improved the accuracy of long distance dependencies.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 75, "end_pos": 83, "type": "METRIC", "confidence": 0.9991775155067444}]}, {"text": "In this paper a deterministic parsing based on dynamic local optimization is proposed.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 16, "end_pos": 37, "type": "TASK", "confidence": 0.5962408185005188}]}, {"text": "According to the probabilities of dependency arcs, the algorithm dynamically finds the one with the highest probabilities instead of dealing with the sentence in order.", "labels": [], "entities": []}, {"text": "A procedure of constraint which can integrate more structure information is made to check the rationality of the reduce.", "labels": [], "entities": []}, {"text": "Finally our results and error analysis are presented.", "labels": [], "entities": [{"text": "error analysis", "start_pos": 24, "end_pos": 38, "type": "METRIC", "confidence": 0.9200470745563507}]}], "datasetContent": [{"text": "Our parsing results and average results are listed in the.", "labels": [], "entities": [{"text": "parsing", "start_pos": 4, "end_pos": 11, "type": "TASK", "confidence": 0.9720951914787292}]}, {"text": "It can be seen that the attachment scores vary greatly with different languages.", "labels": [], "entities": []}, {"text": "A general analysis and a specific analysis are made respectively in this section.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: The second and third rows are our scores and average scores. The fourth row lists the maximal  number of tokens with HEAD=0 in a sentence. The last row lists the number of relations/the number of  bi-directional relations of them (Our statistics are slightly different from that of organizers).", "labels": [], "entities": [{"text": "HEAD", "start_pos": 127, "end_pos": 131, "type": "METRIC", "confidence": 0.9956789612770081}]}, {"text": " Table 2: Chinese DE Structure Errors", "labels": [], "entities": [{"text": "Chinese DE Structure Errors", "start_pos": 10, "end_pos": 37, "type": "DATASET", "confidence": 0.7999805957078934}]}]}