{"title": [{"text": "Control Strategies for Parsing with Freer Word-Order Languages", "labels": [], "entities": []}], "abstractContent": [{"text": "We provide two different methods for bounding search when parsing with freer word-order languages.", "labels": [], "entities": [{"text": "bounding search", "start_pos": 37, "end_pos": 52, "type": "TASK", "confidence": 0.925298273563385}]}, {"text": "Both of these can bethought of as exploiting alternative sources of constraints not commonly used in CFGs, in order to makeup for the lack of more rigid word-order and the standard algorithms that use the assumption of rigid word-order implicitly.", "labels": [], "entities": []}, {"text": "This work is preliminary in that it has not yet been evaluated on a large-scale grammar/corpus fora freer word-order language.", "labels": [], "entities": []}], "introductionContent": [{"text": "This paper describes two contributions to the area of parsing over freer word-order (FWO) languages, i.e., languages that do not readily admit a semantically transparent context-free analysis, because of a looser connection between grammatical function assignment and linear constituent order than one finds in English.", "labels": [], "entities": [{"text": "parsing over freer word-order (FWO) languages", "start_pos": 54, "end_pos": 99, "type": "TASK", "confidence": 0.5903929620981216}]}, {"text": "This is a particularly ripe area for constraint-based methods because such a large number of linguistic partial knowledge sources must be brought to bear on FWO parsing in order to restrict its search space to a size comparable to that of standard CFG-based parsing.", "labels": [], "entities": [{"text": "FWO parsing", "start_pos": 157, "end_pos": 168, "type": "TASK", "confidence": 0.8271929621696472}, {"text": "CFG-based parsing", "start_pos": 248, "end_pos": 265, "type": "TASK", "confidence": 0.7231884598731995}]}, {"text": "The first addresses the indexation of tabled substrings in generalized chart parsers for FWO languages.", "labels": [], "entities": []}, {"text": "While chart parsing can famously be cast as deduction (, what chart parsing really is is an algebraic closure over the rules of a phrase structure grammar, which is most naturally expressed inside a constraint solver such as CHR).", "labels": [], "entities": [{"text": "chart parsing", "start_pos": 6, "end_pos": 19, "type": "TASK", "confidence": 0.7539350688457489}, {"text": "chart parsing", "start_pos": 62, "end_pos": 75, "type": "TASK", "confidence": 0.8059578537940979}]}, {"text": "Ideally, we would like to use standard chart parsers for FWO languages, but because of the constituent ordering constraints that are implicit in the right-hand-sides (RHSs) of CFG rules, this is not possible without effectively converting a FWO grammar into a CFG by expanding its rule system exponentially into all possible RHS orders (.", "labels": [], "entities": []}, {"text": "FWO grammar rules generally cannot be used as they stand in a chart parser because tabled substrings record a non-terminal category \ud97b\udf59 derived over a contiguous subspan of the input string from word \ud97b\udf59 to word \ud97b\udf59.", "labels": [], "entities": [{"text": "FWO", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8449227213859558}]}, {"text": "FWO languages have many phrasal categories that are not contiguous substrings., and others have suggested using bit vectors to index chart edges as an alternative to substring spans in the case of parsing over FWO languages, but that is really only half of the story.", "labels": [], "entities": [{"text": "FWO", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.9327565431594849}]}, {"text": "We still need a control strategy to tell us where we should be searching for some constituent at any point in a derivation.", "labels": [], "entities": []}, {"text": "This paper provides such a control strategy, using this data structure, for doing search more effectively with a FWO grammar.", "labels": [], "entities": [{"text": "FWO grammar", "start_pos": 113, "end_pos": 124, "type": "DATASET", "confidence": 0.8328467309474945}]}, {"text": "The second contribution addresses another source of constraints on the search space: the length of the input.", "labels": [], "entities": []}, {"text": "While this number is not a constant across parses, it is constant within a single parse, and there are functions that can be precomputed fora fixed grammar which relate tight upper and lower bounds on the length of the input to both the height of a parse tree and other variables (defined below) whose values bound the recursion of the fixed phrase structure rule system.", "labels": [], "entities": []}, {"text": "Iteratively computing and caching the values of these functions as needed allows us to invert them efficiently, and bound the depth of the search.", "labels": [], "entities": []}, {"text": "This can bethought of as a partial substitute for the resource-bounded control that bottomup parsing generally provides, Goal-directedness is maintained, because -with the use of constraint programming -it can still be used inside a top-down strategy.", "labels": [], "entities": [{"text": "bottomup parsing", "start_pos": 84, "end_pos": 100, "type": "TASK", "confidence": 0.6820752322673798}]}, {"text": "In principle, this could be worthwhile to compute for some CFGs as well, although the much larger search space covered by a na\u00a8\u0131vena\u00a8\u0131ve bottom-up parser in the case of FWO grammars (all possible subsequences, rather than all possible contiguous subsequences), makes it considerably more valuable in the present setting.", "labels": [], "entities": []}, {"text": "In the worst case, a binary-branching immediate dominance grammar (i.e., no linear precedence) could specify that every word belongs to the same category, \u00cf , and that phrases can be formed from every pair of words or phrases.", "labels": [], "entities": []}, {"text": "A complete parsing chart in this case would have exponentially many edges, so nothing in this paper (or in the aforementioned work on bit vectors) actually improves the asymptotic complexity of the recognition task.", "labels": [], "entities": [{"text": "recognition task", "start_pos": 198, "end_pos": 214, "type": "TASK", "confidence": 0.8905069231987}]}, {"text": "Natural languages do not behave like this, however.", "labels": [], "entities": []}, {"text": "In practice, one can expect more polymorphy in the part-of-speech/category system, more restrictions in the allowable combinations of words and phrases (specified in the immediate dominance components of a phrase structure rule system), and more restrictions in the allowable orders and discontinuities with which those argument categories can occur (specified in the linear precedence components of a phrase structure rule system).", "labels": [], "entities": []}, {"text": "These heuristics are generally obtained either through the use of a parameter estimation method over a large amount of annotated data, or, in the case of a manually constructed grammar, simply through some implicit convention, such as the textual order in which the lexicon, rule system, or RHS categories are stated.", "labels": [], "entities": []}, {"text": "This paper does not address how to find these heuristics.", "labels": [], "entities": []}, {"text": "We assume that they exist, and instead address the problem of adapting a chart parser to their efficient use.", "labels": [], "entities": []}, {"text": "To ignore this would involve conducting an enormous number of derivations, only to look in the chart at the end and discover that we have already derived the current bit-vector/category pair.", "labels": [], "entities": []}, {"text": "In the case of standard CFG-based parsing, one generally avoids this by tabling so-called active edges, which record the subspaces on which a search has already been initiated.", "labels": [], "entities": [{"text": "CFG-based parsing", "start_pos": 24, "end_pos": 41, "type": "TASK", "confidence": 0.7144691348075867}]}, {"text": "This works well because the only existentially quantified variables in the tabled entry are the interior nodes in the span which demarcate where one right-hand-side category ends and another adjacent one begins.", "labels": [], "entities": []}, {"text": "To indicate that one is attempting to complete the rule, \u00cb \ud97b\udf59 AE \u00c8 \u00ce \u00c8 , for example, one must only table the search from \ud97b\udf59 to \ud97b\udf59 for some \ud97b\udf59, such that AE \u00c8 is derivable from \ud97b\udf59 to \ud97b\udf59 and \u00ce \u00c8 is derivable from \ud97b\udf59 to \ud97b\udf59.", "labels": [], "entities": [{"text": "\ud97b\udf59 AE \u00c8 \u00ce \u00c8", "start_pos": 59, "end_pos": 69, "type": "METRIC", "confidence": 0.8773617386817932}, {"text": "AE \u00c8", "start_pos": 150, "end_pos": 154, "type": "METRIC", "confidence": 0.9431494772434235}]}, {"text": "Our first contribution can bethought of as a generalization of these active edges to the case of bit vectors.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}