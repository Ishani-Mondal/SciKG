{"title": [{"text": "Interpretation and Generation in a Knowledge-Based Tutorial System", "labels": [], "entities": [{"text": "Interpretation and Generation", "start_pos": 0, "end_pos": 29, "type": "TASK", "confidence": 0.6748441855112711}]}], "abstractContent": [{"text": "We discuss how deep interpretation and generation can be integrated with a knowledge representation designed for question answering to build a tutorial dialogue system.", "labels": [], "entities": [{"text": "deep interpretation and generation", "start_pos": 15, "end_pos": 49, "type": "TASK", "confidence": 0.6701537221670151}, {"text": "question answering", "start_pos": 113, "end_pos": 131, "type": "TASK", "confidence": 0.8071579337120056}]}, {"text": "We use a knowledge representation known to perform well in answering exam-type questions and show that to support tutorial dialogue it needs additional features, in particular, compositional representations for interpretation and struc-tured explanation representations.", "labels": [], "entities": []}], "introductionContent": [{"text": "Human tutoring is known to help students learn compared with reading textbooks, producing up to two standard deviations in learning gain.", "labels": [], "entities": []}, {"text": "Tutorial systems, in particular cognitive tutors which model the inner state of a student's knowledge, help learning but result in only up to 1 standard deviation learning gain (.", "labels": [], "entities": []}, {"text": "One current research hypothesis is that this difference is accounted for by interactive dialogue, which allows students to ask questions freely, and tutors to adapt their direct feedback and presentation style to the individual student's needs.", "labels": [], "entities": []}, {"text": "Adding natural language dialogue to a tutorial system is a complex task.", "labels": [], "entities": []}, {"text": "Many existing tutorial dialogue systems rely on pre-authored curriculum scripts () or finite-state machines () without detailed knowledge representations.", "labels": [], "entities": []}, {"text": "These systems are easy to design for curriculum providers, but offer limited flexibility because the writer has to predict all possible student questions and answers.", "labels": [], "entities": []}, {"text": "We argue that the ability to interpret novel, context-dependent student questions and answers, and offer tailored feedback and explanations is important in tutorial dialogue, and that a domain knowledge representation and reasoning engine is necessary to support these applications.", "labels": [], "entities": []}, {"text": "We discuss our knowledge representation, and the issues of integrating it with state-of-the-art interpretation and generation components to build a knowledgebased tutorial dialogue system.", "labels": [], "entities": []}, {"text": "Our application domain is in basic electricity and electronics, specifically teaching a student how to predict the behavior and interpret measurements in series and parallel circuits.", "labels": [], "entities": []}, {"text": "This is a conceptual domain -that is, students are primarily focused on learning concepts such as voltage and current, and their relationships with the real world.", "labels": [], "entities": []}, {"text": "The students use a circuit simulator to build circuits, and their questions and answers depend on the current context.", "labels": [], "entities": []}, {"text": "There are various sources of contextdependency in our domain.", "labels": [], "entities": []}, {"text": "Students and tutors refer to specific items in the simulation (e.g., \"Which lightbulbs will be lit in these circuits?\"), and may phrase their answers in an unexpected way, for example, by saying \"the lightbulbs in 2 and 4 will be out\" instead of naming the lit lightbulbs.", "labels": [], "entities": []}, {"text": "Moreover, students may build arbitrary circuits not included in the question, either because they make mistakes, or because a tutor instructs them to do so as part of remediation.", "labels": [], "entities": []}, {"text": "Thus it would be difficult to produce and maintain a finite-state machine to predict all possible situations, both for interpreting the input and for generating feedback based on the state of the environment and the previous dialogue context: a domain reasoner is necessary to handle such unanticipated situations correctly.", "labels": [], "entities": []}, {"text": "We describe a tutorial system which uses a description logic-based knowledge representation to generate intelligent explanations and answers to a student's questions, as well as to interpret the student's language at all stages of the dialogue.", "labels": [], "entities": []}, {"text": "Our approach relies on using an existing widecoverage parser for domain-independent syntactic parsing and semantic interpretation, as well as a wide-coverage deep generation system.", "labels": [], "entities": [{"text": "domain-independent syntactic parsing", "start_pos": 65, "end_pos": 101, "type": "TASK", "confidence": 0.6284510294596354}, {"text": "semantic interpretation", "start_pos": 106, "end_pos": 129, "type": "TASK", "confidence": 0.7035317420959473}]}, {"text": "We discuss the issues which arise in connecting such resources to a domain knowledge representation in a practical system.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}