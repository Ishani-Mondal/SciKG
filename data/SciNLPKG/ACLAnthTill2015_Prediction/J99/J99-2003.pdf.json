{"title": [{"text": "Tree Adjoining Grammars in a Fragment of the Lambek Calculus Christophe Fouquer6 t", "labels": [], "entities": [{"text": "Lambek Calculus Christophe Fouquer6", "start_pos": 45, "end_pos": 80, "type": "DATASET", "confidence": 0.9770542234182358}]}], "abstractContent": [{"text": "This paper presents a logical formalization of Tree Adjoining Grammar (TAG).", "labels": [], "entities": [{"text": "Tree Adjoining Grammar (TAG)", "start_pos": 47, "end_pos": 75, "type": "TASK", "confidence": 0.7951260606447855}]}, {"text": "TAG deals with lexicalized trees and two operations are available: substitution and adjunction.", "labels": [], "entities": [{"text": "TAG", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.6163267493247986}]}, {"text": "Adjunction is generally presented as an insertion of one tree inside another, surrounding the subtree at the adjunction node.", "labels": [], "entities": []}, {"text": "This seems to contradict standard logical ability.", "labels": [], "entities": []}, {"text": "We prove that some logical formalisms, namely a fragment of the Lambek calculus, can handle adjunction.", "labels": [], "entities": []}, {"text": "We represent objects and operations of the TAG formalism in .four steps: first trees (initial or derived) and the way they are constituted, then the operations (substitution and adjunction), and finally the elementary trees, i.e., the grammar.", "labels": [], "entities": []}, {"text": "Trees (initial or derived) are obtained as the closure of the calculus under two rules that mimic the grammatical ones.", "labels": [], "entities": []}, {"text": "We then prove the equivalence between the language generated by a TAG grammar and the closure under substitution and adjunction of its logical representation.", "labels": [], "entities": []}, {"text": "Besides this nice property, we relate parse trees to logical proofs, and to their geometric representation: proofnets.", "labels": [], "entities": []}, {"text": "We briefly present them and give examples of parse trees as proofnets.", "labels": [], "entities": []}, {"text": "This process can be interpreted as an assembling of blocks (proofnets corresponding to elementary trees of the grammar).", "labels": [], "entities": []}], "introductionContent": [{"text": "This paper presents a logical formalization of Tree Adjoining Grammar (TAG).", "labels": [], "entities": [{"text": "Tree Adjoining Grammar (TAG)", "start_pos": 47, "end_pos": 75, "type": "TASK", "confidence": 0.7951260606447855}]}, {"text": "TAG deals with lexicalized trees and two operations are available: substitution and adjunction.", "labels": [], "entities": [{"text": "TAG", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.6163267493247986}]}, {"text": "A set of (elementary) trees is associated to each lexical item.", "labels": [], "entities": []}, {"text": "TAG is a tree-rewriting system: the derivation process consists in applying operations to trees in order to obtain a (derived) tree whose sequence of leaves is a sentence.", "labels": [], "entities": []}, {"text": "Adjunction increases the expressive power of the formalism in such away that noncontext-free languages can be represented although the parse process is done in polynomial time.", "labels": [], "entities": []}, {"text": "Adjunction is generally presented as an insertion of one tree inside another, surrounding the subtree at the adjunction node.", "labels": [], "entities": []}, {"text": "This seems to contradict standard logic, but we show (in Section 4) that some logical formalisms, namely a fragment of the Lambek calculus (LC, first introduced by Lambek), can handle adjunction.", "labels": [], "entities": []}, {"text": "We represent objects and operations of the TAG formalism in four steps: first trees (initial or derived) and the way they are constituted, then the operations (substitution and adjunction), and finally the elementary trees, i.e., the grammar.", "labels": [], "entities": []}, {"text": "Labels occurring in the grammar constitute the set of propositional variables we need.", "labels": [], "entities": []}, {"text": "The sequent calculus is a restriction of the standard sequent calculus for LC: there are identity axioms (A t-A) and rules for introducing connectives (\u00ae at left-hand side, o--at right-hand side).", "labels": [], "entities": []}, {"text": "In LC, / is usually used for o--and \u2022 for \u00ae.", "labels": [], "entities": []}, {"text": "We use this notation throughout the paper to relate our formalization to noncommutative linear logic, o--is the left implication, @ is a noncommutative \"and\" connective.", "labels": [], "entities": []}, {"text": "We prove that this restricted calculus is closed under two rules that mimic the grammatical operations.", "labels": [], "entities": []}, {"text": "Trees (initial or derived) are then obtained as the closure of the calculus under these two rules.", "labels": [], "entities": []}, {"text": "In fact, trees are represented as (provable) sequents in an almost classical way.", "labels": [], "entities": []}, {"text": "The right-hand side is the variable labeling the mother node of the tree.", "labels": [], "entities": []}, {"text": "The left-hand side is a sequence of formulas of the following kinds: A for some leaf A of the tree, A o--B1 \u00ae ...", "labels": [], "entities": []}, {"text": "\u00ae Bn where A is the label of some internal node and Bi are the labels of its daughters, A o-A whenever A is anode where an adjunction can take place.", "labels": [], "entities": []}, {"text": "This latter kind of formula can be grammatically interpreted as if such an A was split up into two nodes with the same label linked by some \"soft\" relation.", "labels": [], "entities": []}, {"text": "The set of elementary trees of a TAG grammar ~' is then represented as a subset M of the sequents in the closure of the calculus under the two previous rules.", "labels": [], "entities": []}, {"text": "We then prove the equivalence between the language generated in TAG by such a grammar G' and the closure under substitution and adjunction of the logical representation M.", "labels": [], "entities": []}, {"text": "Note that our interpretation of adjunction is very close to the use of quasi trees described in.", "labels": [], "entities": []}, {"text": "Besides this equivalence property, we relate parse trees to logical proofs, and to their geometric representation, proofnets.", "labels": [], "entities": []}, {"text": "We briefly present proofnets, and the correspondence between proofs and proofnets, and give examples of parse trees viewed as proofnets.", "labels": [], "entities": []}, {"text": "This enables anew point of view on the parse process.", "labels": [], "entities": []}, {"text": "This process can be interpreted as an assembling of blocks (proofnets corresponding to elementary trees of the grammar), and also as a circulation of information through links relating nodes of the proofnets.", "labels": [], "entities": []}, {"text": "The remainder of the paper is organized in four parts.", "labels": [], "entities": []}, {"text": "Section 2 describes the TAG formalism.", "labels": [], "entities": [{"text": "TAG formalism", "start_pos": 24, "end_pos": 37, "type": "TASK", "confidence": 0.8027492165565491}]}, {"text": "We recall the terminology and show how substitution and adjunction operate on trees.", "labels": [], "entities": []}, {"text": "Section 3 gives a survey of Lambek calculus viewed as a fragment of a noncommutative linear logic.", "labels": [], "entities": []}, {"text": "We propose in Section 4 a logical formulation of TAG in a fragment of LC, and prove the correspondence between the two.", "labels": [], "entities": [{"text": "TAG", "start_pos": 49, "end_pos": 52, "type": "METRIC", "confidence": 0.7020379900932312}]}, {"text": "Section 5 is devoted to the representation of proofs as proofnets; in this final section, we also study implications of this point of view.", "labels": [], "entities": []}, {"text": "The proofs of propositions and theorems given in Section 4 are delayed to the appendix for the sake of clarity.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}