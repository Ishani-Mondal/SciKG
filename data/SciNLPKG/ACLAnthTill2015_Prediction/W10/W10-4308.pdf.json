{"title": [{"text": "Middleware for Incremental Processing in Conversational Agents", "labels": [], "entities": [{"text": "Incremental Processing in Conversational Agents", "start_pos": 15, "end_pos": 62, "type": "TASK", "confidence": 0.818554699420929}]}], "abstractContent": [{"text": "We describe work done at three sites on designing conversational agents capable of incremental processing.", "labels": [], "entities": []}, {"text": "We focus on the 'middleware' layer in these systems, which takes care of passing around and maintaining incremental information between the modules of such agents.", "labels": [], "entities": []}, {"text": "All implementations are based on the abstract model of incremental dialogue processing proposed by Schlangen and Skantze (2009), and the paper shows what different instantiations of the model can look like given specific requirements and application areas.", "labels": [], "entities": []}], "introductionContent": [{"text": "recently proposed an abstract model of incremental dialogue processing.", "labels": [], "entities": [{"text": "incremental dialogue processing", "start_pos": 39, "end_pos": 70, "type": "TASK", "confidence": 0.6871673762798309}]}, {"text": "While this model introduces useful concepts (briefly reviewed in the next section), it does not talk about how to actually implement such systems.", "labels": [], "entities": []}, {"text": "We report here work done at three different sites on setting up conversational agents capable of incremental processing, inspired by the abstract model.", "labels": [], "entities": []}, {"text": "More specifically, we discuss what maybe called the 'middleware' layer in such systems, which takes care of passing around and maintaining incremental information between the modules of such agents.", "labels": [], "entities": []}, {"text": "The three approaches illustrate a range of choices available in the implementation of such a middle layer.", "labels": [], "entities": []}, {"text": "We will make our software available as development kits in the hope of fostering further research on incremental systems.", "labels": [], "entities": []}, {"text": "In the next section, we briefly review the abstract model.", "labels": [], "entities": []}, {"text": "We then describe the implementations created at Uni Bielefeld (BF), KTH Stockholm (KTH) and Uni Potsdam (UP).", "labels": [], "entities": []}, {"text": "We close with a brief discussion of similarities and differences, and an outlook on further work.", "labels": [], "entities": []}, {"text": "Links to the three packages described here can be found at http://purl.org/net/Middlewares-SIGdial2010.", "labels": [], "entities": [{"text": "Middlewares-SIGdial2010", "start_pos": 79, "end_pos": 102, "type": "DATASET", "confidence": 0.6876564621925354}]}, {"text": "model incremental systems as consisting of a network of processing modules.", "labels": [], "entities": []}, {"text": "Each module has a left buffer, a processor, and aright buffer, where the normal mode of processing is to take input from the left buffer, process it, and provide output in the right buffer, from where it goes to the next module's left buffer.", "labels": [], "entities": []}, {"text": "(Topdown, expectation-based processing would work in the opposite direction.)", "labels": [], "entities": []}, {"text": "Modules exchange incremental units (IUs), which are the smallest 'chunks' of information that can trigger connected modules into action.", "labels": [], "entities": []}, {"text": "IUs typically are part of larger units; e.g., individual words as parts of an utterance, or frame elements as part of the representation of an utterance meaning.", "labels": [], "entities": []}, {"text": "This relation of being part of the same larger unit is recorded through same level links; the information that was used in creating a given IU is linked to it via grounded in links.", "labels": [], "entities": []}, {"text": "Modules have to be able to react to three basic situations: that IUs are added to a buffer, which triggers processing; that IUs that were erroneously hypothesised by an earlier module are revoked, which may trigger a revision of a module's own output; and that modules signal that they commit to an IU, that is, won't revoke it anymore (or, respectively, expect it to not be revoked anymore).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}