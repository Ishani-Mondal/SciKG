{"title": [{"text": "Using Goi-Taikei as an Upper Ontology to Build a Large-Scale Japanese Ontology from Wikipedia", "labels": [], "entities": []}], "abstractContent": [{"text": "We present a novel method for building a large-scale Japanese ontology from Wikipedia using one of the largest Japanese thesauri, Nihongo Goi-Taikei (referred to hereafter as \"Goi-Taikei\") as an upper ontology.", "labels": [], "entities": []}, {"text": "First, The leaf categories in the Goi-Taikei hierarchy are semi-automatically aligned with semantically equivalent Wikipedia categories.", "labels": [], "entities": []}, {"text": "Then, their subcategories are created automatically by detecting is-a links in the Wikipedia category network below the junction using the knowledge defined in Goi-Taikei above the junction.", "labels": [], "entities": []}, {"text": "The resulting ontology has a well-defined taxon-omy in the upper level and a fine-grained taxonomy in the lower level with a large number of up-to-date instances.", "labels": [], "entities": []}, {"text": "A sample evaluation shows that the precisions of the extracted categories and instances are 92.8% and 98.6%, respectively.", "labels": [], "entities": [{"text": "precisions", "start_pos": 35, "end_pos": 45, "type": "METRIC", "confidence": 0.9993168115615845}]}], "introductionContent": [{"text": "In recent years, we have become increasingly aware of the need for up-to-date knowledge bases offering broad-coverage in order to implement practical semantic inference engines for advanced applications such as question answering, summarization and textual entailment recognition.", "labels": [], "entities": [{"text": "question answering", "start_pos": 211, "end_pos": 229, "type": "TASK", "confidence": 0.8826519250869751}, {"text": "summarization", "start_pos": 231, "end_pos": 244, "type": "TASK", "confidence": 0.9627615809440613}, {"text": "textual entailment recognition", "start_pos": 249, "end_pos": 279, "type": "TASK", "confidence": 0.7783877650896708}]}, {"text": "One promising approach involves automatically extracting a large comprehensive ontology from Wikipedia, a freely available online encyclopedia with a wide variety of information.", "labels": [], "entities": []}, {"text": "One problem with previous such efforts is that the resulting ontology is either fragmentary or trivial.", "labels": [], "entities": []}, {"text": "presents a set of lightweight heuristics such as head matching and modifier matching for distinguishing between isa and not-is-a links in the Wikipedia category network.", "labels": [], "entities": [{"text": "head matching", "start_pos": 49, "end_pos": 62, "type": "TASK", "confidence": 0.7638385593891144}, {"text": "Wikipedia category network", "start_pos": 142, "end_pos": 168, "type": "DATASET", "confidence": 0.8615065018335978}]}, {"text": "The most powerful heuristics is head matching in which a category link is labeled as is-a if the two categories share the same head lemma, such as CAPITALS IN ASIA and CAPI-TALS.", "labels": [], "entities": [{"text": "head matching", "start_pos": 32, "end_pos": 45, "type": "TASK", "confidence": 0.8642345070838928}]}, {"text": "For Japanese, present a method equivalent to head matching in Japanese.", "labels": [], "entities": [{"text": "head matching", "start_pos": 45, "end_pos": 58, "type": "TASK", "confidence": 0.8965229094028473}]}, {"text": "As Japanese is ahead final language, they introduced a heuristics called suffix matching in which a category link is labeled as is-a if one category is the suffix of the other category, such as \u00a2 \u00a1 \u00a4 \u00a3 \u00a5 \u00a7 \u00a6 (airports in Japan) and \u00a5 \u00a8 \u00a6 (airports).", "labels": [], "entities": [{"text": "suffix matching", "start_pos": 73, "end_pos": 88, "type": "TASK", "confidence": 0.7498402297496796}]}, {"text": "The problem with the ontology extracted by these two methods is that it is not a single interconnected taxonomy, but a set of taxonomic trees.", "labels": [], "entities": []}, {"text": "One way to make a single taxonomy is to use an existing large-scale taxonomy as a core for the resulting ontology.", "labels": [], "entities": []}, {"text": "In YAGO, merged English WordNet and Wikipedia by adding instances (namely Wikipedia articles) to the is-a hierarchy of WordNet.", "labels": [], "entities": [{"text": "YAGO", "start_pos": 3, "end_pos": 7, "type": "DATASET", "confidence": 0.8888015747070312}]}, {"text": "Of the categories assigned to a Wikipedia article, they regarded one with a plural head noun as the article's hypernym, which is called a conceptual category.", "labels": [], "entities": []}, {"text": "They then linked the conceptual category to a WordNet synset by heuristic rules including head matching.", "labels": [], "entities": []}, {"text": "For Japanese, present an attempt equivalent to YAGO, where they merged Goi-Taikei and Japanese Wikipedia.", "labels": [], "entities": [{"text": "YAGO", "start_pos": 47, "end_pos": 51, "type": "DATASET", "confidence": 0.677270770072937}]}, {"text": "The problem with these two methods is that the core taxonomy is extended only one level although many new instances are added.", "labels": [], "entities": []}, {"text": "They cannot make the most of the fine-grained taxonomic information contained in the Wikipedia category network.", "labels": [], "entities": [{"text": "Wikipedia category network", "start_pos": 85, "end_pos": 111, "type": "DATASET", "confidence": 0.8775825897852579}]}, {"text": "In this paper, we present a novel method for building a single interconnected ontology from Wikipedia, with a fine-grained taxonomy in the lower level, by using a manually constructed thesaurus as its upper ontology.", "labels": [], "entities": []}, {"text": "In the following sections, we first describe the language resources used in this work.", "labels": [], "entities": []}, {"text": "We then describe a semiautomatic method for building the ontology and report our experimental results.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}