{"title": [{"text": "A Decoder for Probabilistic Synchronous Tree Insertion Grammars", "labels": [], "entities": [{"text": "Probabilistic Synchronous Tree Insertion Grammars", "start_pos": 14, "end_pos": 63, "type": "TASK", "confidence": 0.6378224551677704}]}], "abstractContent": [{"text": "Synchronous tree insertion grammars (STIG) are formal models for syntax-based machine translation.", "labels": [], "entities": [{"text": "Synchronous tree insertion grammars (STIG)", "start_pos": 0, "end_pos": 42, "type": "TASK", "confidence": 0.8149564436503819}, {"text": "machine translation", "start_pos": 78, "end_pos": 97, "type": "TASK", "confidence": 0.7310056090354919}]}, {"text": "We formalize a decoder for probabilistic STIG; the decoder transforms every source-language string into a target-language tree and calculates the probability of this transformation .", "labels": [], "entities": []}], "introductionContent": [{"text": "Tree adjoining grammars (TAG) were invented in () in order to better characterize the string sets of natural languages . One of TAG's important features is the ability to introduce two related syntactic units in a single rule, then push those two units arbitrarily far apart in subsequent derivation steps.", "labels": [], "entities": [{"text": "Tree adjoining grammars (TAG)", "start_pos": 0, "end_pos": 29, "type": "TASK", "confidence": 0.6199806183576584}]}, {"text": "For machine translation (MT) between two natural languages, each being generated by a TAG, the derivations of the two TAG maybe synchronized () in the spirit of syntaxdirected transductions (; this results in synchronous TAG (STAG).", "labels": [], "entities": [{"text": "machine translation (MT) between two natural languages", "start_pos": 4, "end_pos": 58, "type": "TASK", "confidence": 0.8636132743623521}]}, {"text": "Recently, in) probabilistic synchronous tree insertion grammars (pSTIG) were discussed as model of MT; a tree insertion grammar is a particular TAG in which the parsing problem is solvable in cubic-time (.", "labels": [], "entities": [{"text": "probabilistic synchronous tree insertion grammars", "start_pos": 14, "end_pos": 63, "type": "TASK", "confidence": 0.7577290177345276}, {"text": "MT", "start_pos": 99, "end_pos": 101, "type": "TASK", "confidence": 0.9917437434196472}]}, {"text": "In) a decoder for pSTIG has been proposed which transforms source-language strings into (modifications of) derivation trees of the pSTIG.", "labels": [], "entities": []}, {"text": "Nowadays, large-scale linguistic STAG rule bases are available.", "labels": [], "entities": [{"text": "STAG", "start_pos": 33, "end_pos": 37, "type": "TASK", "confidence": 0.79547119140625}]}, {"text": "In an independent tradition, the automatatheoretic investigation of the translation of trees * financially supported by NSF STAGES project, grant #IIS-0908532.", "labels": [], "entities": [{"text": "translation of trees", "start_pos": 72, "end_pos": 92, "type": "TASK", "confidence": 0.8706983923912048}, {"text": "IIS-0908532", "start_pos": 147, "end_pos": 158, "type": "DATASET", "confidence": 0.771378219127655}]}, {"text": "\u2020 financially supported by DFG VO 1011/5-1. 1 see) fora survey led to the rich theory of tree transducers.", "labels": [], "entities": [{"text": "DFG VO 1011/5-1. 1", "start_pos": 27, "end_pos": 45, "type": "DATASET", "confidence": 0.9299055933952332}]}, {"text": "Roughly speaking, a tree transducer is a finite term rewriting system.", "labels": [], "entities": []}, {"text": "If each rewrite rule carries a probablity or, in general, a weight from some semiring, then they are weighted tree transducers.", "labels": [], "entities": []}, {"text": "Such weighted tree transducers have also been used for the specification of MT of natural languages. and established the first connections between the two traditions; also Shieber) and Maletti investigated their relationship.", "labels": [], "entities": [{"text": "specification of MT", "start_pos": 59, "end_pos": 78, "type": "TASK", "confidence": 0.7097810308138529}]}, {"text": "The problem addressed in this paper is the decoding of source-language strings into targetlanguage trees where the transformation is described by a pSTIG.", "labels": [], "entities": []}, {"text": "Currently, this decoding requires two steps: first, every source string is translated into a derivation tree of the underlying pSTIG, and second, the derivation tree is transformed into the target tree using an embedded tree transducer).", "labels": [], "entities": []}, {"text": "We propose a transducer model, called a bottom-up tree adjoining transducer, which performs this decoding in a single step and, simultaneously, computes the probabilities of its derivations.", "labels": [], "entities": []}, {"text": "As a basis of our approach, we present a formal definition of pSTIG.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}