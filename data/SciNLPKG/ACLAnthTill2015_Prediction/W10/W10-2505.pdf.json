{"title": [], "abstractContent": [{"text": "We investigate the problem of structurally changing lexica, while preserving the information.", "labels": [], "entities": []}, {"text": "We present a type of lexicon transformation that is complete on an interesting class of lexica.", "labels": [], "entities": []}, {"text": "Our work is motivated by the problem of merging one or more lexica into one lexicon.", "labels": [], "entities": []}, {"text": "Lexica, lexicon schemas, and lexicon transformations are all seen as particular kinds of trees.", "labels": [], "entities": []}], "introductionContent": [{"text": "A standard for lexical resources, called Lexical Markup Framework (LMF), has been developed under the auspices of ISO ().", "labels": [], "entities": [{"text": "ISO", "start_pos": 114, "end_pos": 117, "type": "DATASET", "confidence": 0.9041872620582581}]}, {"text": "At its core is the understanding that most information represented in a lexicon is hierarchical in nature, so that it can be represented as a tree.", "labels": [], "entities": []}, {"text": "Although LMF also includes relations between nodes orthogonal to the tree structure, we will in this paper simplify the presentation by treating only purely tree-shaped lexica.", "labels": [], "entities": []}, {"text": "There is a high demand for tools supporting the merger of a number of lexica.", "labels": [], "entities": []}, {"text": "A few examples of papers that express this demand are Chan KaLeung and Wu (1999),, and.", "labels": [], "entities": []}, {"text": "A typical scenario is the following.", "labels": [], "entities": []}, {"text": "The ultimate goal of a project is the creation of a single lexicon fora given language.", "labels": [], "entities": []}, {"text": "In order to obtain the necessary data, several field linguists independently gather lexical resources.", "labels": [], "entities": []}, {"text": "Despite efforts to come to agreements before the start of the fieldwork, there will generally be overlap in the scope of the respective resources and there are frequently inconsistencies both in the lexical information itself and in the form in which information is represented.", "labels": [], "entities": []}, {"text": "In the latter case, the information needs to be restructured as part of the process of creating a single lexicon.", "labels": [], "entities": []}, {"text": "We have developed a model of the merging process, and experiments with an implementation are underway.", "labels": [], "entities": [{"text": "merging process", "start_pos": 33, "end_pos": 48, "type": "TASK", "confidence": 0.8953705132007599}]}, {"text": "The actions performed by the tool are guided by a linguist, but portions of the work may also be done purely mechanically, if this is so specified by the user.", "labels": [], "entities": []}, {"text": "The purpose of the present paper is to study one aspect of the adequacy of the model, namely the restructuring of information, with one input lexicon and one output lexicon.", "labels": [], "entities": []}, {"text": "This corresponds to a special use of our tool, which may in general produce one output lexicon out of any number of input lexica.", "labels": [], "entities": []}, {"text": "As our lexica are trees, the use of wellestablished techniques such as term unification and tree transduction) seem obvious candidates for solutions to our problem.", "labels": [], "entities": [{"text": "term unification", "start_pos": 71, "end_pos": 87, "type": "TASK", "confidence": 0.6982149034738541}, {"text": "tree transduction", "start_pos": 92, "end_pos": 109, "type": "TASK", "confidence": 0.7048727571964264}]}, {"text": "Also technologies such as XSL () and XQuery spring to mind.", "labels": [], "entities": []}, {"text": "We have chosen a different approach however, which, as we will show, has favourable theoretical properties.", "labels": [], "entities": []}, {"text": "The structure of this paper is as follows.", "labels": [], "entities": []}, {"text": "The type of lexicon that we consider is formalized in Section 2, and lexicon transformations are discussed in Section 3.", "labels": [], "entities": []}, {"text": "Section 4 shows that the proposed type of lexicon transformation suffices to map all 'reasonable' lexica to one another, as long as they contain the same information.", "labels": [], "entities": []}, {"text": "Conditions under which transformations preserve information are discussed in Section 5.", "labels": [], "entities": []}, {"text": "A brief overview of an implementation is given in Section 6.", "labels": [], "entities": []}, {"text": "away from details that are irrelevant to the discussion that follows.", "labels": [], "entities": []}, {"text": "A lexicon schema S is a tuple (A, C, T ), where A is a finite set of attributes, C is a finite set of components (A \u2229 C = \u2205), and T is a labelled, unordered tree such that: \u2022 each leaf node is labelled by an element from A, \u2022 each non-leaf node is labelled by an element from C, and \u2022 each element from A\u222aC occurs exactly once.", "labels": [], "entities": []}, {"text": "In order to simplify this comparison, we will assume that in a lexicon, A and C only contain elements that occur int.", "labels": [], "entities": []}, {"text": "This is without loss of generality, as unused elements of A and C can be omitted.", "labels": [], "entities": []}, {"text": "For the sake of succinctness, an attribute-value pair such as (example, 'Er ist mit dem Zug gefahren') is commonly separated by =, and where it is required for graphical reasons, the value maybe drawn beneath the attribute, stretched out vertically.", "labels": [], "entities": []}, {"text": "On a number of occasions in the constructions and proofs that follow, it is convenient to assume that the root node of a lexicon schema has exactly one child.", "labels": [], "entities": []}, {"text": "If this does not hold, as in the running example, we may introduce an artificial root node labelled by an artificial component, denoted by '$', which has the conceptual root node as only child.", "labels": [], "entities": []}, {"text": "We will refer to the lexicon schema that results as an extended lexicon schema.", "labels": [], "entities": []}, {"text": "(Cf. the theory of context-free grammars, which are often extended with anew start symbol.)", "labels": [], "entities": []}, {"text": "As a consequence, a lexicon that is an instance of an extended lexicon schema may, in pathological cases, have several nodes that are labelled by the conceptual root component of the schema.", "labels": [], "entities": []}, {"text": "The components in lexicon schemata and lexica provide a means of structuring sets of attributes, or sets of attribute-value pairs respectively, into treeshaped forms.", "labels": [], "entities": []}, {"text": "The discussion that follows will treat components and structure as secondary, and will take attributes and attribute-value pairs as the primary carriers of information.", "labels": [], "entities": []}, {"text": "A lexicon base B is a tuple (A, V, I), where A and V are as above, and I is a finite non-empty set of items, each of which is a partial function from A to V , defined on at least one attribute.", "labels": [], "entities": []}, {"text": "Such partial functions will also be represented as nonempty sets of attribute-value pairs, in which each attribute occurs at most once.", "labels": [], "entities": []}, {"text": "Let L = (A, V, C, t) be a lexicon, where r is the root oft.", "labels": [], "entities": []}, {"text": "Its base, denoted by B(L), is (A, V, I) with I = I(r), where the function I on nodes n of the lexicon is defined as follows.", "labels": [], "entities": []}, {"text": "\u2022 For a leaf node n labelled by the attributevalue pair (a, v), I(n) = {{(a, v)}}.", "labels": [], "entities": []}, {"text": "In words, the set I(n) contains only one item, which is a partial function mapping attribute a to value v.", "labels": [], "entities": []}, {"text": "\u2022 For a non-leaf node n, assume that m different components or attributes Then: Note that by the definition of lexica and of N 1 , . .", "labels": [], "entities": []}, {"text": ", N m , no attribute may occur both in \u03b9 i and in \u03b9 j if i \ud97b\udf59 = j.", "labels": [], "entities": []}, {"text": "This means that \u03b9 1 \u222a \u00b7 \u00b7 \u00b7 \u222a \u03b9 m is a partial function as required.", "labels": [], "entities": []}, {"text": "There are many different lexica however that share the same base.", "labels": [], "entities": []}, {"text": "We see that the information is presented in an entirely different fashion, with a focus on the examples.", "labels": [], "entities": []}, {"text": "Ina lexicon such as that in, there maybe nodes labelled 'Meaning' without any children corresponding to attribute 'example'.", "labels": [], "entities": []}, {"text": "This means that there would be items \u03b9 in B(L) such that \u03b9(example) is undefined.", "labels": [], "entities": []}, {"text": "For some of the constructions and proofs below, it is convenient to circumvent this complication, by assuming special 'null' values for absent leaf nodes for attributes.", "labels": [], "entities": []}, {"text": "As a result, we may treat an item as a complete function rather than as a partial function on the domain A.", "labels": [], "entities": []}, {"text": "There is a certain resemblance between the base of a lexicon and the disjunctive normal form of a logical expression, the attribute-value pairs taking the place of propositional variables, and the items taking the place of conjunctions.", "labels": [], "entities": []}, {"text": "Thus our semantic interpretation of lexica is such that two siblings in the tree are regarded as alternatives (disjunction) if their labels contain the same attribute or component, and they are regarded as joint information (conjunction) if their labels contain distinct attributes or components.", "labels": [], "entities": []}, {"text": "Theorem 1 For each lexicon base B = (A B , V, I) and for each lexicon schema S = (A S , C, T ) with AB \u2286 A S , there is a lexicon L that is an instance of Sand whose base is B.", "labels": [], "entities": []}, {"text": "Proof Assume the root r of T has only one child r \u2032 . (Otherwise, make S extended first.)", "labels": [], "entities": []}, {"text": "Let T \u2032 be the subtree of T at r \u2032 . For each item \u03b9 \u2208 I, create a copy of T \u2032 , denoted by t \u03b9 . At each leaf node oft \u03b9 , supplement the label a with the corresponding value from \u03b9 if any; if a does not occur in \u03b9, then remove the leaf node from t \u03b9 . (If the parent of a removed leaf node has no other children, then also remove the parent, etc.)", "labels": [], "entities": []}, {"text": "Create a root node, with the same label as r, the children of which are the roots of the respective t \u03b9 . Let the resulting tree be called t.", "labels": [], "entities": []}, {"text": "The requirements of the theorem are now satisfied by L = (A B , V, C, t).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}