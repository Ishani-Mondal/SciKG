{"title": [{"text": "Turker-Assisted Paraphrasing for English-Arabic Machine Translation", "labels": [], "entities": [{"text": "Turker-Assisted Paraphrasing", "start_pos": 0, "end_pos": 28, "type": "TASK", "confidence": 0.6600936055183411}, {"text": "English-Arabic Machine Translation", "start_pos": 33, "end_pos": 67, "type": "TASK", "confidence": 0.5989470283190409}]}], "abstractContent": [{"text": "This paper describes a semi-automatic paraphrasing task for English-Arabic machine translation conducted using Amazon Mechanical Turk.", "labels": [], "entities": [{"text": "English-Arabic machine translation", "start_pos": 60, "end_pos": 94, "type": "TASK", "confidence": 0.6484757165114085}, {"text": "Amazon Mechanical Turk", "start_pos": 111, "end_pos": 133, "type": "DATASET", "confidence": 0.9180944561958313}]}, {"text": "The method for automatically extracting paraphrases is described, as are several human judgment tasks completed by Turkers.", "labels": [], "entities": [{"text": "automatically extracting paraphrases", "start_pos": 15, "end_pos": 51, "type": "TASK", "confidence": 0.6687436799208323}]}, {"text": "An ideal task type, revised specifically to address feedback from Turkers, is shown to be sophisticated enough to identify and filter problem Turkers while remaining simple enough for non-experts to complete.", "labels": [], "entities": []}, {"text": "The results of this task are discussed along with the viability of using this data to combat data sparsity in MT.", "labels": [], "entities": [{"text": "MT", "start_pos": 110, "end_pos": 112, "type": "TASK", "confidence": 0.9818829298019409}]}], "introductionContent": [{"text": "Many language pairs have large amounts of parallel text that can be used to build statistical machine translation (MT) systems.", "labels": [], "entities": [{"text": "statistical machine translation (MT)", "start_pos": 82, "end_pos": 118, "type": "TASK", "confidence": 0.7791220843791962}]}, {"text": "For such language pairs, resources for system tuning and evaluation tend to be disproportionately abundant in the language typically used as the target.", "labels": [], "entities": [{"text": "system tuning and evaluation", "start_pos": 39, "end_pos": 67, "type": "TASK", "confidence": 0.6578521504998207}]}, {"text": "For example, the NIST Open Machine Translation Evaluation (OpenMT) 2009 constrained Arabic-English development and evaluation data includes four English translations for each Arabic source sentence, as English is the usual target language.", "labels": [], "entities": [{"text": "NIST Open Machine Translation Evaluation (OpenMT) 2009 constrained Arabic-English development and evaluation", "start_pos": 17, "end_pos": 125, "type": "TASK", "confidence": 0.7160104257719857}]}, {"text": "However, when considering this data to tune and evaluate an English-to-Arabic system, each English sentence has a single Arabic translation and such translations are often identical.", "labels": [], "entities": []}, {"text": "With at most one reference translation for each source sentence, standard minimum error rate training to the BLEU metric () becomes problematic, as BLEU relies on the availability of multiple references.", "labels": [], "entities": [{"text": "BLEU", "start_pos": 109, "end_pos": 113, "type": "METRIC", "confidence": 0.9473609328269958}, {"text": "BLEU", "start_pos": 148, "end_pos": 152, "type": "METRIC", "confidence": 0.5750802159309387}]}, {"text": "We describe a semi-automatic paraphrasing technique that addresses this problem by identifying paraphrases that can be used to create new reference translations based on valid phrase substitutions on existing references.", "labels": [], "entities": []}, {"text": "Paraphrases are automatically extracted from a large parallel corpus and filtered by quality judgments collected from human annotators using Amazon Mechanical Turk.", "labels": [], "entities": [{"text": "Amazon Mechanical Turk", "start_pos": 141, "end_pos": 163, "type": "DATASET", "confidence": 0.9246837099393209}]}, {"text": "As Turkers are not trained to complete natural language processing (NLP) tasks and can dishonestly submit random judgments, we develop a task type that is able to catch problem Turkers while remaining simple enough for untrained annotators to understand.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Turker judgments of top 1280 paraphrases", "labels": [], "entities": [{"text": "Turker judgments of top 1280 paraphrases", "start_pos": 10, "end_pos": 50, "type": "TASK", "confidence": 0.5972907940546671}]}]}