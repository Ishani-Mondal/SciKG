{"title": [], "abstractContent": [{"text": "We give anew treatment of tabular LR parsing, which is an alternative to Tomita's generalized LR algorithm.", "labels": [], "entities": [{"text": "tabular LR parsing", "start_pos": 26, "end_pos": 44, "type": "TASK", "confidence": 0.6274018287658691}]}, {"text": "Firstly, our treatment is conceptually more attractive because it uses simpler concepts, such as grammar transformations and standard tabulation techniques also know as chart parsing.", "labels": [], "entities": [{"text": "chart parsing", "start_pos": 169, "end_pos": 182, "type": "TASK", "confidence": 0.774751216173172}]}, {"text": "Secondly , the static and dynamic complexity of parsing, both in space and time, is significantly reduced.", "labels": [], "entities": [{"text": "parsing", "start_pos": 48, "end_pos": 55, "type": "TASK", "confidence": 0.9749749302864075}]}], "introductionContent": [{"text": "The efficiency of LR(k) parsing techniques () is very attractive from the perspective of natural language processing applications.", "labels": [], "entities": [{"text": "LR(k) parsing", "start_pos": 18, "end_pos": 31, "type": "TASK", "confidence": 0.5052863895893097}]}, {"text": "This has stimulated the computational linguistics community to develop extensions of these techniques to general context-free grammar parsing.", "labels": [], "entities": [{"text": "context-free grammar parsing", "start_pos": 113, "end_pos": 141, "type": "TASK", "confidence": 0.6445347468058268}]}, {"text": "The best-known example is generalized LR parsing, also known as Tomita's algorithm, described by and further investigated by, for example, and.", "labels": [], "entities": [{"text": "LR parsing", "start_pos": 38, "end_pos": 48, "type": "TASK", "confidence": 0.808331161737442}]}, {"text": "Despite appearances, the graph-structured stacks used to describe Tomita's algorithm differ very little from parse fables, or in other words, generalized LR parsing is one of the so called tabular parsing algorithms, among which also the CYK algorithm and Earley's algorithm can be found.", "labels": [], "entities": [{"text": "LR parsing", "start_pos": 154, "end_pos": 164, "type": "TASK", "confidence": 0.6395455300807953}]}, {"text": "(Tabular parsing is also known as chart parsing.)", "labels": [], "entities": [{"text": "Tabular parsing", "start_pos": 1, "end_pos": 16, "type": "TASK", "confidence": 0.8951212465763092}, {"text": "chart parsing", "start_pos": 34, "end_pos": 47, "type": "TASK", "confidence": 0.7808575928211212}]}, {"text": "In this paper we investigate the extension of LR parsing to general context-free grammars from a more general viewpoint: tabular algorithms can often be described by the composition of two constructions.", "labels": [], "entities": [{"text": "LR parsing", "start_pos": 46, "end_pos": 56, "type": "TASK", "confidence": 0.9349534809589386}]}, {"text": "One example is given by and: the construction of pushdown automata from grammars and the simulation of these automata by means of tabulation yield different tabular algorithms for different such constructions.", "labels": [], "entities": []}, {"text": "Another example, on which our presentation is based, was first suggested by: a grammar is first transformed and then a standard tabular algorithm along with some filtering condition is applied using the transformed grammar.", "labels": [], "entities": []}, {"text": "In our case, the transformation and the subsequent application of the tabular algorithm result in anew form of tabular LR parsing.", "labels": [], "entities": [{"text": "tabular LR parsing", "start_pos": 111, "end_pos": 129, "type": "TASK", "confidence": 0.5070707549651464}]}, {"text": "Our method is more efficient than Tomita's algorithm in two respects.", "labels": [], "entities": []}, {"text": "First, reduce operations are implemented in an efficient way, by splitting them into several, more primitive, operations (a similar idea has been proposed by for Tomita's algorithm).", "labels": [], "entities": []}, {"text": "Second, several paths in the computation that must be simulated separately by Tomita's algorithm are collapsed into a single computation path, using state minimization techniques.", "labels": [], "entities": []}, {"text": "Experiments on practical grammars have indicated that there is a significant gain in efficiency, with regard to both space and time requirements.", "labels": [], "entities": []}, {"text": "Our grammar transformation produces a so called cover for the input grammar, which together with the filtering condition fully captures the specification of the method, abstracting away from algorithmic details such as data structures and control flow.", "labels": [], "entities": []}, {"text": "Since this cover can be easily precomputed, implementing our LR parser simply amounts to running the standard tabular algorithm.", "labels": [], "entities": []}, {"text": "This is very attractive from an application-oriented perspective, since many actual systems for natural language processing are based on these kinds of parsing algorithm.", "labels": [], "entities": []}, {"text": "The remainder of this paper is organized as follows.", "labels": [], "entities": []}, {"text": "In Section 2 some preliminaries are discussed.", "labels": [], "entities": []}, {"text": "We review the notion of LR automaton in Section.3 and introduce the notion of 2LR automaton in Section 4.", "labels": [], "entities": []}, {"text": "Then we specify our tabular LR method in Section 5, and provide an analysis of the algorithm in Section 6.", "labels": [], "entities": []}, {"text": "Finally, some empirical results are giv-en in Section 7, and further discussion of our method is provided in Section 8.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: The test material: the four grammars and  some of their dimensions, and the average length of  the test sentences (20 sentences of various length for  each grammar).", "labels": [], "entities": []}, {"text": " Table 2: Dynamic requirements: average space and  time per sentence.", "labels": [], "entities": []}]}