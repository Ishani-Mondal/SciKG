{"title": [{"text": "Maximizing Top-down Constraints for Unification-based Systems", "labels": [], "entities": [{"text": "Maximizing Top-down Constraints", "start_pos": 0, "end_pos": 31, "type": "TASK", "confidence": 0.881242593129476}]}], "abstractContent": [{"text": "A left-corner parsing algorithm with top-down filtering has been reported to show very efficient performance for unification-based systems.", "labels": [], "entities": []}, {"text": "However, due to the non-termination of parsing with left-recursive grammars, top-down constraints must be weakened.", "labels": [], "entities": []}, {"text": "In this paper, a general method of maximizing top-down constraints is proposed.", "labels": [], "entities": []}, {"text": "The method provides a procedure to dynamically compute *restrictor., a minimum set of features involved in an infinite loop for every propagation path; thus top-down constraints are maximally propagated .", "labels": [], "entities": []}], "introductionContent": [{"text": "A left-corner parsing algorithm with top-down filtering has been reported to show very efficient performance for unification-based systems.", "labels": [], "entities": []}, {"text": "In particular, top-down filtering seems to be very effective in increasing parse efficiency.", "labels": [], "entities": []}, {"text": "Ideally all top-down expectation should be propagated down to the input word so that unsuccessful rule applications are pruned at the earliest time.", "labels": [], "entities": []}, {"text": "However, in the context of unification-based parsing, left-recursive grammars have the formal power of a Turing machine, therefore detection of all infinite loops due to left-recursion is impossible.", "labels": [], "entities": [{"text": "unification-based parsing", "start_pos": 27, "end_pos": 52, "type": "TASK", "confidence": 0.8294925391674042}]}, {"text": "So, top-down constraints must be weakened in order for parsing to be guaranteed to terminate.", "labels": [], "entities": [{"text": "parsing", "start_pos": 55, "end_pos": 62, "type": "TASK", "confidence": 0.9672015905380249}]}, {"text": "In order to solve the nontermination problem, proposes restrictor, a statically predefined set of features to consider in propagation, and restriction, a filtering function which removes the features not in restrictor from top-down expectation.", "labels": [], "entities": []}, {"text": "However, not only does this approach fail to provide a method to automatically generate the restrictor set, it may weaken the predicative power of top-down expectation more than necessary: a globally defined restrictor can only specify the least common features for all propagation paths.", "labels": [], "entities": [{"text": "predicative", "start_pos": 126, "end_pos": 137, "type": "METRIC", "confidence": 0.9543360471725464}]}, {"text": "In this paper, a general method of maximizing top-down constraints is proposed.", "labels": [], "entities": []}, {"text": "The method provides a procedure to dynamically compute *restrictor*, a minimum set of features involved in an infinite loop, for every propagation path.", "labels": [], "entities": []}, {"text": "Features in this set are selected by the detection function, and will be ignored in top-down propagation.", "labels": [], "entities": []}, {"text": "Using .vestrictor., only the relevant features particular to the propagation path are ignored, thus top-down constraints are maximally propagated.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}