{"title": [{"text": "Parsing for Semidirectional Lambek Grammar is NP-Complete", "labels": [], "entities": [{"text": "NP-Complete", "start_pos": 46, "end_pos": 57, "type": "DATASET", "confidence": 0.6593134999275208}]}], "abstractContent": [{"text": "We study the computational complexity of the parsing problem of a variant of Lambek Categorial Grammar that we call semidirectional.", "labels": [], "entities": [{"text": "parsing problem", "start_pos": 45, "end_pos": 60, "type": "TASK", "confidence": 0.9222566485404968}]}, {"text": "In semidirectional Lambek calculus SD[ there is an additional non-directional abstraction rule allowing the formula abstracted over to appear anywhere in the premise sequent's left-hand side, thus permitting non-peripheral extraction.", "labels": [], "entities": [{"text": "semidirectional Lambek calculus SD", "start_pos": 3, "end_pos": 37, "type": "TASK", "confidence": 0.5752479881048203}]}, {"text": "SD[ grammars are able to generate each context-free language and more than that.", "labels": [], "entities": []}, {"text": "We show that the parsing problem for semidireetional Lambek Grammar is NP-complete by a reduction of the 3-Partition problem.", "labels": [], "entities": []}], "introductionContent": [{"text": "Categorial Grammar (CG) and in particular Lambek Categorial Grammar (LCG) have their well-known benefits for the formal treatment of natural language syntax and semantics.", "labels": [], "entities": [{"text": "Categorial Grammar (CG)", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.7885128378868103}, {"text": "Lambek Categorial Grammar (LCG", "start_pos": 42, "end_pos": 72, "type": "DATASET", "confidence": 0.8827401757240295}]}, {"text": "The most outstanding of these benefits is probably the fact that the specific way, how the complete grammar is encoded, namely in terms of 'combinatory potentials' of its words, gives us at the same time recipes for the construction of meanings, once the words have been combined with others to form larger linguistic entities.", "labels": [], "entities": []}, {"text": "Although both frameworks are equivalent in weak generative capacity --both derive exactly the context-free languages --, LCG is superior to CG in that it can cope in a natural way with extraction and unbounded dependency phenomena.", "labels": [], "entities": []}, {"text": "For instance, no special category assignments need to be stipulated to handle a relative clause containing a trace, because it is analyzed, via hypothetical reasoning, like a traceless clause with the trace being the hypothesis to be discharged when combined with the relative pronoun.", "labels": [], "entities": []}, {"text": "Notice that this natural-deduction-style proof in the type logic corresponds very closely to the phrasestructure tree one would like to adopt in an analysis with traces.", "labels": [], "entities": []}, {"text": "We thus can derive Bill misses ~ as an s from the hypothesis that there is a \"phantom\" np in the place of the trace.", "labels": [], "entities": []}, {"text": "Discharging the hypothesis, indicated by index 1, results in Bill misses being analyzed as an s/np from zero hypotheses.", "labels": [], "entities": [{"text": "Bill misses", "start_pos": 61, "end_pos": 72, "type": "METRIC", "confidence": 0.776395857334137}]}, {"text": "Observe, however, that such a bottom-up synthesis of anew unsaturated type is only required, if that type is to be consumed (as the antecedent of an implication) by another type.", "labels": [], "entities": []}, {"text": "Otherwise there would be a simpler proof without this abstraction.", "labels": [], "entities": []}, {"text": "In our example the relative pronoun has such a complex type triggering an extraction.", "labels": [], "entities": []}, {"text": "A drawback of the pure Lambek Calculus !_ is that it only allows for so-called 'peripheral extraction', i.e., in our example the trace should better be initial or final in the relative clause.", "labels": [], "entities": [{"text": "Lambek Calculus !_", "start_pos": 23, "end_pos": 41, "type": "DATASET", "confidence": 0.9394117991129557}]}, {"text": "This inflexibility of Lambek Calculus is one of the reasons why many researchers study richer systems today.", "labels": [], "entities": [{"text": "Lambek Calculus", "start_pos": 22, "end_pos": 37, "type": "DATASET", "confidence": 0.9309379458427429}]}, {"text": "For instance, the recent work by Moortgat (Moortgat 94) gives a systematic in-depth study of mixed Lambek systems, which integrate the systems L, NL, NLP, and LP.", "labels": [], "entities": [{"text": "Moortgat (Moortgat 94)", "start_pos": 33, "end_pos": 55, "type": "DATASET", "confidence": 0.804974627494812}]}, {"text": "These ingredient systems are obtained by varying the Lambek calculus along two dimensions: adding the permutation rule (P) and/or dropping the assumption that the type combinator (which forms the sequences the systems talk about) is associative (N for non-associative).", "labels": [], "entities": [{"text": "permutation rule (P)", "start_pos": 102, "end_pos": 122, "type": "METRIC", "confidence": 0.8220697283744812}]}, {"text": "Taken for themselves these variants of I_ are of little use in linguistic descriptions.", "labels": [], "entities": []}, {"text": "But in Moortgat's mixed system all the different resource management modes of the different systems are left intact in the combination and can be exploited in different parts of the grammar.", "labels": [], "entities": []}, {"text": "The relative pronoun which would, for instance, receive category (np\\np)/(np --o s) with --o being implication in LP, 1 i.e., it requires 1The Lambek calculus with permutation I_P is also called the \"nondirectional Lambek calculus\".", "labels": [], "entities": []}, {"text": "In it the leftward and rightward implication The present paper studies the computational complexity of a variant of the Lambek Calculus that lies between / and tP, the Semidirectional Lambek Calculus SDk.", "labels": [], "entities": [{"text": "Lambek Calculus SDk", "start_pos": 184, "end_pos": 203, "type": "DATASET", "confidence": 0.6134706735610962}]}, {"text": "3 Since tP derivability is known to be NPcomplete, it is interesting to study restrictions on the use of the I_P operator -o.", "labels": [], "entities": []}, {"text": "A restriction that leaves its proposed linguistic applications intact is to admit a type B -o A only as the argument type in functional applications, but never as the functor.", "labels": [], "entities": []}, {"text": "Stated prove-theoretically for Gentzen-style systems, this amounts to disallowing the left rule for -o.", "labels": [], "entities": []}, {"text": "Surprisingly, the resulting system SD[.", "labels": [], "entities": []}, {"text": "can be stated without the need for structural rules, i.e., as a monolithic system with just one structural connective, because the ability of the abstracted-over formula to permute can be directly encoded in the right rule for --o.", "labels": [], "entities": []}, {"text": "4 Note that our purpose for studying SDI_ is not that it might be in any sense better suited fora theory of grammar (except perhaps, because of its simplicity), but rather, because it exhibits a core of logical behaviour that any richer system also needs to include, at least if it should allow for non-peripheral extraction.", "labels": [], "entities": []}, {"text": "The sources of complexity uncovered here are thus a forteriori present in all these richer systems as well. collapse.", "labels": [], "entities": []}, {"text": "2Morrill (Morrill 94) achieves the same effect with a permutation modality /k apphed to the np gap: (s/Anp) SThis name was coined by Esther K6nig-Baumer, who employs a variant of this calculus in her LexGram system (KSnig 95) for practical grammar development.", "labels": [], "entities": [{"text": "2Morrill (Morrill 94)", "start_pos": 0, "end_pos": 21, "type": "DATASET", "confidence": 0.7311946511268616}, {"text": "LexGram system (KSnig 95)", "start_pos": 200, "end_pos": 225, "type": "DATASET", "confidence": 0.9433662295341492}]}, {"text": "4It should be pointed out that the resource management in this calculus is very closely related to the handhng and interaction of local valency and unbounded dependencies in HPSG.", "labels": [], "entities": [{"text": "handhng", "start_pos": 103, "end_pos": 110, "type": "METRIC", "confidence": 0.9047355651855469}, {"text": "HPSG", "start_pos": 174, "end_pos": 178, "type": "DATASET", "confidence": 0.9437440633773804}]}, {"text": "The latter being handled with set-valued features SLASH, QUE and KEL essentially emulates the permutation potential of abstracted categories in semidirectional Lambek Grammar.", "labels": [], "entities": [{"text": "SLASH", "start_pos": 50, "end_pos": 55, "type": "METRIC", "confidence": 0.7891889214515686}, {"text": "KEL", "start_pos": 65, "end_pos": 68, "type": "METRIC", "confidence": 0.9591391682624817}]}, {"text": "A more detailed analysis of the relation between HPSG and SD[ is given in (KSnig 95).", "labels": [], "entities": [{"text": "HPSG", "start_pos": 49, "end_pos": 53, "type": "DATASET", "confidence": 0.8567152619361877}]}], "datasetContent": [], "tableCaptions": []}