{"title": [{"text": "Dependency-based empty category detection via phrase structure trees", "labels": [], "entities": [{"text": "Dependency-based empty category detection", "start_pos": 0, "end_pos": 41, "type": "TASK", "confidence": 0.7532671242952347}]}], "abstractContent": [{"text": "We describe a novel approach to detecting empty categories (EC) as represented in dependency trees as well as anew metric for measuring EC detection accuracy.", "labels": [], "entities": [{"text": "detecting empty categories (EC)", "start_pos": 32, "end_pos": 63, "type": "TASK", "confidence": 0.804461936155955}, {"text": "accuracy", "start_pos": 149, "end_pos": 157, "type": "METRIC", "confidence": 0.7607462406158447}]}, {"text": "The new metric takes into account not only the position and type of an EC, but also the head it is a dependent of in a dependency tree.", "labels": [], "entities": []}, {"text": "We also introduce a variety of new features that are more suited for this approach.", "labels": [], "entities": []}, {"text": "Tested on a subset of the Chinese Treebank, our system improved significantly over the best previously reported results even when evaluated with this more stringent metric.", "labels": [], "entities": [{"text": "Chinese Treebank", "start_pos": 26, "end_pos": 42, "type": "DATASET", "confidence": 0.9903936088085175}]}], "introductionContent": [{"text": "In modern theoretical linguistics, empty categories (ECs) are an important piece of machinery in representing the syntactic structure of a sentence and they are used to represent phonologically null elements such as dropped pronouns and traces of dislocated elements.", "labels": [], "entities": []}, {"text": "They have also found their way into largescale treebanks which have played an important role in advancing the state of the art in syntactic parsing.", "labels": [], "entities": [{"text": "syntactic parsing", "start_pos": 130, "end_pos": 147, "type": "TASK", "confidence": 0.8791514933109283}]}, {"text": "In phrase-structure treebanks, ECs have been used to indicate long-distance dependencies, discontinuous constituents, and certain dropped elements).", "labels": [], "entities": []}, {"text": "Together with labeled brackets and function tags, they makeup the full syntactic representation of a sentence.", "labels": [], "entities": []}, {"text": "The use of ECs captures some cross-linguistic commonalities and differences.", "labels": [], "entities": []}, {"text": "For example, while both the Penn English TreeBank (PTB)) and the Chinese TreeBank (CTB)) use traces to represent the extraction site of a dislocated element, dropped pronouns (represented as *pro*s) are much more widespread in the CTB.", "labels": [], "entities": [{"text": "Penn English TreeBank (PTB))", "start_pos": 28, "end_pos": 56, "type": "DATASET", "confidence": 0.9572218159834543}, {"text": "Chinese TreeBank (CTB))", "start_pos": 65, "end_pos": 88, "type": "DATASET", "confidence": 0.9214290380477905}]}, {"text": "This is because Chinese is a pro-drop language that allows the subject to be dropped in more contexts than English does.", "labels": [], "entities": []}, {"text": "While detecting and resolving traces is important to the interpretation of the syntactic structure of a sentence in both English and Chinese, the prevalence of dropped nouns in Chinese text gives EC detection added significance and urgency.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 196, "end_pos": 208, "type": "TASK", "confidence": 0.9576866626739502}]}, {"text": "They are not only an important component of the syntactic parse of a sentence, but are also essential to a wide range of NLP applications.", "labels": [], "entities": [{"text": "syntactic parse of a sentence", "start_pos": 48, "end_pos": 77, "type": "TASK", "confidence": 0.8325208067893982}]}, {"text": "For example, any meaningful tracking of entities and events in natural language text would have to include those represented by dropped pronouns.", "labels": [], "entities": [{"text": "meaningful tracking of entities and events in natural language text", "start_pos": 17, "end_pos": 84, "type": "TASK", "confidence": 0.7620660483837127}]}, {"text": "If Chinese is translated into a different language, it is also necessary to render these dropped pronouns explicit if the target language does not allow pro-drop.", "labels": [], "entities": []}, {"text": "In fact, reported preliminary work that has shown a positive impact of automatic EC detection on statistical machine translation.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 81, "end_pos": 93, "type": "TASK", "confidence": 0.8530371189117432}, {"text": "statistical machine translation", "start_pos": 97, "end_pos": 128, "type": "TASK", "confidence": 0.715808113416036}]}, {"text": "Some ECs can be resolved to an overt element in the same text while others only have a generic reference that cannot be linked to any specific entity.", "labels": [], "entities": []}, {"text": "Still others have a plausible antecedent in the text, but are not annotated due to annotation limitations.", "labels": [], "entities": []}, {"text": "A common practice is to resolve ECs in two separate stages).", "labels": [], "entities": [{"text": "resolve ECs", "start_pos": 24, "end_pos": 35, "type": "TASK", "confidence": 0.7784841656684875}]}, {"text": "The first stage is EC detection, where empty categories are first located and typed.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 19, "end_pos": 31, "type": "TASK", "confidence": 0.9725969433784485}]}, {"text": "The second stage is EC resolution, where empty categories are linked to an overt element if possible.", "labels": [], "entities": [{"text": "EC resolution", "start_pos": 20, "end_pos": 33, "type": "TASK", "confidence": 0.89443239569664}]}, {"text": "In this paper we describe a novel approach to detecting empty categories in Chinese, using the CTB as training and test data.", "labels": [], "entities": [{"text": "detecting empty categories", "start_pos": 46, "end_pos": 72, "type": "TASK", "confidence": 0.86616583665212}, {"text": "CTB", "start_pos": 95, "end_pos": 98, "type": "DATASET", "confidence": 0.9134263396263123}]}, {"text": "More concretely, EC detection involves (i) identifying the position of the EC, relative to some overt word tokens in the same sentence, and (ii) determining the type of EC, e.g., whether it is a dropped pronoun or a trace.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 17, "end_pos": 29, "type": "TASK", "confidence": 0.9410142004489899}]}, {"text": "We focus on EC detection here because most of the ECs in the Chinese Treebank are either not resolved to an overt element or linked to another EC.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 12, "end_pos": 24, "type": "TASK", "confidence": 0.9106106162071228}, {"text": "Chinese Treebank", "start_pos": 61, "end_pos": 77, "type": "DATASET", "confidence": 0.9808193445205688}]}, {"text": "For example, dropped pronouns (*pro*) are not resolved, and traces (*T*) in relative clauses are linked to an empty relative pronoun (*OP*).", "labels": [], "entities": []}, {"text": "In previous work, ECs are either represented linearly, where ECs are indexed to the following word or attached to nodes in a phrase structure tree).", "labels": [], "entities": []}, {"text": "Ina linear representation where ECs are indexed to the following word, it is difficult to represent consecutive ECs because that will mean more than one EC will be indexed to the same word (making the classification task more complicated).", "labels": [], "entities": []}, {"text": "While in English consecutive ECs are relatively rare, in Chinese this is very common.", "labels": [], "entities": [{"text": "consecutive ECs", "start_pos": 17, "end_pos": 32, "type": "METRIC", "confidence": 0.7957371473312378}]}, {"text": "For example, it is often the case that an empty relative pronoun (*OP*) is followed immediately by a trace (*T*).", "labels": [], "entities": []}, {"text": "Another issue with the linear representation of ECs is that it leaves unspecified where the EC should be attached, and crucial dependencies between ECs and other elements in the syntactic structure are not represented, thus limiting the utility of this task.", "labels": [], "entities": []}, {"text": "Ina phrase structure representation, ECs are attached to a hierarchical structure and the problem of multiple ECs indexed to the same word token can be avoided because linearly consecutive ECs maybe attached to different non-terminal nodes in a phrase structure tree.", "labels": [], "entities": [{"text": "phrase structure representation", "start_pos": 4, "end_pos": 35, "type": "TASK", "confidence": 0.7192177077134451}]}, {"text": "Ina phrase structure framework, ECs are evaluated based on their linear position as well as on their contribution to the overall accuracy of the syntactic parse).", "labels": [], "entities": [{"text": "accuracy", "start_pos": 129, "end_pos": 137, "type": "METRIC", "confidence": 0.9983538389205933}]}, {"text": "In the present work, we propose to look at EC detection in a dependency structure representation, where we define EC detection as (i) determining its linear position relative to the following word token, (ii) determining its head it is a dependent of, and (iii) determining the type of EC.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 43, "end_pos": 55, "type": "TASK", "confidence": 0.8913788199424744}, {"text": "EC detection", "start_pos": 114, "end_pos": 126, "type": "TASK", "confidence": 0.7931499481201172}]}, {"text": "Framing EC detection this way also requires anew evaluation metric.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 8, "end_pos": 20, "type": "TASK", "confidence": 0.8639906346797943}]}, {"text": "An EC is considered to be correctly detected if its linear position, its head, and its type are all correctly determined.", "labels": [], "entities": []}, {"text": "We report experimental results that show even using this more stringent measure, our EC detection system achieved performance that improved significantly over the state-of-the-art results.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 85, "end_pos": 97, "type": "TASK", "confidence": 0.7221351712942123}]}, {"text": "The rest of the paper is organized as follows.", "labels": [], "entities": []}, {"text": "In Section 2, we will describe how to represent ECs in a dependency structure in detail and present our approach to EC detection.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 116, "end_pos": 128, "type": "TASK", "confidence": 0.9032373428344727}]}, {"text": "In Section 3, we describe how linguistic information is encoded as features.", "labels": [], "entities": []}, {"text": "In Section 4, we discuss our experimental setup and present our results.", "labels": [], "entities": []}, {"text": "In Section 5, we describe related work.", "labels": [], "entities": []}, {"text": "Section 6 concludes the paper.", "labels": [], "entities": []}], "datasetContent": [{"text": "Our EC detection models are trained and evaluated on a subset of the Chinese TreeBank 6.0.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 4, "end_pos": 16, "type": "TASK", "confidence": 0.8629574477672577}, {"text": "Chinese TreeBank 6.0", "start_pos": 69, "end_pos": 89, "type": "DATASET", "confidence": 0.9705318013827006}]}, {"text": "The training/development/test data split in our experiments is recommended in the CTB documentation.", "labels": [], "entities": [{"text": "CTB documentation", "start_pos": 82, "end_pos": 99, "type": "DATASET", "confidence": 0.9604640603065491}]}, {"text": "The CTB file IDs for training, development and testing are listed in.", "labels": [], "entities": [{"text": "CTB file IDs", "start_pos": 4, "end_pos": 16, "type": "DATASET", "confidence": 0.9254162907600403}]}, {"text": "The development data is used for feature selection and tuning, and results are reported on the test set.", "labels": [], "entities": [{"text": "feature selection", "start_pos": 33, "end_pos": 50, "type": "TASK", "confidence": 0.7294166386127472}]}, {"text": "We use standard metrics of precision, recall and Fmeasure in our evaluation.", "labels": [], "entities": [{"text": "precision", "start_pos": 27, "end_pos": 36, "type": "METRIC", "confidence": 0.9996664524078369}, {"text": "recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.9996154308319092}, {"text": "Fmeasure", "start_pos": 49, "end_pos": 57, "type": "METRIC", "confidence": 0.999262273311615}]}, {"text": "Ina dependency structure representation, evaluation is very straightforward because individual arcs from the dependency tree can be easily decomposed.", "labels": [], "entities": []}, {"text": "An EC is considered to be correctly detected if it is attached to the correct head h, correctly positioned relative tot, and correctly typed.", "labels": [], "entities": []}, {"text": "This is a more stringent measure than metrics proposed in previous work, which evaluates EC detection based on its position and type without considering the head it is a dependent of.", "labels": [], "entities": [{"text": "EC detection", "start_pos": 89, "end_pos": 101, "type": "TASK", "confidence": 0.958990752696991}]}], "tableCaptions": [{"text": " Table 2: EC distribution in the CTB test set", "labels": [], "entities": [{"text": "EC distribution", "start_pos": 10, "end_pos": 25, "type": "METRIC", "confidence": 0.964994341135025}, {"text": "CTB test set", "start_pos": 33, "end_pos": 45, "type": "DATASET", "confidence": 0.9464374383290609}]}, {"text": " Table 3. These results  are achieved by using the full feature set presented  in Section 3. The overall accuracy by F1-measure is  0.574 if we assume there can only be one EC asso- ciated with a given (h, t) tuple and hence the total  EC count in the gold standard is 1,765, or 0.561 if  we factor in all the EC instances and use the higher  total count of 1,838, which lowers the recall. If in- stead we use the total EC count of 1,352 that was  used in previous work", "labels": [], "entities": [{"text": "accuracy", "start_pos": 105, "end_pos": 113, "type": "METRIC", "confidence": 0.9995359182357788}, {"text": "F1-measure", "start_pos": 117, "end_pos": 127, "type": "METRIC", "confidence": 0.9986428618431091}, {"text": "recall", "start_pos": 382, "end_pos": 388, "type": "METRIC", "confidence": 0.9994762539863586}]}, {"text": " Table 3: EC detection results on the CTB test set and  comparison with (Cai et al., 2011)", "labels": [], "entities": [{"text": "EC detection", "start_pos": 10, "end_pos": 22, "type": "TASK", "confidence": 0.6390990614891052}, {"text": "CTB test set", "start_pos": 38, "end_pos": 50, "type": "DATASET", "confidence": 0.9376218914985657}]}, {"text": " Table 4: Contribution of feature groups", "labels": [], "entities": []}]}