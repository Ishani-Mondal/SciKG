{"title": [{"text": "Improving the Quality of Minority Class Identification in Dialog Act Tagging", "labels": [], "entities": [{"text": "Improving", "start_pos": 0, "end_pos": 9, "type": "TASK", "confidence": 0.9721553325653076}, {"text": "Minority Class Identification in Dialog Act Tagging", "start_pos": 25, "end_pos": 76, "type": "TASK", "confidence": 0.8114525164876666}]}], "abstractContent": [{"text": "We present a method of improving the performance of dialog act tagging in identifying minority classes by using per-class feature optimization and a method of choosing the class based not on confidence, but on a cascade of classifiers.", "labels": [], "entities": [{"text": "dialog act tagging", "start_pos": 52, "end_pos": 70, "type": "TASK", "confidence": 0.7120091319084167}]}, {"text": "We show that it gives a minority class F-measure error reduction of 22.8%, while also reducing the error for other classes and the overall error by about 10%.", "labels": [], "entities": [{"text": "F-measure error reduction", "start_pos": 39, "end_pos": 64, "type": "METRIC", "confidence": 0.8589435815811157}, {"text": "error", "start_pos": 99, "end_pos": 104, "type": "METRIC", "confidence": 0.9733858108520508}]}], "introductionContent": [{"text": "In this paper, we discuss dialog act tagging, the task of assigning a dialog act to an utterance, where a dialog act (DA) is a high-level categorization of the pragmatic meaning of the utterance.", "labels": [], "entities": [{"text": "dialog act tagging", "start_pos": 26, "end_pos": 44, "type": "TASK", "confidence": 0.6368531485398611}]}, {"text": "Our starting point is the tagger described in (, which uses a standard multi-class classifier based on support vector machines (SVMs).", "labels": [], "entities": []}, {"text": "While the performance of this system is pretty good as measured by accuracy, it performs badly on the DA REQUEST-ACTION, which is a rare class.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 67, "end_pos": 75, "type": "METRIC", "confidence": 0.9994937181472778}, {"text": "DA", "start_pos": 102, "end_pos": 104, "type": "METRIC", "confidence": 0.8941697478294373}, {"text": "REQUEST-ACTION", "start_pos": 105, "end_pos": 119, "type": "METRIC", "confidence": 0.8689067363739014}]}, {"text": "Multiclass SVMs are typically implemented as a set of SVMs, one per class, with the overall choice of class being determined by the SVM with the highest confidence (\"one-against-all\").", "labels": [], "entities": []}, {"text": "Multi-class SVMs are typically packaged as a single system, whose inner workings are ignored by the NLP researcher.", "labels": [], "entities": []}, {"text": "In this paper we show that, for our problem of DA classification, we can boost the performance of the rare classes (while maintaining the overall performance) by performing feature optimization separately for each individual classifier.", "labels": [], "entities": [{"text": "DA classification", "start_pos": 47, "end_pos": 64, "type": "TASK", "confidence": 0.985662966966629}]}, {"text": "But we also show that we can achieve an all-around error reduction by altering the method by which the multi-class classifier combines the individual SVMs.", "labels": [], "entities": []}, {"text": "This new method of combination is a simple cascade: we run the individual classifiers in ascending order of frequency of the classes in the training corpus; the first classifier to classify the data point positively determines the choice of the overall classifier.", "labels": [], "entities": []}, {"text": "If no classifier classifies the data point positively, we use the usual confidence-based method.", "labels": [], "entities": []}, {"text": "This new method obtains a 22.8% error reduction for the minority class, and around 10% error reduction for the other classes and for the overall classifier.", "labels": [], "entities": [{"text": "error reduction", "start_pos": 32, "end_pos": 47, "type": "METRIC", "confidence": 0.9751322865486145}, {"text": "error", "start_pos": 87, "end_pos": 92, "type": "METRIC", "confidence": 0.9594712257385254}]}, {"text": "This paper is structured as follows.", "labels": [], "entities": []}, {"text": "We start out by discussing related work (Section 2).", "labels": [], "entities": []}, {"text": "We then present our data in Section 3, and in Section 4 we present the experiments with our systems and the results.", "labels": [], "entities": []}, {"text": "We report the results of an extrinsic evaluation in Section 5, and conclude.", "labels": [], "entities": []}], "datasetContent": [{"text": "In all our experiments, we use linear kernel Support Vector Machines (SVM).", "labels": [], "entities": []}, {"text": "However, across the systems, there are differences in how we use them.", "labels": [], "entities": []}, {"text": "Our framework was built with the ClearTK toolkit () with its wrapper for SVMLight).", "labels": [], "entities": [{"text": "ClearTK toolkit", "start_pos": 33, "end_pos": 48, "type": "DATASET", "confidence": 0.9277558326721191}, {"text": "SVMLight", "start_pos": 73, "end_pos": 81, "type": "DATASET", "confidence": 0.9154854416847229}]}, {"text": "The ClearTK wrapper internally shifts the prediction threshold based on posterior probabilistic scores calculated using the algorithm of.", "labels": [], "entities": [{"text": "ClearTK wrapper", "start_pos": 4, "end_pos": 19, "type": "DATASET", "confidence": 0.8886906206607819}]}, {"text": "We report results from 5-fold cross validation performed on the entire corpus.", "labels": [], "entities": []}, {"text": "Baseline (BAS) System This system uses the ClearTK built-in one-versus-all multiclass SVM in prediction.", "labels": [], "entities": [{"text": "BAS", "start_pos": 10, "end_pos": 13, "type": "METRIC", "confidence": 0.8842901587486267}, {"text": "ClearTK", "start_pos": 43, "end_pos": 50, "type": "DATASET", "confidence": 0.8843943476676941}]}, {"text": "Internally, the multi-class SVM builds a set of binary classifiers, one for each dialog act.", "labels": [], "entities": []}, {"text": "For a given test instance, the classifier that obtains the highest probability score determines the overall prediction.", "labels": [], "entities": []}, {"text": "We performed feature optimization on the whole multiclass classifier (as described in Section 4.2), i.e., the same set of features was available to all component classifiers.", "labels": [], "entities": []}, {"text": "We optimized for system accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 24, "end_pos": 32, "type": "METRIC", "confidence": 0.9974877834320068}]}, {"text": "shows results using this system.", "labels": [], "entities": []}, {"text": "In this and all tables, we give the performance of the system on the four DAs, using precision, recall, and F-measure.", "labels": [], "entities": [{"text": "precision", "start_pos": 85, "end_pos": 94, "type": "METRIC", "confidence": 0.9997418522834778}, {"text": "recall", "start_pos": 96, "end_pos": 102, "type": "METRIC", "confidence": 0.9992331266403198}, {"text": "F-measure", "start_pos": 108, "end_pos": 117, "type": "METRIC", "confidence": 0.9984503984451294}]}, {"text": "The DAs are listed in ascending order of frequency in the corpus (least frequent DA first).", "labels": [], "entities": []}, {"text": "We also give an overall accuracy evaluation.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 24, "end_pos": 32, "type": "METRIC", "confidence": 0.9995513558387756}]}, {"text": "As we can see, detecting REQUEST-ACTION is much harder than detecting the other DAs.", "labels": [], "entities": [{"text": "detecting", "start_pos": 15, "end_pos": 24, "type": "TASK", "confidence": 0.9574300050735474}, {"text": "REQUEST-ACTION", "start_pos": 25, "end_pos": 39, "type": "METRIC", "confidence": 0.8568810820579529}]}, {"text": "Basic Divide and Conquer (DAC) System Like the BAS system, the DAC system also builds a binary classifier for each dialog act separately, and the: Results for basic DAC system (per-class feature optimization followed by maximum confidence based choice); \"ER\" refers to error reduction in percent over standard multiclass SVM Minority Preference (DAC MP ) System This system is exactly the same as the basic DAC system except for one crucial difference: overall classification is biased towards a specified minority class.", "labels": [], "entities": [{"text": "error reduction", "start_pos": 269, "end_pos": 284, "type": "METRIC", "confidence": 0.9377041757106781}]}, {"text": "If the minority class binary classifier predicts true, this system chooses the minority class as the predicted class.", "labels": [], "entities": []}, {"text": "In cases where the minority class classifier predicts false, it backs off to the basic DAC system after removing the minority class classifier from the confidence tally.", "labels": [], "entities": []}, {"text": "shows our results using REQUEST-ACTION as the minority class.", "labels": [], "entities": [{"text": "REQUEST-ACTION", "start_pos": 24, "end_pos": 38, "type": "METRIC", "confidence": 0.9910119771957397}]}, {"text": "In this section, we perform an extrinsic evaluation for the dialog act tagger presented in Section 4 by applying it to the task of identifying Overt Displays of Power (ODP) in emails, proposed by.", "labels": [], "entities": [{"text": "dialog act tagger", "start_pos": 60, "end_pos": 77, "type": "TASK", "confidence": 0.631003737449646}, {"text": "identifying Overt Displays of Power (ODP) in emails", "start_pos": 131, "end_pos": 182, "type": "TASK", "confidence": 0.6923052400350571}]}, {"text": "The task is to identify utterances where the linguistic form introduces additional constraints on its responses, beyond those introduced by the general dialog act.", "labels": [], "entities": []}, {"text": "The dialog act features were found to be useful and the best performing system obtained an F-measure of 65.8 using gold dialog act tags.", "labels": [], "entities": [{"text": "F-measure", "start_pos": 91, "end_pos": 100, "type": "METRIC", "confidence": 0.9995664954185486}]}, {"text": "For our extrinsic evaluation, we retrained the ODP tagger using dialog act tags predicted by our BAS and DAC CMP systems instead of gold dialog acts.", "labels": [], "entities": [{"text": "ODP tagger", "start_pos": 47, "end_pos": 57, "type": "TASK", "confidence": 0.5664952099323273}, {"text": "BAS", "start_pos": 97, "end_pos": 100, "type": "METRIC", "confidence": 0.9388430714607239}]}, {"text": "ODP tagger uses the same dataset as ours for training.", "labels": [], "entities": [{"text": "ODP tagger", "start_pos": 0, "end_pos": 10, "type": "TASK", "confidence": 0.7868057489395142}]}, {"text": "In the cross validation step, we made sure that the test folds for ODP were excluded from training the taggers to obtain DA tags.", "labels": [], "entities": [{"text": "cross validation", "start_pos": 7, "end_pos": 23, "type": "TASK", "confidence": 0.6937766969203949}]}, {"text": "At each ODP cross validation step, we trained a BAS or DAC CMP tagger using ODP's training folds for that step and used tags produced by that tagger for both training and testing the ODP tagger for that step.", "labels": [], "entities": [{"text": "ODP cross validation", "start_pos": 8, "end_pos": 28, "type": "TASK", "confidence": 0.7744717995325724}, {"text": "BAS", "start_pos": 48, "end_pos": 51, "type": "METRIC", "confidence": 0.988101601600647}]}, {"text": "Using BAS tagged DA, the F-measure of ODP system reduced by 13.2 points to 52.6 from using gold dialog acts (F=65.8).", "labels": [], "entities": [{"text": "BAS tagged DA", "start_pos": 6, "end_pos": 19, "type": "METRIC", "confidence": 0.8230893214543661}, {"text": "F-measure", "start_pos": 25, "end_pos": 34, "type": "METRIC", "confidence": 0.9980711340904236}, {"text": "F", "start_pos": 109, "end_pos": 110, "type": "METRIC", "confidence": 0.9915660619735718}]}, {"text": "Using DAC CMP , the Fmeasure improved over BAS by 1.6 points to 54.2.", "labels": [], "entities": [{"text": "DAC CMP", "start_pos": 6, "end_pos": 13, "type": "DATASET", "confidence": 0.6700722873210907}, {"text": "Fmeasure", "start_pos": 20, "end_pos": 28, "type": "METRIC", "confidence": 0.9830372929573059}, {"text": "BAS", "start_pos": 43, "end_pos": 46, "type": "METRIC", "confidence": 0.9749740958213806}]}, {"text": "This constitutes an error reduction of 12.1%, taking the system using gold DA tags as the reference.", "labels": [], "entities": [{"text": "error reduction", "start_pos": 20, "end_pos": 35, "type": "METRIC", "confidence": 0.9782008528709412}]}, {"text": "This improvement is noteworthy, given the fact that the overall error reduction obtained by DAC CMP over BAS in the DA tagging was around 10.6%.", "labels": [], "entities": [{"text": "error reduction", "start_pos": 64, "end_pos": 79, "type": "METRIC", "confidence": 0.9868687391281128}, {"text": "BAS", "start_pos": 105, "end_pos": 108, "type": "METRIC", "confidence": 0.9916278123855591}, {"text": "DA tagging", "start_pos": 116, "end_pos": 126, "type": "TASK", "confidence": 0.640274703502655}]}, {"text": "Also, the DAC CMP -based ODP system obtained an error reduction of about 26.6% over a system that does not use the DA features at all (F=50.0).", "labels": [], "entities": [{"text": "error reduction", "start_pos": 48, "end_pos": 63, "type": "METRIC", "confidence": 0.990871399641037}, {"text": "F", "start_pos": 135, "end_pos": 136, "type": "METRIC", "confidence": 0.9956088662147522}]}], "tableCaptions": [{"text": " Table 2: Results for baseline (BAS) system (standard  multiclass SVM)", "labels": [], "entities": []}, {"text": " Table 3: Results for basic DAC system (per-class feature  optimization followed by maximum confidence based  choice); \"ER\" refers to error reduction in percent over  standard multiclass SVM", "labels": [], "entities": [{"text": "ER", "start_pos": 120, "end_pos": 122, "type": "METRIC", "confidence": 0.9415332078933716}, {"text": "error reduction", "start_pos": 134, "end_pos": 149, "type": "METRIC", "confidence": 0.9685563445091248}]}, {"text": " Table 4: Results for minority-preference DAC system - DAC MP (first consult REQUEST-ACTION tagger, then de- fault to choice by maximum confidence); \"ER\" refers to  error reduction in percent over standard multiclass SVM", "labels": [], "entities": [{"text": "REQUEST-ACTION", "start_pos": 77, "end_pos": 91, "type": "METRIC", "confidence": 0.9941887855529785}, {"text": "ER", "start_pos": 150, "end_pos": 152, "type": "METRIC", "confidence": 0.9389505982398987}, {"text": "error reduction", "start_pos": 165, "end_pos": 180, "type": "METRIC", "confidence": 0.9716991186141968}]}, {"text": " Table 5: Results for cascading minority-preference DAC  system -DAC CMP (consult classifiers in reverse order  of frequency of class); \"ER\" refers to error reduction in  percent over standard multiclass SVM", "labels": [], "entities": [{"text": "ER", "start_pos": 137, "end_pos": 139, "type": "METRIC", "confidence": 0.9503273367881775}, {"text": "error reduction", "start_pos": 151, "end_pos": 166, "type": "METRIC", "confidence": 0.9638940393924713}]}, {"text": " Table 7: Results for ODP system using various sources  of DA tags", "labels": [], "entities": [{"text": "ODP", "start_pos": 22, "end_pos": 25, "type": "TASK", "confidence": 0.8817033767700195}]}]}