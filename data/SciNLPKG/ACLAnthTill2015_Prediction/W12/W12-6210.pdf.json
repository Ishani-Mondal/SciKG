{"title": [{"text": "Implementation of replace rules using preference operator", "labels": [], "entities": [{"text": "Implementation", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.9693114161491394}]}], "abstractContent": [{"text": "We explain the implementation of replace rules with the .r-glc.", "labels": [], "entities": []}, {"text": "Our modular approach combines various preference constraints to form different replace rules.", "labels": [], "entities": []}, {"text": "In addition to describing the method, we present illustrative examples.", "labels": [], "entities": []}], "introductionContent": [{"text": "The idea of HFST -Helsinki Finite-State Technology ( is to provide opensource replicas of well-known tools for building morphologies, including XFST ().", "labels": [], "entities": []}, {"text": "HFST's lack of replace rules such as those supported by XFST, prompted us to implement them using the present method, which replicates XFST's behavior (with minor differences which will be detailed in later work), but will also allow easy expansion with new functionalities.", "labels": [], "entities": [{"text": "HFST", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9184688329696655}]}, {"text": "The semantics of replacement rules mixes contextual conditions with replacement strategies that are specified by replace rule operators.", "labels": [], "entities": []}, {"text": "This paper describes the implementation of replace rules using a preference operator, .r-glc., that disambiguates alternative replacement strategies according to a preference relation.", "labels": [], "entities": []}, {"text": "The use of preference relations) is similar to the worsener relations used by.", "labels": [], "entities": []}, {"text": "The current approach was first described in, and is closely related to the matching-based finite-state approaches to optimality in OT phonology.", "labels": [], "entities": [{"text": "OT phonology", "start_pos": 131, "end_pos": 143, "type": "TASK", "confidence": 0.868598461151123}]}, {"text": "The preference operator, .r-glc., is the reversal of generalized lenient composition (glc), a preference operator construct proposed by.", "labels": [], "entities": []}, {"text": "The implementation is developed using the HFST library, and is now apart of the same.", "labels": [], "entities": [{"text": "HFST library", "start_pos": 42, "end_pos": 54, "type": "DATASET", "confidence": 0.968785285949707}]}, {"text": "The purpose of this paper is to explain a general method of compiling replace rules with .r-glc.", "labels": [], "entities": []}, {"text": "operator and to show how preference constraints described in Yli-Jyr\u00e4 (2008b) can be combined to form different replace rules.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}