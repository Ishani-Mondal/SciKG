{"title": [{"text": "Towards Distributed MCMC Inference in Probabilistic Knowledge Bases", "labels": [], "entities": [{"text": "MCMC Inference", "start_pos": 20, "end_pos": 34, "type": "TASK", "confidence": 0.6618999987840652}]}], "abstractContent": [{"text": "Probabilistic knowledge bases are commonly used in areas such as large-scale information extraction, data integration, and knowledge capture, to name but a few.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 77, "end_pos": 99, "type": "TASK", "confidence": 0.7514002621173859}, {"text": "data integration", "start_pos": 101, "end_pos": 117, "type": "TASK", "confidence": 0.8447611629962921}, {"text": "knowledge capture", "start_pos": 123, "end_pos": 140, "type": "TASK", "confidence": 0.7806538939476013}]}, {"text": "Inference in probabilistic knowledge bases is a computationally challenging problem.", "labels": [], "entities": [{"text": "Inference in probabilistic knowledge bases", "start_pos": 0, "end_pos": 42, "type": "TASK", "confidence": 0.8159596800804139}]}, {"text": "With this contribution , we present our vision of a distributed inference algorithm based on conflict graph construction and hypergraph sampling.", "labels": [], "entities": [{"text": "conflict graph construction", "start_pos": 93, "end_pos": 120, "type": "TASK", "confidence": 0.6681905885537466}]}, {"text": "Early empirical results show that the approach efficiently and accurately computes a-posteriori probabilities of a knowledge base derived from a well-known information extraction system.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 156, "end_pos": 178, "type": "TASK", "confidence": 0.7470937371253967}]}], "introductionContent": [{"text": "In recent years, numerous applications of probabilistic knowledge bases have emerged.", "labels": [], "entities": []}, {"text": "For instance, large-scale information extraction systems aim at building knowledge bases by applying extraction algorithms to very large text corpora.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 26, "end_pos": 48, "type": "TASK", "confidence": 0.7358003109693527}]}, {"text": "Examples of such projects include KNOWITNOW (), TEXTRUN-NER (,, and NELL ().", "labels": [], "entities": [{"text": "KNOWITNOW", "start_pos": 34, "end_pos": 43, "type": "METRIC", "confidence": 0.44291287660598755}, {"text": "TEXTRUN-NER", "start_pos": 48, "end_pos": 59, "type": "METRIC", "confidence": 0.8432487845420837}, {"text": "NELL", "start_pos": 68, "end_pos": 72, "type": "METRIC", "confidence": 0.6424578428268433}]}, {"text": "These systems face challenges of scalability both in terms of the degree of uncertainty and the sheer size of the resulting knowledge bases.", "labels": [], "entities": []}, {"text": "Most of these projects combine pattern learning and matching approaches with some form of logical reasoning, with the majority of the systems employing weighted or unweighted first-order Horn clauses).", "labels": [], "entities": [{"text": "pattern learning and matching", "start_pos": 31, "end_pos": 60, "type": "TASK", "confidence": 0.7199755311012268}]}, {"text": "More recently, random walk algorithms were applied to NELL's knowledge base to infer novel facts) and both pattern matching and reasoning algorithms were distributed on the HADOOP platform to enrich).", "labels": [], "entities": [{"text": "NELL's knowledge base", "start_pos": 54, "end_pos": 75, "type": "DATASET", "confidence": 0.7425879761576653}, {"text": "pattern matching", "start_pos": 107, "end_pos": 123, "type": "TASK", "confidence": 0.6800566166639328}, {"text": "HADOOP platform", "start_pos": 173, "end_pos": 188, "type": "DATASET", "confidence": 0.8937313854694366}]}, {"text": "Similar to the distributed processes building indices for web search engines, there are distributed algorithms continuously building indices for structured knowledge.", "labels": [], "entities": []}, {"text": "A combination of learned and manually specified commonsense rules is an important factor for the quality of the indexed knowledge.", "labels": [], "entities": []}, {"text": "For the inference component of a large-scale information extraction system we propose a sampling approach consisting of two continuously running processes.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 45, "end_pos": 67, "type": "TASK", "confidence": 0.7264367789030075}]}, {"text": "The first process aggregates minimal conflict sets where each such set contradicts one or more of the common-sense rules.", "labels": [], "entities": []}, {"text": "These conflicts are generated with relational queries and pattern-based approaches.", "labels": [], "entities": []}, {"text": "The second component of the system is a sampling algorithm that operates on hypergraphs built from the minimal conflict set.", "labels": [], "entities": []}, {"text": "The hypergraph is first decomposed into smaller disconnected sub-hypergraphs to allow distributed processing.", "labels": [], "entities": []}, {"text": "Theoretical results on sampling independent sets from hypergraphs are leveraged to construct an ergodic Markov chain for probabilistic knowledge bases.", "labels": [], "entities": []}, {"text": "The Markov chains are continuously run on the various connected components of the conflict hypergraph to compute a-posteriori 1 probabilities of individual logical statements which are in turn stored in a large relational index.", "labels": [], "entities": []}, {"text": "While this is still work in progress, we have developed the theory, implemented the respective algorithms, and conducted first experiments.", "labels": [], "entities": []}], "datasetContent": [{"text": "To assess the practicality of the approach, we conducted preliminary experiments focusing on the data and common-sense rules of the PROSPERA system due to the availability of recent results 1 (Nakashole et al., 2011).", "labels": [], "entities": []}, {"text": "Each logical rule of the PROS-PERA system was translated to a relational database query returning the minimal conflict sets violating said rule.", "labels": [], "entities": []}, {"text": "For instance, for the common-sense PROSPERA rule \"A student can have only one alma mater that she/he graduated from (with a doctoral degree),\" the following relational query is executed: graduatedFrom(x, y) \u2227 graduatedFrom(x, y ) \u2227 \u00ac(y = y ).", "labels": [], "entities": []}, {"text": "For the rule \"The advisor of a student must be older than her/his student\" the query is hasAdvisor(x, y)\u2227bornOn(x, y )\u2227bornOn(y, y )\u2227 (y > y ).", "labels": [], "entities": [{"text": "hasAdvisor", "start_pos": 88, "end_pos": 98, "type": "METRIC", "confidence": 0.9340229630470276}]}, {"text": "Analogously, these queries can be formulated for the type constraints used by the PROSPERA system.", "labels": [], "entities": []}, {"text": "assigned an a-priori probability of 0.75.", "labels": [], "entities": []}, {"text": "To build a gold standard for the evaluation, we selected 50 academics randomly for which the actual PhD advisor or the alma mater was present in the data.", "labels": [], "entities": []}, {"text": "To compute the minimal conflict sets, we processed the join queries using a relational database system.", "labels": [], "entities": []}, {"text": "After the construction of the conflict hypergraphs we ran the Markov chains for 10 5 iterations on the individual connected components.", "labels": [], "entities": []}, {"text": "In order to evaluate the marginal a-posteriori probabilities we computed the mean reciprocal rank measure (MRR) of the ranking induced by the computed marginal probabilities and compared it to the expected value of the MRR when no sampling is performed.", "labels": [], "entities": [{"text": "mean reciprocal rank measure (MRR)", "start_pos": 77, "end_pos": 111, "type": "METRIC", "confidence": 0.8217559541974749}]}, {"text": "The MRR measure (for example, see) is defined as the inverse rank of the highest ranked correct result in a set of results.", "labels": [], "entities": [{"text": "MRR measure", "start_pos": 4, "end_pos": 15, "type": "METRIC", "confidence": 0.8964613676071167}, {"text": "inverse rank", "start_pos": 53, "end_pos": 65, "type": "METRIC", "confidence": 0.9454602599143982}]}, {"text": "More formally, fora set of queries Q we have MRR = 1 |Q| q\u2208Q 1 rank of first correct answer .: Empirical results for the probabilistic query graduatedFrom(Individual, x) (top) and hasAcademicAdvisor.", "labels": [], "entities": [{"text": "MRR", "start_pos": 45, "end_pos": 48, "type": "METRIC", "confidence": 0.9966153502464294}]}, {"text": "The values are averaged over 100 repetitions of the 50 probabilistic queries.", "labels": [], "entities": []}, {"text": "t s : seconds to compute samples for one connected component; MRR: mean reciprocal rank measure values; p@1: precision @ 1.", "labels": [], "entities": [{"text": "MRR", "start_pos": 62, "end_pos": 65, "type": "METRIC", "confidence": 0.9944656491279602}, {"text": "mean reciprocal rank measure", "start_pos": 67, "end_pos": 95, "type": "METRIC", "confidence": 0.7656684666872025}, {"text": "precision", "start_pos": 109, "end_pos": 118, "type": "METRIC", "confidence": 0.9988279938697815}]}], "tableCaptions": []}