{"title": [{"text": "A Functional Approach to Generation with TAG 1", "labels": [], "entities": []}], "abstractContent": [{"text": "It has been hypothesized that Tree Adjoining Grammar (TAG) is particularly well suited for sentence generation.", "labels": [], "entities": [{"text": "Tree Adjoining Grammar (TAG)", "start_pos": 30, "end_pos": 58, "type": "TASK", "confidence": 0.7861230224370956}, {"text": "sentence generation", "start_pos": 91, "end_pos": 110, "type": "TASK", "confidence": 0.7540422677993774}]}, {"text": "It is unclear, however, how a sentence generation system based on TAG should choose among the syntactic possibilities made available in the grammar.", "labels": [], "entities": [{"text": "sentence generation", "start_pos": 30, "end_pos": 49, "type": "TASK", "confidence": 0.7247648388147354}]}, {"text": "In this paper we consider the question of what needs to be done to generate with TAGs and explain a generation system that provides the necessary features.", "labels": [], "entities": []}, {"text": "This approach is compared with other TAG-based generation systems.", "labels": [], "entities": [{"text": "TAG-based generation", "start_pos": 37, "end_pos": 57, "type": "TASK", "confidence": 0.9006456732749939}]}, {"text": "Particular attention is given to Mumble-86 which, like our system, makes syntactic choice on sophisticated functional grounds.", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 33, "end_pos": 42, "type": "DATASET", "confidence": 0.9474540948867798}]}], "introductionContent": [{"text": "Joshi (1987) described the relevance of Tree Adjoining Grammar (TAG) to Natural Language Generation.", "labels": [], "entities": [{"text": "Tree Adjoining Grammar (TAG)", "start_pos": 40, "end_pos": 68, "type": "TASK", "confidence": 0.7514968315760294}, {"text": "Natural Language Generation", "start_pos": 72, "end_pos": 99, "type": "TASK", "confidence": 0.6554657518863678}]}, {"text": "In particular, he pointed out how the unique factoring of recursion and dependencies provided by TAG made it particularly appropriate to derive sentence structures from an input provided by a text planning component.", "labels": [], "entities": []}, {"text": "Of particular importance is the fact that (all) syntactic dependencies and function argument structure are localizest in TAG trees.", "labels": [], "entities": []}, {"text": "Shieber and Schabes (1991) discuss using Synchronous TAG for generation.", "labels": [], "entities": []}, {"text": "Synchronous TAG provides a formal foundation to make explicit the relationship between elementary syntactic structures and their corresponding semantic counterparts, both expressed as elementary TAG trees.", "labels": [], "entities": [{"text": "Synchronous TAG", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.5344151258468628}]}, {"text": "This relationship is made explicit by pairing the elementary trees in the syntactic and logical form languages, and associating the corresponding nodes.", "labels": [], "entities": []}, {"text": "Shieber and Schabes (1990) describe a generation algorithm which \"parses\" an input logical form string recording the adjoining and substitution operations necessary to build the string from its elementary components.", "labels": [], "entities": []}, {"text": "The corresponding syntactic structure is then generated by doing 1 This work is supported ill part by Grant #H133E80015 from the National hlstitute on Disability and Rehabilitation Research.", "labels": [], "entities": [{"text": "National hlstitute", "start_pos": 129, "end_pos": 147, "type": "DATASET", "confidence": 0.8616132140159607}, {"text": "Disability and Rehabilitation Research", "start_pos": 151, "end_pos": 189, "type": "TASK", "confidence": 0.6829137802124023}]}, {"text": "Support was also provided by the Nemours Fotmdation.", "labels": [], "entities": [{"text": "Nemours Fotmdation", "start_pos": 33, "end_pos": 51, "type": "DATASET", "confidence": 0.8558318614959717}]}, {"text": "We would like to thank John Hughes for Iris many conunents and discussions concerning this work.", "labels": [], "entities": []}, {"text": "set of operations (in reverse. ) on the corresponding elementary structures m the grammar describing the natural language.", "labels": [], "entities": []}, {"text": "Note that the generation methodology proposed for synchronous TAG (and the hypothetical generator alluded to in) takes as input the logical form semantic representation and produces a syntactic representation of a natural language sentence which captures that logical form.", "labels": [], "entities": []}, {"text": "While the correspondence between logical form and the natural language syntactic form is certainly an important and necessary component of any sentence generation system, it is unclear how finer distinctions can be made in this framework.", "labels": [], "entities": []}, {"text": "That is, synchronous TAG does not address the question of which syntactic rendition of a particular logical form is most appropriate in a given circumstance.", "labels": [], "entities": [{"text": "TAG", "start_pos": 21, "end_pos": 24, "type": "TASK", "confidence": 0.7517205476760864}]}, {"text": "This aspect is particularly crucial from the point of view of generation.", "labels": [], "entities": []}, {"text": "A full-blown generation system based on TAG must choose between various renditions of a given logical form on well-motivated grounds.", "labels": [], "entities": []}, {"text": "Mumble-86) is a sentence generator based on TAG that is able to take more than just the logical form representation into account.", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.8955003023147583}]}, {"text": "Mumble-86 is one of the foremost sentence generation systems and it (or its predecessors) has been used as the sentence generation components of a number of natural language generation projects (e.g.,).", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.9343779683113098}, {"text": "sentence generation", "start_pos": 33, "end_pos": 52, "type": "TASK", "confidence": 0.7143008559942245}, {"text": "sentence generation", "start_pos": 111, "end_pos": 130, "type": "TASK", "confidence": 0.7112831473350525}]}, {"text": "After briefly describing the methodology in Mumble-86, we will point out some problematic aspects of its design.", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 44, "end_pos": 53, "type": "DATASET", "confidence": 0.9801341891288757}]}, {"text": "We will then describe our architecture which is based on interfacing TAG with a rich functional theory provided by functional systemic grammar.", "labels": [], "entities": []}, {"text": "2 We pay particular attention to those aspects which distinguish our generator from Mumble-86.", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 84, "end_pos": 93, "type": "DATASET", "confidence": 0.9916759729385376}]}], "datasetContent": [], "tableCaptions": []}