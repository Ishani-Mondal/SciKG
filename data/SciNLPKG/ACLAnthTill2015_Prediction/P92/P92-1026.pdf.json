{"title": [{"text": "HANDLING LINEAR PRECEDENCE CONSTRAINTS BY UNIFICATION", "labels": [], "entities": [{"text": "HANDLING LINEAR PRECEDENCE CONSTRAINTS BY UNIFICATION", "start_pos": 0, "end_pos": 53, "type": "METRIC", "confidence": 0.621002068122228}]}], "abstractContent": [{"text": "Linear precedence (LP) rules are widely used for stating word order principles.", "labels": [], "entities": [{"text": "Linear precedence (LP)", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.7960901260375977}]}, {"text": "They have been adopted as constraints by HPSG but no encoding in the formalism has been provided.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 41, "end_pos": 45, "type": "DATASET", "confidence": 0.9526227116584778}]}, {"text": "Since they only order siblings, they are not quite adequate, at least not for German.", "labels": [], "entities": []}, {"text": "We propose a notion of LP constraints that applies to linguistically motivated branching domains such as head domains.", "labels": [], "entities": []}, {"text": "We show a type-based encoding in an HPSG-style formalism that supports processing.", "labels": [], "entities": []}, {"text": "The encoding can be achieved by a compilation step.", "labels": [], "entities": []}, {"text": "INTRODUCTION Most contemporary grammar models employed in computational linguistics separate statements about dominance from those that determine linear precedence.", "labels": [], "entities": []}, {"text": "The approaches for encoding linear precedence (LP) statements differ along several dimensions.", "labels": [], "entities": [{"text": "encoding linear precedence (LP) statements", "start_pos": 19, "end_pos": 61, "type": "TASK", "confidence": 0.7919620871543884}]}], "introductionContent": [{"text": "Most contemporary grammar models employed in computational linguistics separate statements about dominance from those that determine linear precedence.", "labels": [], "entities": []}, {"text": "The approaches for encoding linear precedence (LP) statements differ along several dimensions.", "labels": [], "entities": [{"text": "encoding linear precedence (LP) statements", "start_pos": 19, "end_pos": 61, "type": "TASK", "confidence": 0.7919620871543884}]}, {"text": "Depending on the underlying grammatical theory, different criteria are employed in formulating ordering statements.", "labels": [], "entities": [{"text": "formulating ordering statements", "start_pos": 83, "end_pos": 114, "type": "TASK", "confidence": 0.8508680860201517}]}, {"text": "Ordering constraints maybe expressed by referring to the category, grammatical function, discourse r61e, and many other syntactic, semantic, morphological or phonological features.", "labels": [], "entities": []}, {"text": "Depending on the grammar formalism, different languages are used for stating the constraints on permissible linearizations.", "labels": [], "entities": []}, {"text": "LP rules, first proposed by for GPSG, are used, in different guises, by several contemporary grammar formalisms.", "labels": [], "entities": []}, {"text": "In Functional Unification Grammar and implemented versions of Lexical Functional Grammar, pattern languages with the power of regular expressions have been utilized.", "labels": [], "entities": [{"text": "Functional Unification Grammar", "start_pos": 3, "end_pos": 33, "type": "TASK", "confidence": 0.8057107925415039}, {"text": "Lexical Functional Grammar", "start_pos": 62, "end_pos": 88, "type": "TASK", "confidence": 0.6965802907943726}]}, {"text": "Depending on the grammar model, LP statements apply within different ordering domains.", "labels": [], "entities": []}, {"text": "In most frameworks, such as GPSG and HPSG, the ordering domains are local trees.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 37, "end_pos": 41, "type": "DATASET", "confidence": 0.8560206890106201}]}, {"text": "Initial trees constitute the ordering domain in ID/LP TAGS.", "labels": [], "entities": [{"text": "ID/LP TAGS", "start_pos": 48, "end_pos": 58, "type": "DATASET", "confidence": 0.7896304726600647}]}, {"text": "In current LFG (, functional precedence rules apply to functional domains.", "labels": [], "entities": []}, {"text": "Reape Research for this paper was mainly carried out in the project LILOG supported by IBM Germany.", "labels": [], "entities": [{"text": "Reape", "start_pos": 0, "end_pos": 5, "type": "METRIC", "confidence": 0.7463318705558777}, {"text": "LILOG", "start_pos": 68, "end_pos": 73, "type": "METRIC", "confidence": 0.8821684122085571}]}, {"text": "Some of the research was performed in the project DISCO which is funded by the German Federal Ministry for Research and Technology under Grant-No.: ITW 9002.", "labels": [], "entities": []}, {"text": "We wish to thank our colleagues in SaarbriJcken, three anonymous referees and especially Mark Hepple for their valuable comments and suggestions.", "labels": [], "entities": [{"text": "SaarbriJcken", "start_pos": 35, "end_pos": 47, "type": "DATASET", "confidence": 0.8334805369377136}]}, {"text": "(1989) constructs word order domains by means of a special union operation on embedded tree domains.", "labels": [], "entities": []}, {"text": "It remains an open question which choices along these dimensions will turnout to be most adequate for the description of word order in natural language.", "labels": [], "entities": []}, {"text": "In this paper we do not attempt to resolve the linguistic issue of the most adequate universal treatment of word order.", "labels": [], "entities": []}, {"text": "However we will present a method for integrating word order constraints in a typed feature unification formalism without adding new formal devices.", "labels": [], "entities": []}, {"text": "Although some proposals for the interaction between feature unification and LP constraints have been published (e.g. Seiffert 1991), no encoding has yet been shown that integrates LP constraints in the linguistic type system of a typed feature unification formalism.", "labels": [], "entities": [{"text": "feature unification", "start_pos": 52, "end_pos": 71, "type": "TASK", "confidence": 0.7434608042240143}]}, {"text": "Linguistic processing with a head-driven phrase structure grammar (HPSG) containing LP constraints has not yet been described in the literature.", "labels": [], "entities": [{"text": "Linguistic processing", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.8359737694263458}]}, {"text": "Since no implemented NL system has been demonstrated so far that handles partially free word order of German and many other languages in a satisfactory way, we have made an attempt to utilize the formal apparatus of HPSG fora new approach to processing with LP constraints.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 216, "end_pos": 220, "type": "DATASET", "confidence": 0.9322755336761475}]}, {"text": "However, our method is not bound to the formalism of HPSG.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 53, "end_pos": 57, "type": "DATASET", "confidence": 0.9613196849822998}]}, {"text": "In this paper we will demonstrate how LP constraints can be incorporated into the linguistic type system of HPSG through the use of parametrized types.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 108, "end_pos": 112, "type": "DATASET", "confidence": 0.9207525253295898}]}, {"text": "Neither additional operations nor any special provisions for linear precedence in the processing algorithm are required.", "labels": [], "entities": []}, {"text": "LP constraints are applied through regular unification whenever the head combines with a complement or adjunct.", "labels": [], "entities": []}, {"text": "Although we use certain LP-relevant features in our examples, our aproach does not hinge on the selection of specific linguistic criteria for constraining linear order.", "labels": [], "entities": []}, {"text": "Since there is no conclusive evidence to the contrary, we assume the simplest constraint language for formulating LP statements, i.e., binary LP constraints.", "labels": [], "entities": []}, {"text": "For computational purposes such constraints are compiled into the type definitions for grammatical categories.", "labels": [], "entities": []}, {"text": "With respect to the ordering domain, our LP constraints differ from the LP constraints commonly assumed in HPSG in that they apply to nonsibling constituents in head domains.", "labels": [], "entities": []}, {"text": "While LP constraints control the order of nodes that are not siblings, information is accumulated in trees in such away that it is always possible to detect a violation of an LP constraint locally by checking sibling nodes.", "labels": [], "entities": []}, {"text": "This modification is necessary for the proper treatment of German word order.", "labels": [], "entities": [{"text": "treatment of German word order", "start_pos": 46, "end_pos": 76, "type": "TASK", "confidence": 0.6375916600227356}]}, {"text": "It is also needed by all grammar models that are on the one hand confined to binary branching structures such as nearly all versions of categorial grammar but that would, on the other hand, benefit from a notion of LP constraints.", "labels": [], "entities": []}, {"text": "Our approach has been tested with small sets of LP constraints.", "labels": [], "entities": []}, {"text": "The grammar was written and run in STUF, the typed unification formalism used in the project LILOG.", "labels": [], "entities": [{"text": "STUF", "start_pos": 35, "end_pos": 39, "type": "DATASET", "confidence": 0.8734121322631836}]}], "datasetContent": [], "tableCaptions": []}