{"title": [], "abstractContent": [{"text": "Current complex-feature based grammars use a single procedure-unification-for a multitude of purposes , among them, enforcing formal agreement between purely syntactic features.", "labels": [], "entities": []}, {"text": "This paper presents evidence from several natural languages that unification-variable-matching combined with variable substitution-is the wrong mechanism for effecting agreement.", "labels": [], "entities": []}, {"text": "The view of grammar developed here is one in which unification is used for semantic interpretation , while purely formal agreement involves only a check for non-distinctness-i.e, variable-matching without variable substitution.", "labels": [], "entities": [{"text": "semantic interpretation", "start_pos": 75, "end_pos": 98, "type": "TASK", "confidence": 0.7324781119823456}]}], "introductionContent": [{"text": "In recent years, a great deal of attention has been devoted to complex-feature based grammar formalisms--i.e. grammar formalisms in which syntactic elements are not atomic symbols, but rather complex elements, such as value-attribute or term structu~s; see for an overview.", "labels": [], "entities": []}, {"text": "Typically such formalisms use a single mechanism--variable substitution--for all purposes, and the most widely used variable substitution mechanism is unification) Such complex-feature based grammars, then, axe viewed as systems in which partial feature structures are built up, by the process of unification, into successively more specified structures.", "labels": [], "entities": []}, {"text": "While it is formally elegant to use a single mechanism fora number of purposes, this theoretical elegance is realized in practice only if the mechanism does not require the other modules of the system to be complicated to achieve this \"elegance\".", "labels": [], "entities": []}, {"text": "Currently, unification is used for at least four puq3oses: Sentences (la) through (ld) are taken to indicate that \"sheep\" is underspecified with regard to number;, it can be either singular or plural.", "labels": [], "entities": [{"text": "puq3oses", "start_pos": 49, "end_pos": 57, "type": "DATASET", "confidence": 0.9107051491737366}, {"text": "Sentences", "start_pos": 59, "end_pos": 68, "type": "METRIC", "confidence": 0.9824537634849548}]}, {"text": "(le), on the other hand, shows that \"sheep\" cannot be both singular and plural at the same time.", "labels": [], "entities": []}, {"text": "In the relative clause, \"is\" is marked as singular, and \"sheep\", interpreted as its subject via the relative connector \"that\", must also be singular.", "labels": [], "entities": []}, {"text": "On the other hand, \"are\" in the matrix clause is marked as plural, and \"sheep\", its subject, must also be plural.", "labels": [], "entities": []}, {"text": "Under a unification analysis, these facts are explained in the following way: \"sheep\" is syntactically unspecified for the feature number.", "labels": [], "entities": []}, {"text": "The process of subject-verb agreement is effected by unification.", "labels": [], "entities": []}, {"text": "Therefore, when \"sheep\" appears as the subject of a finite verb, unification will fix its number as singular or plural (unless the finite verb itself is ambiguous).", "labels": [], "entities": [{"text": "unification", "start_pos": 65, "end_pos": 76, "type": "TASK", "confidence": 0.9623315930366516}]}, {"text": "(le) is ungrammatical, then, since the values singular and plural cannot unify and the fact that \"sheep\" must agree with both \"is\" and \"are\" in number would require their unification.", "labels": [], "entities": []}, {"text": "This illegal feature configuration is shown in (2).", "labels": [], "entities": []}, {"text": "(\"is\") (\"sheep\") (\"are\")", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}