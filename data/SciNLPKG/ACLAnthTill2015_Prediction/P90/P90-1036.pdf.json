{"title": [{"text": "AN EFFICIENT PARSING ALGORITHM FOR TREE ADJOINING GRAMMARS", "labels": [], "entities": [{"text": "AN EFFICIENT PARSING ALGORITHM FOR TREE ADJOINING GRAMMARS", "start_pos": 0, "end_pos": 58, "type": "METRIC", "confidence": 0.6698316261172295}]}], "abstractContent": [{"text": "In the literature, Tree Adjoining Grammars (TAGs) are propagated to be adequate for natural language description-analysis as well as generation.", "labels": [], "entities": []}, {"text": "In this paper we concentrate on the direction of analysis.", "labels": [], "entities": []}, {"text": "Especially important for an implementation of that task is how efficiently this can be done, i.e., how readily the word problem can be solved for TAGs.", "labels": [], "entities": []}, {"text": "Up to now, a parser with O(n 6) steps in the worst case was known where n is the length of the input string.", "labels": [], "entities": [{"text": "O", "start_pos": 25, "end_pos": 26, "type": "METRIC", "confidence": 0.9902353882789612}]}, {"text": "In this paper, the result is improved to O(n 4 log n) as anew lowest upper bound.", "labels": [], "entities": [{"text": "O", "start_pos": 41, "end_pos": 42, "type": "METRIC", "confidence": 0.9982637763023376}]}, {"text": "The paper demonstrates how local interpretion of TAG trees allows this reduction.", "labels": [], "entities": []}], "introductionContent": [{"text": "Compared with the formalism of context-free grammars ( CFC, s), the rules of Tree Adjoining Grammars (TAGs) can be imagined intuitively as parts of context-free derivation trees.", "labels": [], "entities": []}, {"text": "Without paying attention to the fact that there are some more restrictions for these rules, the recursion operation (adjoining) is represented as replacing anode in a TAG rule by another TAG rule so that larger derivation trees are built.", "labels": [], "entities": []}, {"text": "This close relation between CFGs and TAGs can imply that they are equivalent.", "labels": [], "entities": []}, {"text": "But TAGs are more powerful than context-free grammars.", "labels": [], "entities": []}, {"text": "This additional power --characterized as mildly context-sensitive --leads to the question of whether there are efficient algorithms to solve the word problem for TAGs.", "labels": [], "entities": []}, {"text": "Up to now, the algorithm of Vijay-Shanker and Joshi with a time complexity of O(n 6) for the worst case was known, in addition to several unsuccessful attempts to improve this result.", "labels": [], "entities": [{"text": "O", "start_pos": 78, "end_pos": 79, "type": "METRIC", "confidence": 0.9533148407936096}]}, {"text": "This paper's main emphasis is on the improvement of this result.", "labels": [], "entities": []}, {"text": "An efficient parser for Tree Adjoining Grammars with a worst case time complexity of O(n 4 log n) is discussed.", "labels": [], "entities": [{"text": "Tree Adjoining Grammars", "start_pos": 24, "end_pos": 47, "type": "TASK", "confidence": 0.8034860293070475}, {"text": "O", "start_pos": 85, "end_pos": 86, "type": "METRIC", "confidence": 0.8831185698509216}]}, {"text": "All known parsing algorithms for TAGs use the close structural similarity between TAGs and CFGs, which can be expressed by writing all inner nodes and all their sons in a TAG as the rule set of a context-free grammar (the context-free kernelof a TAG).", "labels": [], "entities": []}, {"text": "Additionally, the constraint has to be tested that all further context-free rules corresponding to the same TAG tree must appear in the derivation tree, iff one rule of that TAG tree is in use.", "labels": [], "entities": []}, {"text": "Therefore, it is clear that a context-free parser can be the basis for extensions representing the test of the additional constraint.", "labels": [], "entities": []}, {"text": "On the basis of the two fundamental contextfree analysers, the different approaches for TAGs can be divided into two classes.", "labels": [], "entities": [{"text": "TAGs", "start_pos": 88, "end_pos": 92, "type": "TASK", "confidence": 0.9609258770942688}]}, {"text": "One class extends an Earley parser and the second class extends a Cocke-Kasami-Younger ( CKY) parser for CFGs.", "labels": [], "entities": []}, {"text": "Here, we focus on the approaches with a CKY basis, because the relation between the resulting triangle matrix and the encoded derivation trees is closer than for the item lists of an Earley parser.", "labels": [], "entities": []}, {"text": "In particular, the paper is divided into the following sections.", "labels": [], "entities": []}, {"text": "First, a short overview of the TAG formalism is given in order to have a common terminological basis with the reader.", "labels": [], "entities": [{"text": "TAG formalism", "start_pos": 31, "end_pos": 44, "type": "TASK", "confidence": 0.8597085177898407}]}, {"text": "In the second section, the approach of VijayShanker and Joshi is presented as the natural way of extending the CKY algorithm for context-free grammars to TAGs.", "labels": [], "entities": []}, {"text": "As a precondition for that analysis, it has to be proven that each TAG can be transformed into two form, a normal form restricting the outdegree of anode to be less three.", "labels": [], "entities": []}, {"text": "In section 4, the main section of this paper, a normal-form is defined as a precondition fora new and more efficient parsing algorithm.", "labels": [], "entities": []}, {"text": "This form is more restricted than the two form, and is closely related to the Chomsky normal form for CFGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 102, "end_pos": 106, "type": "DATASET", "confidence": 0.8954041600227356}]}, {"text": "The main emphasis lies on the description of the new parsing approach.", "labels": [], "entities": [{"text": "parsing", "start_pos": 53, "end_pos": 60, "type": "TASK", "confidence": 0.9621263146400452}]}, {"text": "The general idea is to separate the context-free parsing and the additional testing so that the test can run locally.", "labels": [], "entities": []}, {"text": "On the triangle matrix which is the result of the CKY analysis with the context-free kernel, all complete TAG trees encoded in the triangle matrix are computed recursively.", "labels": [], "entities": []}, {"text": "It is intuitively motivated that this approach needs fewer steps than the strategy of Vijay-Shanker and Joshi, which stores all intermediate states of TAG derivations, because the locally represented elementary trees can be interpreted as TAG derivations where equal parts are computed exactly once instead of individual representations in each derivation.", "labels": [], "entities": []}, {"text": "In the summary, our experience with an implementation in CommonLISP on a Hewlett Packard machine is mentioned to illustrate the response time in an average case.", "labels": [], "entities": []}, {"text": "Finally, different approaches for TAG parsing are characterized and compared with the approaches presented here.", "labels": [], "entities": [{"text": "TAG parsing", "start_pos": 34, "end_pos": 45, "type": "TASK", "confidence": 0.9760091304779053}]}], "datasetContent": [], "tableCaptions": []}