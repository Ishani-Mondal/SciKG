{"title": [{"text": "DETERMINISTIC LEFT TO RIGHT PARSING OF TREE ADJOINING LANGUAGES*", "labels": [], "entities": [{"text": "DETERMINISTIC", "start_pos": 0, "end_pos": 13, "type": "METRIC", "confidence": 0.4870036244392395}, {"text": "LEFT", "start_pos": 14, "end_pos": 18, "type": "METRIC", "confidence": 0.6796759366989136}, {"text": "TO RIGHT PARSING OF TREE ADJOINING LANGUAGES", "start_pos": 19, "end_pos": 63, "type": "METRIC", "confidence": 0.7228094594819205}]}], "abstractContent": [{"text": "We define a set of deterministic bottom-up left to right parsers which analyze a subset of Tree Adjoining Languages.", "labels": [], "entities": []}, {"text": "The LR parsing strategy for Context Free Grammars is extended to Tree Adjoining Grammars (TAGs).", "labels": [], "entities": [{"text": "LR parsing", "start_pos": 4, "end_pos": 14, "type": "TASK", "confidence": 0.8680806756019592}]}, {"text": "We use a machine, called Bottom-up Embed-tied Push Down Automaton (BEPDA), that recognizes in a bottom-up fashion the set of Tree Adjoining Languages (and exactly this se0.", "labels": [], "entities": [{"text": "Bottom-up Embed-tied Push Down Automaton (BEPDA)", "start_pos": 25, "end_pos": 73, "type": "METRIC", "confidence": 0.577036689966917}]}, {"text": "Each parser consists of a finite state control that drives the moves of a Bottom-up Embedded Pushdown Automaton.", "labels": [], "entities": []}, {"text": "The parsers handle deterministically some context-sensitive Tree Adjoining Languages.", "labels": [], "entities": []}, {"text": "In this paper, we informally describe the BEPDA then given a parsing table, we explain the LR parsing algorithm.", "labels": [], "entities": [{"text": "BEPDA", "start_pos": 42, "end_pos": 47, "type": "METRIC", "confidence": 0.9743415117263794}, {"text": "LR parsing", "start_pos": 91, "end_pos": 101, "type": "TASK", "confidence": 0.6692425012588501}]}, {"text": "We then show how to construct an LR(0) parsing table (no lookahead).", "labels": [], "entities": []}, {"text": "An example of a context-sensitive language recognized deterministically is given.", "labels": [], "entities": []}, {"text": "Then, we explain informally the construction of SLR(1) parsing tables for BEPDA.", "labels": [], "entities": [{"text": "BEPDA", "start_pos": 74, "end_pos": 79, "type": "DATASET", "confidence": 0.8161157965660095}]}, {"text": "We conclude with a discussion of our parsing method and current work.", "labels": [], "entities": [{"text": "parsing", "start_pos": 37, "end_pos": 44, "type": "TASK", "confidence": 0.9815787076950073}]}], "introductionContent": [{"text": "LR(k) parsers for Context Free Grammars consist of a finite state control (constructed given a CFG) that drives deterministically with k lookahead symbols a push down stack, while scanning the input from left to right.", "labels": [], "entities": []}, {"text": "It has been shown that they recognize exactly the set of languages recognized by deterministic push down automata.", "labels": [], "entities": []}, {"text": "LR(k) parsers for CFGs have been proven useful for compilers as well as recently for natural language processing.", "labels": [], "entities": [{"text": "natural language processing", "start_pos": 85, "end_pos": 112, "type": "TASK", "confidence": 0.6294847627480825}]}, {"text": "For natural language processing, although LR(k) parsers are not powerful enough, *The first author is partially supported by Darpa grant N0014-85-K0018, ARO grant DAAL03-89-C-003iPRI NSF grant-IRIS4-10413 A02.", "labels": [], "entities": [{"text": "Darpa grant N0014-85-K0018", "start_pos": 125, "end_pos": 151, "type": "DATASET", "confidence": 0.7300241390864054}, {"text": "ARO grant DAAL03-89-C-003iPRI NSF grant-IRIS4-10413", "start_pos": 153, "end_pos": 204, "type": "DATASET", "confidence": 0.7127689242362976}, {"text": "A02", "start_pos": 205, "end_pos": 208, "type": "METRIC", "confidence": 0.5626305937767029}]}, {"text": "We are extremely grateful to Bernard Lang and David Weir for their valuable suggestions.", "labels": [], "entities": []}, {"text": "conflicts between multiple choices are solved by pseudoparallelism.", "labels": [], "entities": []}, {"text": "This gives rise to a class of powerful yet efficient parsers for natural languages.", "labels": [], "entities": []}, {"text": "It is in this context that we study deterministic (LR(k)-style) parsing of TAGs.", "labels": [], "entities": [{"text": "deterministic (LR(k)-style) parsing of TAGs", "start_pos": 36, "end_pos": 79, "type": "TASK", "confidence": 0.6502713100476698}]}, {"text": "The set of Tree Adjoining Languages is a strict superset of the set of Context Free Languages (CFLs).", "labels": [], "entities": []}, {"text": "For example, the cross serial dependency constmction in Dutch can be generated by a TAG.", "labels": [], "entities": []}, {"text": "1,, investigated deterministic parsing of the class of context-sensitive languages.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 17, "end_pos": 38, "type": "TASK", "confidence": 0.6604156196117401}]}, {"text": "However they used Turing machines which recognize languages much more powerful than Tree Adjoining Languages.", "labels": [], "entities": []}, {"text": "So far no deterministic bottom-up parser has been proposed for any member of the class of the so-called \"mildly context sensitive\" formalisms in which Tree Adjoining Grammars fall.", "labels": [], "entities": []}, {"text": "2 Since the set of Tree Adjoining Languages (TALs) is a strict superset of the set of Context Free Languages, in order to define LR-type parsers for TAGs, we need to use a more powerful configuration then a finite state automaton driving a push down stack.", "labels": [], "entities": []}, {"text": "We investigate the design of deterministic left to right bottom up parsers for TAGs in which a finite state control drives the moves of a Bottom-up Embedded Push Down Stack.", "labels": [], "entities": []}, {"text": "The class of corresponding non-deterministic automata recognizes exactly the set of TALs.", "labels": [], "entities": []}, {"text": "We focus our attention on showing how a bottomup embedded pushdown automaton is deterministically driven given a parsing table.", "labels": [], "entities": []}, {"text": "To illustrate the building of a parsing table, we consider the simplest case, i.e. building of LR(0) items and the corresponding LR(0) 1The parsers that we develop in this paper can parse these constructions deterministically (see).", "labels": [], "entities": []}, {"text": "2Tree Adjoining Grammars, Modified Head Grammars, Linear Indexed Grammars and Categorial Grammars (all of which generate the same subclass of context-sensitive languages) fall in the class of the so-called \"mildly context sensitive\" formalisms.", "labels": [], "entities": []}, {"text": "The Embedded Push Down Automaton recognizes exactly this set of languages..", "labels": [], "entities": []}, {"text": "Finally, we consider the construction of SLR parsing tables.", "labels": [], "entities": [{"text": "SLR parsing", "start_pos": 41, "end_pos": 52, "type": "TASK", "confidence": 0.9382077157497406}]}, {"text": "We assume that the reader is familiar with TAGs.", "labels": [], "entities": [{"text": "TAGs", "start_pos": 43, "end_pos": 47, "type": "TASK", "confidence": 0.7782850861549377}]}, {"text": "We refer the reader to for an introduction to TAGs.", "labels": [], "entities": [{"text": "TAGs", "start_pos": 46, "end_pos": 50, "type": "TASK", "confidence": 0.8543353080749512}]}, {"text": "We will assume that the trees can be combined by adjunction only.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}