{"title": [{"text": "Alpage: Transition-based Semantic Graph Parsing with Syntactic Features", "labels": [], "entities": [{"text": "Semantic Graph Parsing", "start_pos": 25, "end_pos": 47, "type": "TASK", "confidence": 0.6289026041825613}]}], "abstractContent": [{"text": "This paper describes the systems deployed by the ALPAGE team to participate to the SemEval-2014 Task on Broad-Coverage Semantic Dependency Parsing.", "labels": [], "entities": [{"text": "SemEval-2014 Task on Broad-Coverage Semantic Dependency Parsing", "start_pos": 83, "end_pos": 146, "type": "TASK", "confidence": 0.8308803524289813}]}, {"text": "We developed two transition-based dependency parsers with extended sets of actions to handle non-planar acyclic graphs.", "labels": [], "entities": []}, {"text": "For the open track, we worked over two orthogonal axes-lexical and syntactic-in order to provide our models with lexical and syntactic features such as word clusters, lemmas and tree fragments of different types.", "labels": [], "entities": []}], "introductionContent": [{"text": "In recent years, we have seen the emergence of semantic parsing, relying on various techniques ranging from graph grammars () to transitions-based dependency parsers.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 47, "end_pos": 63, "type": "TASK", "confidence": 0.7122191339731216}]}, {"text": "Assuming that obtaining predicate argument structures is a necessary goal to move from syntax to accurate surface semantics, the question of the representation of such structures arises.", "labels": [], "entities": []}, {"text": "Regardless of the annotation scheme that should be used, one of the main issues of semantic representation is the construction of graph structures, that are inherently harder to generate than the classical tree structures.", "labels": [], "entities": []}, {"text": "In that aspect, the shared task's proposal), to evaluate different syntacticsemantic schemes () could not arrive at a more timely moment when state-of-the-art surface syntactic parsers regularly reach, or cross, a 90% labeled dependency recovery plateau fora wide range of languages (.", "labels": [], "entities": []}, {"text": "The two systems we present both extend transition-based parsers in order to be able to generate acyclic dependency graphs.", "labels": [], "entities": []}, {"text": "The first one follows the standard greedy search mechanism of (, while the second one follows a slightly more global search strategy) by relying on dynamic programming techniques.", "labels": [], "entities": []}, {"text": "In addition to building graphs directly, the main originality of our work lies in the use of different kinds of syntactic features, showing that using syntax for pure deep semantic parsing improves global performance by more than two points.", "labels": [], "entities": []}, {"text": "Although not state-of-the-art, our systems perform very honorably compared with other single systems in this shared task and pave quite an interesting way for further work.", "labels": [], "entities": []}, {"text": "In the remainder of this paper, we present the parsers and their extensions for building graphs; we then present our syntactic features and discuss our results.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Syntactic features statistics.", "labels": [], "entities": []}, {"text": " Table 3: Results on section 21 (test) of the PTB for closed and open track.", "labels": [], "entities": [{"text": "PTB", "start_pos": 46, "end_pos": 49, "type": "DATASET", "confidence": 0.8600818514823914}]}]}