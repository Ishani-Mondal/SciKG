{"title": [{"text": "Generalized Augmented Transition Network Grammars For Generation From Semantic Networks 1", "labels": [], "entities": [{"text": "Generalized Augmented Transition Network Grammars", "start_pos": 0, "end_pos": 49, "type": "TASK", "confidence": 0.6277859628200531}]}], "abstractContent": [{"text": "The augmented transition network (ATN) is a formalism for writing parsing grammars that has been much used in Artificial Intelligence and Computational Linguistics.", "labels": [], "entities": [{"text": "writing parsing grammars", "start_pos": 58, "end_pos": 82, "type": "TASK", "confidence": 0.6421273052692413}]}, {"text": "A few researchers have also used ATNs for writing grammars for generating sentences.", "labels": [], "entities": []}, {"text": "Previously , however, either generation ATNs did not have the same semantics as parsing ATNs, or they required an auxiliary mechanism to determine the syntactic structure of the sentence to be generated.", "labels": [], "entities": []}, {"text": "This paper reports a generalization of the ATN formalism that allows ATN grammars to be written to parse labelled directed graphs.", "labels": [], "entities": []}, {"text": "Specifically, an ATN grammar can be written to parse a semantic network and generate a surface string as its analysis.", "labels": [], "entities": []}, {"text": "An example is given of a combined parsing-generating grammar that parses surface sentences, builds and queries a semantic network knowledge representation, and generates surface sentences in response.", "labels": [], "entities": []}], "introductionContent": [{"text": "Augmented transition network (ATN) grammars have, since their development by, become the most used method of describing grammars for natural language understanding and question answering systems.", "labels": [], "entities": [{"text": "natural language understanding", "start_pos": 133, "end_pos": 163, "type": "TASK", "confidence": 0.6460275451342264}, {"text": "question answering", "start_pos": 168, "end_pos": 186, "type": "TASK", "confidence": 0.7884092330932617}]}, {"text": "The advantages of the ATN notation have been summarized as \"1) perspicuity, 2) generative power, 3) efficiency of representation, 4) the ability to capture linguistic regularities and generalities, and 5) efficiency of operation\".", "labels": [], "entities": []}, {"text": "The usual method of utilizing an ATN grammar in a natural language system is to provide an interpreter that can take any ATN grammar, a lexicon, and a sentence-as data, and produce either a parse of a sentence or a message that the sentence does not conform to the grammar.", "labels": [], "entities": []}, {"text": "The input sentence is assumed to be a linear sequence of symbols, while the parse is usually a tree (often represented by a LISP S-expression) or some \"knowledge representation\" such as a semantic network.", "labels": [], "entities": []}, {"text": "Compilers have been written; that take an ATN grammar 1 This paper is a revised and expanded version of one given at the 17th Annual Meeting of the Association for Computational Linguistics.", "labels": [], "entities": []}, {"text": "The work reported here was supported in part by the National Science Foundation under Grants MCS78-02274 and MCS80-06314.", "labels": [], "entities": [{"text": "MCS80-06314", "start_pos": 109, "end_pos": 120, "type": "DATASET", "confidence": 0.9402329325675964}]}, {"text": "as input and produce a specialized parser for that grammar, but in this paper we assume that an interpreter is being used.", "labels": [], "entities": []}, {"text": "Several methods have been described for using ATN grammars for sentence generation.", "labels": [], "entities": [{"text": "sentence generation", "start_pos": 63, "end_pos": 82, "type": "TASK", "confidence": 0.7808819115161896}]}, {"text": "One method is to replace the usual interpreter by a generation interpreter that can take an ATN grammar written for parsing and use it to produce random sentences conforming to the grammar.", "labels": [], "entities": []}, {"text": "This is useful for testing and debugging the grammar.", "labels": [], "entities": []}, {"text": "This paper reports the results of work carried out to remove the inconsistencies mentioned above.", "labels": [], "entities": []}, {"text": "A generalization of the ATN formalism has now been derived that supplies consistent semantics (and so allows a single interpreter to be used) for both parsing and generating grammars.", "labels": [], "entities": []}, {"text": "In fact, one grammar can include both parsing and generating sub-networks that can call each other.", "labels": [], "entities": []}, {"text": "For example, an ATN grammar can be constructed so that the \"parse\" of a natural language question is the natural language statement that answers it, interaction with representation and inference routines being done on arcs along the way.", "labels": [], "entities": []}, {"text": "The new formalism is a strict generalization in the sense that it interprets all old ATN grammars as having the same semantics (carrying out the same actions and producing the same parses) as before.", "labels": [], "entities": []}, {"text": "The generalized ATN formalism can be used to write grammars for parsing labelled directed graphs.", "labels": [], "entities": [{"text": "parsing labelled directed graphs", "start_pos": 64, "end_pos": 96, "type": "TASK", "confidence": 0.8915668427944183}]}, {"text": "In this paper, however, we only discuss its use in parsing two particular kinds of labelled di-graphs.", "labels": [], "entities": [{"text": "parsing", "start_pos": 51, "end_pos": 58, "type": "TASK", "confidence": 0.9646936058998108}]}, {"text": "One is the kind that is generally called a semantic network.", "labels": [], "entities": []}, {"text": "We consider parsing a semantic network, as viewed from some node, into a particular linear symbol structure that constitutes a surface string of English.", "labels": [], "entities": []}, {"text": "The other kind of labelled di-graph is a linear graph all of whose arcs have the same label and whose nodes are successive words in a surface sentence.", "labels": [], "entities": []}, {"text": "This kind of di-graph is so special that a subset of the generalized ATN formalism, namely the original formalism, has built-in facilities for traversing its arcs.", "labels": [], "entities": []}, {"text": "Since many people have implemented their own ATN interpreters, this paper is written to describe the extension to be made to any ATN interpreter to allow it to interpret generation grammars as well as parsing grammars.", "labels": [], "entities": []}, {"text": "A key ingredient in such an extension is a systematic treatment of the input buffer and the * register.", "labels": [], "entities": []}, {"text": "This is explained in Section 4, which is essentially a description of a set of program assertions for ATN interpreters.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}