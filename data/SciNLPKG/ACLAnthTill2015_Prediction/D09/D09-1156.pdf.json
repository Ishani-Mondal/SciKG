{"title": [{"text": "Character-level Analysis of Semi-Structured Documents for Set Expansion", "labels": [], "entities": [{"text": "Character-level Analysis of Semi-Structured Documents", "start_pos": 0, "end_pos": 53, "type": "TASK", "confidence": 0.8202095627784729}, {"text": "Set Expansion", "start_pos": 58, "end_pos": 71, "type": "TASK", "confidence": 0.6716735661029816}]}], "abstractContent": [{"text": "Set expansion refers to expanding a partial set of \"seed\" objects into a more complete set.", "labels": [], "entities": [{"text": "Set expansion", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.7524397373199463}]}, {"text": "One system that does set expansion is SEAL (Set Expander for Any Language), which expands entities automatically by utilizing resources from the Web in a language-independent fashion.", "labels": [], "entities": [{"text": "set expansion", "start_pos": 21, "end_pos": 34, "type": "TASK", "confidence": 0.6920635849237442}]}, {"text": "In this paper, we illustrated in detail the construction of character-level wrappers for set expansion implemented in SEAL.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 118, "end_pos": 122, "type": "TASK", "confidence": 0.7443423867225647}]}, {"text": "We also evaluated several kinds of wrappers for set expansion and showed that character-based wrappers perform better than HTML-based wrappers.", "labels": [], "entities": [{"text": "set expansion", "start_pos": 48, "end_pos": 61, "type": "TASK", "confidence": 0.7228299826383591}]}, {"text": "In addition, we demonstrated a technique that extends SEAL to learn binary relational concepts (e.g., \"x is the mayor of the city y\") from only two seeds.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 54, "end_pos": 58, "type": "TASK", "confidence": 0.9641336798667908}]}, {"text": "We also show that the extended SEAL has good performance on our evaluation datasets, which includes English and Chinese, thus demonstrating language-independence.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 31, "end_pos": 35, "type": "TASK", "confidence": 0.805582582950592}]}], "introductionContent": [{"text": "SEAL 1 (Set Expander for Any Language) is a set expansions system that accepts input elements (seeds) of some target set Sand automatically finds other probable elements of S in semistructured documents such as web pages.", "labels": [], "entities": []}, {"text": "SEAL is a research system that has shown good performance in previously published results (.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.6254982352256775}]}, {"text": "By using only three seeds and top one hundred documents returned by Google, SEAL achieved 90% in mean average precision (MAP), averaged over 36 datasets from three languages: English, Chinese, and Japanese.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 76, "end_pos": 80, "type": "TASK", "confidence": 0.9665595293045044}, {"text": "mean average precision (MAP)", "start_pos": 97, "end_pos": 125, "type": "METRIC", "confidence": 0.9151903986930847}]}, {"text": "Unlike other published research work (), SEAL focuses on finding small closed sets of items (e.g., Disney movies) rather than large and more open sets (e.g., scientists).", "labels": [], "entities": [{"text": "SEAL", "start_pos": 41, "end_pos": 45, "type": "TASK", "confidence": 0.989052951335907}]}, {"text": "In this paper, we explore the impact on performance of one of the innovations in SEAL, specifically, the use of character-level techniques to detect candidate regular structures, or wrappers, in web pages.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 81, "end_pos": 85, "type": "TASK", "confidence": 0.9812440276145935}]}, {"text": "Although some early systems for web-page analysis induce rules at character-level (e.g., such as WIEN () and DIPRE), most recent approaches for set expansion have used either tokenized and/or parsed free-text (), or have incorporated heuristics for exploiting HTML structures that are likely to encode lists and tables (.", "labels": [], "entities": [{"text": "web-page analysis", "start_pos": 32, "end_pos": 49, "type": "TASK", "confidence": 0.7251346707344055}, {"text": "set expansion", "start_pos": 144, "end_pos": 157, "type": "TASK", "confidence": 0.7595313787460327}]}, {"text": "In this paper, we experimentally evaluate SEAL's performance under two settings: 1) using the character-level page analysis techniques of the original SEAL, and 2) using page analysis techniques constrained to identify only HTMLrelated wrappers.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 42, "end_pos": 46, "type": "TASK", "confidence": 0.9761056303977966}]}, {"text": "Our conjecture is that the less constrained character-level methods will produce more candidate wrappers than HTML-based techniques.", "labels": [], "entities": []}, {"text": "We also conjecture that a larger number of candidate wrappers will lead to better performance overall, due to SEAL's robust methods for ranking candidate wrappers.", "labels": [], "entities": []}, {"text": "The experiments in this paper largely validate this conjecture.", "labels": [], "entities": []}, {"text": "We show that the HTMLrestricted version of SEAL performs less well, losing 13 points in MAP on a dozen Chineselanguage benchmark problems, 8 points in MAP on a dozen English-language problems, and 2 points in MAP on a dozen Japanese-language problems.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 43, "end_pos": 47, "type": "TASK", "confidence": 0.8862798810005188}, {"text": "MAP", "start_pos": 88, "end_pos": 91, "type": "METRIC", "confidence": 0.645317018032074}, {"text": "MAP", "start_pos": 209, "end_pos": 212, "type": "TASK", "confidence": 0.6117217540740967}]}, {"text": "SEAL currently only handles unary relationships (e.g., \"x\" is a mayor).", "labels": [], "entities": [{"text": "SEAL", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.7821942567825317}]}, {"text": "In this paper, we show that SEAL's character-level analysis techniques can, like HTML-based methods, be read-ily extended to handle binary relationships.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 28, "end_pos": 32, "type": "TASK", "confidence": 0.9413800835609436}, {"text": "character-level analysis", "start_pos": 35, "end_pos": 59, "type": "TASK", "confidence": 0.7410861253738403}]}, {"text": "We then demonstrate that this extension of SEAL can learn binary concepts (e.g., \"x is the mayor of the city y\") from a small number of seeds, and show that, as with unary relationships, MAP performance is 26 points lower when wrappers are restricted to be HTML-related.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 43, "end_pos": 47, "type": "TASK", "confidence": 0.9761427044868469}]}, {"text": "Furthermore, we also illustrate that the learning of binary concepts can be bootstrapped to improve its performance.", "labels": [], "entities": []}, {"text": "Section 2.1 explains how SEAL constructs wrappers and rank candidate items for unary relations.", "labels": [], "entities": [{"text": "SEAL constructs wrappers", "start_pos": 25, "end_pos": 49, "type": "TASK", "confidence": 0.8893294334411621}]}, {"text": "Section 3 describes the experiments and results for unary relations.", "labels": [], "entities": []}, {"text": "Section 4 presents the method for extending SEAL to handle binary relationships, as well as their experimental results.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 44, "end_pos": 48, "type": "TASK", "confidence": 0.8992640972137451}]}, {"text": "Related work is discussed in Section 5, and the paper concludes in Section 6.", "labels": [], "entities": []}], "datasetContent": [{"text": "We would like to determine whether characterbased or HTML-based wrappers are more suited for the task of set expansion.", "labels": [], "entities": [{"text": "set expansion", "start_pos": 105, "end_pos": 118, "type": "TASK", "confidence": 0.7606472373008728}]}, {"text": "In order to do that,  we introduce five types of wrappers, as illustrated in.", "labels": [], "entities": []}, {"text": "The first type is the character-based wrapper that does not have any restriction on the alphabets of its characters.", "labels": [], "entities": []}, {"text": "Starting from the second type, the allowable alphabets in a wrapper become more restrictive.", "labels": [], "entities": []}, {"text": "The fifth type requires that an item must be tightly bracketed by two complete HTML tags in order to be extracted.", "labels": [], "entities": []}, {"text": "All pure HTML-based wrappers are type 5, possibly with additional restrictions imposed ().", "labels": [], "entities": []}, {"text": "SEAL currently does not use an HTML parser (or any other kinds of parser), so restrictions cannot be easily imposed.", "labels": [], "entities": [{"text": "SEAL", "start_pos": 0, "end_pos": 4, "type": "TASK", "confidence": 0.7257748246192932}]}, {"text": "As far as we know, there isn't an agreement on what restrictions make the most sense or work the best.", "labels": [], "entities": []}, {"text": "Therefore, we evaluate performance for varying wrapper constraints from type 1 (most general) to type 5 (most strict) in our experiments.", "labels": [], "entities": []}, {"text": "For set expansion, we use the same evaluation set as in () which contains 36 manually constructed lists across three different languages: English, Chinese, and Japanese (12 lists per language).", "labels": [], "entities": [{"text": "set expansion", "start_pos": 4, "end_pos": 17, "type": "TASK", "confidence": 0.720113143324852}]}, {"text": "Each list contains all instances of a particular semantic class in a certain language, and each instance contains a set of synonyms (e.g., USA, America).", "labels": [], "entities": []}, {"text": "Since the output of our system is a ranked list of extracted instances, we choose mean average precision (MAP) as our evaluation metric.", "labels": [], "entities": [{"text": "mean average precision (MAP)", "start_pos": 82, "end_pos": 110, "type": "METRIC", "confidence": 0.9469311436017355}]}, {"text": "MAP is commonly used in the field of Information Retrieval for evaluating ranked lists because it is sensitive to the entire ranking and it contains both recall and precision-oriented aspects.", "labels": [], "entities": [{"text": "Information Retrieval", "start_pos": 37, "end_pos": 58, "type": "TASK", "confidence": 0.7258021682500839}, {"text": "recall", "start_pos": 154, "end_pos": 160, "type": "METRIC", "confidence": 0.9968469738960266}, {"text": "precision-oriented", "start_pos": 165, "end_pos": 183, "type": "METRIC", "confidence": 0.9799255728721619}]}, {"text": "The MAP for multiple ranked lists is simply the mean value of average precisions calculated separately for each ranked list.", "labels": [], "entities": [{"text": "MAP", "start_pos": 4, "end_pos": 7, "type": "METRIC", "confidence": 0.9776157736778259}, {"text": "mean value of average precisions", "start_pos": 48, "end_pos": 80, "type": "METRIC", "confidence": 0.6405371308326722}]}, {"text": "We define the average precision of a single ranked list as: where L is a ranked list of extracted instances, r is the rank ranging from 1 to |L|, Prec(r) is the precision at rank r, or the percentage of correct synonyms above rank r (inclusively).", "labels": [], "entities": [{"text": "precision", "start_pos": 22, "end_pos": 31, "type": "METRIC", "confidence": 0.8538123369216919}, {"text": "Prec(r)", "start_pos": 146, "end_pos": 153, "type": "METRIC", "confidence": 0.959730938076973}, {"text": "precision", "start_pos": 161, "end_pos": 170, "type": "METRIC", "confidence": 0.995415449142456}]}, {"text": "isFresh(r) is a binary function for ensuring that, if a list contains multiple synonyms of the same instance (or instance pair), we do not evaluate that instance (or instance pair) more than once.", "labels": [], "entities": []}, {"text": "More specifically, the function returns 1 if a) the synonym at r is correct, and b) it is the highest-ranked synonym of its instance in the list; it returns 0 otherwise.", "labels": [], "entities": []}, {"text": "We evaluate the performance of each type of wrapper by conducting set expansion on the 36 datasets across three languages.", "labels": [], "entities": []}, {"text": "For each dataset, we randomly select two seeds, expand them by bootstrapping ten iterations (where each iteration retrieves at most 200 web pages only), and evaluate the final result.", "labels": [], "entities": []}, {"text": "We repeat this process three times for every dataset and report the average MAP for English, Japanese, and Chinese in Table 3.", "labels": [], "entities": [{"text": "MAP", "start_pos": 76, "end_pos": 79, "type": "METRIC", "confidence": 0.9825326204299927}]}, {"text": "As illustrated, the more restrictive a wrapper is, the worse it performs.", "labels": [], "entities": []}, {"text": "As a result, this indicates that further restrictions on wrappers of type 5 will not improve performance.", "labels": [], "entities": []}, {"text": "For binary relations, we performed the same experiment as with unary relations described in Section 3.", "labels": [], "entities": []}, {"text": "A relational wrapper is of type t if the wrapper's left and right context match t's constraint for left and right respectively, and also that the wrapper's middle context match both constraints.", "labels": [], "entities": []}, {"text": "For choosing the evaluation datasets for relational set expansion, we surveyed and obtained a dozen relationships, from which we randomly selected five of them and present in.", "labels": [], "entities": [{"text": "relational set expansion", "start_pos": 41, "end_pos": 65, "type": "TASK", "confidence": 0.735213061173757}]}, {"text": "Each dataset was then manually constructed.", "labels": [], "entities": []}, {"text": "For the last two datasets, since there are too many items, we tried our best to make the lists as exhaustive as possible.", "labels": [], "entities": []}, {"text": "To evaluate relational wrappers, we performed relational set expansion on randomly selected seeds from the five relational datasets.", "labels": [], "entities": [{"text": "relational set expansion", "start_pos": 46, "end_pos": 70, "type": "TASK", "confidence": 0.6744820475578308}]}, {"text": "For every dataset, we select two seeds randomly and bootstrap the relational set expansion ten times.", "labels": [], "entities": []}, {"text": "The results after the first iteration are shown in and after the tenth iteration in.", "labels": [], "entities": []}, {"text": "When computing precision at 100 for each resulting list, we kept only the top-most-ranked synonym of every instance and remove all other synonyms from the list; this ensures that every instance is unique.", "labels": [], "entities": [{"text": "precision", "start_pos": 15, "end_pos": 24, "type": "METRIC", "confidence": 0.9969300627708435}]}, {"text": "Notice that for the \"Car Maker\" dataset, there exists no wrappers of types 2 to 5; thus resulting in zero performance for those wrapper types.", "labels": [], "entities": [{"text": "Car Maker\" dataset", "start_pos": 21, "end_pos": 39, "type": "DATASET", "confidence": 0.7260408401489258}]}, {"text": "In each table, the results indicate that character-based wrappers perform the best, while those HTML-based wrappers that require tight HTML bracketing of items (type 3 and 5) perform the worse.", "labels": [], "entities": []}, {"text": "In addition, the results illustrate that bootstrapping is effective for expanding relational pairs of items.", "labels": [], "entities": []}, {"text": "As illustrated in, the result of finding translation pairs of NBA team names is perfect, and it is almost perfect for finding pairs of U.S. states/territories and governors, as well as Taiwanese cities and mayors.", "labels": [], "entities": [{"text": "translation pairs of NBA team names", "start_pos": 41, "end_pos": 76, "type": "TASK", "confidence": 0.7851556042830149}]}, {"text": "In finding pairs of acronyms and full names of federal agencies, the precision at top 100 is nearly perfect (97%).", "labels": [], "entities": [{"text": "precision", "start_pos": 69, "end_pos": 78, "type": "METRIC", "confidence": 0.9995675683021545}]}, {"text": "The results for finding pairs of car makers and countries is good as well, with a high precision of 90%.", "labels": [], "entities": [{"text": "precision", "start_pos": 87, "end_pos": 96, "type": "METRIC", "confidence": 0.9987080097198486}]}, {"text": "For the last two datasets, we believe that MAP could be improved by increasing the number of bootstrapping iterations.", "labels": [], "entities": [{"text": "MAP", "start_pos": 43, "end_pos": 46, "type": "TASK", "confidence": 0.6899864673614502}]}, {"text": "shows some example wrappers constructed and instances extracted for wrappers of type 1.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 3: The performance (MAP) of various types  of wrappers on semi-structured web pages.", "labels": [], "entities": [{"text": "performance (MAP)", "start_pos": 14, "end_pos": 31, "type": "METRIC", "confidence": 0.6584716737270355}]}, {"text": " Table 4: The five relational datasets for evaluating relational set expansion.", "labels": [], "entities": [{"text": "relational set expansion", "start_pos": 54, "end_pos": 78, "type": "TASK", "confidence": 0.6869053443272909}]}, {"text": " Table 6: Performance of various types of wrappers on the five relational datasets after 10 th iteration.", "labels": [], "entities": []}]}