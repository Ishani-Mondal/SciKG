{"title": [{"text": "Dialogue complexity with portability? Research directions for the Information State approach", "labels": [], "entities": []}], "abstractContent": [{"text": "We review existing types of dialogue managers (DMs), and propose that the Information State (IS) approach may allow both complexity of dialogue and ease of portability.", "labels": [], "entities": []}, {"text": "We discuss implementational drawbacks of the only existing IS DM, and describe our work underway to develop anew DM resolving those drawbacks.", "labels": [], "entities": [{"text": "IS DM", "start_pos": 59, "end_pos": 64, "type": "TASK", "confidence": 0.6572267413139343}]}], "introductionContent": [{"text": "Spoken dialogue systems have shown steady improvements in recent years.", "labels": [], "entities": [{"text": "Spoken dialogue", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.8411858677864075}]}, {"text": "To continue advancing the state of the field, we must direct research towards reducing a tradeoff between complexity and portability.", "labels": [], "entities": []}, {"text": "Otherwise, we will continue to have systems which can handle complex interactions, or systems which can be easily modified for new domains, but not both.", "labels": [], "entities": []}, {"text": "The simplest existing dialogue managers (DMs), finite-state systems, are suitable for simple, wellstructured system-initiated dialogue tasks.", "labels": [], "entities": []}, {"text": "They also make it easy for novice developers to create new dialogue systems.", "labels": [], "entities": []}, {"text": "Yet this type of DM does not scale well to mixed-initiative dialogues or complicated tasks with a wide variety of possible input.", "labels": [], "entities": [{"text": "DM", "start_pos": 17, "end_pos": 19, "type": "TASK", "confidence": 0.9876608848571777}]}, {"text": "The most well-known such DM is VoiceXML.", "labels": [], "entities": []}, {"text": "Similar systems include Oregon Graduate Institute's Rapid Application Developer, Unisys' Dialog Design Assistant (Unisys 1998), Nuance's Speech Objects, the Swedish GULAN (yellow pages) system, and several commercial systems by SpeechWorks.", "labels": [], "entities": [{"text": "Oregon Graduate Institute", "start_pos": 24, "end_pos": 49, "type": "DATASET", "confidence": 0.8788726727167765}, {"text": "Swedish GULAN (yellow pages)", "start_pos": 157, "end_pos": 185, "type": "TASK", "confidence": 0.5988577604293823}]}, {"text": "More sophisticated, mixed-initiative, frame-based DMs often make use of semantic \"frames\" containing multiple \"slots\" or \"keys\", each of which can hold a value.", "labels": [], "entities": []}, {"text": "Either conversational partner can volunteer or request information about any slots in the frame, at anytime, in any order.", "labels": [], "entities": []}, {"text": "When enough slots are filled to the satisfaction of both parties, the task and conversation are complete.", "labels": [], "entities": []}, {"text": "This type of DM supports a more flexible, arbitrary flow-of-control, often controlled by scripts of rules firing upon certain conditions.", "labels": [], "entities": []}, {"text": "Examples of these types of DMs include Philips' SpeechMania (Aust and Schroer 1998), the Dialogue Design Language Tool in the Danish Generic Dialogue System (, and several of the DMs developed (by e.g. MIT and the University of Colorado) for the DARPA Communicator infrastructure.", "labels": [], "entities": [{"text": "Danish Generic Dialogue System", "start_pos": 126, "end_pos": 156, "type": "DATASET", "confidence": 0.8444128930568695}]}, {"text": "Even more complex plan-based DMs reason about \"plans\" and communicative \"goals\", and try to move the conversation along towards achieving these goals.", "labels": [], "entities": []}, {"text": "By representing the relationships between goals, subgoals, and primitive actions in a domain, these systems can support dialogues with a broader scope than the framebased DMs can.", "labels": [], "entities": []}, {"text": "Notably, they are intended to detect topic shifts as well as support dynamic re-planning when misunderstandings occur.", "labels": [], "entities": [{"text": "detect topic shifts", "start_pos": 30, "end_pos": 49, "type": "TASK", "confidence": 0.741353710492452}]}, {"text": "These systems typically model communicative goals in terms of speech acts where speech acts affect goals, beliefs, intent and/or obligations of the participants.", "labels": [], "entities": []}, {"text": "These DMs can also be complex to develop, and correspondingly difficult to port to new applications.", "labels": [], "entities": []}, {"text": "Examples of this type are COLLAGEN (COLLaborative AGENts), by Mitsubishi Electric Research Lab, and the University of Rochester's TRAINS and TRIPS systems.", "labels": [], "entities": [{"text": "Mitsubishi Electric Research Lab", "start_pos": 62, "end_pos": 94, "type": "DATASET", "confidence": 0.8858025223016739}]}, {"text": "The approach we find most promising, however, is the Information State (IS) approach, which simplifies development by providing a rule-based language for specifying dialogue systems while allowing the flexible, complex interactions characteristic of plan-based dialogues.", "labels": [], "entities": []}, {"text": "An IS theory of dialogue proposed by models dialogue states (i.e. structured semantic objects) as dependent record types.", "labels": [], "entities": []}, {"text": "Dialogue moves (roughly equivalent to speaker turns) are characterized as transitions between information states in a manner that is neutral with regard to semantic theory.", "labels": [], "entities": []}, {"text": "This approach to dialogue modeling enables developers to model the system information state in such away that arbitrary linguistic theories of dialogue maybe formalized, implemented, and compared.", "labels": [], "entities": [{"text": "dialogue modeling", "start_pos": 17, "end_pos": 34, "type": "TASK", "confidence": 0.853866845369339}]}, {"text": "ISs maybe used to model relations between various kinds of information such as utterances, background knowledge, nonverbal events and visual scenes.", "labels": [], "entities": []}, {"text": "This is crucial to multimodal dialogue processing.", "labels": [], "entities": [{"text": "multimodal dialogue processing", "start_pos": 19, "end_pos": 49, "type": "TASK", "confidence": 0.7966907223065695}]}, {"text": "Another important feature of the IS approach is that developers have the flexibility to define levels of dialogue as well as model goals, intent, beliefs and obligations.", "labels": [], "entities": []}, {"text": "Thus the IS approach may also be used to model more complex dialogues using concepts derived from plan-based theories of dialogueperhaps, inheriting some of the same challenges.", "labels": [], "entities": []}, {"text": "However, the same framework maybe used to also model simpler finite-state dialogues.", "labels": [], "entities": []}, {"text": "TRINDIKit) is an IS-based open source Prolog toolkit.", "labels": [], "entities": [{"text": "TRINDIKit", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.7769832611083984}]}, {"text": "TRINDIKit itself provides the basic infrastructure of a dialogue manager.", "labels": [], "entities": [{"text": "TRINDIKit", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.7112801671028137}]}, {"text": "It provides structured data types and the means to define an Information State from those types, a language for defining the modules of a Dialogue Move Engine (DME), and a language for controlling the application of individual modules to dialogue management.", "labels": [], "entities": [{"text": "dialogue management", "start_pos": 238, "end_pos": 257, "type": "TASK", "confidence": 0.8250799179077148}]}, {"text": "We have built two dialogue systems using TRINDIKit (.", "labels": [], "entities": [{"text": "TRINDIKit", "start_pos": 41, "end_pos": 50, "type": "METRIC", "confidence": 0.6028573513031006}]}, {"text": "We first developed a multimodal information kiosk by adapting GoDiS (Gothenburg Dialogue System) (, which implements the Questions Under Discussion model in TRINDIKit.", "labels": [], "entities": [{"text": "GoDiS (Gothenburg Dialogue System)", "start_pos": 62, "end_pos": 96, "type": "DATASET", "confidence": 0.7935579965511957}, {"text": "TRINDIKit", "start_pos": 157, "end_pos": 166, "type": "DATASET", "confidence": 0.8692978024482727}]}, {"text": "Adapting this existing TRINDIKit DM to anew question-answer domain required very little effort (less than two staff-weeks from initial downloading of TRINDIKit to an operational system open to the public).", "labels": [], "entities": []}, {"text": "We then modified the DM to support control of a search-and-rescue robot using a speech-and-sketch interface on a PDA, again with relatively little effort.", "labels": [], "entities": []}, {"text": "Based on our experience, we feel that the IS approach to dialogue management as espoused by TRINDI is a strong candidate for supporting both complexity and portability.", "labels": [], "entities": [{"text": "dialogue management", "start_pos": 57, "end_pos": 76, "type": "TASK", "confidence": 0.7812535166740417}, {"text": "TRINDI", "start_pos": 92, "end_pos": 98, "type": "DATASET", "confidence": 0.8690643310546875}]}, {"text": "In the remainder of this paper, we discuss some implementational drawbacks of TRINDIKit, and our work underway to develop anew toolkit, inspired by TRINDIKit but re-engineered to eliminate its drawbacks.", "labels": [], "entities": [{"text": "TRINDIKit", "start_pos": 78, "end_pos": 87, "type": "DATASET", "confidence": 0.750686526298523}]}], "datasetContent": [], "tableCaptions": []}