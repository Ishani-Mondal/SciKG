{"title": [{"text": "On building a high performance gazetteer database", "labels": [], "entities": []}], "abstractContent": [{"text": "We define a data model for storing geographic information from multiple sources that enables the efficient production of customizable gazetteers.", "labels": [], "entities": []}, {"text": "The GazDB separates names from features while storing the relationships between them.", "labels": [], "entities": []}, {"text": "Geographic names are stored in a variety of resolutions to allow for i18n and for multiplicity of naming.", "labels": [], "entities": []}, {"text": "Geographic features are categorized along several axes to facilitate selection and filtering.", "labels": [], "entities": []}], "introductionContent": [{"text": "We are interested in collecting the largest possible set of geographic entities, so as to be able to produce a variety of extremely comprehensive gazetteers.", "labels": [], "entities": []}, {"text": "These gazetteers are currently produced to search for both direct and indirect geospatial references in text.", "labels": [], "entities": []}, {"text": "The production process can be tailored to produce custom gazetteers for other applications, such as historical queries.", "labels": [], "entities": []}, {"text": "The purpose of the MetaCarta GazDB is to provide both a place and supporting mechanisms for storing, maintaining, and exporting everything we know about our collection of geographic entities.", "labels": [], "entities": []}, {"text": "To produce a gazetteer from various data sources, we make use of a database, the GazDB, as well as two sets of scripts: conversion scripts, to transfer the data from its source format into the GazDB, and export scripts to output data from the GazDB in the form of gazetteers.", "labels": [], "entities": [{"text": "GazDB", "start_pos": 81, "end_pos": 86, "type": "DATASET", "confidence": 0.9670085906982422}, {"text": "GazDB", "start_pos": 193, "end_pos": 198, "type": "DATASET", "confidence": 0.9416747093200684}, {"text": "GazDB", "start_pos": 243, "end_pos": 248, "type": "DATASET", "confidence": 0.960308313369751}]}, {"text": "The interaction between these elements is illustrated in.", "labels": [], "entities": []}, {"text": "Geographic input data is collected from multiple (not necessarily disjoint) sources, each with their own peculiar format.", "labels": [], "entities": []}, {"text": "As such, the conversion scripts must perform some amount of normalization and classification of the input data in order to maintain a single unified repository: The gazetteer production process of geographic data.", "labels": [], "entities": []}, {"text": "However, in order to justify the overhead of consolidating all the data into a single entity, it must be possible to output all of it into multiple gazetteers designed for different goals.", "labels": [], "entities": []}, {"text": "It should also be possible to perform filtering operations on the gazetteer entries, such as comparing entry names against common-language dictionaries.", "labels": [], "entities": []}, {"text": "This can be used determine whether occurrences of gazetteer names in documents are geographically relevant ().", "labels": [], "entities": []}, {"text": "This is the task for the export scripts.", "labels": [], "entities": []}, {"text": "However, in this paper, we shall focus on the heart of the system, namely the GazDB.", "labels": [], "entities": [{"text": "GazDB", "start_pos": 78, "end_pos": 83, "type": "DATASET", "confidence": 0.9556449055671692}]}, {"text": "Section 2 describes how the GazDB relates geographic names and features.", "labels": [], "entities": [{"text": "GazDB", "start_pos": 28, "end_pos": 33, "type": "DATASET", "confidence": 0.7466212511062622}]}, {"text": "In Section 3 we describe how the GazDB handles ambiguities and inconsistencies in geographic names.", "labels": [], "entities": []}, {"text": "Finally, in Section 4 we outline the classification and storage system used for geographic features.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}