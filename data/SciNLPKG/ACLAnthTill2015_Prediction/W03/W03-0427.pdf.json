{"title": [{"text": "Memory-based one-step named-entity recognition: Effects of seed list features, classifier stacking, and unannotated data", "labels": [], "entities": [{"text": "named-entity recognition", "start_pos": 22, "end_pos": 46, "type": "TASK", "confidence": 0.6807526797056198}, {"text": "classifier stacking", "start_pos": 79, "end_pos": 98, "type": "TASK", "confidence": 0.7595370411872864}]}], "abstractContent": [{"text": "We present a memory-based named-entity recognition system that chunks and labels named entities in a one-shot task.", "labels": [], "entities": [{"text": "named-entity recognition", "start_pos": 26, "end_pos": 50, "type": "TASK", "confidence": 0.7281053960323334}]}, {"text": "Training and testing on CoNLL-2003 shared task data, we measure the effects of three extensions.", "labels": [], "entities": [{"text": "CoNLL-2003 shared task data", "start_pos": 24, "end_pos": 51, "type": "DATASET", "confidence": 0.8450300395488739}]}, {"text": "First, we incorporate features that signal the presence of wordforms in external, language-specific seed (gazetteer) lists.", "labels": [], "entities": []}, {"text": "Second, we build a second-stage stacked classifier that corrects first-stage output errors.", "labels": [], "entities": []}, {"text": "Third, we add selected instances from classified unannotated data to the training material.", "labels": [], "entities": []}, {"text": "The system that incorporates all attains an overall F-rate on the final test set of 78.20 on English and 63.02 on German.", "labels": [], "entities": [{"text": "F-rate", "start_pos": 52, "end_pos": 58, "type": "METRIC", "confidence": 0.9991562366485596}]}, {"text": "2 Data and features The CoNLL-2003 shared task (Tjong Kim Sang and De Meulder, 2003) supplied datasets in two languages, English and German, using four named entity categories: persons, organisations, locations, and \"miscellany names\".", "labels": [], "entities": [{"text": "CoNLL-2003 shared task (Tjong Kim Sang and De Meulder, 2003) supplied datasets", "start_pos": 24, "end_pos": 102, "type": "DATASET", "confidence": 0.8596168319384258}]}, {"text": "Manual annotation has been performed at the University of Antwerp.", "labels": [], "entities": []}, {"text": "Apart from tokenized wordforms, the data provides predicted PoS-tags and chunks.", "labels": [], "entities": []}, {"text": "In our experiments we construct instances around wordforms, where we take a windowed snapshot of the word in its direct local context.", "labels": [], "entities": []}, {"text": "By default, we select a window of two words to the left and right.", "labels": [], "entities": []}, {"text": "For all five words in each input instance (feature vector), in principle all of the above features are included.", "labels": [], "entities": []}, {"text": "3 Experimental setup In two subsections we briefly detail how the memory-based learner works, and how we optimized its parameters through an automatic process called iterative deepening.", "labels": [], "entities": []}, {"text": "3.1 Memory-based learning Memory-based learning is a supervised inductive learning algorithm for learning classification tasks.", "labels": [], "entities": [{"text": "learning classification tasks", "start_pos": 97, "end_pos": 126, "type": "TASK", "confidence": 0.6842708885669708}]}, {"text": "Memory-based learning treats a set of training instances as points in a multi-dimensional feature space, and stores them as such in an instance base in memory (rather than performing some abstraction over them).", "labels": [], "entities": []}, {"text": "New (test) instances are classified by matching them to all instances in memory, and by calculating with each match the distance, given by a distance function between the new instance X and each of then memory instances Y 1...n.", "labels": [], "entities": []}, {"text": "Classification in memory-based learning is performed by the k-NN algorithm that searches for the k 'nearest neighbours' among the memory instances according to the distance function.", "labels": [], "entities": [{"text": "Classification", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.9577353000640869}]}, {"text": "The majority class of the k nearest neighbours then determines the class of the new instance X.", "labels": [], "entities": []}, {"text": "Cf. (Daelemans et al., 2002) for algo-rithmic details and background.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [{"text": "In two subsections we briefly detail how the memorybased learner works, and how we optimized its parameters through an automatic process called iterative deepening.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Overall results (precision, recall, F-rate) of the  initial system on the test sets of both languages.", "labels": [], "entities": [{"text": "precision", "start_pos": 27, "end_pos": 36, "type": "METRIC", "confidence": 0.9995768666267395}, {"text": "recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.9985224604606628}, {"text": "F-rate", "start_pos": 46, "end_pos": 52, "type": "METRIC", "confidence": 0.9985173344612122}]}, {"text": " Table 3: Overall results (precision, recall, F-rate) of the  system with seed-list features on the test sets of both lan- guages.", "labels": [], "entities": [{"text": "precision", "start_pos": 27, "end_pos": 36, "type": "METRIC", "confidence": 0.9995908141136169}, {"text": "recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.999040424823761}, {"text": "F-rate", "start_pos": 46, "end_pos": 52, "type": "METRIC", "confidence": 0.9991142153739929}]}, {"text": " Table 4: Overall results (precision, recall, F-rate) of the  system with seed-list features and second-stage stacking  on the test sets of both languages.", "labels": [], "entities": [{"text": "precision", "start_pos": 27, "end_pos": 36, "type": "METRIC", "confidence": 0.9995716214179993}, {"text": "recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.9989639520645142}, {"text": "F-rate", "start_pos": 46, "end_pos": 52, "type": "METRIC", "confidence": 0.9985504746437073}]}]}