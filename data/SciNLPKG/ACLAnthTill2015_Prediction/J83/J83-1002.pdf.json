{"title": [{"text": "Denotational Semantics for \"'Natural'\" Language Question-Answering Programs 1", "labels": [], "entities": []}], "abstractContent": [{"text": "Scott-Strachey style denotational semantics is proposed as a suitable means of communicating the specification of \"natural\" language question answerers to computer programmers and software engineers.", "labels": [], "entities": [{"text": "communicating the specification of \"natural\" language question answerers", "start_pos": 79, "end_pos": 151, "type": "TASK", "confidence": 0.5668065279722214}]}, {"text": "The method is exemplified by a simple question answerer communicating with a small database.", "labels": [], "entities": []}, {"text": "This example is partly based on treatment of fragments of English by Montague.", "labels": [], "entities": []}, {"text": "Emphasis is placed on the semantic interpretation of questions.", "labels": [], "entities": [{"text": "semantic interpretation of questions", "start_pos": 26, "end_pos": 62, "type": "TASK", "confidence": 0.8227637261152267}]}, {"text": "The \"meaning\" of a question is taken as a function from the set of universes to a set of possible answers.", "labels": [], "entities": []}], "introductionContent": [{"text": "We advocate the use of Scott-Strachey denotational semantics for \"natural\" language question-answering programs.", "labels": [], "entities": []}, {"text": "The majority of this paper demonstrates the use of denotational semantics fora small question answerer.", "labels": [], "entities": []}, {"text": "The types of questions possible are similar to those in,, and.", "labels": [], "entities": []}, {"text": "The analysis is not as deep as in or similar studies, as it is oriented to the specification of useful, but linguistically modest, capabilities.", "labels": [], "entities": []}, {"text": "Before the demonstration, we discuss the benefits of formal semantics and why denotational semantics is an appropriate formalization.", "labels": [], "entities": []}, {"text": "The semantics of a question answerer is given by defining the action of the program for each possible input.", "labels": [], "entities": [{"text": "question answerer", "start_pos": 19, "end_pos": 36, "type": "TASK", "confidence": 0.7221588790416718}]}, {"text": "An informal semantic description, perhaps in narrative form, is necessary fora potential user who wants to know what questions he may ask and what sort of answers the program will provide.", "labels": [], "entities": []}, {"text": "Informal meanings are also valuable to the designer and implementer of a question answerer.", "labels": [], "entities": []}, {"text": "However, the designer and implementer must understand all aspects of a proposed question answerer in a precise unambiguous way that informal 1 This research was supported in part by NSF grants MCS7708486 and MCS8003433.", "labels": [], "entities": [{"text": "MCS7708486", "start_pos": 193, "end_pos": 203, "type": "DATASET", "confidence": 0.801398515701294}, {"text": "MCS8003433", "start_pos": 208, "end_pos": 218, "type": "DATASET", "confidence": 0.9284508228302002}]}, {"text": "2 Current Address: Department of Computer Science, University of Colorado, Boulder, CO 80309.", "labels": [], "entities": []}, {"text": "In short, a formal method of specifying the semantics is needed at the design and implementation stage (see.", "labels": [], "entities": []}, {"text": "Once a formal semantics has been given, it can be put to other uses as well.", "labels": [], "entities": []}, {"text": "It can provide the basis fora rigorous proof of correctness of an implementation.", "labels": [], "entities": []}, {"text": "Furthermore, formal specifications might allow partial automation of the implementation process in the same way that automatic compiler-writers produce parts of a compiler from a formal specification of a programming language (see.", "labels": [], "entities": []}, {"text": "With the advent of at least one commercially available \"natural\" language question-answering program), these advantages become even more concrete.", "labels": [], "entities": []}, {"text": "If there is a familiarity to these arguments, it is because the same reasoning is used to justify formal semantics for programming languages.", "labels": [], "entities": []}, {"text": "The problems of design and analysis of question answerers are much the same for programming argues this point at length.", "labels": [], "entities": [{"text": "analysis of question answerers", "start_pos": 27, "end_pos": 57, "type": "TASK", "confidence": 0.6632758006453514}]}, {"text": "An obvious approach is to apply a programming language technique -denotational semantics -to the problem of formally specifying a question answerer.", "labels": [], "entities": [{"text": "specifying a question answerer", "start_pos": 117, "end_pos": 147, "type": "TASK", "confidence": 0.6478881686925888}]}, {"text": "As a bonus, the method is understood by many programmers and software engineers through introductory textbooks such as,treatments to meet our needs.", "labels": [], "entities": []}, {"text": "In denotational semantics for programming languages, evaluation functions map program segments into objects in various semantic domains.", "labels": [], "entities": []}, {"text": "These objects are taken as the meanings of the program segments, and determine the output of a program.", "labels": [], "entities": []}, {"text": "Similarly, in the semantics of a question answerer, evaluation functions map input (questions) into objects that determine the output (answers).", "labels": [], "entities": []}, {"text": "Deciding what objects are in the semantic domains has a fundamental effect on the capabilities of the overlying question answerer, as well as an effect on the usefulness and clarity of the semantic descriptions.", "labels": [], "entities": [{"text": "clarity", "start_pos": 174, "end_pos": 181, "type": "METRIC", "confidence": 0.9868367910385132}]}, {"text": "discusses these considerations for natural language sentences and the domains described in section 2 are based on his, although the treatment of questions is closer to.", "labels": [], "entities": []}, {"text": "Also introduced in section 2 are the lambda expressions that denote individual semantic objects.", "labels": [], "entities": []}, {"text": "Such expressions have been used in denotational semantics of programming languages (see and in treatments of fragments of English by.", "labels": [], "entities": []}, {"text": "In section 3, evaluation functions mapping inputs fora small question answerer to objects in the semantic domain are given.", "labels": [], "entities": []}, {"text": "The allowable questions are defined by a category grammar as has been done by,,,, and others.", "labels": [], "entities": []}, {"text": "An account of the answer relationship is given in section 4.", "labels": [], "entities": []}, {"text": "In the final section, we briefly describe an implementation of the question answerer and suggest some broad principles for designing question answerers.", "labels": [], "entities": [{"text": "question answerer", "start_pos": 67, "end_pos": 84, "type": "TASK", "confidence": 0.6674480140209198}, {"text": "question answerers", "start_pos": 133, "end_pos": 151, "type": "TASK", "confidence": 0.7148322463035583}]}], "datasetContent": [], "tableCaptions": []}