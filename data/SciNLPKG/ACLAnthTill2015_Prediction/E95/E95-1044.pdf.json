{"title": [{"text": "Cooperative Error Handling and Shallow Processing", "labels": [], "entities": [{"text": "Cooperative Error Handling", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.6664072871208191}]}], "abstractContent": [{"text": "This paper is concerned with the detection and correction of sub-sentential English text errors.", "labels": [], "entities": [{"text": "detection and correction of sub-sentential English text errors", "start_pos": 33, "end_pos": 95, "type": "TASK", "confidence": 0.7764845378696918}]}, {"text": "Previous spelling programs, unless restricted to a very small set of words, have operated as post-processors.", "labels": [], "entities": []}, {"text": "And to date, grammar checkers and other programs which deal with ill-formed input usually step directly from spelling considerations to a full-scale parse, assuming a complete sentence.", "labels": [], "entities": [{"text": "grammar checkers", "start_pos": 13, "end_pos": 29, "type": "TASK", "confidence": 0.7555688619613647}]}, {"text": "Work described below is aimed at evaluating the effectiveness of shallow (sub-sentential) processing and the feasibility of cooperative error checking, through building and testing appropriately an error-processing system.", "labels": [], "entities": [{"text": "cooperative error checking", "start_pos": 124, "end_pos": 150, "type": "TASK", "confidence": 0.6151272157828013}]}, {"text": "A system under construction is outlined which incorporates morphological checks (us-ing new two-level error rules) over a directed letter graph, tag positional tri-grams and partial par~tng.", "labels": [], "entities": []}, {"text": "Unless a keyboard user is particularly proficient, a frustrating amount of time is usually spent back-tracking to pickup mis-typed or otherwise mistaken input.", "labels": [], "entities": []}, {"text": "Work described in this paper started from an idea of an error processor that would sit on top of an editor, detecting/correcting errors just after entry, while the user continued with further text, relieved from tedious backtracking.", "labels": [], "entities": []}, {"text": "Hence 'co-operative' error processing.", "labels": [], "entities": [{"text": "co-operative' error processing", "start_pos": 7, "end_pos": 37, "type": "TASK", "confidence": 0.6024477928876877}]}, {"text": "But if a program is to catch such errors very soon after they are entered, it will have to operate with less than the complete sentence.", "labels": [], "entities": []}, {"text": "Work underway focuses on shallow processing: how far error detection and correction can proceed when the system purview is set to a stretch of text which does not admit complete sentential analysis.", "labels": [], "entities": [{"text": "error detection and correction", "start_pos": 53, "end_pos": 83, "type": "TASK", "confidence": 0.7184837907552719}]}, {"text": "To date, grammar checkers and other programs.", "labels": [], "entities": [{"text": "grammar checkers", "start_pos": 9, "end_pos": 25, "type": "TASK", "confidence": 0.8486960828304291}]}, {"text": "which deal with illformed input usually step directly from spelling considerations to a full-scale sentence parse.", "labels": [], "entities": [{"text": "sentence parse", "start_pos": 99, "end_pos": 113, "type": "TASK", "confidence": 0.7476377785205841}]}, {"text": "However treating the sentence as a basic unit loses meaning when the 'sentence' is incomplete or illformed.", "labels": [], "entities": []}, {"text": "Shallow processing is also interesting because it should be cheaper and faster than a complete analysis of the whole sentence.", "labels": [], "entities": [{"text": "Shallow processing", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.773003339767456}]}, {"text": "To investigate issues involved in shallow processing and cooperative error handling, the pet (processing errors in text) system is being built.", "labels": [], "entities": [{"text": "cooperative error handling", "start_pos": 57, "end_pos": 83, "type": "TASK", "confidence": 0.682072103023529}]}, {"text": "The focus is on these two issues; no attempt is being made to produce a complete product 1.", "labels": [], "entities": []}, {"text": "Pet operates over a shifting window of text (it can be attached simply and asynchronously to the Emacs editor).", "labels": [], "entities": []}, {"text": "One word in this purview is in focus at a time.", "labels": [], "entities": []}, {"text": "Pet will give one of three responses to this word; it will accept the word, suggest a correction , or indicate that it found an error it couldn't correct.", "labels": [], "entities": []}, {"text": "Below follow an outline and discussion of the (linguistic) components of pet and discussion of testing and evaluation of the system.", "labels": [], "entities": []}, {"text": ":/Pet System Morphological Processing ~ Spelling Checking The word in focus is first passed through a two-level morphological analysis stage, based on an adaption of (Pulman, 1991).", "labels": [], "entities": [{"text": "Pet System Morphological Processing", "start_pos": 2, "end_pos": 37, "type": "TASK", "confidence": 0.4915924370288849}, {"text": "Spelling Checking", "start_pos": 40, "end_pos": 57, "type": "TASK", "confidence": 0.9302486777305603}]}, {"text": "Two purposes are served here: checking the word is lexica] (i.e. in the lexicon or a permissible inflection of a word in the lexicon) and collecting the possible categories, which are represented as sets of feature specifications (Grover, 1993).", "labels": [], "entities": []}, {"text": "This morphological lookup operates over a character trie which has been compressed into a (di-rected) graph.", "labels": [], "entities": []}, {"text": "Common endings are shared and category information is stored on the first unique transition.", "labels": [], "entities": []}, {"text": "The advantages of this compression are that (1) a word/morpheme is recognised (and category affixation rules (Grove L 1993) checked) as soon as the initial letters allow uniqueness, rather than at the end of the word, and (2) there is an immense saving of space.", "labels": [], "entities": []}, {"text": "There was a reduction of over half the transitions on the trie formed from the Alvey lexicon.", "labels": [], "entities": [{"text": "Alvey lexicon", "start_pos": 79, "end_pos": 92, "type": "DATASET", "confidence": 0.9525160491466522}]}, {"text": "If the word is unknown, the system reconsiders analysis from the point where it broke down with 1In particular, there axe many HCI issues associated with such a system, which are beyond the scope of this paper.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [{"text": "With the aim of evaluating the effectiveness of shallow processing, tests will be carried out to see what proportion of different types of errors can be dealt with elegantly, adequately and/or efficiently.", "labels": [], "entities": []}, {"text": "Under examination will be the number of errors missed/caught and wrongly/rightly corrected.", "labels": [], "entities": []}, {"text": "Different components and configurations of the system will be compared, for example the error rules v. p.b.t.'s.", "labels": [], "entities": []}, {"text": "Parameters of the system will be varied, for example the breadth of the purview, the position of the purview focus, the number of correction candidates and the timing of their generation.", "labels": [], "entities": [{"text": "breadth", "start_pos": 57, "end_pos": 64, "type": "METRIC", "confidence": 0.962826669216156}]}, {"text": "Will shallow processing miss too many of the errors cooperative error processing is aimed at?", "labels": [], "entities": []}, {"text": "There are two significant difficulties with collecting test data.", "labels": [], "entities": []}, {"text": "The central difficulty is finding a representative sample of genuine errors by native speakers, in context, with the correct version of the text attached.", "labels": [], "entities": []}, {"text": "Apart from anything else, 'representative' is hard to decide -spectrum of errors or distribution of errors ? Secondly, any corpus of text usually contains only those errors that were left undetected in the text.", "labels": [], "entities": []}, {"text": "Cooperative processing deals with errors that one backtracks to catch; if not a different class or range, these at least might have a different distribution of error types.", "labels": [], "entities": [{"text": "Cooperative processing", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.7209600210189819}]}, {"text": "The ideal data would be records of peoples' keystrokes when interacting with an editor while creating or editing apiece of text.", "labels": [], "entities": []}, {"text": "This would 2Microsoft Word 6.0 Autocorrect Wizard allow one measure of the (linguistic) feasibility of cooperative error processing: the effectiveness of shallow processing over errors revealed by the keystroke-record data.", "labels": [], "entities": [{"text": "2Microsoft Word 6.0 Autocorrect Wizard", "start_pos": 11, "end_pos": 49, "type": "DATASET", "confidence": 0.8561670780181885}]}, {"text": "There does not appear to bean English source of this kind, so it is planned to compile one.", "labels": [], "entities": []}, {"text": "For comparison, a variety of other data has been collected.", "labels": [], "entities": []}, {"text": "Preliminary tests used generated errors, from a program that produces random Damerau slips according to an observed distribution, using confusion matrices where appropriate.", "labels": [], "entities": []}, {"text": "Assembled data includes the Birkbeck corpus and multifarious misspelling lists (without context).", "labels": [], "entities": [{"text": "Birkbeck corpus", "start_pos": 28, "end_pos": 43, "type": "DATASET", "confidence": 0.9599471688270569}]}, {"text": "Suggestions have been made to look for low frequency words in corpora and news/mail archives, and to the Longmans learner corpus (not native speakers).", "labels": [], "entities": [{"text": "Longmans learner corpus", "start_pos": 105, "end_pos": 128, "type": "DATASET", "confidence": 0.9190011223157247}]}], "tableCaptions": []}