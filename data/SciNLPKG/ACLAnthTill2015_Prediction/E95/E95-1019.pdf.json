{"title": [{"text": "Hep-pie (1990) and Hendriks (1993) have concentrated on the possibilities of sequent proof normalisa-tion", "labels": [], "entities": []}], "abstractContent": [{"text": "We show how categorial deduction can be implemented in higher-order (lin-ear) logic programming, thereby realis-ing parsing as deduction for the associa-tive and non-associative Lambek calculi.", "labels": [], "entities": []}, {"text": "This provides a method of solution to the parsing problem of Lambek categorial grammar applicable to a variety of its extensions.", "labels": [], "entities": [{"text": "parsing problem of Lambek categorial grammar", "start_pos": 42, "end_pos": 86, "type": "TASK", "confidence": 0.6760314404964447}]}, {"text": "The present work deals with the parsing problem for Lambek calculus and its extensions as developed in, for example, Moortgat (1988), van a strategy of unfolding and labelling for proof net construction is considered.", "labels": [], "entities": [{"text": "proof net construction", "start_pos": 180, "end_pos": 202, "type": "TASK", "confidence": 0.6515837013721466}]}, {"text": "We aim to show here how such unfolding allows compilation into programs executable by aversion of SLD resolution, implementing categorial deduction in dynamic linear clauses.", "labels": [], "entities": [{"text": "SLD resolution", "start_pos": 98, "end_pos": 112, "type": "TASK", "confidence": 0.8625680208206177}]}, {"text": "The linearity resides in the use exactly once per word token of each of the clauses compiled from lexical categorisations.", "labels": [], "entities": []}, {"text": "By dynamic, it is meant that clauses maybe higher-order (they are hereditary Harrop Horn clauses) so that clausal resolution involves insertion in, as well as retraction from, the resolution database; see Miller et al.", "labels": [], "entities": [{"text": "clausal resolution", "start_pos": 106, "end_pos": 124, "type": "TASK", "confidence": 0.7841716110706329}]}, {"text": "(1991), and Hodas and Miller (1994).", "labels": [], "entities": []}, {"text": "It is shown how a range of calculi can be treated by dealing with the highest common factor of connectives as linear logical validity.", "labels": [], "entities": []}, {"text": "The prosodic (i.e. sublinear) aspects of word order and hierarchical structure are encoded in labels, in effect the term structure of quantified linear logic.", "labels": [], "entities": []}, {"text": "Compiling labels according to interpretations in groupoids provides a general method for calculi with various structural properties and also for multimodal hybrid formulations.", "labels": [], "entities": []}, {"text": "Unification must be carried out according to the structural axioms but is limited to one-way matching, i.e. one term is always ground.", "labels": [], "entities": []}, {"text": "Furthermore, for the particular case of associative Lambek calculus an additional perspective of binary relational interpretation allows an especially efficient coding in which the span of expressions is represented in such away as to avoid the computation of unifiers under associativity, and this can also be exploited for non-associative calculus.", "labels": [], "entities": [{"text": "binary relational interpretation", "start_pos": 97, "end_pos": 129, "type": "TASK", "confidence": 0.7408847014109293}]}, {"text": "Higher-order linear logic programming has already been applied to natural language processing in, for example, Hodas (1992) and Hodas and Miller (1994), in work deriving from Pareschi (1989) and Pareschi and Miller (1990).", "labels": [], "entities": []}, {"text": "What we show here is that such implementation can be re-alised systematically, indeed by a mechanical compilation , while grammars themselves are written in higher level categorial grammar formalism.", "labels": [], "entities": []}, {"text": "Automated deduction for Lambek calculi is of interest in its own right but solution of the parsing problem for categorial logic allowing significant linguistic coverage demands automated deduction for more than just individual calculi.", "labels": [], "entities": []}, {"text": "There is a need for methods applying to whole classes of systems in ways which are principled and powerful enough to support the further generalisations that grammar development will demand.", "labels": [], "entities": [{"text": "grammar development", "start_pos": 158, "end_pos": 177, "type": "TASK", "confidence": 0.7513366639614105}]}, {"text": "We aim to indicate here how higher-order logic program-ruing can provide for such a need.", "labels": [], "entities": []}, {"text": "After reviewing the \"standard\" approach, via sequent proof normalisation, we outline the relevant features of (linear) logic programming and explain compilation and execution for associative and non-associative calculi in terms of groupoid and binary relational interpretations of categorial connectives.", "labels": [], "entities": []}, {"text": "We goon to briefly mention multi-modal calculi for the binary connectives.", "labels": [], "entities": []}, {"text": "The parsing problem is usually construed as the recovery of structural descriptions assigned to strings by a grammar.", "labels": [], "entities": []}, {"text": "In practice the interest is in computing semantic forms implicit in the structural descriptions, which are themselves usually implicit in the history of a derivation recog-nising well-formedness of a string.", "labels": [], "entities": []}, {"text": "This is true in particular of compositional categorial architec-133", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}