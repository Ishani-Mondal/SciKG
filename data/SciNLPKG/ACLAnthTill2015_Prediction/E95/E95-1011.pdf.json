{"title": [{"text": "A Tractable Extension of Linear Indexed Grammars", "labels": [], "entities": [{"text": "Tractable Extension of Linear Indexed Grammars", "start_pos": 2, "end_pos": 48, "type": "TASK", "confidence": 0.7615940769513448}]}], "abstractContent": [{"text": "Vijay-Shanker and Weir (1993) show that Linear Indexed Grammars (I_IG) can be processed in polynomial time by exploiting constraints which make possible the extensive use of structure-sharing.", "labels": [], "entities": []}, {"text": "This paper describes a formalism that is more powerful than I_IG, but which can also be processed in polynomial time using similar techniques.", "labels": [], "entities": []}, {"text": "The formalism , which we refer to as Partially Linear PATR (PI_PATR) manipulates feature structures rather than stacks.", "labels": [], "entities": []}], "introductionContent": [{"text": "Unification-based grammar formalisms can be viewed as generalizations of Context-Free Grammars (CFG) where the nonterminal symbols are replaced by an infinite domain of feature structures.", "labels": [], "entities": []}, {"text": "Much of their popularity stems from the way in which syntactic generalization maybe elegantly stated by means of constraints amongst features and their values.", "labels": [], "entities": []}, {"text": "Unfortunately, the expressivity of these formalisms can have undesirable consequences for their processing.", "labels": [], "entities": []}, {"text": "In naive implementations of unification grammar parsers, feature structures play the same role as nonterminals in standard context-free grammar parsers.", "labels": [], "entities": [{"text": "unification grammar parsers", "start_pos": 28, "end_pos": 55, "type": "TASK", "confidence": 0.8231065273284912}]}, {"text": "Potentially large feature structures are stored at intermediate steps in the computation, so that the space requirements of the algorithm are expensive.", "labels": [], "entities": []}, {"text": "Furthermore, the need to perform nondestructive unification means that a large proportion of the processing time is spent copying feature structures.", "labels": [], "entities": []}, {"text": "One approach to this problem is to refine parsing algorithms by developing techniques such as restrictions, structure-sharing, and lazy unification that reduce the amount of structure that is stored and hence the need for copying of features structures).", "labels": [], "entities": []}, {"text": "While these techniques can yield significant improvements in performance, the generality of unification-based grammar formalisms means that there are still cases where expensive processing is unavoidable.", "labels": [], "entities": []}, {"text": "This approach does not address the fundamental issue of the tradeoff between the descriptive capacity of a formalism and its computational power.", "labels": [], "entities": []}, {"text": "In this paper we identify a set of constraints that can be placed on unification-based grammar formalisms in order to guarantee the existence of polynomial time parsing algorithms.", "labels": [], "entities": []}, {"text": "Our choice of constraints is motivated by showing how they generalize constraints inherent in Linear Indexed Grammar (l_lG).", "labels": [], "entities": []}, {"text": "We begin by describing how constraints inherent in I.IG admit tractable processing algorithms and then consider how these constraints can be generalized to a formalism that manipulates trees rather than stacks.", "labels": [], "entities": []}, {"text": "The constraints that we identify for the tree-based system can be regarded equally well as constraints on unification-based grammar formalisms such as PArR.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}