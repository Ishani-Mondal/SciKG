{"title": [], "abstractContent": [{"text": "Lexical choice is a computationally complex task, requiring a generation system to consider a potentially large number of mappings between concepts and words.", "labels": [], "entities": [{"text": "Lexical choice", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.8696421384811401}]}, {"text": "Constraints that aid in determining which word is best come from a wide variety of sources, including syntax, semantics, pragmatics, the lexicon, and the underlying domain.", "labels": [], "entities": []}, {"text": "Furthermore, in some situations, different constraints come into play early on, while in others, they apply much later.", "labels": [], "entities": []}, {"text": "This makes it difficult to determine a systematic ordering in which to apply constraints.", "labels": [], "entities": []}, {"text": "In this paper, we present a general approach to lexical choice that can handle multiple, interacting constraints.", "labels": [], "entities": []}, {"text": "We focus on the problem of floating constraints, semantic or pragmatic constraints that float, appearing at a variety of different syntactic ranks, often merged with other semantic constraints.", "labels": [], "entities": []}, {"text": "This means that multiple content units can be realized by a single surface element, and conversely, that a single content unit can be realized by a variety of surface elements.", "labels": [], "entities": []}, {"text": "Our approach uses the Functional Unification Formalism (Fu~) to represent a generation lexicon, allowing for declarative and compositional representation of individual constraints.", "labels": [], "entities": []}], "introductionContent": [{"text": "Given a request to communicate, a language generator typically must select information from an underlying domain representation and determine how to order this information, ultimately realizing the representation as sentences by selecting words and linearly ordering them under the syntactic constraints of the language.", "labels": [], "entities": []}, {"text": "The problem of determining what words to use for the concepts in the domain representation is termed lexical choice.", "labels": [], "entities": []}, {"text": "In an effort to make domain representations independent of language, there maybe a variety of different words that can be used to express any concept in the domain, and a language generator must choose which one is most appropriate in the current context.", "labels": [], "entities": []}, {"text": "A one-to-one mapping between each domain concept and a word of the language would imply that concepts are represented by words, clearly an undesirable situation.", "labels": [], "entities": []}, {"text": "Just as there is no reason to assume that a concept uniquely determines a word, there is no reason to assume that a single concept must map to a single word; a domain concept maybe expressed by multiple words, or conversely, a single word may express a combination of concepts.", "labels": [], "entities": []}, {"text": "Avoiding encoding any assumptions about the mapping between domain and language has the benefit of portability; the architecture and some knowledge sources of the generator can be reused fora variety of different applications in quite different * Mathematics and Computer Science Department, Beer Sheva, 84105 Israel.", "labels": [], "entities": [{"text": "Beer Sheva, 84105 Israel", "start_pos": 292, "end_pos": 316, "type": "DATASET", "confidence": 0.5923658967018127}]}, {"text": "E-mail: elhadad@cs.bgu.ac.il t Computer Science Department, New York, NY 10027 USA.", "labels": [], "entities": [{"text": "USA", "start_pos": 79, "end_pos": 82, "type": "DATASET", "confidence": 0.6445358991622925}]}, {"text": "E-mail: kathy@cs.columbia.edu :~ Departamento de Informatica, Recife, PE 50740-540 Brazil.", "labels": [], "entities": [{"text": "Recife, PE 50740-540 Brazil", "start_pos": 62, "end_pos": 89, "type": "DATASET", "confidence": 0.8782313942909241}]}, {"text": "E-mail: jr@di.ufpe.br Furthermore, interaction between constraints is multidirectional, making it difficult to determine a systematic ordering in which constraints should betaken into account.", "labels": [], "entities": []}, {"text": "In fact, earlier work on lexical choice implied that anew ordering of constraints, and thus anew architecture for lexical choice, must be developed for each new domain.", "labels": [], "entities": []}, {"text": "In this paper, we present a general approach to lexical choice that can handle multiple, interacting constraints.", "labels": [], "entities": []}, {"text": "Our architecture positions the lexical choice module between a language generator's content planner and surface sentence generator, in order to take into account conceptual, pragmatic, and linguistic constraints on word choice.", "labels": [], "entities": []}, {"text": "We show how the Functional Unification Formalism (FUF) (Elhadad 1993a), originally developed for representing syntactic grammars, can be used to represent a generation lexicon, allowing for declarative and compositional representation of independent constraints.", "labels": [], "entities": [{"text": "FUF", "start_pos": 50, "end_pos": 53, "type": "METRIC", "confidence": 0.7862758636474609}]}, {"text": "The order of constraint application is determined dynamically through unification, allowing for different orderings as required.", "labels": [], "entities": []}, {"text": "Since any approach must deal with a combinatorial explosion of possible mappings and ordering of constraints, computational efficiency is in general an issue.", "labels": [], "entities": []}, {"text": "We show control techniques we have developed within FUF to reduce overall search.", "labels": [], "entities": [{"text": "FUF", "start_pos": 52, "end_pos": 55, "type": "DATASET", "confidence": 0.9090434312820435}]}, {"text": "In this paper, we illustrate our model for lexical choice as it has been implemented in ADVISOR-II (Elhadad 1993c), a system that can advise students about course selection, but we also draw on examples from two other systems based on the same model but within different generation architectures: STREAK, a system for generating basketball game summaries and COOK (, a system that generates stock market reports.", "labels": [], "entities": [{"text": "ADVISOR-II (Elhadad 1993c)", "start_pos": 88, "end_pos": 114, "type": "DATASET", "confidence": 0.8559403419494629}, {"text": "generating basketball game summaries", "start_pos": 318, "end_pos": 354, "type": "TASK", "confidence": 0.6510696783661842}]}, {"text": "2 We have used this same model for lexical choice in other systems we have developed, such as COMET ( ), a multimedia explanation system for equipment maintenance and repair, and PLANDOC (, an automated documentation system under collaborative development with Bellcore.", "labels": [], "entities": [{"text": "equipment maintenance and repair", "start_pos": 141, "end_pos": 173, "type": "TASK", "confidence": 0.701338417828083}, {"text": "Bellcore", "start_pos": 261, "end_pos": 269, "type": "DATASET", "confidence": 0.9845649003982544}]}, {"text": "We focus on the problem of floating constraints, constraints that cannot be mapped in a systematic way from an input conceptual representation to the linguistic structure.", "labels": [], "entities": []}, {"text": "Instead, such constraints float, appearing at a variety of different levels in the resulting linguistic structure, depending on other constraints in the input.", "labels": [], "entities": []}, {"text": "Such constraints pose problems (see discussion in Elhadad and Robin) for the top-down recursive building of the linguistic structure used by most generation algorithms (); these algorithms typically only handle structural constraints, constraints that are consistently expressed at a given linguistic rank (e.g., the sentence, clause, group, or word rank)) in the application domain sublanguage.", "labels": [], "entities": []}, {"text": "We consider two different types of floating constraints: \u2022 Interlexical constraints, which arise from restrictions on lexical co-occurrences such as collocations (Smadja 1991) (they are orthogonal to the mapping from input content units onto output linguistic form since they both originate from the lexicon and act upon the lexicon).", "labels": [], "entities": []}, {"text": "\u2022 Cross-ranking constraints, which arise from the fact that an input network of content units is not isomorphic with the resulting linguistic structure, allowing a single content unit to be realized by surface elements of various linguistic ranks (cross-ranking proper), or multiple content units to be realized by the same surface element (merging).", "labels": [], "entities": []}, {"text": "Sentences and below, generated by COOK, illustrate cross-ranking constraints.", "labels": [], "entities": []}, {"text": "They show how time and manner can be mapped to two different surface elements of different syntactic rank in the sentence, among many other possibilities.", "labels": [], "entities": []}, {"text": "Sentences (3) and (4), generated by STREAK, show how game result and manner can be realized as two separate surface elements or can be merged into a single element, the verb.", "labels": [], "entities": [{"text": "STREAK", "start_pos": 36, "end_pos": 42, "type": "METRIC", "confidence": 0.47264572978019714}]}, {"text": "In these examples, the input conceptual constraints (time and manner) float, appearing at a variety of different syntactic ranks (here, verb and circumstantial), and are sometimes merged with other semantic constraints.", "labels": [], "entities": []}, {"text": "Which content units are floating and which are structural depends on the domain and the particular target sublanguage.", "labels": [], "entities": []}, {"text": "Our corpus analysis of the basketball domain, for example, indicates that historical knowledge is floating, whereas game result information is structural.", "labels": [], "entities": []}, {"text": "Similarly, in the student advising domain, we found course evaluation (e.g., how difficult or interesting a course is) to be floating, whereas the description of the assignments required (e.g., how many there are or whether they involve writing essays, software, or proofs) in a course is structural.", "labels": [], "entities": []}, {"text": "Floating constraints have not been addressed in a general way in previous work; most systems implicitly hardwire the choices or permit only one or two of many possibilities.", "labels": [], "entities": []}, {"text": "In contrast, our model for lexical choice accommodates floating constraints, resulting in a system with a high degree of paraphrasing power.", "labels": [], "entities": []}, {"text": "In the following sections, we first present our general model for lexical choice, illustrating it with a relatively simple example.", "labels": [], "entities": []}, {"text": "We then discuss different types of constraints and the problems they pose, presenting the techniques we have developed within FUF to address these issues, turning from structural constraints, to pragmatic cross-ranking constraints, and to interlexical constraints.", "labels": [], "entities": [{"text": "FUF", "start_pos": 126, "end_pos": 129, "type": "DATASET", "confidence": 0.8997901678085327}]}, {"text": "Finally, we compare our approach with other work on lexical choice, closing with a summary of our contributions.", "labels": [], "entities": []}], "datasetContent": [{"text": "We first illustrate the implementation of floating constraints in a Lexical Chooser taking as example the merging of a conceptual unit with an argumentative evaluation.", "labels": [], "entities": []}, {"text": "Consider the task of mapping an argumentative evaluation onto a simple clause.", "labels": [], "entities": []}, {"text": "In this simple example, the input is made up of two semantic units: a conceptual relation, e.g., class_assignt (assignt_setl, ai) and an argumentative evaluation, e.g., eval(ai, difficulty).", "labels": [], "entities": []}, {"text": "For this example, we will restrict the available sites in the syntactic clause capable of realizing the evaluation to be: the main verb, modifiers of the NP realizing the class (i.e., premodifying adjective or relative clause), and the determiner sequence.", "labels": [], "entities": []}, {"text": "2\u00b0 The input description for this configuration of semantic units is shown in Figure 13 both graphically and as an FD matrix.", "labels": [], "entities": [{"text": "FD", "start_pos": 115, "end_pos": 117, "type": "METRIC", "confidence": 0.9216524958610535}]}, {"text": "In the graphical representation, argumentative evaluations are represented as wavy lines, and semantic predications as straight lines.", "labels": [], "entities": []}, {"text": "The dotted line indicates that the two evaluations (many assignments and difficulty) are part of an argumentative rule--a topos--which reads: the more a class has assignments the more difficult it is.", "labels": [], "entities": []}, {"text": "In the FD matrix, the evaluations and the conceptual relations are represented under two separate top-level features of the input semr (floating and structural respectively).", "labels": [], "entities": []}, {"text": "This representation does not commit the Lexical Chooser to map the evaluations to any particular site a priori--highlighting the floating nature of evaluations.", "labels": [], "entities": []}, {"text": "Therefore, one of the tasks of the Lexical Chooser, is to decide to which node in the linguistic tree the argumentative evaluations will be attached.", "labels": [], "entities": [{"text": "Lexical Chooser", "start_pos": 35, "end_pos": 50, "type": "TASK", "confidence": 0.8107626736164093}]}, {"text": "In the overall flow of control followed by FUF (discussed in Section 2.5), semantic relations are mapped onto a linguistic tree, which is expanded top-down, breadth-first.", "labels": [], "entities": [{"text": "FUF", "start_pos": 43, "end_pos": 46, "type": "DATASET", "confidence": 0.7631984949111938}]}, {"text": "So the decision to attach an evaluation at a given node in the linguistic structure must also be made top-down.", "labels": [], "entities": []}, {"text": "This order of decision making is shown in and is followed as the clause structure is constructed.", "labels": [], "entities": [{"text": "decision making", "start_pos": 14, "end_pos": 29, "type": "TASK", "confidence": 0.8792629241943359}]}, {"text": "At each stage of this traversal, the Lexical Chooser checks whether there is lexical material available in the lexicon to realize the evaluation at the specified syntactic level.", "labels": [], "entities": []}, {"text": "For example, at the verb level, the Lexical Chooser checks whether there exists a verb that expresses the class_assignt relation and has for connotation that the class argument is difficult.", "labels": [], "entities": []}, {"text": "In this case, the verb require can be selected.", "labels": [], "entities": []}, {"text": "If, however, the evaluation was on the scale of interest, no appropriate verb could be found (there is no verb expressing both that a course is interesting and that it involves certain assignments).", "labels": [], "entities": []}, {"text": "At the NP level, the Lexical Chooser would then check whether there exists a scalar adjective that can realize the evaluation.", "labels": [], "entities": []}, {"text": "20 In the implementation of ADVISOR-II, the Lexical Chooser also considers as potential sites connectives and indirect argumentative evaluations--i.e., relying on a topos relation of the form \"the more a class has assignments, the more difficult it is,\" one can realize the evaluation of a class as difficult by evaluating as large the set of assignments it requires.", "labels": [], "entities": []}, {"text": "In that case, a modifier of the NP assignments realizes the evaluation on the entity class.", "labels": [], "entities": []}, {"text": "Lexical Chooser input for one semantic unit and one floating constraint.", "labels": [], "entities": []}, {"text": "Example of corresponding output sentence: AI has many assignments, so it is difficult.", "labels": [], "entities": []}, {"text": "Order of decisions during top-down traversal for mapping argumentative evaluations.", "labels": [], "entities": [{"text": "mapping argumentative evaluations", "start_pos": 49, "end_pos": 82, "type": "TASK", "confidence": 0.8235073288281759}]}, {"text": "The way these decisions are implemented in FUF is shown in.", "labels": [], "entities": [{"text": "FUF", "start_pos": 43, "end_pos": 46, "type": "DATASET", "confidence": 0.8269979953765869}]}, {"text": "The overall process is shown in ...", "labels": [], "entities": []}], "tableCaptions": []}