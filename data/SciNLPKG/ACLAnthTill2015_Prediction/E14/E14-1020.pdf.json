{"title": [], "abstractContent": [{"text": "We present a natural language generation system which supports the incremen-tal specification of ontology-based queries in natural language.", "labels": [], "entities": []}, {"text": "First, we introduce a chart based surface realisation algorithm which supports the kind of incremental processing required by ontology-based querying.", "labels": [], "entities": []}, {"text": "Crucially, this algorithm avoids confusing the end user by preserving a consistent ordering of the query elements throughout the incremental query formulation process.", "labels": [], "entities": [{"text": "query formulation", "start_pos": 141, "end_pos": 158, "type": "TASK", "confidence": 0.7513037621974945}]}, {"text": "Second, we show that grammar based surface realisation better supports the generation of fluent, natural sounding queries than previous template-based approaches .", "labels": [], "entities": [{"text": "grammar based surface realisation", "start_pos": 21, "end_pos": 54, "type": "TASK", "confidence": 0.6988648921251297}]}], "introductionContent": [{"text": "Previous research has shown that formal ontologies could be used as a means not only to provide a uniform and flexible approach to integrating and describing heterogeneous data sources, but also to support the final user in querying them, thus improving the usability of the integrated system.", "labels": [], "entities": []}, {"text": "To support the wide access to these data sources, it is crucial to develop efficient and user-friendly ways to query them (.", "labels": [], "entities": []}, {"text": "In this paper, we present a Natural Language (NL) interface of an ontology-based query tool, called Quelo 1 , which allows the end user to formulate a query without any knowledge either of the formal languages used to specify ontologies, or of the content of the ontology being used.", "labels": [], "entities": []}, {"text": "Following the conceptual authoring approach described in, this interface masks the composition of a formal query 1 krdbapp.inf.unibz.it:8080/quelo as the composition of an English text describing the equivalent information needs using natural language generation techniques.", "labels": [], "entities": []}, {"text": "The natural language generation system that we propose for Quelo's NL interface departs from similar work) in that it makes use of standard grammar based surface realisation techniques.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 4, "end_pos": 31, "type": "TASK", "confidence": 0.6670924226442972}]}, {"text": "First, we introduce a chart based surface realisation algorithm which supports the kind of incremental processing required by ontology driven query formulation.", "labels": [], "entities": [{"text": "query formulation", "start_pos": 142, "end_pos": 159, "type": "TASK", "confidence": 0.7001797556877136}]}, {"text": "Crucially, this algorithm avoids confusing the end user by preserving a consistent ordering of the query elements throughout the incremental query formulation process.", "labels": [], "entities": [{"text": "query formulation", "start_pos": 141, "end_pos": 158, "type": "TASK", "confidence": 0.7513037621974945}]}, {"text": "Second, we show that grammar based surface realisation better supports the generation of fluent, natural sounding queries than previous template-based approaches.", "labels": [], "entities": [{"text": "grammar based surface realisation", "start_pos": 21, "end_pos": 54, "type": "TASK", "confidence": 0.6988648921251297}]}, {"text": "The paper is structured as follows.", "labels": [], "entities": []}, {"text": "Section 2 discusses related work and situates our approach.", "labels": [], "entities": []}, {"text": "Section 3 describes the task being addressed namely, ontology driven query formulation.", "labels": [], "entities": [{"text": "ontology driven query formulation", "start_pos": 53, "end_pos": 86, "type": "TASK", "confidence": 0.6455978900194168}]}, {"text": "It introduces the input being handled, the constraints under which generation operates and the operations the user may perform to build her query.", "labels": [], "entities": []}, {"text": "In Section 4, we present the generation algorithm used to support the verbalisation of possible queries.", "labels": [], "entities": []}, {"text": "Section 5 reports on an evaluation of the system with respect to fluency, clarity, coverage and incrementality.", "labels": [], "entities": [{"text": "clarity", "start_pos": 74, "end_pos": 81, "type": "METRIC", "confidence": 0.9985309839248657}, {"text": "coverage", "start_pos": 83, "end_pos": 91, "type": "METRIC", "confidence": 0.9962886571884155}]}, {"text": "Section 6 concludes with pointers for further research.", "labels": [], "entities": []}], "datasetContent": [{"text": "We conducted evaluation experiments designed to address the following questions: \u2022 Does the scoring mechanism appropriately capture the ordering constraints on the generated queries ? That is, does it ensure that the generated queries respect the strict total order of the query tree linearisation ? \u2022 Does our grammar based approach produce more fluent and less ambiguous NL query than the initial template based approach currently used by Quelo ? \u2022 Does the automatic extraction of lexicons from ontology support generic coverage of arbitrary ontologies ? We start by describing the grammar used.", "labels": [], "entities": []}, {"text": "We then report on the results obtained for each of these evaluation points.", "labels": [], "entities": []}], "tableCaptions": []}