{"title": [{"text": "Non-Monotonic Parsing of Fluent umm I Mean Disfluent Sentences", "labels": [], "entities": [{"text": "Non-Monotonic Parsing of Fluent umm", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.5404937624931335}]}], "abstractContent": [{"text": "Parsing disfluent sentences is a challenging task which involves detecting disflu-encies as well as identifying the syntactic structure of the sentence.", "labels": [], "entities": [{"text": "Parsing disfluent sentences", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.918123463789622}]}, {"text": "While there have been several studies recently into solely detecting disfluencies at a high performance level, there has been relatively little work into joint parsing and disfluency detection that has reached that state-of-the-art performance in disfluency detection.", "labels": [], "entities": [{"text": "joint parsing", "start_pos": 154, "end_pos": 167, "type": "TASK", "confidence": 0.6495218276977539}, {"text": "disfluency detection", "start_pos": 172, "end_pos": 192, "type": "TASK", "confidence": 0.7427057921886444}, {"text": "disfluency detection", "start_pos": 247, "end_pos": 267, "type": "TASK", "confidence": 0.9060430526733398}]}, {"text": "We improve upon recent work in this joint task through the use of novel features and learning cascades to produce a model which performs at 82.6 F-score.", "labels": [], "entities": [{"text": "82.6", "start_pos": 140, "end_pos": 144, "type": "METRIC", "confidence": 0.9272607564926147}, {"text": "F-score", "start_pos": 145, "end_pos": 152, "type": "METRIC", "confidence": 0.7841951251029968}]}, {"text": "It outper-forms the previous best in disfluency detection on two different evaluations.", "labels": [], "entities": [{"text": "disfluency detection", "start_pos": 37, "end_pos": 57, "type": "TASK", "confidence": 0.8692116737365723}]}], "introductionContent": [{"text": "Disfluencies in speech occur for several reasons: hesitations, unintentional mistakes or problems in recalling anew object ().", "labels": [], "entities": []}, {"text": "Disfluencies are often decomposed into three types: filled pauses (IJ) such as \"uh\" or \"huh\", discourse markers (DM) such as \"you know\" and \"I mean\" and edited words (reparandum) which are repeated or corrected by the speaker (repair).", "labels": [], "entities": []}, {"text": "The following sentence illustrates the three types: To date, there have been many studies on disfluency detection) such as those based on TAGs and the noisy channel model (e.g.,,, and).", "labels": [], "entities": [{"text": "disfluency detection", "start_pos": 93, "end_pos": 113, "type": "TASK", "confidence": 0.6989271640777588}]}, {"text": "High performance disfluency detection methods can greatly enhance the linguistic processing pipeline of a spoken dialogue system by first \"cleaning\" the speaker's utterance, making it easier fora parser to process correctly.", "labels": [], "entities": []}, {"text": "A joint parsing and disfluency detection model can also speedup processing by merging the disfluency and parsing steps into one.", "labels": [], "entities": [{"text": "parsing and disfluency detection", "start_pos": 8, "end_pos": 40, "type": "TASK", "confidence": 0.5796581134200096}]}, {"text": "However, joint parsing and disfluency detection models, such as, based on these approaches have only achieved moderate performance in the disfluency detection task.", "labels": [], "entities": [{"text": "joint parsing", "start_pos": 9, "end_pos": 22, "type": "TASK", "confidence": 0.711635559797287}, {"text": "disfluency detection", "start_pos": 27, "end_pos": 47, "type": "TASK", "confidence": 0.7281792014837265}, {"text": "disfluency detection task", "start_pos": 138, "end_pos": 163, "type": "TASK", "confidence": 0.8515568176905314}]}, {"text": "Our aim in this paper is to show that a high performance joint approach is viable.", "labels": [], "entities": []}, {"text": "We build on our previous work) (henceforth RT13) to jointly detect disfluencies while producing dependency parses.", "labels": [], "entities": [{"text": "RT13", "start_pos": 43, "end_pos": 47, "type": "DATASET", "confidence": 0.7502648234367371}]}, {"text": "While this model produces parses at a very high accuracy, it does not perform as well as the state-of-the-art in disfluency detection (Qian and Liu, 2013) (henceforth QL13).", "labels": [], "entities": [{"text": "accuracy", "start_pos": 48, "end_pos": 56, "type": "METRIC", "confidence": 0.9947939515113831}, {"text": "disfluency detection", "start_pos": 113, "end_pos": 133, "type": "TASK", "confidence": 0.868077963590622}]}, {"text": "In this paper, we extend RT13 in two important ways: 1) we show that by adding a set of novel features selected specifically for disfluency detection we can outperform the current state of the art in disfluency detection in two evaluations 1 and 2) we show that by extending the architecture from two to six classifiers, we can drastically increase the speed and reduce the memory usage of the model without a loss in performance.", "labels": [], "entities": [{"text": "disfluency detection", "start_pos": 129, "end_pos": 149, "type": "TASK", "confidence": 0.7791796028614044}, {"text": "disfluency detection", "start_pos": 200, "end_pos": 220, "type": "TASK", "confidence": 0.8505628108978271}, {"text": "speed", "start_pos": 353, "end_pos": 358, "type": "METRIC", "confidence": 0.9773207902908325}]}], "datasetContent": [{"text": "We evaluate our new models, M2E and M6, against prior work on two different test conditions.", "labels": [], "entities": []}, {"text": "In the first evaluation (Eval 1), we use the parsed section of the Switchboard corpus () with the train/dev/test splits from Johnson and Charniak (2004) (JC04).", "labels": [], "entities": [{"text": "Switchboard corpus", "start_pos": 67, "end_pos": 85, "type": "DATASET", "confidence": 0.7505449056625366}, {"text": "JC04", "start_pos": 154, "end_pos": 158, "type": "DATASET", "confidence": 0.8640944957733154}]}, {"text": "All experimental settings are the same as RT13.", "labels": [], "entities": [{"text": "RT13", "start_pos": 42, "end_pos": 46, "type": "DATASET", "confidence": 0.8346066474914551}]}, {"text": "We compare our new models against this prior work in terms of disfluency detection performance and parsing accuracy.", "labels": [], "entities": [{"text": "disfluency detection", "start_pos": 62, "end_pos": 82, "type": "TASK", "confidence": 0.7157882899045944}, {"text": "parsing", "start_pos": 99, "end_pos": 106, "type": "TASK", "confidence": 0.9598758816719055}, {"text": "accuracy", "start_pos": 107, "end_pos": 115, "type": "METRIC", "confidence": 0.8879503607749939}]}, {"text": "In the second evaluation (Eval 2), we compare our Are n Ws/POS i/o \u03b2 equal?", "labels": [], "entities": []}, {"text": "(n=1:i/j) GT n last FGT; e.g. parse:la (n=1:i) GTP n last FGT e.g. parse (n=1:i) GGT n last FGT + POS of \u03b20 (n=1:i) GGTP n last CGT + POS of \u03b20 (n=1:i) GN ().", "labels": [], "entities": []}, {"text": "M6 is the structure with six classifiers.", "labels": [], "entities": [{"text": "M6", "start_pos": 0, "end_pos": 2, "type": "DATASET", "confidence": 0.8509945273399353}]}, {"text": "Other abbreviations are described in. work against the current best disfluency detection method (QL13) on the JC04 split as well as on a 10 fold cross-validation of the parsed section of the Switchboard.", "labels": [], "entities": [{"text": "JC04 split", "start_pos": 110, "end_pos": 120, "type": "DATASET", "confidence": 0.9739504754543304}, {"text": "Switchboard", "start_pos": 191, "end_pos": 202, "type": "DATASET", "confidence": 0.7761448621749878}]}, {"text": "We use gold POS tags for all evaluations.", "labels": [], "entities": []}, {"text": "For all of the joint parsing models we use the weighted averaged Perceptron which is the same as averaged Perceptron) but with a loss weight of two for reparandum candidates as done in prior work.", "labels": [], "entities": [{"text": "joint parsing", "start_pos": 15, "end_pos": 28, "type": "TASK", "confidence": 0.6400265842676163}]}, {"text": "The standard arc-eager parser is first trained on a \"cleaned\" Switchboard corpus (i.e. after removing disfluent words) with 3 training iterations.", "labels": [], "entities": []}, {"text": "Next, it is updated by training it on the real corpus with 3 additional iterations.", "labels": [], "entities": []}, {"text": "For the other classifiers, we use the same number of iterations determined from the development set.", "labels": [], "entities": []}, {"text": "Eval 1 The disfluency detection and parse results on the test set are shown in for the four systems (M1, RT13, M2E and M6).", "labels": [], "entities": []}, {"text": "The joint model performs poorly on the disfluency detection task, with an F-score of 41.5, and the prior work performance which serves as our baseline (RT13) has a performance of 81.4.", "labels": [], "entities": [{"text": "disfluency detection task", "start_pos": 39, "end_pos": 64, "type": "TASK", "confidence": 0.8553125659624735}, {"text": "F-score", "start_pos": 74, "end_pos": 81, "type": "METRIC", "confidence": 0.9993079900741577}]}, {"text": "The extended version of this model (M2E) raises performance substantially to 82.2.", "labels": [], "entities": []}, {"text": "This shows the utility of training the C1 classifier with additional features.", "labels": [], "entities": []}, {"text": "Finally, the M6 classifier is the top performing model at 82.6.", "labels": [], "entities": [{"text": "M6 classifier", "start_pos": 13, "end_pos": 26, "type": "DATASET", "confidence": 0.7944479882717133}]}], "tableCaptions": [{"text": " Table 1: Comparison of joint parsing and disflu- ency detection methods. UAS is the unlabeled  parse accuracy score.", "labels": [], "entities": [{"text": "joint parsing", "start_pos": 24, "end_pos": 37, "type": "TASK", "confidence": 0.5416593551635742}, {"text": "UAS", "start_pos": 74, "end_pos": 77, "type": "METRIC", "confidence": 0.9955615997314453}, {"text": "accuracy score", "start_pos": 102, "end_pos": 116, "type": "METRIC", "confidence": 0.9183067381381989}]}, {"text": " Table 2: Disfluency detection results (F1 score) on  JC04 split and with cross-validation (xval)", "labels": [], "entities": [{"text": "Disfluency detection", "start_pos": 10, "end_pos": 30, "type": "TASK", "confidence": 0.7525022327899933}, {"text": "F1 score)", "start_pos": 40, "end_pos": 49, "type": "METRIC", "confidence": 0.976856509844462}, {"text": "JC04 split", "start_pos": 54, "end_pos": 64, "type": "DATASET", "confidence": 0.9315498471260071}]}]}