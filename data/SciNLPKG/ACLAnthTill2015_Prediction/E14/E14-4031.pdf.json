{"title": [{"text": "Improving Dependency Parsers using Combinatory Categorial Grammar", "labels": [], "entities": [{"text": "Improving Dependency Parsers", "start_pos": 0, "end_pos": 28, "type": "TASK", "confidence": 0.8720627824465433}]}], "abstractContent": [{"text": "Subcategorization information is a useful feature in dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 53, "end_pos": 71, "type": "TASK", "confidence": 0.8778313100337982}]}, {"text": "In this paper, we explore a method of incorporating this information via Combinatory Categorial Grammar (CCG) categories from a supertagger.", "labels": [], "entities": []}, {"text": "We experiment with two popular dependency parsers (Malt and MST) for two languages: English and Hindi.", "labels": [], "entities": []}, {"text": "For both languages, CCG categories improve the overall accuracy of both parsers by around 0.3-0.5% in all experiments.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 55, "end_pos": 63, "type": "METRIC", "confidence": 0.9992316961288452}]}, {"text": "For both parsers, we see larger improvements specifically on dependencies at which they are known to be weak: long distance dependencies for Malt, and verbal arguments for MST.", "labels": [], "entities": []}, {"text": "The result is particularly interesting in the case of the fast greedy parser (Malt), since improving its accuracy without significantly compromising speed is relevant for large scale applications such as parsing the web.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 105, "end_pos": 113, "type": "METRIC", "confidence": 0.9983339905738831}, {"text": "parsing the web", "start_pos": 204, "end_pos": 219, "type": "TASK", "confidence": 0.9198474685351054}]}], "introductionContent": [{"text": "Dependency parsers can recover much of the predicate-argument structure of a sentence, while being relatively efficient to train and extremely fast at parsing.", "labels": [], "entities": [{"text": "Dependency parsers", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.8011960089206696}]}, {"text": "Dependency parsers have been gaining in popularity in recent times due to the availability of large dependency treebanks for several languages and parsing shared tasks (.", "labels": [], "entities": [{"text": "Dependency parsers", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.8089935183525085}, {"text": "parsing shared tasks", "start_pos": 147, "end_pos": 167, "type": "TASK", "confidence": 0.8649217883745829}]}, {"text": "showed that the performance of Malt () on the free word order language, Hindi, is improved by using lexical categories from Combinatory Categorial Grammar (CCG).", "labels": [], "entities": []}, {"text": "In this paper, we extend this work and show that CCG categories are useful even in the case of English, a typologically different language, where parsing accuracy of dependency parsers is already extremely high.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 154, "end_pos": 162, "type": "METRIC", "confidence": 0.898510754108429}]}, {"text": "In addition, we also demonstrate the utility of CCG categories to MST) for both languages.", "labels": [], "entities": []}, {"text": "CCG lexical categories contain subcategorization information regarding the dependencies of predicates, including longdistance dependencies.", "labels": [], "entities": []}, {"text": "We show that providing this subcategorization information in the form of CCG categories can help both Malt and MST on precisely those dependencies for which they are known to have weak rates of recovery.", "labels": [], "entities": []}, {"text": "The result is particularly interesting for Malt, the fast greedy parser, as the improvement in Malt comes without significantly compromising its speed, so that it can be practically applied in web scale parsing.", "labels": [], "entities": [{"text": "web scale parsing", "start_pos": 193, "end_pos": 210, "type": "TASK", "confidence": 0.6058599054813385}]}, {"text": "Our results apply both to English, a fixed word order and morphologically simple language, and to Hindi, a free word order and morphologically rich language, indicating that CCG categories from a supertagger are an easy and robust way of introducing lexicalized subcategorization information into dependency parsers.", "labels": [], "entities": []}], "datasetContent": [{"text": "We first used gold CCG categories extracted from each CCGbank as features to the Malt and MST, to get an upper bound on the utility of CCG categories.", "labels": [], "entities": [{"text": "Malt and MST", "start_pos": 81, "end_pos": 93, "type": "DATASET", "confidence": 0.7720058361689249}]}, {"text": "As expected, gold CCG categories boosted the Unlabelled Attachment Score (UAS) and Labelled Attachment Score (LAS) by a large amount (4-7% in all the cases).", "labels": [], "entities": [{"text": "Unlabelled Attachment Score (UAS)", "start_pos": 45, "end_pos": 78, "type": "METRIC", "confidence": 0.8004763176043829}, {"text": "Labelled Attachment Score (LAS)", "start_pos": 83, "end_pos": 114, "type": "METRIC", "confidence": 0.8144989113012949}]}, {"text": "We then experimented with using automatic CCG categories from the English and Hindi supertaggers as a feature to Malt and MST.", "labels": [], "entities": [{"text": "Malt", "start_pos": 113, "end_pos": 117, "type": "DATASET", "confidence": 0.9385033845901489}, {"text": "MST", "start_pos": 122, "end_pos": 125, "type": "DATASET", "confidence": 0.6730735898017883}]}, {"text": "With automatic categories from a supertagger, we got statistically significant improvements (McNemar's test, p < 0.05 for Hindi LAS and p < 0.01 for the rest) over the baseline parsers, for all cases.", "labels": [], "entities": [{"text": "McNemar's test", "start_pos": 93, "end_pos": 107, "type": "METRIC", "confidence": 0.8164568940798441}]}, {"text": "Since the CCGbanks used to train the supertaggers are automatically generated from the constituency or dependency treebanks used to train 2 http://ltrc.iiit.ac.in/analyzer/hindi/ the dependency parsers, the improvements are indeed due to reparameterization of the model to include CCG categories and not due to additional hand annotations in the CCGbanks.", "labels": [], "entities": []}, {"text": "This shows that the rich subcategorization information provided by automatically assigned CCG categories can help Malt and MST in realistic applications.", "labels": [], "entities": [{"text": "MST", "start_pos": 123, "end_pos": 126, "type": "TASK", "confidence": 0.9380737543106079}]}, {"text": "For English, in case of Malt, we achieved 0.3% improvement in both UAS and LAS for Stanford scheme.", "labels": [], "entities": [{"text": "UAS", "start_pos": 67, "end_pos": 70, "type": "METRIC", "confidence": 0.8625307083129883}, {"text": "LAS", "start_pos": 75, "end_pos": 78, "type": "METRIC", "confidence": 0.8381656408309937}, {"text": "Stanford scheme", "start_pos": 83, "end_pos": 98, "type": "DATASET", "confidence": 0.9387304186820984}]}, {"text": "For CoNLL scheme, these improvements were 0.4% and 0.5% in UAS and LAS respectively.", "labels": [], "entities": [{"text": "UAS", "start_pos": 59, "end_pos": 62, "type": "METRIC", "confidence": 0.7130201458930969}, {"text": "LAS", "start_pos": 67, "end_pos": 70, "type": "METRIC", "confidence": 0.8602708578109741}]}, {"text": "For MST, we got around 0.5% improvements in all cases.", "labels": [], "entities": [{"text": "MST", "start_pos": 4, "end_pos": 7, "type": "TASK", "confidence": 0.9600578546524048}]}, {"text": "In case of Hindi, fine-grained supertags gave larger improvements for MST.", "labels": [], "entities": [{"text": "MST", "start_pos": 70, "end_pos": 73, "type": "TASK", "confidence": 0.95113205909729}]}, {"text": "We got final improvements of 0.5% and 0.3% in UAS and LAS respectively.", "labels": [], "entities": [{"text": "UAS", "start_pos": 46, "end_pos": 49, "type": "METRIC", "confidence": 0.7287861108779907}, {"text": "LAS", "start_pos": 54, "end_pos": 57, "type": "METRIC", "confidence": 0.9153124690055847}]}, {"text": "In contrast, for Malt, had shown that coarse-grained supertags gave larger improvements of 0.3% and 0.4% in UAS and LAS respectively.", "labels": [], "entities": [{"text": "UAS", "start_pos": 108, "end_pos": 111, "type": "METRIC", "confidence": 0.7282529473304749}, {"text": "LAS", "start_pos": 116, "end_pos": 119, "type": "METRIC", "confidence": 0.6711581349372864}]}, {"text": "Due to better handling of error propagation in MST, the richer information in fine-grained categories may have surpassed the slightly lower supertagger performance, compared to coarse-grained categories.", "labels": [], "entities": [{"text": "error propagation", "start_pos": 26, "end_pos": 43, "type": "TASK", "confidence": 0.7125021517276764}, {"text": "MST", "start_pos": 47, "end_pos": 50, "type": "TASK", "confidence": 0.8320844769477844}]}], "tableCaptions": [{"text": " Table 1: Impact of CCG categories from a supertagger on dependency parsing. Numbers in brackets  are percentage of errors reduced. McNemar's test compared to baseline, * = p < 0.05 ; ** = p < 0.01  (Hindi Malt results (grey background) are from Ambati et al. (2013)).", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 57, "end_pos": 75, "type": "TASK", "confidence": 0.8677352368831635}, {"text": "McNemar's test", "start_pos": 132, "end_pos": 146, "type": "METRIC", "confidence": 0.6060740749041239}]}, {"text": " Table 2: Time taken to parse English test data.", "labels": [], "entities": [{"text": "parse", "start_pos": 24, "end_pos": 29, "type": "TASK", "confidence": 0.9076250195503235}, {"text": "English test data", "start_pos": 30, "end_pos": 47, "type": "DATASET", "confidence": 0.7525296012560526}]}]}