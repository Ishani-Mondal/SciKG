{"title": [{"text": "Regular Models of Phonological Rule Systems", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper presents a set of mathematical and computational tools for manipulating and reasoning about regular languages and regular relations and argues that they provide a solid basis for computational phonology.", "labels": [], "entities": []}, {"text": "It shows in detail how this framework applies to ordered sets of context-sensitive rewriting rules and also to grammars in Koskenniemi's two-level formalism.", "labels": [], "entities": []}, {"text": "This analysis provides a common representation of phonological constraints that supports efficient generation and recognition by a single simple interpreter.", "labels": [], "entities": []}], "introductionContent": [{"text": "Ordered sets of context-sensitive rewriting rules have traditionally been used to describe the pronunciation changes that occur when sounds appear in different phonological and morphological contexts.", "labels": [], "entities": []}, {"text": "Intuitively, these phenomena ought to be cognitively and computationally simpler than the variations and correspondences that appear in natural language syntax and semantics, yet the formal structure of such rules seems to require a complicated interpreter and an extraordinarily large number of processing steps.", "labels": [], "entities": []}, {"text": "In this paper, we show that any such rule defines a regular relation on strings if its non-contextual part is not allowed to apply to its own output, and thus it can be modeled by asymmetric finite-state transducer.", "labels": [], "entities": []}, {"text": "Furthermore, since regular relations are closed under serial composition, a finite set of rules applying to each other's output in an ordered sequence also defines a regular relation.", "labels": [], "entities": []}, {"text": "A single finitestate transducer whose behavior simulates the whole set can therefore be constructed by composing the transducers corresponding to the individual rules.", "labels": [], "entities": []}, {"text": "This transducer can be incorporated into efficient computational procedures that are far more economical in both recognition and production than any strategies using ordered rules directly.", "labels": [], "entities": []}, {"text": "Since orthographic rules have similar formal properties to phonological rules, our results generalize to problems of word recognition in written text.", "labels": [], "entities": [{"text": "word recognition in written text", "start_pos": 117, "end_pos": 149, "type": "TASK", "confidence": 0.8040275335311889}]}, {"text": "The mathematical techniques we develop to analyze rewriting rule systems are not limited just to that particular collection of formal devices.", "labels": [], "entities": []}, {"text": "They can also be applied to other recently proposed phonological or morphological rule systems.", "labels": [], "entities": []}, {"text": "For example, we can show that two-level parallel rule systems also denote regular relations.", "labels": [], "entities": []}, {"text": "Section 2 below provides an intuitive grounding for the rest of our discussion by illustrating the correspondence between simple rewriting rules and transducers.", "labels": [], "entities": []}, {"text": "Section 3 summarizes the mathematical tools that we use to analyze both rewriting and two-level systems.", "labels": [], "entities": []}, {"text": "Section 4 describes the properties of the rewriting rule formalisms we are concerned with, and their mathematical characterization tations.", "labels": [], "entities": [{"text": "mathematical characterization tations", "start_pos": 101, "end_pos": 138, "type": "TASK", "confidence": 0.7656243244806925}]}, {"text": "Compare the words undecipherable and indecipherable.", "labels": [], "entities": []}, {"text": "The n in the prefix un-, unlike the one in in-, does not derive from the abstract N, since it remains unchanged before labials (c.f. unperturbable).", "labels": [], "entities": []}, {"text": "Thus the results of inverting this rule must include undecipherable for undecipherable but iNdecipherable for indecipherable so that each of them can match properly against the lexicon.", "labels": [], "entities": []}, {"text": "While inverting a rule may sometimes produce alternative outputs, there are also situations in which no output is produced.", "labels": [], "entities": []}, {"text": "This happens when an obligatory rule is inverted on a string that it could not have generated.", "labels": [], "entities": []}, {"text": "For example, iNput cannot be generated by Rule 1 because the N precedes a labial and therefore would obligatorily be converted tom.", "labels": [], "entities": []}, {"text": "There is therefore no output when Rule 1 is inverted on iNput.", "labels": [], "entities": []}, {"text": "However, when Rule 2 is inverted on input, it does produce iNput as one of its results.", "labels": [], "entities": []}, {"text": "The effect of then inverting Rule 1 is to remove the ambiguity produced by inverting Rule 2, leaving only the unchanged input to be matched against the lexicon.", "labels": [], "entities": []}, {"text": "More generally, if recognition is carried out by taking the rules of a grammar in reverse order and inverting each of them in turn, later rules in the new sequence act as filters on ambiguities produced by earlier ones.", "labels": [], "entities": []}, {"text": "The existence of a large class of ambiguities that are introduced atone point in the recognition process and eliminated at another has been a major source of difficulty in efficiently reversing the action of linguistically motivated phonological grammars.", "labels": [], "entities": []}, {"text": "Ina large grammar, the effect of these spurious ambiguities is multiplicative, since the information needed to cutoff unproductive paths often does not become available until after they have been pursued for some considerable distance.", "labels": [], "entities": []}, {"text": "Indeed, speech understanding systems that use phonological rules do not typically invert them on strings but rather apply them to the lexicon to generate a list of all possible word forms (e.g..", "labels": [], "entities": [{"text": "speech understanding", "start_pos": 8, "end_pos": 28, "type": "TASK", "confidence": 0.711529091000557}]}, {"text": "Recognition is then accomplished by standard table-lookup procedures, usually augmented with special devices to handle phonological changes that operate across word boundaries.", "labels": [], "entities": [{"text": "Recognition", "start_pos": 0, "end_pos": 11, "type": "TASK", "confidence": 0.9650326371192932}]}, {"text": "Another approach to solving this computational problem would be to use the reversed cascade of rules during recognition, but to somehow make the filtering information of particular rules available earlier in the process.", "labels": [], "entities": []}, {"text": "However, no general and effective techniques have been proposed for doing this.", "labels": [], "entities": []}, {"text": "The more radical approach that we explore in this paper is to eliminate the cascade altogether, representing the information in the grammar as a whole in a single more unified device, namely, a finite-state transducer.", "labels": [], "entities": []}, {"text": "This device is constructed in two phases.", "labels": [], "entities": []}, {"text": "The first is to create for each rule in the grammar a transducer that exactly models its behavior.", "labels": [], "entities": []}, {"text": "The second is to compose these individual rule transducers into a single machine that models the grammar as a whole.", "labels": [], "entities": []}, {"text": "Johnson was the first to notice that the noncyclic components of standard phonological formalisms, and particularly the formalism of The Sound Pattern of English (Chomsky and Halle 1968), were equivalent in power to finite-state devices despite a superficial resemblance to general rewriting systems.", "labels": [], "entities": []}, {"text": "Phonologists in the SPE tradition, as well as the structuralists that preceded them, had apparently honored an injunction against rules that rewrite their own output but still allowed the output of a rule to serve as context fora reapplication of that same rule.", "labels": [], "entities": [{"text": "SPE tradition", "start_pos": 20, "end_pos": 33, "type": "TASK", "confidence": 0.9095852077007294}]}, {"text": "Johnson realized that this was the key to limiting the power of systems of phonological rules.", "labels": [], "entities": []}, {"text": "He also realized that basic rewriting rules were subject to many alternahve modes of apphcahon offering different expressive possibilities to the linguist.", "labels": [], "entities": []}, {"text": "He showed that phonological grammars undermost reasonable modes of application remain within the finite-state paradigm.", "labels": [], "entities": []}, {"text": "We observed independently the basic connections between rewriting-rule grammars and finite-state transducers in the late 1970s and reported them at the 1981 meeting of the Linguistic Society of America (.", "labels": [], "entities": []}, {"text": "The mathematical analysis in terms of regular relations emerged somewhat later.", "labels": [], "entities": []}, {"text": "Aspects of that analysis and its extension to two-level systems were presented at conferences by, in courses at the 1987 and 1991 Linguistics Institutes, and at colloquia at Stanford University, Brown University, the University of Rochester, and the University of Helsinki.", "labels": [], "entities": []}, {"text": "Our approach differs from Johnson's in two important ways.", "labels": [], "entities": []}, {"text": "First, we abstract away from the many details of both notation and machine description that are crucial to Johnson's method of argumentation.", "labels": [], "entities": []}, {"text": "Instead, we rely strongly on closure properties in the underlying algebra of regular relations to establish the major result that phonological rewriting systems denote such sets of string-pairs.", "labels": [], "entities": []}, {"text": "We then use the correspondence between regular relations and finite-state transducers to develop a constructive relationship between rewriting rules and transducers.", "labels": [], "entities": []}, {"text": "This is accomplished by means of a small set of simple operations, each of which implements a simple mathematical fact about regular languages, regular relations, or both.", "labels": [], "entities": []}, {"text": "Second, our more abstract perspective provides a general framework within which to treat other phonological formalisms, existing or yet to be devised.", "labels": [], "entities": []}, {"text": "For example, two-level morphology, which evolved from our early considerations of rewriting rules, relies for its analysis and implementation on the same algebraic techniques.", "labels": [], "entities": []}, {"text": "We are also encouraged by initial successes in adapting these techniques to the autosegmental formalism described by.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}