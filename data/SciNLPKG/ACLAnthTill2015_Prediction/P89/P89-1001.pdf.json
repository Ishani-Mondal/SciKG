{"title": [{"text": "A TRANSFER MODEL USING A TYPED FEATURE STRUCTURE REWRITING SYSTEM WITH INHERITANCE", "labels": [], "entities": [{"text": "A TRANSFER MODEL USING A TYPED FEATURE STRUCTURE REWRITING SYSTEM WITH INHERITANCE", "start_pos": 0, "end_pos": 82, "type": "METRIC", "confidence": 0.6853956207633018}]}], "abstractContent": [{"text": "We propose a model for transfer in machine translation which uses a rewriting system for typed feature structures.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 35, "end_pos": 54, "type": "TASK", "confidence": 0.6743975728750229}]}, {"text": "The grammar definitions describe transfer relations which are applied on the input structure (a typed feaane structure) by the interpreter to produce all possible transfer pairs.", "labels": [], "entities": []}, {"text": "The formalism is based on the semantics of typed feature structures as described in [AR-Kaci 84].", "labels": [], "entities": [{"text": "AR-Kaci 84]", "start_pos": 85, "end_pos": 96, "type": "DATASET", "confidence": 0.9118087887763977}]}], "introductionContent": [{"text": "We propose anew model for transfer in machine translation of dialogues.", "labels": [], "entities": [{"text": "machine translation of dialogues", "start_pos": 38, "end_pos": 70, "type": "TASK", "confidence": 0.8105184063315392}]}, {"text": "The goal is twofold: to develop a linguistically-based theory for transfer, and to develop a computer formalism with which we can implement such a theory, and which can be integrated with a unification-based parser.", "labels": [], "entities": []}, {"text": "The desired properties of the grammar are (1) to accept as input a feature structure, (2) to produce as output a feature structure, (3) to be reversible, (4) to be as close as possible to current theories and formalisms used for linguistic description.", "labels": [], "entities": []}, {"text": "From (1) and (2), we need a rewriting formalism where a rule takes a feature structure as input and gives a feature structure as output.", "labels": [], "entities": []}, {"text": "From O), this formalism should be in the class of unificationbased formalisms such as PROLOG, and there should be no distinction between input and output.", "labels": [], "entities": []}, {"text": "From (4), as the theoretical basis of grammar development in ATR is HPSG, we want the formalism to be as close as possible to HPSG.", "labels": [], "entities": [{"text": "grammar development", "start_pos": 38, "end_pos": 57, "type": "TASK", "confidence": 0.7691500782966614}, {"text": "HPSG", "start_pos": 68, "end_pos": 72, "type": "DATASET", "confidence": 0.8881164193153381}, {"text": "HPSG", "start_pos": 126, "end_pos": 130, "type": "DATASET", "confidence": 0.9648243188858032}]}, {"text": "To meet these requirements, a rewriting system for typed feature structures, based on the semantics of typed feature structures described in [AR-, has been implemented at ATR by Martin Emele and the author [Emele and.", "labels": [], "entities": [{"text": "ATR", "start_pos": 171, "end_pos": 174, "type": "DATASET", "confidence": 0.9368774890899658}]}, {"text": "The type system has a lattice structure, and inheritance is achieved through the rewriting mechanism.", "labels": [], "entities": []}, {"text": "Type definitions are applied by the interpreter on the input structure (a typed feature structure) using typed unification in a non-deterministic and monotonic way, until no constraint can be applied.", "labels": [], "entities": []}, {"text": "Thus, the result is a set of all possible transfer pairs.", "labels": [], "entities": []}, {"text": "compatible with the input and with the constraints expressed by the grammar.", "labels": [], "entities": []}, {"text": "Thanks to the properties of the rewriting formalism, the transfer grammar is reversible, and can even generate all possible pairs for the grammar, given only the start symbol TRANSLATE.", "labels": [], "entities": [{"text": "TRANSLATE", "start_pos": 175, "end_pos": 184, "type": "METRIC", "confidence": 0.8792712092399597}]}, {"text": "We give an outline of the model on a very simple example.", "labels": [], "entities": []}, {"text": "The type inheritance mechanism is mainly used to classify common properties of the bilingual lexicon (sect.", "labels": [], "entities": [{"text": "type inheritance", "start_pos": 4, "end_pos": 20, "type": "TASK", "confidence": 0.822739839553833}]}, {"text": "1), and rewriting is fully exploited to describe the relation between a surface structure produced by a unification-based parser and the abstract structme used for transfer (sect.", "labels": [], "entities": []}, {"text": "2), and to describe the relation between Japanese and English structures (sect. 3).", "labels": [], "entities": []}, {"text": "An example is detailed in sect.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}