{"title": [{"text": "The OpenGrm open-source finite-state grammar software libraries", "labels": [], "entities": []}], "abstractContent": [{"text": "In this paper, we present anew collection of open-source software libraries that provides command line binary utilities and library classes and functions for compiling regular expression and context-sensitive rewrite rules into finite-state transducers, and for n-gram language modeling.", "labels": [], "entities": [{"text": "n-gram language modeling", "start_pos": 262, "end_pos": 286, "type": "TASK", "confidence": 0.632323702176412}]}, {"text": "The OpenGrm libraries use the OpenFst library to provide an efficient encoding of grammars and general algorithms for building, modifying and applying models.", "labels": [], "entities": [{"text": "OpenFst library", "start_pos": 30, "end_pos": 45, "type": "DATASET", "confidence": 0.9126339554786682}]}], "introductionContent": [{"text": "The OpenGrm libraries 1 area (growing) collection of open-source software libraries for building and applying various kinds of formal grammars.", "labels": [], "entities": [{"text": "OpenGrm libraries", "start_pos": 4, "end_pos": 21, "type": "DATASET", "confidence": 0.925147533416748}]}, {"text": "The C++ libraries use the OpenFst library 2 for the underlying finite-state representation, which allows for easy inspection of the resulting grammars and models, as well as straightforward combination with other finite-state transducers.", "labels": [], "entities": []}, {"text": "Like OpenFst, there are easy-to-use command line binaries for frequently used operations, as well as a C++ library interface, allowing library users to create their own algorithms from the basic classes and functions provided.", "labels": [], "entities": []}, {"text": "The libraries can be used fora range of common string processing tasks, such as text normalization, as well as for building and using large statistical models for applications like speech recognition.", "labels": [], "entities": [{"text": "text normalization", "start_pos": 80, "end_pos": 98, "type": "TASK", "confidence": 0.8088977038860321}, {"text": "speech recognition", "start_pos": 181, "end_pos": 199, "type": "TASK", "confidence": 0.7556336224079132}]}, {"text": "In the rest of the paper, we will present each of the two libraries, starting with the Thrax grammar compiler and then the NGram library.", "labels": [], "entities": [{"text": "Thrax grammar compiler", "start_pos": 87, "end_pos": 109, "type": "DATASET", "confidence": 0.8207111358642578}, {"text": "NGram library", "start_pos": 123, "end_pos": 136, "type": "DATASET", "confidence": 0.9678799211978912}]}, {"text": "First, though, we will briefly present some preliminary (informal) background on weighted finite-state transducers (WFST), just as needed for this paper.", "labels": [], "entities": []}, {"text": "1 http://www.opengrm.org/ 2 http://www.openfst.org/", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}