{"title": [], "abstractContent": [{"text": "Learning for sentence rewriting is a fundamental task in natural language processing and information retrieval.", "labels": [], "entities": [{"text": "sentence rewriting", "start_pos": 13, "end_pos": 31, "type": "TASK", "confidence": 0.7283125221729279}, {"text": "natural language processing", "start_pos": 57, "end_pos": 84, "type": "TASK", "confidence": 0.6484287480513254}, {"text": "information retrieval", "start_pos": 89, "end_pos": 110, "type": "TASK", "confidence": 0.7539058923721313}]}, {"text": "In this paper, we propose anew class of kernel functions, referred to as string rewriting kernel, to address the problem.", "labels": [], "entities": []}, {"text": "A string rewriting kernel measures the similarity between two pairs of strings, each pair representing rewriting of a string.", "labels": [], "entities": []}, {"text": "It can capture the lexical and structural similarity between two pairs of sentences without the need of constructing syntactic trees.", "labels": [], "entities": []}, {"text": "We further propose an instance of string rewriting kernel which can be computed efficiently.", "labels": [], "entities": []}, {"text": "Experimental results on benchmark datasets show that our method can achieve better results than state-of-the-art methods on two sentence rewriting learning tasks: paraphrase identification and recognizing textual entail-ment.", "labels": [], "entities": [{"text": "sentence rewriting learning", "start_pos": 128, "end_pos": 155, "type": "TASK", "confidence": 0.8135603467623392}, {"text": "paraphrase identification", "start_pos": 163, "end_pos": 188, "type": "TASK", "confidence": 0.909769594669342}]}], "introductionContent": [{"text": "Learning for sentence re-writing is a fundamental task in natural language processing and information retrieval, which includes paraphrasing, textual entailment and transformation between query and document title in search.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 90, "end_pos": 111, "type": "TASK", "confidence": 0.7132121026515961}, {"text": "textual entailment", "start_pos": 142, "end_pos": 160, "type": "TASK", "confidence": 0.682641789317131}]}, {"text": "The key question here is how to represent the rewriting of sentences.", "labels": [], "entities": []}, {"text": "In previous research on sentence re-writing learning such as paraphrase identification and recognizing textual entailment, most representations are based on the lexicons () or the syntactic trees ( . Shakespeare wrote Hamlet.", "labels": [], "entities": [{"text": "paraphrase identification", "start_pos": 61, "end_pos": 86, "type": "TASK", "confidence": 0.9193504154682159}, {"text": "recognizing textual entailment", "start_pos": 91, "end_pos": 121, "type": "TASK", "confidence": 0.8114280700683594}]}, {"text": "* was written by . 2009; of the sentence pairs.", "labels": [], "entities": []}, {"text": "In;, re-writing rules serve as underlying representations for paraphrase generation/discovery.", "labels": [], "entities": [{"text": "paraphrase generation/discovery", "start_pos": 62, "end_pos": 93, "type": "TASK", "confidence": 0.9005922377109528}]}, {"text": "Motivated by the work, we represent re-writing of sentences by all possible re-writing rules that can be applied into it.", "labels": [], "entities": []}, {"text": "For example, in, (A) is one re-writing rule that can be applied into the sentence re-writing (B).", "labels": [], "entities": []}, {"text": "Specifically, we propose anew class of kernel functions (), called string rewriting kernel (SRK), which defines the similarity between two re-writings (pairs) of strings as the inner product between them in the feature space induced by all the re-writing rules.", "labels": [], "entities": []}, {"text": "SRK is different from existing kernels in that it is for re-writing and defined on two pairs of strings.", "labels": [], "entities": [{"text": "SRK", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8565237522125244}]}, {"text": "SRK can capture the lexical and structural similarity between re-writings of sentences and does not need to parse the sentences and create the syntactic trees of them.", "labels": [], "entities": [{"text": "SRK", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8534605503082275}]}, {"text": "One challenge for using SRK lies in the high computational cost of straightforwardly computing the kernel, because it involves two re-writings of strings (i.e., four strings) and a large number of re-writing rules.", "labels": [], "entities": [{"text": "SRK", "start_pos": 24, "end_pos": 27, "type": "TASK", "confidence": 0.946799635887146}]}, {"text": "We are able to develop an instance of SRK, referred to as kb-SRK, which directly computes the number of common rewriting rules without explic-itly calculating the inner product between feature vectors, and thus drastically reduce the time complexity.", "labels": [], "entities": []}, {"text": "Experimental results on benchmark datasets show that SRK achieves better results than the state-ofthe-art methods in paraphrase identification and recognizing textual entailment.", "labels": [], "entities": [{"text": "SRK", "start_pos": 53, "end_pos": 56, "type": "TASK", "confidence": 0.9294360280036926}, {"text": "paraphrase identification", "start_pos": 117, "end_pos": 142, "type": "TASK", "confidence": 0.9377627968788147}, {"text": "recognizing textual entailment", "start_pos": 147, "end_pos": 177, "type": "TASK", "confidence": 0.8074778119723002}]}, {"text": "Note that SRK is very flexible to the formulations of sentences.", "labels": [], "entities": [{"text": "SRK", "start_pos": 10, "end_pos": 13, "type": "TASK", "confidence": 0.7141599059104919}]}, {"text": "For example, informally written sentences such as long queries in search can also be effectively handled.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluated the performances of the three types of string re-writing kernels on paraphrase identification and recognizing textual entailment: pairwise kspectrum kernel (ps-SRK), pairwise k-wildcard kernel (pw-SRK), and k-gram bijective string re-writing kernel (kb-SRK).", "labels": [], "entities": [{"text": "paraphrase identification", "start_pos": 81, "end_pos": 106, "type": "TASK", "confidence": 0.8959457874298096}]}, {"text": "We set \u03bb = 1 for all kernels.", "labels": [], "entities": []}, {"text": "The performances were measured by accuracy (e.g. percentage of correct classifications).", "labels": [], "entities": [{"text": "accuracy", "start_pos": 34, "end_pos": 42, "type": "METRIC", "confidence": 0.9996054768562317}]}, {"text": "In both experiments, we used LIBSVM with default parameters) as the classifier.", "labels": [], "entities": []}, {"text": "All the sentences in the training and test sets were segmented into words by the tokenizer at OpenNLP (.", "labels": [], "entities": [{"text": "OpenNLP", "start_pos": 94, "end_pos": 101, "type": "DATASET", "confidence": 0.9626584649085999}]}, {"text": "We further conducted stemming on the words with Iveonik English Stemmer (http://www.iveonik.com/ ).", "labels": [], "entities": [{"text": "stemming", "start_pos": 21, "end_pos": 29, "type": "TASK", "confidence": 0.9840837121009827}, {"text": "Iveonik English Stemmer", "start_pos": 48, "end_pos": 71, "type": "DATASET", "confidence": 0.902352770169576}]}, {"text": "We normalized each kernel by\u02dcKby\u02dc by\u02dcK(x, y) = K(x,y) \u221a K(x,x)K(y,y) and then tried them under different window sizes k.", "labels": [], "entities": []}, {"text": "We also tried to combine the kernels with two lexical features \"unigram precision and recall\" proposed in (), referred to as PR.", "labels": [], "entities": [{"text": "precision", "start_pos": 72, "end_pos": 81, "type": "METRIC", "confidence": 0.8701207637786865}, {"text": "recall", "start_pos": 86, "end_pos": 92, "type": "METRIC", "confidence": 0.9937790036201477}]}, {"text": "For each kernel K, we tested the window size settings of K 1 + ...", "labels": [], "entities": []}, {"text": "+ K k max (k max \u2208 {1, 2, 3, 4}) together with the combination with PR and we report the best accuracies of them in Tab 1 and Tab 2.", "labels": [], "entities": [{"text": "accuracies", "start_pos": 94, "end_pos": 104, "type": "METRIC", "confidence": 0.9874880313873291}]}], "tableCaptions": [{"text": " Table 2. Again, kb-SRK  outperforms ps-SRK and pw-SRK. As indicated  in", "labels": [], "entities": []}]}