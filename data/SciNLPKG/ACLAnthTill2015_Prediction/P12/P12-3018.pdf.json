{"title": [{"text": "INPRO_iSS: A Component for Just-In-Time Incremental Speech Synthesis", "labels": [], "entities": [{"text": "Just-In-Time Incremental Speech Synthesis", "start_pos": 27, "end_pos": 68, "type": "TASK", "confidence": 0.5929874330759048}]}], "abstractContent": [{"text": "We present a component for incremental speech synthesis (iSS) and a set of applications that demonstrate its capabilities.", "labels": [], "entities": [{"text": "incremental speech synthesis (iSS)", "start_pos": 27, "end_pos": 61, "type": "TASK", "confidence": 0.786175529162089}]}, {"text": "This component can be used to increase the responsivity and naturalness of spoken interactive systems.", "labels": [], "entities": []}, {"text": "While iSS can show its full strength in systems that generate output incrementally, we also discuss how even otherwise unchanged systems may profit from its capabilities.", "labels": [], "entities": []}], "introductionContent": [{"text": "Current state of the art in speech synthesis for spoken dialogue systems (SDSs) is for the synthesis component to expect full utterances (in textual form) as input and to deliver an audio stream verbalising this full utterance.", "labels": [], "entities": [{"text": "speech synthesis for spoken dialogue systems (SDSs)", "start_pos": 28, "end_pos": 79, "type": "TASK", "confidence": 0.6971176730261909}]}, {"text": "At best, timing information is returned as well so that a control component can determine in case of an interruption / barge-in by the user wherein the utterance this happened.", "labels": [], "entities": [{"text": "timing", "start_pos": 9, "end_pos": 15, "type": "METRIC", "confidence": 0.991068959236145}]}, {"text": "We want to argue here that providing capabilities to speech synthesis components for dealing with units smaller than full utterances can be beneficial fora whole range of interactive speech-based systems.", "labels": [], "entities": []}, {"text": "In the easiest case, incremental synthesis simply reduces the utterance-initial delay before speech output starts, as output already starts when its beginning has been produced.", "labels": [], "entities": []}, {"text": "In an otherwise conventional dialogue system, the synthesis module could make it possible to interrupt the output speech stream (e. g., when a noise event is detected that makes it likely that the user will not be able to hear what is being said), and continue production when the interruption is over.", "labels": [], "entities": []}, {"text": "If other SDS components are adapted more to take advantage of incremental speech synthesis, even more flexible behaviours can be realised, such as providing utterances in installments) that prompt for backchannel signals, which in turn can prompt different utterance continuations, or starting an utterance before all information required in the utterance is available (\"so, uhm, there are flights to Seoul on uh . .", "labels": [], "entities": []}, {"text": "\"), signaling that the turn is being held.", "labels": [], "entities": []}, {"text": "Another, less conventional type of speech-based system that could profit from iSS is \"babelfish-like\" simultaneous speech-to-speech translation.", "labels": [], "entities": [{"text": "simultaneous speech-to-speech translation", "start_pos": 102, "end_pos": 143, "type": "TASK", "confidence": 0.6714760462443033}]}, {"text": "Research on architectures, higher-level processing modules and lower-level processing modules that would enable such behaviour is currently underway), but a synthesis component that would unlock the full potential of such strategies is so far missing.", "labels": [], "entities": []}, {"text": "In this paper, we present such a component, which is capable of (a) starting to speak before utterance processing has finished; (b) handling edits made to (as-yet unspoken) parts of the utterance even while a prefix is already being spoken; (c) enabling adaptations of delivery parameters such as speaking rate or pitch; (d) autonomously making appropriate deliveryrelated decisions; (e) providing information about progress in delivery; and, last but not least, (f) running in real time.", "labels": [], "entities": [{"text": "handling edits made to (as-yet unspoken) parts of the utterance even while a prefix is already being spoken", "start_pos": 132, "end_pos": 239, "type": "TASK", "confidence": 0.5982421576976776}]}, {"text": "Our iSS component is built on top of an existing non-incremental synthesis component, MaryTTS (, and on an existing architecture for incremental processing, INPROTK ().", "labels": [], "entities": [{"text": "MaryTTS", "start_pos": 86, "end_pos": 93, "type": "DATASET", "confidence": 0.9455965161323547}]}, {"text": "After a discussion of related work (Section 2), we describe the basic elements of our iSS component (Section 3) and some demonstrator applications that we created which showcase certain abilities.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}