{"title": [{"text": "A Polynomial-Time Dynamic Oracle for Non-Projective Dependency Parsing", "labels": [], "entities": [{"text": "Non-Projective Dependency Parsing", "start_pos": 37, "end_pos": 70, "type": "TASK", "confidence": 0.7232491771380106}]}], "abstractContent": [{"text": "The introduction of dynamic oracles has considerably improved the accuracy of greedy transition-based dependency parsers , without sacrificing parsing efficiency.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 66, "end_pos": 74, "type": "METRIC", "confidence": 0.9992352724075317}]}, {"text": "However, this enhancement is limited to projective parsing, and dynamic oracles have not yet been implemented for parsers supporting non-projectivity.", "labels": [], "entities": [{"text": "projective parsing", "start_pos": 40, "end_pos": 58, "type": "TASK", "confidence": 0.6441069841384888}]}, {"text": "In this paper we introduce the first such oracle, fora non-projective parser based on At-tardi's parser.", "labels": [], "entities": []}, {"text": "We show that training with this oracle improves parsing accuracy over a conventional (static) oracle on a wide range of datasets.", "labels": [], "entities": [{"text": "parsing", "start_pos": 48, "end_pos": 55, "type": "TASK", "confidence": 0.9689662456512451}, {"text": "accuracy", "start_pos": 56, "end_pos": 64, "type": "METRIC", "confidence": 0.9421701431274414}]}], "introductionContent": [{"text": "Greedy transition-based parsers for dependency grammars have been pioneered by and.", "labels": [], "entities": []}, {"text": "These methods incrementally process the input sentence from left to right, predicting the next parsing action, called transition, on the basis of a compact representation of the derivation history.", "labels": [], "entities": []}, {"text": "Greedy transition-based parsers can be very efficient, allowing web-scale parsing with high throughput.", "labels": [], "entities": []}, {"text": "However, the accuracy of these methods still falls behind that of transition-based parsers using beam-search, where the accuracy improvement is obtained at the cost of a decrease in parsing efficiency; see for instance,,.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 13, "end_pos": 21, "type": "METRIC", "confidence": 0.9994900226593018}, {"text": "accuracy", "start_pos": 120, "end_pos": 128, "type": "METRIC", "confidence": 0.9986854195594788}, {"text": "parsing", "start_pos": 182, "end_pos": 189, "type": "TASK", "confidence": 0.9659885764122009}]}, {"text": "As an alternative to beamsearch, recent research on transition-based parsing has therefore explored possible ways of improving accuracy at no extra cost in parsing efficiency.", "labels": [], "entities": [{"text": "transition-based parsing", "start_pos": 52, "end_pos": 76, "type": "TASK", "confidence": 0.5216143131256104}, {"text": "accuracy", "start_pos": 127, "end_pos": 135, "type": "METRIC", "confidence": 0.9980650544166565}, {"text": "parsing", "start_pos": 156, "end_pos": 163, "type": "TASK", "confidence": 0.9602587223052979}]}, {"text": "The training of transition-based parsers relies on a component called the parsing oracle, which maps parser configurations to optimal transitions with respect to a gold tree.", "labels": [], "entities": []}, {"text": "A discriminative model is then trained to simulate the oracle's behavior, and is later used for decoding.", "labels": [], "entities": []}, {"text": "Traditionally, socalled static oracles have been exploited in training, where a static oracle is defined only for configurations that have been reached by computations with no mistake, and it returns a single canonical transition among those that are optimal.", "labels": [], "entities": []}, {"text": "Very recently,, and showed that the accuracy of transitionbased parsers can be substantially improved using dynamic oracles.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 36, "end_pos": 44, "type": "METRIC", "confidence": 0.9991859793663025}]}, {"text": "A dynamic oracle returns the set of all transitions that are optimal fora given configuration, with respect to the gold tree, and is well-defined and correct for every configuration that is reachable by the parser.", "labels": [], "entities": []}, {"text": "Na\u00a8\u0131veNa\u00a8\u0131ve implementations of dynamic oracles run in exponential time, since they need to simulate all possible computations of the parser for the input configuration.", "labels": [], "entities": []}, {"text": "Polynomial-time implementations of dynamic oracles have been proposed by the above mentioned authors for several projective dependency parsers.", "labels": [], "entities": []}, {"text": "To our knowledge, no polynomial-time algorithm has been published for transition-based parsers based on non-projective dependency grammars.", "labels": [], "entities": []}, {"text": "In this paper we consider a restriction of a transition-based, non-projective parser originally presented by.", "labels": [], "entities": []}, {"text": "This restriction was further investigated by and.", "labels": [], "entities": []}, {"text": "We provide an implementation fora dynamic oracle for this parser running in polynomial time.", "labels": [], "entities": []}, {"text": "We experimentally compare the parser trained with the dynamic oracle to a baseline obtained by training with a static oracle.", "labels": [], "entities": []}, {"text": "Significant accuracy improvements are achieved on many languages when using our dynamic oracle.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 12, "end_pos": 20, "type": "METRIC", "confidence": 0.9987667798995972}]}, {"text": "To our knowledge, these are the first experimental results on non-projective parsing based on a dynamic oracle.", "labels": [], "entities": [{"text": "non-projective parsing", "start_pos": 62, "end_pos": 84, "type": "TASK", "confidence": 0.6522978246212006}]}], "datasetContent": [{"text": "For comparability with previous work on dynamic oracles, we follow the experimental settings reported by  tions rather than 15, as the increased search space and spurious ambiguity of Attardi's non-projective parser implies that more iterations are required to converge to a stable model.", "labels": [], "entities": []}, {"text": "A more detailed description of the experimental settings follows.", "labels": [], "entities": []}, {"text": "Training We train a global linear model using the averaged perceptron algorithm and a labelled version of the parser described in Section 3.", "labels": [], "entities": []}, {"text": "We perform on-line training using the oracle defined in Section 5: at each parsing step, the model's weights are updated if the predicted transition results into an increase in configuration loss, but the process continues by following the predicted transition independently of the loss increase.", "labels": [], "entities": []}, {"text": "As our baseline we train the model using the static oracle defined by.", "labels": [], "entities": []}, {"text": "This oracle follows a canonical computation that creates arcs as soon as possible, and prioritizes the la transition over the la 2 transition in situations where both create a gold arc.", "labels": [], "entities": []}, {"text": "The static oracle is notable to deal with configurations that cannot reach the gold dependency tree, so we constrain the training algorithm to follow the zero-loss transition provided by the oracle.", "labels": [], "entities": []}, {"text": "While this version of Attardi's parser has been shown to cover the vast majority of non-projective sentences in several treebanks, there still are some sentences which are not parsable.", "labels": [], "entities": []}, {"text": "These sentences are skipped during training, but not during test and evaluation of the model.", "labels": [], "entities": []}, {"text": "If a language is present in both datasets, we use the latest version.", "labels": [], "entities": []}, {"text": "We also include results over the Penn Treebank (PTB)) converted to Stanford basic dependencies).", "labels": [], "entities": [{"text": "Penn Treebank (PTB))", "start_pos": 33, "end_pos": 53, "type": "DATASET", "confidence": 0.9704714179039001}]}, {"text": "For the CoNLL datasets we use the provided part-of-speech tags and the standard training/test partition; for the PTB we use automatically assigned tags, we train on sections 2-21 and test on section 23.", "labels": [], "entities": [{"text": "CoNLL datasets", "start_pos": 8, "end_pos": 22, "type": "DATASET", "confidence": 0.9681717455387115}, {"text": "PTB", "start_pos": 113, "end_pos": 116, "type": "DATASET", "confidence": 0.9567827582359314}]}], "tableCaptions": [{"text": " Table 1: Unlabelled Attachment Score (UAS) and  Labelled Attachment Score (LAS) using a static  and a dynamic oracle. Evaluation on CoNLL 2007  (first block) and CoNLL 2006 (second block) data- sets is carried out including punctuation, evalu- ation on the Penn Treebank excludes it.", "labels": [], "entities": [{"text": "Unlabelled Attachment Score (UAS)", "start_pos": 10, "end_pos": 43, "type": "METRIC", "confidence": 0.7306767304738363}, {"text": "Labelled Attachment Score (LAS)", "start_pos": 49, "end_pos": 80, "type": "METRIC", "confidence": 0.7638159990310669}, {"text": "CoNLL 2007", "start_pos": 133, "end_pos": 143, "type": "DATASET", "confidence": 0.9447855353355408}, {"text": "CoNLL 2006 (second block) data- sets", "start_pos": 163, "end_pos": 199, "type": "DATASET", "confidence": 0.9036607411172655}, {"text": "Penn Treebank", "start_pos": 258, "end_pos": 271, "type": "DATASET", "confidence": 0.9957571923732758}]}]}