{"title": [{"text": "Convolutional Neural Networks for Sentence Classification", "labels": [], "entities": [{"text": "Sentence Classification", "start_pos": 34, "end_pos": 57, "type": "TASK", "confidence": 0.8857713043689728}]}], "abstractContent": [{"text": "We report on a series of experiments with convolutional neural networks (CNN) trained on top of pre-trained word vectors for sentence-level classification tasks.", "labels": [], "entities": [{"text": "sentence-level classification tasks", "start_pos": 125, "end_pos": 160, "type": "TASK", "confidence": 0.7769216299057007}]}, {"text": "We show that a simple CNN with little hyperparameter tuning and static vectors achieves excellent results on multiple benchmarks.", "labels": [], "entities": []}, {"text": "Learning task-specific vectors through fine-tuning offers further gains in performance.", "labels": [], "entities": []}, {"text": "We additionally propose a simple modification to the architecture to allow for the use of both task-specific and static vectors.", "labels": [], "entities": []}, {"text": "The CNN models discussed herein improve upon the state of the art on 4 out of 7 tasks, which include sentiment analysis and question classification.", "labels": [], "entities": [{"text": "sentiment analysis", "start_pos": 101, "end_pos": 119, "type": "TASK", "confidence": 0.9738177359104156}, {"text": "question classification", "start_pos": 124, "end_pos": 147, "type": "TASK", "confidence": 0.8533230125904083}]}], "introductionContent": [{"text": "Deep learning models have achieved remarkable results in computer vision ( ) and speech recognition () in recent years.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 81, "end_pos": 99, "type": "TASK", "confidence": 0.8417436480522156}]}, {"text": "Within natural language processing, much of the work with deep learning methods has involved learning word vector representations through neural language models ( and performing composition over the learned word vectors for classification).", "labels": [], "entities": []}, {"text": "Word vectors, wherein words are projected from a sparse, 1-of-V encoding (here V is the vocabulary size) onto a lower dimensional vector space via a hidden layer, are essentially feature extractors that encode semantic features of words in their dimensions.", "labels": [], "entities": []}, {"text": "In such dense representations, semantically close words are likewise close-in euclidean or cosine distance-in the lower dimensional vector space.", "labels": [], "entities": []}, {"text": "Convolutional neural networks (CNN) utilize layers with convolving filters that are applied to local features ().", "labels": [], "entities": []}, {"text": "Originally invented for computer vision, CNN models have subsequently been shown to be effective for NLP and have achieved excellent results in semantic parsing (), search query retrieval (), sentence modeling, and other traditional NLP tasks).", "labels": [], "entities": [{"text": "NLP", "start_pos": 101, "end_pos": 104, "type": "TASK", "confidence": 0.950849711894989}, {"text": "semantic parsing", "start_pos": 144, "end_pos": 160, "type": "TASK", "confidence": 0.7251799404621124}, {"text": "search query retrieval", "start_pos": 165, "end_pos": 187, "type": "TASK", "confidence": 0.6475107669830322}, {"text": "sentence modeling", "start_pos": 192, "end_pos": 209, "type": "TASK", "confidence": 0.8051226735115051}]}, {"text": "In the present work, we train a simple CNN with one layer of convolution on top of word vectors obtained from an unsupervised neural language model.", "labels": [], "entities": []}, {"text": "These vectors were trained by on 100 billion words of Google News, and are publicly available.", "labels": [], "entities": [{"text": "Google News", "start_pos": 54, "end_pos": 65, "type": "DATASET", "confidence": 0.8630702495574951}]}, {"text": "We initially keep the word vectors static and learn only the other parameters of the model.", "labels": [], "entities": []}, {"text": "Despite little tuning of hyperparameters, this simple model achieves excellent results on multiple benchmarks, suggesting that the pre-trained vectors are 'universal' feature extractors that can be utilized for various classification tasks.", "labels": [], "entities": []}, {"text": "Learning task-specific vectors through fine-tuning results in further improvements.", "labels": [], "entities": []}, {"text": "We finally describe a simple modification to the architecture to allow for the use of both pre-trained and task-specific vectors by having multiple channels.", "labels": [], "entities": []}, {"text": "Our work is philosophically similar to which showed that for image classification, feature extractors obtained from a pretrained deep learning model perform well on a variety of tasks-including tasks that are very different from the original task for which the feature extractors were trained.", "labels": [], "entities": [{"text": "image classification", "start_pos": 61, "end_pos": 81, "type": "TASK", "confidence": 0.8065666258335114}]}], "datasetContent": [{"text": "We test our model on various benchmarks.", "labels": [], "entities": []}, {"text": "Summary statistics of the datasets are in table 1.", "labels": [], "entities": []}, {"text": "\u2022 MR: Movie reviews with one sentence per review.", "labels": [], "entities": [{"text": "MR", "start_pos": 2, "end_pos": 4, "type": "METRIC", "confidence": 0.9925077557563782}]}, {"text": "Classification involves detecting positive/negative reviews (Pang and).", "labels": [], "entities": [{"text": "Classification", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.9250385165214539}, {"text": "Pang", "start_pos": 61, "end_pos": 65, "type": "DATASET", "confidence": 0.8526871800422668}]}, {"text": "3 \u2022 SST-1: Stanford Sentiment Treebank-an extension of MR but with train/dev/test splits provided and fine-grained labels (very positive, positive, neutral, negative, very negative), re-labeled by.", "labels": [], "entities": [{"text": "Stanford Sentiment Treebank-an", "start_pos": 11, "end_pos": 41, "type": "DATASET", "confidence": 0.9267655412356058}]}, {"text": "4 \u2022 SST-2: Same as SST-1 but with neutral reviews removed and binary labels.", "labels": [], "entities": []}, {"text": "\u2022 Subj: Subjectivity dataset where the task is to classify a sentence as being subjective or objective ().", "labels": [], "entities": []}, {"text": "\u2022 TREC: TREC question dataset-task involves classifying a question into 6 question types (whether the question is about person, location, numeric information, etc.)", "labels": [], "entities": [{"text": "TREC", "start_pos": 2, "end_pos": 6, "type": "METRIC", "confidence": 0.858146071434021}, {"text": "TREC question dataset-task involves classifying a question into 6 question types (whether the question is about person, location, numeric information, etc.)", "start_pos": 8, "end_pos": 164, "type": "Description", "confidence": 0.6971444951163398}]}], "tableCaptions": [{"text": " Table 1: Summary statistics for the datasets after tokeniza- tion. c: Number of target classes. l: Average sentence length.  N : Dataset size. |V |: Vocabulary size. |Vpre|: Number of  words present in the set of pre-trained word vectors. Test:  Test set size (CV means there was no standard train/test split  and thus 10-fold CV was used).", "labels": [], "entities": []}]}