{"title": [], "abstractContent": [{"text": "Ambiguous propositions are analyzed in a type system where disambiguation is effected during assembly (i.e. by coer-cion).", "labels": [], "entities": []}, {"text": "Ambiguity is introduced through a layer of types that are underspecified relative to a pre-existing collection of dependent types, construed as unambigu-ous propositions.", "labels": [], "entities": []}, {"text": "A simple system of reasoning directly with such underspec-ification is described, and shown to be sound and complete for the full range of disambiguations.", "labels": [], "entities": []}, {"text": "Beyond erasing types, the system supports constraints on dis-ambiguations, including co-variation.", "labels": [], "entities": []}], "introductionContent": [{"text": "A widely held view expressed in is that \"if there were one word to describe why natural language processing is hard, it is ambiguity.\"", "labels": [], "entities": []}, {"text": "For any given natural language utterance, a formal language such as predicate logic typically offers several non-equivalent (wellformed) formulas as possible translations.", "labels": [], "entities": []}, {"text": "An obvious approach is to take the disjunction of all alternatives, assuming (for the sake of the argument) that the disjunction is a formula.", "labels": [], "entities": []}, {"text": "Even if it were, however, various objections have been raised against this proposal (e.g.).", "labels": [], "entities": []}, {"text": "For the purposes of the present paper, what is interesting about a word, phrase, sentence or discourse that is ambiguous in isolation is how it may get disambiguated when combined with other expressions (or, more generally, when placed in a wider context); the challenge for any theory of ambiguity is to throw light on that process of disambiguation.", "labels": [], "entities": []}, {"text": "*From June to mid-August 1999, I will be visiting IMS, Uni Stuttgart, Azenbergstr 12, 70174 Stuttgart, Germany.", "labels": [], "entities": [{"text": "IMS, Uni Stuttgart, Azenbergstr 12, 70174 Stuttgart", "start_pos": 50, "end_pos": 101, "type": "DATASET", "confidence": 0.8886369466781616}]}, {"text": "Where I might be after that is unclear.", "labels": [], "entities": []}, {"text": "More concretely, suppose \u2022 were a binary connective on propositions A and B such that A \u2022 B is a proposition ambiguous between A and B.", "labels": [], "entities": []}, {"text": "Under the \"propositions-as-types\" paradigm (e.g. () identifying proofs of a proposition with programs of the corresponding type (so that \"t: A\" can be read as t is a proof of proposition A, or equivalently, t is a program of type A), disambiguation may take the form of type coercion.", "labels": [], "entities": []}, {"text": "An instructive example with F as the context Evidently, there is something conjunctive (never mind disjunctive) about o; but beyond the question as to whether the unambiguous propositions constituting the possible readings of an ambiguous proposition form a conjunctive or disjunctive set (whatever that may precisely mean), there is also the matter of the interconnected choices from such sets, mediated by terms such as p\u00b0(x) and q\u00b0(Y).", "labels": [], "entities": []}, {"text": "To ground these abstract considerations in natural language processing, a few words about how to think of the terms t and types A are useful.", "labels": [], "entities": []}, {"text": "For predicate logic formulas A, the terms t might be intuitionistic natural deduction proofs, related by the Curry-Howard isomorphism to a suitable typed A-calculus.", "labels": [], "entities": []}, {"text": "A notable innovation made in Intuitionistic Type Theory) is to allow proofs to enter into judgments of well-formedness (propositionhood).", "labels": [], "entities": [{"text": "Intuitionistic Type Theory", "start_pos": 29, "end_pos": 55, "type": "TASK", "confidence": 0.7264498869578043}]}, {"text": "This stands in sharp contrast to ordinary predicate logic (be it intuitionistic or classical), where well-formedness is a trivial matter taken for granted (rather than analyzed) by the Curry-Howard isomorphism.", "labels": [], "entities": []}, {"text": "For a natural language, however, it is well-formedness that is addressed by building types A over sentences, nouns, etc (in categorial grammar; e.g.) or LFG f-structures (in the \"glue\" approach, ().", "labels": [], "entities": []}, {"text": "Now, while ITT's rules for propositionhood hardly constitute an account of grammaticality in English, the combination (in ITT) of assertions of well-formedness (A type) and theoremhood (t: A) re-introduces matters of information content (over and above grammatical form), which have been applied in) (among other places) to discourse semantics (in particular, anaphora).", "labels": [], "entities": []}, {"text": "The present paper assumes the machinery of dependent functions and sums in ITT, without choosing between grammatical and semantic applications.", "labels": [], "entities": []}, {"text": "In both cases, what ambiguity contributes to the pot is indeterminacy in typing, the intuition being that an expression is ambiguous to the extent that its typing is indeterminate.", "labels": [], "entities": []}, {"text": "That said, let us return to (1) and consider how to capture sequent inferences such as rI-x:(A-+ B).C rFy:D\u00b0A V }-ap(p\u00b0(x),q\u00b0(y)):B", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}