{"title": [], "abstractContent": [{"text": "Implementations of models of morphologically rich languages such as Arabic typically achieve speed and small memory footprint at the cost of abandoning linguistically abstract and elegant representations.", "labels": [], "entities": []}, {"text": "We present a solution to modeling rich morphologies that is both fast and based on linguistically rich representations.", "labels": [], "entities": []}, {"text": "In our approach, we convert a linguistically complex and abstract implementation of Arabic verbs in finite-state machinery into a simple precompiled tabular representation .", "labels": [], "entities": []}], "introductionContent": [{"text": "Arabic is a morphologically rich and complex language, characterized by a combination of templatic and affixational morphemes, complex morphological, phonological and orthographic rules, and a rich feature system.", "labels": [], "entities": []}, {"text": "Arabic morphological analysis and generation are important to many NLP applications such as machine translation and information retrieval).", "labels": [], "entities": [{"text": "Arabic morphological analysis", "start_pos": 0, "end_pos": 29, "type": "TASK", "confidence": 0.5720594425996145}, {"text": "machine translation", "start_pos": 92, "end_pos": 111, "type": "TASK", "confidence": 0.8158312439918518}, {"text": "information retrieval", "start_pos": 116, "end_pos": 137, "type": "TASK", "confidence": 0.7846108675003052}]}, {"text": "Much work has been done on Arabic morphological analysis and generation in a variety of approaches and at different degrees of linguistic depths.", "labels": [], "entities": [{"text": "Arabic morphological analysis and generation", "start_pos": 27, "end_pos": 71, "type": "TASK", "confidence": 0.7095734357833863}]}, {"text": "There is a continuum of approaches which is characterized by its two poles: on one end, very abstract and linguistically rich representations and rules (often based on particular theories of morphology) are used to derive surface forms; while on the other end, simple and shallow techniques focus on efficient search in a space of precompiled (tabulated) solutions.", "labels": [], "entities": []}, {"text": "The first type is typically implemented using finite-state technology and can beat many different degrees of sophistication and detail.", "labels": [], "entities": []}, {"text": "An example of this type of implementation is the MAGEAD (Morphological Analysis and GEneration for Arabic and its Dialects) system).", "labels": [], "entities": [{"text": "MAGEAD (Morphological Analysis and GEneration for Arabic and its Dialects)", "start_pos": 49, "end_pos": 123, "type": "TASK", "confidence": 0.6441520750522614}]}, {"text": "This system, which we use as starting point in this paper, compiles abstract high-level linguistic information of different types to finite state machinery.", "labels": [], "entities": []}, {"text": "The second type is typically not implemented in finite-state technology.", "labels": [], "entities": []}, {"text": "Examples include the Buckwalter Arabic Morphological Analyzer (BAMA)) and its extension ALMORGEANA.", "labels": [], "entities": [{"text": "Buckwalter Arabic Morphological Analyzer (BAMA))", "start_pos": 21, "end_pos": 69, "type": "DATASET", "confidence": 0.900255594934736}, {"text": "ALMORGEANA", "start_pos": 88, "end_pos": 98, "type": "METRIC", "confidence": 0.8736116886138916}]}, {"text": "These systems do not represent the morphemic, phonological and orthographic rules directly at all, and instead compile their effect into the lexicon itself.", "labels": [], "entities": []}, {"text": "Numerous intermediate points exist between these two extremes (e.g.,).", "labels": [], "entities": []}, {"text": "The various approaches typically trade off different degrees of speed and memory (model size) for more abstract and elegant representations.", "labels": [], "entities": []}, {"text": "Precompiled tabular systems usually have fast response time when implemented using hash tables.", "labels": [], "entities": []}, {"text": "The cost of building the linguistic resources manually is the main drawback for this approach since such resources are prone to error and hard to debug and extend.", "labels": [], "entities": []}, {"text": "Linguistically sophisticated systems are easier to understand and extend and they allow for modeling morphology without lexicons (to address unknown forms); however, with the complexity of some languages' morphology, the finite-state transducers (FSTs) tend to become extremely large, causing a significant deterioration in response time.", "labels": [], "entities": []}, {"text": "In this paper, we present a solution to the modeling of rich morphologies that combines the best of these two approaches.", "labels": [], "entities": []}, {"text": "In previous work, we presented MAGEAD, a multi-tier finite-state implementation of Arabic morphology.", "labels": [], "entities": []}, {"text": "We improve the speed by automatically converting our FST-based MAGEAD system to a precompiled tabular implementation that preserves all of the rich linguistic information used in MAGEAD's design.", "labels": [], "entities": [{"text": "FST-based MAGEAD system", "start_pos": 53, "end_pos": 76, "type": "DATASET", "confidence": 0.6977022290229797}]}, {"text": "The new system, MAGEAD-EXPRESS is not only much faster and smaller in size, but it also still allows linguistically based abstract changes and updates in its model.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 16, "end_pos": 30, "type": "DATASET", "confidence": 0.4929368495941162}]}, {"text": "Furthermore, MAGEAD-EXPRESS produces complete linguistic analyses that include intermediate levels of representation, an advantage MAGEAD does not have readily in its output.", "labels": [], "entities": []}, {"text": "The only disadvantage of MAGEAD-EXPRESS is its inability to produce analyses for unknown words (unlike MAGEAD).", "labels": [], "entities": []}, {"text": "The paper is organized as follows.", "labels": [], "entities": []}, {"text": "We give a short introduction to Arabic morphology in section 2.", "labels": [], "entities": []}, {"text": "The related work is discussed in section 3.", "labels": [], "entities": []}, {"text": "We then present MAGEAD and MAGEAD-EXPRESS in sections 4 and 5 respectively.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 16, "end_pos": 22, "type": "DATASET", "confidence": 0.7031022310256958}, {"text": "MAGEAD-EXPRESS", "start_pos": 27, "end_pos": 41, "type": "DATASET", "confidence": 0.8230923414230347}]}, {"text": "The extraction process of MAGEAD's linguistic information is discussed in section 6.", "labels": [], "entities": [{"text": "MAGEAD's linguistic information", "start_pos": 26, "end_pos": 57, "type": "DATASET", "confidence": 0.7535988241434097}]}, {"text": "Finally, the evaluation is presented in section 7.", "labels": [], "entities": []}], "datasetContent": [{"text": "MAGEAD-EXPRESS uses MAGEAD's linguistic resources; therefore its lexical coverage should be identical to that of MAGEAD.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 0, "end_pos": 14, "type": "DATASET", "confidence": 0.8639622926712036}]}, {"text": "We do not evaluate MAGEAD's coverage here; for more information about MSA and Levantine verb coverage, see) and for MSA nouns, see.", "labels": [], "entities": []}, {"text": "In this section, we evaluate the conversion of MAGEAD's linguistic resources for MSA Verbs from their FST representation to the tabular representation used by MAGEAD-EXPRESS.", "labels": [], "entities": []}, {"text": "We also report on time performance and memory usage of MAGEAD-EXPRESS versus MAGEAD.", "labels": [], "entities": []}, {"text": "Both MAGEAD and MAGEAD-EXPRESS are bidirectional systems.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 5, "end_pos": 11, "type": "DATASET", "confidence": 0.8067805171012878}, {"text": "MAGEAD-EXPRESS", "start_pos": 16, "end_pos": 30, "type": "DATASET", "confidence": 0.8705039620399475}]}, {"text": "It is sufficient to evaluate them either in analysis or generation mode.", "labels": [], "entities": []}, {"text": "For the purpose of this evaluation, we opted to do the generation mode only.", "labels": [], "entities": []}, {"text": "The goal of this evaluation is to ensure that given any lexeme from MAGEAD's lexicon paired with a plausible set of linguistic feature-value pairs, both MAGEAD and MAGEAD-EXPRESS will generate the same surface forms.", "labels": [], "entities": []}, {"text": "MAGEAD's verb lexicon contains 8,960 lexemes, each of which has either 1,092 inflected surface forms if the lexeme is for an intransitive verb or 14,196 if transitive (accepts pronominal object clitics).", "labels": [], "entities": [{"text": "MAGEAD's verb lexicon", "start_pos": 0, "end_pos": 21, "type": "DATASET", "confidence": 0.8401027172803879}]}, {"text": "Since it is too time-consuming to test all the 8,960 lexemes, we create a representative sample of lexemes to serve as an evaluation dataset.", "labels": [], "entities": []}, {"text": "We cluster MAGEAD's lexicon into 611 lexeme groups.", "labels": [], "entities": []}, {"text": "Each group represents an MBC with a particular root type that triggers a particular set of rewrite rules.", "labels": [], "entities": []}, {"text": "Each lexeme group is assigned an iconic lexeme (IL) that represents the group.", "labels": [], "entities": []}, {"text": "The 611 ILs (240 intransitive and 371 transitive) are used as our evaluation dataset.", "labels": [], "entities": []}, {"text": "Each IL in the evaluation dataset is paired with all possible combinations of feature-value pairs and then fed to both MAGEAD and MAGEAD-EXPRESS.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 119, "end_pos": 125, "type": "DATASET", "confidence": 0.7970726490020752}, {"text": "MAGEAD-EXPRESS", "start_pos": 130, "end_pos": 144, "type": "DATASET", "confidence": 0.9169596433639526}]}, {"text": "The surface forms generated by both systems were identical in all cases.", "labels": [], "entities": []}, {"text": "This validates the correction of our conversion process.", "labels": [], "entities": [{"text": "conversion", "start_pos": 37, "end_pos": 47, "type": "TASK", "confidence": 0.9639833569526672}]}, {"text": "We now evaluate the time and memory requirements of MAGEAD-EXPRESS against MAGEAD.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 52, "end_pos": 66, "type": "DATASET", "confidence": 0.8528242707252502}, {"text": "MAGEAD", "start_pos": 75, "end_pos": 81, "type": "DATASET", "confidence": 0.9133760333061218}]}, {"text": "For the sake of this evaluation, we also created another version of MAGEAD that has the lexicon compiled into its FST; we call this version MAGEAD-LEX.", "labels": [], "entities": [{"text": "FST", "start_pos": 114, "end_pos": 117, "type": "METRIC", "confidence": 0.7147111296653748}, {"text": "MAGEAD-LEX", "start_pos": 140, "end_pos": 150, "type": "DATASET", "confidence": 0.9261539578437805}]}, {"text": "compares MAGEAD-EXPRESS to both MAGEAD-LEX and MAGEAD.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 9, "end_pos": 23, "type": "DATASET", "confidence": 0.8637762665748596}, {"text": "MAGEAD-LEX", "start_pos": 32, "end_pos": 42, "type": "DATASET", "confidence": 0.9098340272903442}, {"text": "MAGEAD", "start_pos": 47, "end_pos": 53, "type": "DATASET", "confidence": 0.8732146620750427}]}, {"text": "MAGEAD-LEX is restricted by the lexicon and thus cannot operate on any lexemes that are not in the lexicon (unlike MAGEAD but like MAGEAD-EXPRESS).", "labels": [], "entities": []}, {"text": "MAGEAD is the only system among these three that can run without a lexicon.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.8533951640129089}]}, {"text": "MAGEAD-EXPRESS is the only system among the three that allows easy access to intermediate representations such as those appearing in In terms of time to build, MAGEAD takes 30 mins to compile (MAGEAD-LEX takes an hour), and then MAGEAD-EXPRESS takes around 48 hours to extract its tables from MAGEAD's FSTs.", "labels": [], "entities": [{"text": "MAGEAD's FSTs", "start_pos": 293, "end_pos": 306, "type": "DATASET", "confidence": 0.7253312269846598}]}, {"text": "As for time performance, we created a list of 10,000 verbs collected randomly from the list of surface forms generated in the extraction evaluation.", "labels": [], "entities": []}, {"text": "We measure the time MAGEAD-EXPRESS takes to finish analyzing the 10,000 verbs (in ten batches of 1,000 verbs each) against the time taken by MAGEAD and MAGEAD-LEX.", "labels": [], "entities": []}, {"text": "As shows, MAGEAD-EXPRESS is 1.5 times as fast as MAGEAD-LEX and 58 times faster than MAGEAD.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 10, "end_pos": 24, "type": "DATASET", "confidence": 0.6448220610618591}, {"text": "MAGEAD-LEX", "start_pos": 49, "end_pos": 59, "type": "DATASET", "confidence": 0.7818446159362793}, {"text": "MAGEAD", "start_pos": 85, "end_pos": 91, "type": "DATASET", "confidence": 0.9453253149986267}]}, {"text": "We next compute the average speed of analyzing one verb at a time offline (using all 10,000 verbs).", "labels": [], "entities": []}, {"text": "In this scenario, MAGEAD is the fastest due to the overhead time (3.4 secs) that MAGEAD-EXPRESS needs to load its tables into memory.", "labels": [], "entities": []}, {"text": "Of course, MAGEAD-EXPRESS is the only system among the three systems that can operate in a client-server setup where it loads its lexicons once into memory.", "labels": [], "entities": []}, {"text": "In such setup, MAGEAD-EXPRESS is more than 300 times faster than MAGEAD.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 65, "end_pos": 71, "type": "DATASET", "confidence": 0.8007330894470215}]}, {"text": "As for memory requirements, MAGEAD-EXPRESS requires about 7MB to store its tables into memory.", "labels": [], "entities": [{"text": "MAGEAD-EXPRESS", "start_pos": 28, "end_pos": 42, "type": "DATASET", "confidence": 0.8234704732894897}]}, {"text": "When the tables get loaded in memory, MAGEAD-EXPRESS does not require additional resources.", "labels": [], "entities": []}, {"text": "On the other hand, MAGEAD consists of three FSTs that are composed with the input in an online fashion, see for sizes.", "labels": [], "entities": [{"text": "MAGEAD", "start_pos": 19, "end_pos": 25, "type": "DATASET", "confidence": 0.6006156802177429}, {"text": "FSTs", "start_pos": 44, "end_pos": 48, "type": "TASK", "confidence": 0.8854181170463562}]}, {"text": "In fact, we could not compose any two of MAGEAD's three FSTs into a bigger FST on our 64GB memory machine.", "labels": [], "entities": [{"text": "MAGEAD's three FSTs", "start_pos": 41, "end_pos": 60, "type": "DATASET", "confidence": 0.8553985059261322}]}, {"text": "However, MAGEAD-LEX is much smaller than MAGEAD because it is only restricted to the lexicon.", "labels": [], "entities": []}, {"text": "MAGEAD-LEX's FSTs are composed into one big FST of size 388MB.", "labels": [], "entities": [{"text": "MAGEAD-LEX", "start_pos": 0, "end_pos": 10, "type": "DATASET", "confidence": 0.8767637610435486}, {"text": "FSTs", "start_pos": 13, "end_pos": 17, "type": "TASK", "confidence": 0.4890442192554474}]}, {"text": "The amount of memory needed by MAGEAD depends mainly on the size of the input.", "labels": [], "entities": []}, {"text": "For 1 verb to be analyzed, the input is composed with MAGEAD's three FSTs and the result is an FST of size 10KB, and fora batch of 10, 100, and 1,000 verbs the resulting FST is of size 113KB, 1.7MB, and 13MB, respectively.", "labels": [], "entities": [{"text": "FST", "start_pos": 95, "end_pos": 98, "type": "METRIC", "confidence": 0.9493906497955322}, {"text": "FST", "start_pos": 170, "end_pos": 173, "type": "METRIC", "confidence": 0.7404886484146118}]}], "tableCaptions": []}