{"title": [{"text": "Concrete Sentence Spaces for Compositional Distributional Models of Meaning", "labels": [], "entities": [{"text": "Meaning", "start_pos": 68, "end_pos": 75, "type": "TASK", "confidence": 0.6898277401924133}]}], "abstractContent": [{"text": "Coecke, Sadrzadeh, and Clark [3] developed a compositional model of meaning for distributional semantics, in which each word in a sentence has a meaning vector and the distributional meaning of the sentence is a function of the tensor products of the word vectors.", "labels": [], "entities": []}, {"text": "Abstractly speaking, this function is the morphism corresponding to the grammatical structure of the sentence in the category of finite dimensional vector spaces.", "labels": [], "entities": []}, {"text": "In this paper, we provide a concrete method for implementing this linear meaning map, by constructing a corpus-based vector space for the type of sentence.", "labels": [], "entities": []}, {"text": "Our construction method is based on structured vector spaces whereby meaning vectors of all sentences, regardless of their grammatical structure, live in the same vector space.", "labels": [], "entities": []}, {"text": "Our proposed sentence space is the tensor product of two noun spaces, in which the basis vectors are pairs of words each augmented with a grammatical role.", "labels": [], "entities": []}, {"text": "This enables us to compare meanings of sentences by simply taking the inner product of their vectors.", "labels": [], "entities": []}, {"text": "1 Background Coecke, Sadrzadeh, and Clark [3] develop a mathematical framework fora compositional distributional model of meaning, based on the intuition that syntactic analysis guides the semantic vector composition.", "labels": [], "entities": []}, {"text": "The setting consists of two parts: a formalism fora type-logical syntax and a formalism for vector space semantics.", "labels": [], "entities": []}, {"text": "Each word is assigned a grammatical type and a meaning vector in the space corresponding to its type.", "labels": [], "entities": []}, {"text": "The meaning of a sentence is obtained by applying the function corresponding to the grammatical structure of the sentence to the tensor product of the meanings of the words in the sentence.", "labels": [], "entities": []}, {"text": "Based on the type-logic used, some words will have atomic types and some compound function types.", "labels": [], "entities": []}, {"text": "The compound types live in a tensor space where the vectors are weighted sums (i.e. superpositions) of the pairs of bases from each space.", "labels": [], "entities": []}, {"text": "Compound types are \"applied\" to their arguments by taking inner products, in a similar manner to how predicates are applied to their arguments in Montague semantics.", "labels": [], "entities": []}, {"text": "For the type-logic we use Lambek's Pregroup grammars [7].", "labels": [], "entities": []}, {"text": "The use of pregoups is not essential, but leads to a more elegant formalism, given its proximity to the categorical structure of vector spaces (see [3]).", "labels": [], "entities": []}, {"text": "A Pregroup is a partially ordered monoid where each element has aright and left cancelling element, referred to as an adjoint.", "labels": [], "entities": [{"text": "Pregroup", "start_pos": 2, "end_pos": 10, "type": "DATASET", "confidence": 0.9297124743461609}]}, {"text": "It can be seen as the algebraic counterpart of the cancellation calculus of Harris [6].", "labels": [], "entities": [{"text": "Harris [6]", "start_pos": 76, "end_pos": 86, "type": "DATASET", "confidence": 0.819878563284874}]}, {"text": "The operational difference between a Pregroup and Lambek's Syntactic Calculus is that, in the latter, the monoid multiplication of the algebra (used to model juxtaposition of the types of the words) has aright and a left adjoint, whereas in the pregroup it is the elements themselves which have adjoints.", "labels": [], "entities": []}, {"text": "The adjoint types are used to denote functions, e.g. that of a transitive verb with a subject and object as input and a sentence as output.", "labels": [], "entities": []}, {"text": "In the Pregroup setting, these function types are still denoted by adjoints, but this time the adjoints of the elements themselves.", "labels": [], "entities": [{"text": "Pregroup setting", "start_pos": 7, "end_pos": 23, "type": "DATASET", "confidence": 0.9397130608558655}]}, {"text": "As an example, consider the sentence \"dogs chase cats\".", "labels": [], "entities": []}, {"text": "We assign the type n (for noun phrase) to \"dog\" and \"cat\", and n r sn l to \"chase\", where n rand n l are the right and left adjoints of n and sis the type of a 125", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}