{"title": [{"text": "Beyond Chart Parsing: An Analytic Comparison of Dependency Chart Parsing Algorithms", "labels": [], "entities": []}], "abstractContent": [{"text": "In this paper, we give a summary of various dependency chart parsing algorithms in terms of the use of parsing histories fora new dependency arc decision.", "labels": [], "entities": [{"text": "dependency chart parsing", "start_pos": 44, "end_pos": 68, "type": "TASK", "confidence": 0.7628477017084757}]}, {"text": "Some parsing histories are closely related to the target dependency arc, and it is necessary for the parsing algorithm to take them into consideration.", "labels": [], "entities": []}, {"text": "Each dependency treebank may have some unique characteristics, and it requires for the parser to model them by certain parsing histories.", "labels": [], "entities": []}, {"text": "We show in experiments that proper selection of the parsing algorithm which reflect the dependency annotation of the coordinate structures improves the overall performance.", "labels": [], "entities": []}], "introductionContent": [{"text": "In data-driven graph-based parsing, a chart parser is frequently combined with a learning method to derive and evaluate the parse forest and output the optimal parse tree.", "labels": [], "entities": [{"text": "data-driven graph-based parsing", "start_pos": 3, "end_pos": 34, "type": "TASK", "confidence": 0.6508393486340841}]}, {"text": "The proper selection of a parsing algorithm is important for efficiency and correctness.", "labels": [], "entities": [{"text": "parsing algorithm", "start_pos": 26, "end_pos": 43, "type": "TASK", "confidence": 0.9022127389907837}]}, {"text": "Chart parsing is the realization of dynamic programming for syntactic analysis.", "labels": [], "entities": [{"text": "Chart parsing", "start_pos": 0, "end_pos": 13, "type": "TASK", "confidence": 0.7591270804405212}, {"text": "syntactic analysis", "start_pos": 60, "end_pos": 78, "type": "TASK", "confidence": 0.7503763139247894}]}, {"text": "It is suitable for ambiguous grammars, for example, the grammars of natural languages.", "labels": [], "entities": []}, {"text": "Practically, according to the diverse implementations of dynamic programming for dependency syntactic analysis, there area number of dependency chart parsing algorithms.", "labels": [], "entities": [{"text": "dependency syntactic analysis", "start_pos": 81, "end_pos": 110, "type": "TASK", "confidence": 0.8401392499605814}, {"text": "dependency chart parsing", "start_pos": 133, "end_pos": 157, "type": "TASK", "confidence": 0.6798472007115682}]}, {"text": "In this paper, we list a number of bottom-up dependency chart parsing algorithms in terms of their use of the parsing histories (section 2).", "labels": [], "entities": [{"text": "dependency chart parsing", "start_pos": 45, "end_pos": 69, "type": "TASK", "confidence": 0.6081668734550476}]}, {"text": "Incorporating parsing histories into parse tree decoding requires changes to the parsing algorithm.", "labels": [], "entities": []}, {"text": "For instance, when decoding a dependency by including the most recently detected sibling arc, a modified parsing algorithm has been used in) in contrast to the algorithm used in).", "labels": [], "entities": []}, {"text": "Parsing histories are partial results generated from previous parsing steps.", "labels": [], "entities": []}, {"text": "Ina chart parser, these histories can be used in subsequent parsing steps.", "labels": [], "entities": []}, {"text": "Previous works have shown that the use of parsing histories helps to resolve syntactic ambiguities.", "labels": [], "entities": [{"text": "parsing histories", "start_pos": 42, "end_pos": 59, "type": "TASK", "confidence": 0.8819366097450256}]}, {"text": "Obviously, using more histories provides better parsing disambiguation.", "labels": [], "entities": [{"text": "parsing disambiguation", "start_pos": 48, "end_pos": 70, "type": "TASK", "confidence": 0.9369699060916901}]}, {"text": "However, there is a trade-off between using more histories and parsing efficiently.", "labels": [], "entities": []}, {"text": "One option is to incorporate only important histories.", "labels": [], "entities": []}, {"text": "The selection of different histories requires changes to the parsing algorithm.", "labels": [], "entities": [{"text": "parsing", "start_pos": 61, "end_pos": 68, "type": "TASK", "confidence": 0.970436692237854}]}, {"text": "Another reason for the careful selection of parsing algorithms is from the diverse dependency annotation strategies.", "labels": [], "entities": [{"text": "parsing", "start_pos": 44, "end_pos": 51, "type": "TASK", "confidence": 0.9735373258590698}]}, {"text": "The dependency annotations for the same linguistic structures, i.e., coordinate structures can vary (Section 3.1).", "labels": [], "entities": []}, {"text": "Additionally, in our opinion, some linguistic or corpus-oriented characters exist for each training data set.", "labels": [], "entities": []}, {"text": "Different parsing algorithms are required to deal with the diversity of the corpus.", "labels": [], "entities": []}], "datasetContent": [{"text": "We conduct our experiments on two data sets, the Chinese corpus of CoNLL'07 (, and the Slovene corpus of CoNLL'06 () shared task for multilingual dependency parsing track.", "labels": [], "entities": [{"text": "Chinese corpus of CoNLL'07", "start_pos": 49, "end_pos": 75, "type": "DATASET", "confidence": 0.8681417405605316}, {"text": "Slovene corpus of CoNLL'06", "start_pos": 87, "end_pos": 113, "type": "DATASET", "confidence": 0.8574869930744171}, {"text": "multilingual dependency parsing", "start_pos": 133, "end_pos": 164, "type": "TASK", "confidence": 0.5831819673379263}]}, {"text": "Both corpora are of the CCH-type.", "labels": [], "entities": []}, {"text": "lists the performance of two systems, i.e., the 2 nd -order system of () and the proposed system with Alg.", "labels": [], "entities": []}, {"text": "6 (Table 1) as the parse tree decoder.", "labels": [], "entities": []}, {"text": "As the discussions given in the previous section, the 2 nd -order gives low performance for coordinate structures compared to the overall parsing results.", "labels": [], "entities": []}, {"text": "The proposed system gives better coordinate disambiguation by modeling the relation between dependents located on different-sides of the head.", "labels": [], "entities": []}], "tableCaptions": []}