{"title": [{"text": "SiSSA -An Infrastructure for NLP Application Development", "labels": [], "entities": [{"text": "NLP Application Development", "start_pos": 29, "end_pos": 56, "type": "TASK", "confidence": 0.8305916984875997}]}], "abstractContent": [{"text": "Recently there has been a growing interest in infrastructures for sharing NLP tools and resources.", "labels": [], "entities": []}, {"text": "This paper presents SiSSA, a project that aims at developing an infrastructure for prototyping, editing and validation of NLP application architectures.", "labels": [], "entities": []}, {"text": "The system will provide the user with a graphical environment for (1) selecting the NLP activities relevant for the particular NLP task and the associated linguistic processors that execute them; (2) connecting new linguistic processors to SiSSA; (3) checking that the chosen architectural hypothesis corresponds to the functional specifications of the given application.", "labels": [], "entities": []}], "introductionContent": [{"text": "In recent years there has been a growing interest in the commercial deployment of NLP technologies and in infrastructures for sharing NLP tools and resources.", "labels": [], "entities": []}, {"text": "Such interest makes more and more urgent the availability of toolsets that allow an easy and quick integration of linguistic resources and modules and the rapid prototyping of NLP applications.", "labels": [], "entities": []}, {"text": "An example of the efforts in such a direction is GATE (a General Architecture for Text Engineering, (), which provides a software infrastructure on top of which heterogeneous NLP processing modules maybe evaluated and refined individually, or maybe combined into larger application systems.", "labels": [], "entities": []}, {"text": "This paper presents SiSSA (Sistema integrato di Supporto allo Sviluppo di Applicazioni -Integrated System of Support to Application Development), a project with a twofold aim: the definition of a common metaformalism (called FIST) for the unification of different formalisms for grammar description, and the implementation of a Grammar Repository for storing grammars written using FIST; the implementation of an infrastructure for the rapid prototyping and testing of architectures for NLP systems, starting from linguistic processors made available by SiSSA itself.", "labels": [], "entities": []}, {"text": "In this paper we concentrate on the latter aspect, i.e. the infrastructure for designing NLP architectures.", "labels": [], "entities": []}, {"text": "To this end, SiSSA provides the user with a graphical environment for (1) selecting the linguistic activities which are relevant to the particular application at hand, along with the linguistic processors that execute them; (2) checking that the chosen architectural hypothesis corresponds to the functional specifications of the application; (3) connecting to SiSSA new linguistic processors, this way making them available for the prototyping/design activities.", "labels": [], "entities": []}, {"text": "Thus, the design of the architecture of an NLP system amounts to a) identifying a sequence of linguistic activities to be performed; b) connecting them in a specific processing chain; and c) associating each linguistic activity to a suitable processor, selected among those made available by SiSSA.", "labels": [], "entities": [{"text": "SiSSA", "start_pos": 292, "end_pos": 297, "type": "DATASET", "confidence": 0.8656919598579407}]}, {"text": "The term project is used to refer to the product of the user's activity, namely, the architecture of the NLP application the user is building.", "labels": [], "entities": []}, {"text": "A project encodes processing flows among basic units, each consisting of a linguistic task that is executed by a linguistic processor.", "labels": [], "entities": []}, {"text": "First, they store the status of a user session.", "labels": [], "entities": []}, {"text": "Second, they are the main units of runtime modules: the SiSSA Manager (see below) interprets projects by executing the procedures chosen by the user and applying them to the document selected for execution.", "labels": [], "entities": []}, {"text": "SiSSA makes crucial use of state-of-the-art software technologies (CORBA, XML) in order to integrate the various modules in an effective way.", "labels": [], "entities": [{"text": "SiSSA", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.7447840571403503}]}, {"text": "The core of SiSSA has been developed in Java; hence it can run both on Windows and on Unix platforms.", "labels": [], "entities": []}, {"text": "SiSSA consists of two parts: an autonomous application (called SiSSA Manager) and a set of executable modules, henceforth called processors.", "labels": [], "entities": []}, {"text": "The SiSSA Manager provides an infrastructure for architecture composition and processor integration.", "labels": [], "entities": [{"text": "SiSSA Manager", "start_pos": 4, "end_pos": 17, "type": "DATASET", "confidence": 0.7663474082946777}]}, {"text": "That is, it provides all the necessary support to allow the user to select linguistic activities, connect them in an overall processing chain, and associate each activity to a linguistic processor.", "labels": [], "entities": []}, {"text": "Moreover, it takes care of executing the processing flow encoded in the project, reporting results to the user, etc.", "labels": [], "entities": []}, {"text": "A major goal while designing SiSSA was to allow the system to reuse existing processors as much as possible.", "labels": [], "entities": []}, {"text": "This was meant to extend to processors located in other sites than the user's.", "labels": [], "entities": []}, {"text": "Already existing processors are written in different programming languages and run on different hardware and software platforms; so this objective required the adoption of a distributed architecture, providing: flexibility (processors can be developed and updated independently); expandibility (new processors can be added); independence from the programming languages employed to implement the processors; distribution of execution on different hardware platforms.", "labels": [], "entities": []}, {"text": "As a result, the user can exploit for his/her needs processors that are located anywhere, provided that they have been notified to SiSSA, and enclosed in a wrapper so as to comply with the SiSSA interface (see Section 2.2 and 2.3).", "labels": [], "entities": [{"text": "SiSSA", "start_pos": 131, "end_pos": 136, "type": "DATASET", "confidence": 0.8943004608154297}]}, {"text": "In the following sections, we first present a detailed description of SiSSA.", "labels": [], "entities": [{"text": "SiSSA", "start_pos": 70, "end_pos": 75, "type": "DATASET", "confidence": 0.5209446549415588}]}, {"text": "Then some considerations on the pratical use of the system are introduced.", "labels": [], "entities": []}, {"text": "Finally some details about the current status of the SiSSA implementation and the future work follow.", "labels": [], "entities": [{"text": "SiSSA implementation", "start_pos": 53, "end_pos": 73, "type": "DATASET", "confidence": 0.6676559150218964}]}], "datasetContent": [], "tableCaptions": []}