{"title": [{"text": "Stacking classifiers for anti-spam filtering of e-mail", "labels": [], "entities": [{"text": "anti-spam filtering of e-mail", "start_pos": 25, "end_pos": 54, "type": "TASK", "confidence": 0.8063745200634003}]}], "abstractContent": [{"text": "We evaluate empirically a scheme for combining classifiers, known as stacked generalization, in the context of anti-spam filtering, a novel cost-sensitive application of text categorization.", "labels": [], "entities": [{"text": "anti-spam filtering", "start_pos": 111, "end_pos": 130, "type": "TASK", "confidence": 0.734129011631012}]}, {"text": "Unsolicited commercial e-mail, or \"spam\", floods mailboxes, causing frustration, wasting bandwidth, and exposing minors to unsuitable content.", "labels": [], "entities": []}, {"text": "Using a public corpus, we show that stacking can improve the efficiency of automatically induced anti-spam filters, and that such filters can be used in real-life applications.", "labels": [], "entities": [{"text": "stacking", "start_pos": 36, "end_pos": 44, "type": "TASK", "confidence": 0.9621701240539551}]}], "introductionContent": [{"text": "This paper presents an empirical evaluation of stacked generalization, a scheme for combining automatically induced classifiers, in the context of anti-spam filtering, a novel cost-sensitive application of text categorization.", "labels": [], "entities": [{"text": "anti-spam filtering", "start_pos": 147, "end_pos": 166, "type": "TASK", "confidence": 0.7898573279380798}]}, {"text": "The increasing popularity and low cost of email have intrigued direct marketers to flood the mailboxes of thousands of users with unsolicited messages, advertising anything, from vacations to get-rich schemes.", "labels": [], "entities": []}, {"text": "These messages, known as spam or more formally Unsolicited Commercial E-mail, are extremely annoying, as they clutter mailboxes, prolong dial-up connections, and often expose minors to unsuitable content).", "labels": [], "entities": []}, {"text": "Legal and simplistic technical countermeasures, like blacklists and keyword-based filters, have had a very limited effect so far.", "labels": [], "entities": []}, {"text": "The success of machine learning techniques in text categorization has recently led to alternative, learning-based approaches).", "labels": [], "entities": [{"text": "text categorization", "start_pos": 46, "end_pos": 65, "type": "TASK", "confidence": 0.8047381937503815}]}, {"text": "A classifier capable of distinguishing between spam and non-spam, hereafter legitimate, messages is induced from a manually categorized learning collection of messages, and is then used to identify incoming spam e-mail.", "labels": [], "entities": []}, {"text": "Initial results have been promising, and experiments are becoming more systematic, by exploiting recently introduced benchmark corpora, and cost-sensitive evaluation measures (.", "labels": [], "entities": []}, {"text": "Stacked generalization, or stacking, is an approach for constructing classifier ensembles.", "labels": [], "entities": [{"text": "Stacked generalization", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.749975323677063}]}, {"text": "A classifier ensemble, or committee, is a set of classifiers whose individual decisions are combined in someway to classify new instances.", "labels": [], "entities": []}, {"text": "Stacking combines multiple classifiers to induce a higher-level classifier with improved performance.", "labels": [], "entities": []}, {"text": "The latter can bethought of as the president of a committee with the ground-level classifiers as members.", "labels": [], "entities": []}, {"text": "Each unseen incoming message is first given to the members; the president then decides on the category of the message by considering the opinions of the members and the message itself.", "labels": [], "entities": []}, {"text": "Ground-level classifiers often make different classification errors.", "labels": [], "entities": []}, {"text": "Hence, a president that has successfully learned when to trust each of the members can improve overall performance.", "labels": [], "entities": []}, {"text": "We have experimented with two groundlevel classifiers for which results on a public benchmark corpus are available: a Na\u00efve Bayes classifier, c) and a memory-based classifier).", "labels": [], "entities": []}, {"text": "Using a third, memory-based classifier as president, we investigated two versions of stacking and two different cost-sensitive scenarios.", "labels": [], "entities": [{"text": "stacking", "start_pos": 85, "end_pos": 93, "type": "TASK", "confidence": 0.9867161512374878}]}, {"text": "Overall, our results indicate that stacking improves the performance of the ground-level classifiers, and that the performance of the resulting anti-spam filter is acceptable for real-life applications.", "labels": [], "entities": [{"text": "stacking", "start_pos": 35, "end_pos": 43, "type": "TASK", "confidence": 0.9574836492538452}]}, {"text": "Section 1 below presents the benchmark corpus and the preprocessing of the messages; section 2 introduces cost-sensitive evaluation measures; section 3 provides details on the stacking approaches that were explored; section 4 discusses the learning algorithms that were employed and the motivation for selecting them; section 5 presents our experimental results followed by conclusions.", "labels": [], "entities": []}], "datasetContent": [{"text": "Blocking a legitimate message is generally more severe an error than accepting a spam message.", "labels": [], "entities": []}, {"text": "Let S L \u2192 and L S \u2192 denote the two error types, respectively, and let us assume that Previous research has considered three cost scenarios, where \u03bb = 1, 9, or 999).", "labels": [], "entities": []}, {"text": "In the scenario where \u03bb = 999, blocked messages are deleted immediately.", "labels": [], "entities": []}, {"text": "S L \u2192 is taken to be 999 times as costly as L S \u2192 , since most users would consider losing a legitimate message unacceptable.", "labels": [], "entities": []}, {"text": "In the scenario where \u03bb = 9, blocked messages are returned to their senders with a request to resend them to an unfiltered address.", "labels": [], "entities": []}, {"text": "To measure the performance of a filter, weighted accuracy (WAcc) and its complementary weighted error rate (WErr = 1 -WAcc) are used That is, when a legitimate message is blocked, this counts as \u03bb errors; and when it passes the filter, this counts as \u03bb successes.", "labels": [], "entities": [{"text": "accuracy (WAcc)", "start_pos": 49, "end_pos": 64, "type": "METRIC", "confidence": 0.8413185775279999}, {"text": "WErr = 1 -WAcc)", "start_pos": 108, "end_pos": 123, "type": "METRIC", "confidence": 0.8082489967346191}]}, {"text": "We consider the case where no filter is present as our baseline: legitimate messages are never blocked, and spam messages always pass.", "labels": [], "entities": []}, {"text": "The weighted accuracy of the baseline is: The total cost ratio (TCR) compares the performance of a filter to the baseline: Greater TCR values indicate better performance.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 13, "end_pos": 21, "type": "METRIC", "confidence": 0.9803921580314636}, {"text": "total cost ratio (TCR)", "start_pos": 46, "end_pos": 68, "type": "METRIC", "confidence": 0.8226106266180674}, {"text": "TCR", "start_pos": 131, "end_pos": 134, "type": "METRIC", "confidence": 0.967307448387146}]}, {"text": "For TCR < 1, not using the filter is better.", "labels": [], "entities": [{"text": "TCR", "start_pos": 4, "end_pos": 7, "type": "METRIC", "confidence": 0.8941740393638611}]}, {"text": "Our evaluation measures also include spam recall (SR) and spam precision (SP): SR measures the percentage of spam messages that the filter blocks (intuitively, its effectiveness), while SP measures how many blocked messages are indeed spam (its safety).", "labels": [], "entities": [{"text": "recall (SR)", "start_pos": 42, "end_pos": 53, "type": "METRIC", "confidence": 0.8975932896137238}, {"text": "precision (SP)", "start_pos": 63, "end_pos": 77, "type": "METRIC", "confidence": 0.9216093420982361}, {"text": "SR", "start_pos": 79, "end_pos": 81, "type": "METRIC", "confidence": 0.9972768425941467}]}, {"text": "Despite their intuitiveness, comparing different filter configurations using SR and SP is difficult: each configuration yields a pair of SR and SP results; and without a single combining measure, like TCR, that incorporates the notion of cost, it is difficult to decide which pair is better.", "labels": [], "entities": []}, {"text": "In all the experiments, stratified 10-fold cross-validation was used.", "labels": [], "entities": []}, {"text": "That is, Ling-Spam was partitioned into 10 equally populated parts, maintaining the original spam-legitimate ratio.", "labels": [], "entities": []}, {"text": "Each experiment was repeated 10 times, each time reserving a different part j S (j = 1, \u2026, 10) for testing, and using the remaining 9 parts as the training set j L .  Tables 4 and 5 summarize the performance of the best configurations of the president in our experiments, for each cost scenario.", "labels": [], "entities": []}, {"text": "Comparing the TCR scores in these tables with the corresponding scores of shows that stacking improves the performance of the overall filter.", "labels": [], "entities": [{"text": "TCR", "start_pos": 14, "end_pos": 17, "type": "METRIC", "confidence": 0.9664821624755859}]}, {"text": "From the two stacking versions, cross-validation stacking is slightly better than holdout stacking.", "labels": [], "entities": [{"text": "cross-validation stacking", "start_pos": 32, "end_pos": 57, "type": "TASK", "confidence": 0.8263373374938965}]}, {"text": "It should also be noted that stacking was beneficial for most of the configurations of the president that we tested, i.e. most sub-optimal presidents outperformed the best configurations of the members.", "labels": [], "entities": [{"text": "stacking", "start_pos": 29, "end_pos": 37, "type": "TASK", "confidence": 0.9701310992240906}]}, {"text": "This is encouraging, since the optimum configuration is often hard to determine a priori, and may vary from one user to the other.", "labels": [], "entities": []}, {"text": "There was one interesting exception in the positive impact of stacking.", "labels": [], "entities": [{"text": "stacking", "start_pos": 62, "end_pos": 70, "type": "TASK", "confidence": 0.991061270236969}]}, {"text": "The 1-NN and 2-NN (k = 1, 2) presidents were substantially worse than the other k-NN presidents, often performing worse than the ground-level classifiers.", "labels": [], "entities": []}, {"text": "We witnessed this behavior in both cost scenarios, and with most values of m (number of attributes).", "labels": [], "entities": []}, {"text": "Ina \"postmortem\" analysis, we ascertained that most messages misclassified by 1-NN and 2-NN, but not the other presidents, are legitimate, with their nearest neighbor being spam.", "labels": [], "entities": []}, {"text": "Therefore, the additional errors of 1-NN and 2-NN, compared to the other presidents, are of the S L \u2192 type.", "labels": [], "entities": []}, {"text": "Interestingly, inmost of    , do not enhance but distort the representation of instances.", "labels": [], "entities": []}, {"text": "As a result, the close neighborhood of the unclassified instance is not a legitimate, but a spam e-mail.", "labels": [], "entities": []}, {"text": "This behavior of the memorybased classifier is also noted in).", "labels": [], "entities": []}, {"text": "The suggested solution there was to use a larger value fork, combined with a strong distance weighting function, such as the one presented in section 4.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Best configurations of k-NN per usage  scenario and the corresponding performance.", "labels": [], "entities": []}, {"text": " Table 1: Best configurations of NB per usage  scenario and the corresponding performance.", "labels": [], "entities": []}, {"text": " Table 5: Best configurations of cross-validation  stacking per usage scenario and the  corresponding performance.", "labels": [], "entities": [{"text": "cross-validation  stacking", "start_pos": 33, "end_pos": 59, "type": "TASK", "confidence": 0.7897441685199738}]}, {"text": " Table 4: Best configurations of holdout  stacking per usage scenario and the  corresponding performance.", "labels": [], "entities": []}, {"text": " Table 3: Analysis of the common errors of the  best configurations of NB and k-NN per  scenario (\u03bb) and message class.", "labels": [], "entities": []}]}