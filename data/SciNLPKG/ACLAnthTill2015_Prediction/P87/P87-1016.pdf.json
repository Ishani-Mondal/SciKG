{"title": [{"text": "ON THE SUCCINCTNESS PROPERTIES OF UNORDERED CONTEXT-FREE GRAMMARS", "labels": [], "entities": [{"text": "UNORDERED CONTEXT-FREE GRAMMARS", "start_pos": 34, "end_pos": 65, "type": "METRIC", "confidence": 0.616224338610967}]}], "abstractContent": [{"text": "1 Abstract We prove in this paper that unordered, or ID/LP grammars, are e.xponentially more succinct than context-free grammars, by exhibiting a sequence (L,~) of finite languages such that the size of any CFG for L,~ must grow exponentially inn, but which can be described by polynomial-size ID/LP grammars.", "labels": [], "entities": []}, {"text": "The results have implications for the description of free word order languages.", "labels": [], "entities": []}, {"text": "2 Introduction Context free grammars in immediate dominance and linear precedence format were used in GPSG [3] as a skeleton for metarule generation and feature checking.", "labels": [], "entities": [{"text": "metarule generation", "start_pos": 129, "end_pos": 148, "type": "TASK", "confidence": 0.775558739900589}, {"text": "feature checking", "start_pos": 153, "end_pos": 169, "type": "TASK", "confidence": 0.7250576019287109}]}, {"text": "It is intuitively obvious that grammars in this form can describe languages which are closed under the operation of taking arbitrary permutations of strings in the language.", "labels": [], "entities": []}, {"text": "(Such languages will be called symmetric.)", "labels": [], "entities": []}, {"text": "Ordinary context-free grammars, on the other hand, \"seem to require that all permutations of right-hand sides of productions be explicitly listed, in order to describe certain symmetric languages.", "labels": [], "entities": []}, {"text": "For an explicit example, consider the n-letter alphabet E,~ = {al .....", "labels": [], "entities": []}, {"text": "Let P,~ be the set of all strings which are permutations of exactly these letters.", "labels": [], "entities": []}, {"text": "It seems obvious that no context-free grammar could generate this language without explicitly listing it.", "labels": [], "entities": []}, {"text": "Now try to prove that this is the case.", "labels": [], "entities": []}, {"text": "This is in essence what we do in this paper.", "labels": [], "entities": []}, {"text": "We also hope to get the audience for the paper interested in why the proof works!", "labels": [], "entities": []}, {"text": "To give some idea of the difficulty of our problem, we begin by recounting Barton's results [1] in this conference in 1985.", "labels": [], "entities": []}, {"text": "(There is a general discussion in [2].)", "labels": [], "entities": []}, {"text": "He showed that the universal recognition problem (URP) for ID/LP grammars is NP-complete.", "labels": [], "entities": [{"text": "universal recognition problem (URP)", "start_pos": 19, "end_pos": 54, "type": "TASK", "confidence": 0.7791465222835541}]}, {"text": "1 This means that if P :~ NP, then no polynomial algorithm can solve this problem.", "labels": [], "entities": []}, {"text": "The difficulty of the problem seems to arise from the fact that the translation from an ID/LP grammar to a weakly equivalent CFG blows up exponentially.", "labels": [], "entities": [{"text": "CFG", "start_pos": 125, "end_pos": 128, "type": "DATASET", "confidence": 0.9051850438117981}]}, {"text": "It is easy to show, assuming P ~ NP, that any reasonable transformation from ID/LP grammars to equivalent CFGs cannot be done in polynomial time; Rounds has done this as a remark in [8].", "labels": [], "entities": []}, {"text": "In this paper, we remove the hypothesis P ~: NP.", "labels": [], "entities": []}, {"text": "That is, we can show that no algorithm whatever can effect the translation polynomi-The universal recognition problem is to tell for an ID/LP grammar G and a string w, whether or not w E L(G).", "labels": [], "entities": [{"text": "translation polynomi-The universal recognition", "start_pos": 63, "end_pos": 109, "type": "TASK", "confidence": 0.687621183693409}]}, {"text": "(Unfortunately, this does not solve the P-NP question!)", "labels": [], "entities": []}, {"text": "Barton's reduction took a known NP-complete problem , the vertex-cover problem, and reduced it to the URP for ID/LP.", "labels": [], "entities": []}, {"text": "The reduction makes crucial use of grammars whose production size can be arbitrarily large.", "labels": [], "entities": []}, {"text": "Define the fan-out of a grammar to be the largest total number of symbol occurrences on the right hand side of any production.", "labels": [], "entities": []}, {"text": "For a CFG, this would be the maximum length of any RHS; for an ID/LP grammar, we would count symbols and their multiplicities.", "labels": [], "entities": []}, {"text": "Barton's reduction does the following.", "labels": [], "entities": []}, {"text": "For each instance of the vertex cover problem, of size n, he constructs a string wand an ID/LP grammar of fanout proportional ton such that the instance has a vertex cover if and only if the string is generated by the grammar.", "labels": [], "entities": []}, {"text": "He also notes that if all ID/LP grammars have fanout bounded by a fixed constant, then the URP can be solved in polynomial time.", "labels": [], "entities": []}, {"text": "This brings us to the statement of our results.", "labels": [], "entities": []}, {"text": "Let Pn be the language described above.", "labels": [], "entities": []}, {"text": "Clearly this language can be generated by the ID/LP grammar S-al,...,an whose size in bits is O(n log n).", "labels": [], "entities": []}, {"text": "Theorem 1 There is a constant c > I such that any contezt-free gr.mmar Gn generating Pn must have size ~(cn).", "labels": [], "entities": []}, {"text": "2 Moreover, every [D/LP grammar'generating pn, whose fanout is bounded by a fized constant, must likewise have ezponential size.", "labels": [], "entities": []}, {"text": "The theorem does not actually depend on having a vocabulary which grows with n.", "labels": [], "entities": []}, {"text": "It is possible to code everything homomorphically into a two-letter alphabet.", "labels": [], "entities": []}, {"text": "However, we think that the result shows that ordinary CFGs, and bounded-fanout ID/LP grammars, are inadequate forgiving succinct descriptions of languages whose vocabulary is open, and whose word order can be very free.", "labels": [], "entities": []}, {"text": "Thus, we prefer the statement of the result as it is.", "labels": [], "entities": []}, {"text": "We start the paper with the technical results, in Section 3, and continue with a discussion of the implications for linguistics in Section 4.", "labels": [], "entities": []}, {"text": "The final section contains a proof of the Interchange Lemma of Ogden, Ross, and Winklmann [7], which is the main tool used for our re-suits.", "labels": [], "entities": [{"text": "Interchange Lemma", "start_pos": 42, "end_pos": 59, "type": "METRIC", "confidence": 0.9387521147727966}]}, {"text": "This proof is included, not because it is new, but because we want to show a beautiful example of the use of 2This notation meam.s that for inKnitely ram W n, the size of Gn must be bigger than c n.", "labels": [], "entities": []}], "introductionContent": [{"text": "Context free grammars in immediate dominance and linear precedence format were used in GPSG as a skeleton for metarule generation and feature checking.", "labels": [], "entities": [{"text": "metarule generation", "start_pos": 110, "end_pos": 129, "type": "TASK", "confidence": 0.7935248613357544}, {"text": "feature checking", "start_pos": 134, "end_pos": 150, "type": "TASK", "confidence": 0.6939938515424728}]}, {"text": "It is intuitively obvious that grammars in this form can describe languages which are closed under the operation of taking arbitrary permutations of strings in the language.", "labels": [], "entities": []}, {"text": "(Such languages will be called symmetric.)", "labels": [], "entities": []}, {"text": "Ordinary contextfree grammars, on the other hand, \"seem to require that all permutations of right-hand sides of productions be explicitly listed, in order to describe certain symmetric languages.", "labels": [], "entities": []}, {"text": "For an explicit example, consider the n-letter alphabet E,~ = {al .....", "labels": [], "entities": []}, {"text": "Let P,~ be the set of all strings which are permutations of exactly these letters.", "labels": [], "entities": []}, {"text": "It seems obvious that no context-free grammar could generate this language without explicitly listing it.", "labels": [], "entities": []}, {"text": "Now try to prove that this is the case.", "labels": [], "entities": []}, {"text": "This is in essence what we do in this paper.", "labels": [], "entities": []}, {"text": "We also hope to get the audience for the paper interested in why the proof works!", "labels": [], "entities": []}, {"text": "To give some idea of the difficulty of our problem, we begin by recounting Barton's results in this conference in 1985.", "labels": [], "entities": []}, {"text": "(There is a general discussion in.)", "labels": [], "entities": []}, {"text": "He showed that the universal recognition problem (URP) for ID/LP grammars is NP-complete.", "labels": [], "entities": [{"text": "universal recognition problem (URP)", "start_pos": 19, "end_pos": 54, "type": "TASK", "confidence": 0.7791465222835541}]}, {"text": "1 This means that if P :~ NP, then no polynomial algorithm can solve this problem.", "labels": [], "entities": []}, {"text": "The difficulty of the problem seems to arise from the fact that the translation from an ID/LP grammar to a weakly equivalent CFG blows up exponentially.", "labels": [], "entities": [{"text": "CFG", "start_pos": 125, "end_pos": 128, "type": "DATASET", "confidence": 0.9051850438117981}]}, {"text": "It is easy to show, assuming P ~ NP, that any reasonable transformation from ID/LP grammars to equivalent CFGs cannot be done in polynomial time; Rounds has done this as a remark in.", "labels": [], "entities": []}, {"text": "In this paper, we remove the hypothesis P ~: NP.", "labels": [], "entities": []}, {"text": "That is, we can show that no algorithm whatever can effect the translation polynomiThe universal recognition problem is to tell for an ID/LP grammar G and a string w, whether or not w E L(G).", "labels": [], "entities": [{"text": "translation polynomiThe universal recognition", "start_pos": 63, "end_pos": 108, "type": "TASK", "confidence": 0.8702132850885391}]}, {"text": "(Unfortunately, this does not solve the P -NP question!)", "labels": [], "entities": []}, {"text": "Barton's reduction took a known NP-complete problem, the vertex-cover problem, and reduced it to the URP for ID/LP.", "labels": [], "entities": []}, {"text": "The reduction makes crucial use of grammars whose production size can be arbitrarily large.", "labels": [], "entities": []}, {"text": "Define the fan-out of a grammar to be the largest total number of symbol occurrences on the right hand side of any production.", "labels": [], "entities": []}, {"text": "For a CFG, this would be the maximum length of any RHS; for an ID/LP grammar, we would count symbols and their multiplicities.", "labels": [], "entities": []}, {"text": "Barton's reduction does the following.", "labels": [], "entities": []}, {"text": "For each instance of the vertex cover problem, of size n, he constructs a string wand an ID/LP grammar of fanout proportional ton such that the instance has a vertex cover if and only if the string is generated by the grammar.", "labels": [], "entities": []}, {"text": "He also notes that if all ID/LP grammars have fanout bounded by a fixed constant, then the URP can be solved in polynomial time.", "labels": [], "entities": []}, {"text": "This brings us to the statement of our results.", "labels": [], "entities": []}, {"text": "Let Pn be the language described above.", "labels": [], "entities": []}, {"text": "Clearly this language can be generated by the ID/LP grammar S --al,...,an whose size in bits is O(n log n).", "labels": [], "entities": []}, {"text": "The theorem does not actually depend on having a vocabulary which grows with n.", "labels": [], "entities": []}, {"text": "It is possible to code everything homomorphically into a two-letter alphabet.", "labels": [], "entities": []}, {"text": "However, we think that the result shows that ordinary CFGs, and bounded-fanout ID/LP grammars, are inadequate forgiving succinct descriptions of languages whose vocabulary is open, and whose word order can be very free.", "labels": [], "entities": []}, {"text": "Thus, we prefer the statement of the result as it is.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}