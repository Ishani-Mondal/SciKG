{"title": [{"text": "A Transition-Based Parser for 2-Planar Dependency Structures", "labels": [], "entities": []}], "abstractContent": [{"text": "Finding a class of structures that is rich enough for adequate linguistic representation yet restricted enough for efficient computational processing is an important problem for dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 178, "end_pos": 196, "type": "TASK", "confidence": 0.8400878310203552}]}, {"text": "In this paper, we present a transition system for 2-planar dependency trees-trees that can be decomposed into at most two planar graphs-and show that it can be used to implement a classifier-based parser that runs in linear time and outperforms a state-of-the-art transition-based parser on four data sets from the CoNLL-X shared task.", "labels": [], "entities": [{"text": "CoNLL-X shared task", "start_pos": 315, "end_pos": 334, "type": "DATASET", "confidence": 0.813154399394989}]}, {"text": "In addition, we present an efficient method for determining whether an arbitrary tree is 2-planar and show that 99% or more of the trees in existing treebanks are 2-planar.", "labels": [], "entities": []}], "introductionContent": [{"text": "Dependency-based syntactic parsing has become a widely used technique in natural language processing, and many different parsing models have been proposed in recent years (.", "labels": [], "entities": [{"text": "Dependency-based syntactic parsing", "start_pos": 0, "end_pos": 34, "type": "TASK", "confidence": 0.7107685009638468}]}, {"text": "One of the unresolved issues in this area is the proper treatment of non-projective dependency trees, which seem to be required for an adequate representation of predicate-argument structure, but which undermine the efficiency of dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 230, "end_pos": 248, "type": "TASK", "confidence": 0.7812085747718811}]}, {"text": "Caught between the Scylla of linguistically inadequate projective trees and the Charybdis of computationally intractable non-projective trees, some researchers have sought a middle ground by exploring classes of mildly non-projective dependency structures that strike a better balance between expressivity and complexity;;.", "labels": [], "entities": []}, {"text": "Although these proposals seem to have a very good fit with linguistic data, in the sense that they often cover 99% or more of the structures found in existing treebanks, the development of efficient parsing algorithms for these classes has met with more limited success.", "labels": [], "entities": []}, {"text": "For example, while both and have shown how well-nested dependency trees with bounded gap degree can be parsed in polynomial time, the best time complexity for lexicalized parsing of this class remains a prohibitive O(n 7 ), which makes the practical usefulness questionable.", "labels": [], "entities": [{"text": "O", "start_pos": 215, "end_pos": 216, "type": "METRIC", "confidence": 0.9599364399909973}]}, {"text": "In this paper, we explore another characterization of mildly non-projective dependency trees based on the notion of multiplanarity.", "labels": [], "entities": []}, {"text": "This was originally proposed by but has so far played a marginal role in the dependency parsing literature, because no algorithm was known for determining whether an arbitrary tree was mplanar, and no parsing algorithm existed for any constant value of m.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 77, "end_pos": 95, "type": "TASK", "confidence": 0.810680627822876}]}, {"text": "The contribution of this paper is twofold.", "labels": [], "entities": []}, {"text": "First, we present a procedure for determining the minimal number m such that a dependency tree is m-planar and use it to show that the overwhelming majority of sentences in dependency treebanks have a tree that is at most 2-planar.", "labels": [], "entities": []}, {"text": "Secondly, we present a transition-based parsing algorithm for 2-planar dependency trees, developed in two steps.", "labels": [], "entities": []}, {"text": "We begin by showing how the stack-based algorithm of can be generalized from projective to planar structures.", "labels": [], "entities": []}, {"text": "We then extend the system by adding a second stack and show that the resulting system captures exactly the set of 2-planar structures.", "labels": [], "entities": []}, {"text": "Although the contributions of this paper are mainly theoretical, we also present an empirical evaluation of the 2-planar parser, showing that it outperforms the projective parser on four data sets from the CoNLL-X shared task).", "labels": [], "entities": []}], "datasetContent": [{"text": "In order to get a first estimate of the empirical accuracy that can be obtained with transition-based 2-planar parsing, we have evaluated the parser on four data sets from the CoNLL-X shared task (): Czech, Danish, German and Portuguese.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 50, "end_pos": 58, "type": "METRIC", "confidence": 0.969645619392395}]}, {"text": "As our baseline, we take the strictly projective arc-eager transition system proposed by, as implemented in the freely available MaltParser system (, with and without the pseudo-projective parsing technique for recovering non-projective dependencies ).", "labels": [], "entities": []}, {"text": "For the two baseline systems, we use the parameter settings used by in the original shared task, where the pseudo-projective version of MaltParser was one of the two top performing systems ().", "labels": [], "entities": []}, {"text": "For our 2-planar parser, we use the same kernelized SVM classifiers as MaltParser, using the LIBSVM package, with feature models that are similar to MaltParser but extended with features defined over the second stack.", "labels": [], "entities": []}, {"text": "In, we report labeled (LAS) and unlabeled (UAS) attachment score on the four languages for all three systems.", "labels": [], "entities": [{"text": "labeled (LAS) and unlabeled (UAS) attachment score", "start_pos": 14, "end_pos": 64, "type": "METRIC", "confidence": 0.681405866687948}]}, {"text": "For the two systems that are capable of recovering non-projective de- Complete information about experimental settings can be found at http://stp.lingfil.uu.se/ nivre/exp/.", "labels": [], "entities": []}, {"text": "pendencies, we also report precision (NPP) and recall (NPR) specifically on non-projective dependency arcs.", "labels": [], "entities": [{"text": "precision (NPP)", "start_pos": 27, "end_pos": 42, "type": "METRIC", "confidence": 0.9181197583675385}, {"text": "recall (NPR)", "start_pos": 47, "end_pos": 59, "type": "METRIC", "confidence": 0.9672104120254517}]}, {"text": "The results show that the 2-planar parser outperforms the strictly projective variant of MaltParser on all metrics for all languages, and that it performs on a par with the pseudoprojective variant with respect to both overall attachment score and precision and recall on nonprojective dependencies.", "labels": [], "entities": [{"text": "precision", "start_pos": 248, "end_pos": 257, "type": "METRIC", "confidence": 0.9991389513015747}, {"text": "recall", "start_pos": 262, "end_pos": 268, "type": "METRIC", "confidence": 0.9991965889930725}]}, {"text": "These results look very promising in view of the fact that very little effort has been spent on optimizing the training oracle and feature model for the 2-planar parser so far.", "labels": [], "entities": []}, {"text": "It is worth mentioning that the 2-planar parser has two advantages over the pseudo-projective parser.", "labels": [], "entities": []}, {"text": "The first is simplicity, given that it is based on a single transition system and makes a single pass over the input, whereas the pseudo-projective parsing technique involves preprocessing of training data and post-processing of parser output ).", "labels": [], "entities": []}, {"text": "The second is the fact that it parses a well-defined class of dependency structures, with known coverage 8 , whereas no formal characterization exists of the class of structures parsable by the pseudo-projective parser.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Proportion of dependency trees classified by projectivity, planarity, m-planarity and ill- nestedness in treebanks for Arabic (Haji\u010d et al., 2004), Czech (Haji\u010d et al., 2006), Danish (Kromann,  2003), Dutch (van der Beek et al., 2002), German (Brants et al., 2002), Portuguese (Afonso et al., 2002),  Swedish (Nilsson et al., 2005) and Turkish (Oflazer et al., 2003; Atalay et al., 2003).", "labels": [], "entities": []}, {"text": " Table 2: Parsing accuracy for 2-planar parser in comparison to MaltParser with (PP) and without (P)  pseudo-projective transformations. LAS = labeled attachment score; UAS = unlabeled attachment score;  NPP = precision on non-projective arcs; NPR = recall on non-projective arcs.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9526224136352539}, {"text": "LAS = labeled attachment score", "start_pos": 137, "end_pos": 167, "type": "METRIC", "confidence": 0.7139306128025055}, {"text": "UAS = unlabeled attachment score", "start_pos": 169, "end_pos": 201, "type": "METRIC", "confidence": 0.6876724243164063}, {"text": "NPP", "start_pos": 204, "end_pos": 207, "type": "METRIC", "confidence": 0.9737259149551392}, {"text": "precision", "start_pos": 210, "end_pos": 219, "type": "METRIC", "confidence": 0.9900055527687073}, {"text": "NPR", "start_pos": 244, "end_pos": 247, "type": "METRIC", "confidence": 0.9839322566986084}, {"text": "recall", "start_pos": 250, "end_pos": 256, "type": "METRIC", "confidence": 0.9958129525184631}]}]}