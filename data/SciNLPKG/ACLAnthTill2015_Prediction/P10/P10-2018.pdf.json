{"title": [{"text": "A Structured Model for Joint Learning of Argument Roles and Predicate Senses", "labels": [], "entities": [{"text": "Joint Learning of Argument Roles and Predicate Senses", "start_pos": 23, "end_pos": 76, "type": "TASK", "confidence": 0.6483895070850849}]}], "abstractContent": [{"text": "In predicate-argument structure analysis, it is important to capture non-local dependencies among arguments and inter-dependencies between the sense of a predicate and the semantic roles of its arguments.", "labels": [], "entities": [{"text": "predicate-argument structure analysis", "start_pos": 3, "end_pos": 40, "type": "TASK", "confidence": 0.9403854012489319}]}, {"text": "However, no existing approach explicitly handles both non-local dependencies and semantic dependencies between predicates and arguments.", "labels": [], "entities": []}, {"text": "In this paper we propose a structured model that overcomes the limitation of existing approaches ; the model captures both types of dependencies simultaneously by introducing four types of factors including a global factor type capturing non-local dependencies among arguments and a pairwise factor type capturing local dependencies between a predicate and an argument.", "labels": [], "entities": []}, {"text": "In experiments the proposed model achieved competitive results compared to the state-of-the-art systems without applying any feature selection procedure.", "labels": [], "entities": []}], "introductionContent": [{"text": "Predicate-argument structure analysis is a process of assigning who does what to whom, where, when, etc.", "labels": [], "entities": [{"text": "Predicate-argument structure analysis", "start_pos": 0, "end_pos": 37, "type": "TASK", "confidence": 0.8311420480410258}]}, {"text": "Arguments of a predicate are assigned particular semantic roles, such as Agent, Theme, Patient, etc.", "labels": [], "entities": []}, {"text": "Lately, predicate-argument structure analysis has been regarded as a task of assigning semantic roles of arguments as well as word senses of a predicate (.", "labels": [], "entities": [{"text": "predicate-argument structure analysis", "start_pos": 8, "end_pos": 45, "type": "TASK", "confidence": 0.9667020638783773}]}, {"text": "Several researchers have paid much attention to predicate-argument structure analysis, and the following two important factors have been shown.,, and presented importance of capturing non-local dependencies of core arguments in predicate-argument structure analysis.", "labels": [], "entities": [{"text": "predicate-argument structure analysis", "start_pos": 48, "end_pos": 85, "type": "TASK", "confidence": 0.9490512808163961}, {"text": "predicate-argument structure analysis", "start_pos": 228, "end_pos": 265, "type": "TASK", "confidence": 0.902321974436442}]}, {"text": "They used argument sequences tied with a predicate sense (e.g. AGENT-buy.01/Active-PATIENT) as a feature for the re-ranker of the system where predicate sense and argument role candidates are generated by their pipelined architecture.", "labels": [], "entities": []}, {"text": "They reported that incorporating this type of features provides substantial gain of the system performance.", "labels": [], "entities": []}, {"text": "The other factor is inter-dependencies between a predicate sense and argument roles, which relate to selectional preference, and motivated us to jointly identify a predicate sense and its argument roles.", "labels": [], "entities": []}, {"text": "This type of dependencies has been explored by, all of which use Markov Logic Networks (MLN).", "labels": [], "entities": []}, {"text": "The work uses the global formulae that have atoms in terms of both a predicate sense and each of its argument roles, and the system identifies predicate senses and argument roles simultaneously.", "labels": [], "entities": []}, {"text": "Ideally, we want to capture both types of dependencies simultaneously.", "labels": [], "entities": []}, {"text": "The former approaches cannot explicitly include features that capture inter-dependencies between a predicate sense and its argument roles.", "labels": [], "entities": []}, {"text": "Though these are implicitly incorporated by re-ranking where the most plausible assignment is selected from a small subset of predicate and argument candidates, which are generated independently.", "labels": [], "entities": []}, {"text": "On the other hand, it is difficult to deal with core argument features in MLN.", "labels": [], "entities": []}, {"text": "Because the number of core arguments varies with the role assignments, this type of features cannot be expressed by a single formula.", "labels": [], "entities": []}, {"text": "proposed a generative model that captures both predicate senses and its argument roles.", "labels": [], "entities": []}, {"text": "However, the first-order markov assumption of the model eliminates ability to capture non-local dependencies among arguments.", "labels": [], "entities": []}, {"text": "Also, generative models are in general inferior to discriminatively trained linear or log-  In this paper we propose a structured model that overcomes limitations of the previous approaches.", "labels": [], "entities": []}, {"text": "For the model, we introduce several types of features including those that capture both non-local dependencies of core arguments, and inter-dependencies between a predicate sense and its argument roles.", "labels": [], "entities": []}, {"text": "By doing this, both tasks are mutually influenced, and the model determines the most plausible set of assignments of a predicate sense and its argument roles simultaneously.", "labels": [], "entities": []}, {"text": "We present an exact inference algorithm for the model, and a large-margin learning algorithm that can handle both local and global features.", "labels": [], "entities": []}, {"text": "shows the graphical representation of our proposed model.", "labels": [], "entities": []}, {"text": "The node p corresponds to a predicate, and the nodes a 1 , ..., a N to arguments of the predicate.", "labels": [], "entities": []}, {"text": "Each node is assigned a particular predicate sense or an argument role label.", "labels": [], "entities": []}, {"text": "The black squares are factors which provide scores of label assignments.", "labels": [], "entities": []}, {"text": "In the model, the nodes for arguments depend on the predicate sense, and by influencing labels of a predicate sense and its argument roles, the most plausible label assignment of the nodes is determined considering all factors.", "labels": [], "entities": []}], "datasetContent": [{"text": "We use the) for experiments.", "labels": [], "entities": []}, {"text": "It is a dataset for multi-lingual syntactic and semantic dependency parsing 1 . In the SRL-only challenge of the task, participants are required to identify predicate-argument structures of only the specified predicates.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 48, "end_pos": 75, "type": "TASK", "confidence": 0.6855034232139587}, {"text": "SRL-only challenge", "start_pos": 87, "end_pos": 105, "type": "TASK", "confidence": 0.9057660400867462}]}, {"text": "Therefore the problems to be solved are predicate sense disambiguation and argument role labeling.", "labels": [], "entities": [{"text": "predicate sense disambiguation", "start_pos": 40, "end_pos": 70, "type": "TASK", "confidence": 0.8803799549738566}, {"text": "argument role labeling", "start_pos": 75, "end_pos": 97, "type": "TASK", "confidence": 0.643765389919281}]}, {"text": "We use Semantic Labeled F1 for evaluation.", "labels": [], "entities": [{"text": "F1", "start_pos": 24, "end_pos": 26, "type": "METRIC", "confidence": 0.8429160118103027}]}, {"text": "For generating N-bests, we used the beamsearch algorithm, and the number of N-bests was set to N = 64.", "labels": [], "entities": []}, {"text": "For learning of the joint model, the loss function \u03c1(y t , y ) of the Passive-Aggressive Algorithm was set to the number of incorrect assignments of a predicate sense and its argument roles.", "labels": [], "entities": [{"text": "loss function \u03c1", "start_pos": 37, "end_pos": 52, "type": "METRIC", "confidence": 0.7539102633794149}]}, {"text": "Also, the number of iterations of the model used for testing was selected based on the performance on the development data.", "labels": [], "entities": []}, {"text": "shows the features used for the structured model.", "labels": [], "entities": []}, {"text": "The global features used for F G are based on those used in (, and the features FP Plemma of the predicate and predicate's head, and ppos of the predicate Dependency label between the predicate and predicate's head The concatenation of the dependency labels of the predicate's dependents FA Plemma and ppos of the predicate, the predicate's head, the argument candidate, and the argument's head Plemma and ppos of the leftmost/rightmost dependent and leftmost/rightmost sibling The dependency label of predicate, argument candidate and argument candidate's dependent The position of the argument candidate with respect to the predicate position in the dep.", "labels": [], "entities": [{"text": "F G", "start_pos": 29, "end_pos": 32, "type": "TASK", "confidence": 0.9231997430324554}]}, {"text": "tree (e.g. CHILD) The position of the head of the dependency relation with respect to the predicate position in the sentence The left-to-right chain of the deplabels of the predicate's dependents Plemma, ppos and dependency label paths between the predicate and the argument candidates The number of dependency edges between the predicate and the argument candidate FP A Plemma and plemma&ppos of the argument candidate Dependency label path between the predicate and the argument candidates FG The sequence of the predicate and the argument labels in the predicate-argument structure (e.g. A0-PRED-A1 Whether the semantic roles defined in frames exist in the structure, (e.g. CONTAINS:A1) The conjunction of the predicate sense and the frame information (e.g. wear.01&CONTAINS:A1).", "labels": [], "entities": []}, {"text": "We used the same feature templates for all languages.", "labels": [], "entities": []}, {"text": "shows the results of the experiments, and also shows the results of the top 3 systems in the CoNLL-2009 Shared Task participants of the SRLonly system.", "labels": [], "entities": [{"text": "CoNLL-2009 Shared Task participants", "start_pos": 93, "end_pos": 128, "type": "DATASET", "confidence": 0.8487618118524551}, {"text": "SRLonly system", "start_pos": 136, "end_pos": 150, "type": "DATASET", "confidence": 0.8940908014774323}]}, {"text": "By incorporating F PA , we achieved performance improvement for all languages.", "labels": [], "entities": [{"text": "F PA", "start_pos": 17, "end_pos": 21, "type": "METRIC", "confidence": 0.8059602379798889}]}, {"text": "This results suggest that it is effective to capture local interdependencies between a predicate sense and one of its argument roles.", "labels": [], "entities": []}, {"text": "Comparing the results with F P +F A and F P +F A +F G , incorporating F G also contributed performance improvements for all languages, especially the substantial F1 improvement of +1.88 is obtained in German.", "labels": [], "entities": [{"text": "F1", "start_pos": 162, "end_pos": 164, "type": "METRIC", "confidence": 0.9994844198226929}]}], "tableCaptions": [{"text": " Table 1: Features for the Structured Model", "labels": [], "entities": []}, {"text": " Table 2: Results on the CoNLL-2009 Shared Task dataset (Semantic Labeled F1).", "labels": [], "entities": [{"text": "CoNLL-2009 Shared Task dataset", "start_pos": 25, "end_pos": 55, "type": "DATASET", "confidence": 0.8014775663614273}]}, {"text": " Table 3: Predicate sense disambiguation and argu- ment role labeling results (average).", "labels": [], "entities": [{"text": "Predicate", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.986562192440033}, {"text": "argu- ment role labeling", "start_pos": 45, "end_pos": 69, "type": "TASK", "confidence": 0.8444301128387451}]}]}