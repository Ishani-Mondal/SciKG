{"title": [{"text": "Classifying Relations by Ranking with Convolutional Neural Networks", "labels": [], "entities": []}], "abstractContent": [{"text": "Relation classification is an important semantic processing task for which state-of-the-art systems still rely on costly hand-crafted features.", "labels": [], "entities": [{"text": "Relation classification", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.967469334602356}]}, {"text": "In this work we tackle the relation classification task using a convo-lutional neural network that performs classification by ranking (CR-CNN).", "labels": [], "entities": [{"text": "relation classification", "start_pos": 27, "end_pos": 50, "type": "TASK", "confidence": 0.9133539795875549}]}, {"text": "We propose anew pairwise ranking loss function that makes it easy to reduce the impact of artificial classes.", "labels": [], "entities": []}, {"text": "We perform experiments using the the SemEval-2010 Task 8 dataset, which is designed for the task of classifying the relationship between two nominals marked in a sentence.", "labels": [], "entities": [{"text": "SemEval-2010 Task 8 dataset", "start_pos": 37, "end_pos": 64, "type": "DATASET", "confidence": 0.6536043137311935}, {"text": "classifying the relationship between two nominals marked in a sentence", "start_pos": 100, "end_pos": 170, "type": "TASK", "confidence": 0.7598208427429199}]}, {"text": "Using CR-CNN, we outperform the state-of-the-art for this dataset and achieve a F1 of 84.1 without using any costly handcrafted features.", "labels": [], "entities": [{"text": "F1", "start_pos": 80, "end_pos": 82, "type": "METRIC", "confidence": 0.9994761347770691}]}, {"text": "Additionally, our experimental results show that: (1) our approach is more effective than CNN followed by a soft-max classifier; (2) omitting the representation of the artificial class Other improves both precision and recall; and (3) using only word embeddings as input features is enough to achieve state-of-the-art results if we consider only the text between the two target nominals.", "labels": [], "entities": [{"text": "precision", "start_pos": 205, "end_pos": 214, "type": "METRIC", "confidence": 0.9991706609725952}, {"text": "recall", "start_pos": 219, "end_pos": 225, "type": "METRIC", "confidence": 0.998746395111084}]}], "introductionContent": [{"text": "Relation classification is an important Natural Language Processing (NLP) task which is normally used as an intermediate step in many complex NLP applications such as question-answering and automatic knowledge base construction.", "labels": [], "entities": [{"text": "Relation classification", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.9750683009624481}, {"text": "automatic knowledge base construction", "start_pos": 190, "end_pos": 227, "type": "TASK", "confidence": 0.5934881269931793}]}, {"text": "Since the last decade there has been increasing interest in applying machine learning approaches to this task.", "labels": [], "entities": []}, {"text": "One reason is the availability of benchmark datasets such as the task 8 dataset (, which encodes the task of classifying the relationship between two nominals marked in a sentence.", "labels": [], "entities": [{"text": "classifying the relationship between two nominals marked in a sentence", "start_pos": 109, "end_pos": 179, "type": "TASK", "confidence": 0.6897837936878204}]}, {"text": "The following sentence contains an example of the Component-Whole relation between the nominals \"introduction\" and \"book\".", "labels": [], "entities": []}, {"text": "Some recent work on relation classification has focused on the use of deep neural networks with the aim of reducing the number of handcrafted features ().", "labels": [], "entities": [{"text": "relation classification", "start_pos": 20, "end_pos": 43, "type": "TASK", "confidence": 0.9752417504787445}]}, {"text": "However, in order to achieve state-ofthe-art results these approaches still use some features derived from lexical resources such as WordNet or NLP tools such as dependency parsers and named entity recognizers.", "labels": [], "entities": [{"text": "WordNet", "start_pos": 133, "end_pos": 140, "type": "DATASET", "confidence": 0.9397279024124146}]}, {"text": "In this work, we propose anew convolutional neural network (CNN), which we name Classification by Ranking CNN (CR-CNN), to tackle the relation classification task.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 134, "end_pos": 157, "type": "TASK", "confidence": 0.8528302311897278}]}, {"text": "The proposed network learns a distributed vector representation for each relation class.", "labels": [], "entities": []}, {"text": "Given an input text segment, the network uses a convolutional layer to produce a distributed vector representation of the text and compares it to the class representations in order to produce a score for each class.", "labels": [], "entities": []}, {"text": "We propose anew pairwise ranking loss function that makes it easy to reduce the impact of artificial classes.", "labels": [], "entities": []}, {"text": "We perform an extensive number of experiments using the the SemEval-2010 Task 8 dataset.", "labels": [], "entities": [{"text": "SemEval-2010 Task 8 dataset", "start_pos": 60, "end_pos": 87, "type": "DATASET", "confidence": 0.7445368766784668}]}, {"text": "Using CR-CNN, and without the need for any costly handcrafted feature, we outperform the state-of-the-art for this dataset.", "labels": [], "entities": []}, {"text": "Our experimental results are evidence that: (1) CR-CNN is more effective than CNN followed by a softmax classifier; (2) omitting the representation of the artificial class Other improves both precision and recall; and (3) using only word embeddings as input features is enough to achieve state-of-the-art results if we consider only the text between the two target nominals.", "labels": [], "entities": [{"text": "precision", "start_pos": 192, "end_pos": 201, "type": "METRIC", "confidence": 0.9991114735603333}, {"text": "recall", "start_pos": 206, "end_pos": 212, "type": "METRIC", "confidence": 0.9987221360206604}]}, {"text": "The remainder of the paper is structured as follows.", "labels": [], "entities": []}, {"text": "Section 2 details the proposed neural network.", "labels": [], "entities": []}, {"text": "In Section 3, we present details about the setup of experimental evaluation, and then describe the results in Section 4.", "labels": [], "entities": []}, {"text": "In Section 5, we discuss previous work in deep neural networks for relation classification and for other NLP tasks.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 67, "end_pos": 90, "type": "TASK", "confidence": 0.9583244025707245}]}, {"text": "Section 6 presents our conclusions.", "labels": [], "entities": []}], "datasetContent": [{"text": "We use the SemEval-2010 Task 8 dataset to perform our experiments.", "labels": [], "entities": [{"text": "SemEval-2010 Task 8 dataset", "start_pos": 11, "end_pos": 38, "type": "DATASET", "confidence": 0.672847680747509}]}, {"text": "This dataset contains 10,717 examples annotated with 9 different relation types and an artificial relation Other, which is used to indicate that the relation in the example does not belong to any of the nine main relation types.", "labels": [], "entities": []}, {"text": "The nine relations are Cause-Effect, Component-Whole, Content-Container, EntityDestination, Entity-Origin, Instrument-Agency, Member-Collection, Message-Topic and ProductProducer.", "labels": [], "entities": []}, {"text": "Each example contains a sentence marked with two nominals e 1 and e 2 , and the task consists of predicting the relation between the two nominals taking into consideration the directionality.", "labels": [], "entities": []}, {"text": "That means that the relation CauseEffect(e1,e2) is different from the relation CauseEffect(e2,e1), as shown in the examples below.", "labels": [], "entities": []}, {"text": "More information about this dataset can be found in ( The SemEval-2010 Task 8 dataset is already partitioned into 8,000 training instances and 2,717 test instances.", "labels": [], "entities": [{"text": "SemEval-2010 Task 8 dataset", "start_pos": 58, "end_pos": 85, "type": "DATASET", "confidence": 0.6803057193756104}]}, {"text": "We score our systems by using the SemEval-2010 Task 8 official scorer, which computes the macro-averaged F1-scores for the nine actual relations (excluding Other) and takes the directionality into consideration.", "labels": [], "entities": [{"text": "SemEval-2010 Task 8 official scorer", "start_pos": 34, "end_pos": 69, "type": "DATASET", "confidence": 0.6920677244663238}, {"text": "F1-scores", "start_pos": 105, "end_pos": 114, "type": "METRIC", "confidence": 0.926176130771637}]}], "tableCaptions": [{"text": " Table 2: Comparison of different CR-CNN con- figurations.", "labels": [], "entities": []}, {"text": " Table 3: Impact of not using an embedding for the  artificial class Other.", "labels": [], "entities": []}, {"text": " Table 4: Comparison of results of CR-CNN and  CNN+Softmax.", "labels": [], "entities": [{"text": "CR-CNN", "start_pos": 35, "end_pos": 41, "type": "DATASET", "confidence": 0.955485463142395}, {"text": "CNN+Softmax", "start_pos": 47, "end_pos": 58, "type": "DATASET", "confidence": 0.9133419394493103}]}, {"text": " Table 5: Comparison with results published in the literature.", "labels": [], "entities": []}]}