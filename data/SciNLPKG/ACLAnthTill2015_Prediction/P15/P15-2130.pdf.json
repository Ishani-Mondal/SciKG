{"title": [{"text": "Multi-domain Dialog State Tracking using Recurrent Neural Networks", "labels": [], "entities": [{"text": "Dialog State Tracking", "start_pos": 13, "end_pos": 34, "type": "TASK", "confidence": 0.8290986816088358}]}], "abstractContent": [{"text": "Dialog state tracking is a key component of many modern dialog systems, most of which are designed with a single, well-defined domain in mind.", "labels": [], "entities": [{"text": "Dialog state tracking", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.8303801417350769}]}, {"text": "This paper shows that dialog data drawn from different dialog domains can be used to train a general belief tracking model which can operate across all of these domains, exhibiting superior performance to each of the domain-specific models.", "labels": [], "entities": [{"text": "general belief tracking", "start_pos": 93, "end_pos": 116, "type": "TASK", "confidence": 0.6391238371531168}]}, {"text": "We propose a training procedure which uses out-of-domain data to initialise belief tracking models for entirely new domains.", "labels": [], "entities": [{"text": "initialise belief tracking", "start_pos": 65, "end_pos": 91, "type": "TASK", "confidence": 0.7174893617630005}]}, {"text": "This procedure leads to improvements in belief tracking performance regardless of the amount of in-domain data available for training the model.", "labels": [], "entities": [{"text": "belief tracking", "start_pos": 40, "end_pos": 55, "type": "TASK", "confidence": 0.7779126465320587}]}], "introductionContent": [{"text": "Spoken dialog systems allow users to interact with computer applications through a conversational interface.", "labels": [], "entities": []}, {"text": "Modern dialog systems are typically designed with a well-defined domain in mind, e.g., restaurant search, travel reservations or shopping fora new laptop.", "labels": [], "entities": []}, {"text": "The goal of building open-domain dialog systems capable of conversing about any topic remains far off.", "labels": [], "entities": []}, {"text": "In this work, we move towards this goal by showing how to build dialog state tracking models which can operate across entirely different domains.", "labels": [], "entities": [{"text": "dialog state tracking", "start_pos": 64, "end_pos": 85, "type": "TASK", "confidence": 0.7148382862408956}]}, {"text": "The state tracking component of a dialog system is responsible for interpreting the users' utterances and thus updating the system's belief state: a probability distribution overall possible states of the dialog.", "labels": [], "entities": []}, {"text": "This belief state is used by the system to decide what to do next.", "labels": [], "entities": []}, {"text": "Recurrent Neural Networks (RNNs) are well suited to dialog state tracking, as their ability to capture contextual information allows them to model and label complex dynamic sequences.", "labels": [], "entities": [{"text": "dialog state tracking", "start_pos": 52, "end_pos": 73, "type": "TASK", "confidence": 0.8163557847340902}]}, {"text": "In recent shared tasks, approaches based on these models have shown competitive performance ().", "labels": [], "entities": []}, {"text": "This approach is particularly well suited to our goal of building open-domain dialog systems, as it does not require handcrafted domain-specific resources for semantic interpretation.", "labels": [], "entities": [{"text": "semantic interpretation", "start_pos": 159, "end_pos": 182, "type": "TASK", "confidence": 0.7561999559402466}]}, {"text": "We propose a method for training multi-domain RNN dialog state tracking models.", "labels": [], "entities": [{"text": "RNN dialog state tracking", "start_pos": 46, "end_pos": 71, "type": "TASK", "confidence": 0.7638365477323532}]}, {"text": "Our hierarchical training procedure first uses all the data available to train a very general belief tracking model.", "labels": [], "entities": [{"text": "belief tracking", "start_pos": 94, "end_pos": 109, "type": "TASK", "confidence": 0.7070000469684601}]}, {"text": "This model learns the most frequent and general dialog features present across the various domains.", "labels": [], "entities": []}, {"text": "The general model is then specialised for each domain, learning domain-specific behaviour while retaining the cross-domain dialog patterns learned during the initial training stages.", "labels": [], "entities": []}, {"text": "These models show robust performance across all the domains investigated, typically outperforming trackers trained on targetdomain data alone.", "labels": [], "entities": []}, {"text": "The procedure can also be used to initialise dialog systems for entirely new domains.", "labels": [], "entities": []}, {"text": "In the evaluation, we show that such initialisation always improves performance, regardless of the amount of the in-domain training data available.", "labels": [], "entities": []}, {"text": "We believe that this work is the first to address the question of multi-domain belief tracking.", "labels": [], "entities": [{"text": "multi-domain belief tracking", "start_pos": 66, "end_pos": 94, "type": "TASK", "confidence": 0.6990508039792379}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: datasets used in our experiments", "labels": [], "entities": []}, {"text": " Table 2: Goal accuracy of shared models trained using different dialog domains (ensembles of 12 models)", "labels": [], "entities": [{"text": "accuracy", "start_pos": 15, "end_pos": 23, "type": "METRIC", "confidence": 0.8576026558876038}]}]}