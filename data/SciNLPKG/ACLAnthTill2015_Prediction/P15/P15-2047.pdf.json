{"title": [{"text": "A Dependency-Based Neural Network for Relation Classification", "labels": [], "entities": [{"text": "Relation Classification", "start_pos": 38, "end_pos": 61, "type": "TASK", "confidence": 0.9693263471126556}]}], "abstractContent": [{"text": "Previous research on relation classification has verified the effectiveness of using dependency shortest paths or subtrees.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 21, "end_pos": 44, "type": "TASK", "confidence": 0.9314613938331604}]}, {"text": "In this paper, we further explore how to make full use of the combination of these dependency information.", "labels": [], "entities": []}, {"text": "We first propose anew structure, termed augmented dependency path (ADP), which is composed of the shortest dependency path between two entities and the subtrees attached to the shortest path.", "labels": [], "entities": []}, {"text": "To exploit the semantic representation behind the ADP structure, we develop dependency-based neural networks (DepNN): a recursive neural network designed to model the subtrees, and a convolutional neural network to capture the most important features on the shortest path.", "labels": [], "entities": []}, {"text": "Experiments on the SemEval-2010 dataset show that our proposed method achieves state-of-art results.", "labels": [], "entities": [{"text": "SemEval-2010 dataset", "start_pos": 19, "end_pos": 39, "type": "DATASET", "confidence": 0.8646062314510345}]}], "introductionContent": [{"text": "Relation classification aims to classify the semantic relations between two entities in a sentence.", "labels": [], "entities": [{"text": "Relation classification", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.9709304869174957}]}, {"text": "It plays a vital role in robust knowledge extraction from unstructured texts and serves as an intermediate step in a variety of natural language processing applications.", "labels": [], "entities": [{"text": "robust knowledge extraction from unstructured texts", "start_pos": 25, "end_pos": 76, "type": "TASK", "confidence": 0.7946469187736511}]}, {"text": "Most existing approaches follow the machine learning based framework and focus on designing effective features to obtain better classification performance.", "labels": [], "entities": []}, {"text": "The effectiveness of using dependency relations between entities for relation classification has been reported in previous approaches.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 69, "end_pos": 92, "type": "TASK", "confidence": 0.8202437162399292}]}, {"text": "For example, carefully selected a set of features from tokenization and dependency parsing, and extended some of them to generate high order features * Contribution during internship at in different ways.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 72, "end_pos": 90, "type": "TASK", "confidence": 0.7333136200904846}]}, {"text": "designed a dependency tree kernel and attached more information including Part-of-Speech tag, chunking tag of each node in the tree.", "labels": [], "entities": []}, {"text": "Interestingly, provided an important insight that the shortest path between two entities in a dependency graph concentrates most of the information for identifying the relation between them.", "labels": [], "entities": []}, {"text": "developed these ideas by analyzing multiple subtrees with the guidance of pre-extracted keywords.", "labels": [], "entities": []}, {"text": "Previous work showed that the most useful dependency information in relation classification includes the shortest dependency path and dependency subtrees.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 68, "end_pos": 91, "type": "TASK", "confidence": 0.8626731038093567}]}, {"text": "These two kinds of information serve different functions and their collaboration can boost the performance of relation classification (see Section 2 for detailed examples).", "labels": [], "entities": [{"text": "relation classification", "start_pos": 110, "end_pos": 133, "type": "TASK", "confidence": 0.8824558854103088}]}, {"text": "However, how to uniformly and efficiently combine these two components is still an open problem.", "labels": [], "entities": []}, {"text": "In this paper, we propose a novel structure named Augmented Dependency Path (ADP) which attaches dependency subtrees to words on a shortest dependency path and focus on exploring the semantic representation behind the ADP structure.", "labels": [], "entities": []}, {"text": "Recently, deep learning techniques have been widely used in exploring semantic representations behind complex structures.", "labels": [], "entities": []}, {"text": "This provides us an opportunity to model the ADP structure in a neural network framework.", "labels": [], "entities": []}, {"text": "Thus, we propose a dependency-based framework where two neural networks are used to model shortest dependency paths and dependency subtrees separately.", "labels": [], "entities": []}, {"text": "One convolutional neural network (CNN) is applied over the shortest dependency path, because CNN is suitable for capturing the most useful features in a flat structure.", "labels": [], "entities": []}, {"text": "A recursive neural network (RN-N) is used for extracting semantic representations from the dependency subtrees, since RNN is good at modeling hierarchical structures.", "labels": [], "entities": []}, {"text": "To connect these two networks, each word on the shortest A thief who tried to steal the truck broke the ignition with screwdriver.", "labels": [], "entities": []}, {"text": "path is combined with a representation generated from its subtree, strengthening the semantic representation of the shortest path.", "labels": [], "entities": []}, {"text": "In this way, the augmented dependency path is represented as a continuous semantic vector which can be further used for relation classification.", "labels": [], "entities": [{"text": "relation classification", "start_pos": 120, "end_pos": 143, "type": "TASK", "confidence": 0.8997048735618591}]}], "datasetContent": [{"text": "We compare DepNN against multiple baselines on.", "labels": [], "entities": []}, {"text": "The training set includes 8000 sentences, and the test set includes 2717 sentences.", "labels": [], "entities": []}, {"text": "There are 9 relation types, and each type has two directions.", "labels": [], "entities": []}, {"text": "Instances which don't fall in any of these classes are labeled as Other.", "labels": [], "entities": []}, {"text": "The official evaluation metric is the macro-averaged F1-score (excluding Other) and the direction is considered.", "labels": [], "entities": [{"text": "F1-score", "start_pos": 53, "end_pos": 61, "type": "METRIC", "confidence": 0.9420493841171265}]}, {"text": "We use dependency trees generated by the Stanford Parser () with the collapsed option.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Performance of DepNN with different  components.", "labels": [], "entities": []}]}