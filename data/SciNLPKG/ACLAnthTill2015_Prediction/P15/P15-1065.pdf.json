{"title": [{"text": "Learning Relational Features with Backward Random Walks", "labels": [], "entities": []}], "abstractContent": [{"text": "The path ranking algorithm (PRA) has been recently proposed to address relational classification and retrieval tasks at large scale.", "labels": [], "entities": [{"text": "path ranking algorithm (PRA)", "start_pos": 4, "end_pos": 32, "type": "TASK", "confidence": 0.7215930620829264}, {"text": "relational classification and retrieval tasks", "start_pos": 71, "end_pos": 116, "type": "TASK", "confidence": 0.8035549998283387}]}, {"text": "We describe Cor-PRA, an enhanced system that can model a larger space of relational rules, including longer relational rules and a class of first order rules with constants, while maintaining scalability.", "labels": [], "entities": []}, {"text": "We describe and test faster algorithms for searching for these features.", "labels": [], "entities": []}, {"text": "A key contribution is to leverage backward random walks to efficiently discover these types of rules.", "labels": [], "entities": []}, {"text": "An empirical study is conducted on the tasks of graph-based knowledge base inference, and person named entity extraction from parsed text.", "labels": [], "entities": [{"text": "person named entity extraction from parsed text", "start_pos": 90, "end_pos": 137, "type": "TASK", "confidence": 0.7324394711426326}]}, {"text": "Our results show that learning paths with constants improves performance on both tasks, and that modeling longer paths dramatically improves performance for the named entity extraction task.", "labels": [], "entities": [{"text": "named entity extraction task", "start_pos": 161, "end_pos": 189, "type": "TASK", "confidence": 0.7295576632022858}]}], "introductionContent": [{"text": "Structured knowledge about entities and the relationships between them can be represented as an edge-typed graph, and relational learning methods often base predictions on connectivity patterns in this graph.", "labels": [], "entities": []}, {"text": "One such method is the Path Ranking Algorithm (PRA), a random-walk based relational learning and inference framework due to.", "labels": [], "entities": []}, {"text": "PRA is highly scalable compared with other statistical relational learning approaches, and can therefore be applied to perform inference in large knowledge bases.", "labels": [], "entities": [{"text": "PRA", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.8858246803283691}]}, {"text": "Several recent works have applied PRA to link prediction in semantic KBs, as well as to learning syntactic relational patterns used in information extraction from the Web (.", "labels": [], "entities": [{"text": "PRA", "start_pos": 34, "end_pos": 37, "type": "TASK", "confidence": 0.9656268358230591}, {"text": "link prediction", "start_pos": 41, "end_pos": 56, "type": "TASK", "confidence": 0.8160443603992462}, {"text": "information extraction from the Web", "start_pos": 135, "end_pos": 170, "type": "TASK", "confidence": 0.8229768872261047}]}, {"text": "A typical relational inference problem is illustrated in.", "labels": [], "entities": []}, {"text": "Having relational knowledge represented as a graph, it is desired to infer additional relations of interest between entity pairs.", "labels": [], "entities": []}, {"text": "For example, one may wish to infer whether an AthletePlaysInLeague relation holds between nodes HinesWard and NFL.", "labels": [], "entities": [{"text": "HinesWard", "start_pos": 96, "end_pos": 105, "type": "DATASET", "confidence": 0.9452902674674988}, {"text": "NFL", "start_pos": 110, "end_pos": 113, "type": "DATASET", "confidence": 0.890636146068573}]}, {"text": "More generally, link prediction involves queries of the form: which entities are linked to a source node s (HinesWard) over a relation of interest r (e.g., r is AlthletePlaysInLeague)?", "labels": [], "entities": [{"text": "link prediction", "start_pos": 16, "end_pos": 31, "type": "TASK", "confidence": 0.8018340468406677}]}, {"text": "PRA gauges the relevance of a target node t with respect to the source node sand relation r based on a set of relation paths (i.e., sequences of edge labels) that connect the node pair.", "labels": [], "entities": []}, {"text": "Each path \u03c0 i is considered as feature, and the value of feature \u03c0 i for an instance (s, t) is the probability of reaching t from s following path \u03c0 i . A classifier is learned in this feature space, using logistic regression.", "labels": [], "entities": []}, {"text": "PRA's candidate paths correspond closely to a certain class of Horn clauses: for instance, the path \u03c0 = AthletePlaysForTeam, TeamPlaysInLeague, when used as a feature for the relation r = AthletePlaysForLeague, corresponds to the Horn clause One difference between PRA's features and more traditional logical inference is that random-walk weighting means that not all inferences instantiated by a clause will be given the same weight.", "labels": [], "entities": []}, {"text": "Another difference is that PRA is very limited in terms of expressiveness.", "labels": [], "entities": [{"text": "PRA", "start_pos": 27, "end_pos": 30, "type": "TASK", "confidence": 0.975662112236023}]}, {"text": "In particular, inductive logic programming The first rule includes SportsTeam as a constant, corresponding to a particular graph node, which is a the semantic class (hypernym) of the target node t.", "labels": [], "entities": []}, {"text": "The second rule simply assigns NFL as the target node for the AthletePlaysForTeam relation; if used probabilistically, this rule can serve as a prior.", "labels": [], "entities": [{"text": "NFL", "start_pos": 31, "end_pos": 34, "type": "DATASET", "confidence": 0.5444783568382263}]}, {"text": "Neither feature can be expressed in PRA, as PRA features are restricted to edge type sequences.", "labels": [], "entities": []}, {"text": "We are interested in extending the range of relational rules that can be represented within the PRA framework, including rules with constants.", "labels": [], "entities": []}, {"text": "A key challenge is that this greatly increases the space of candidate rules.", "labels": [], "entities": []}, {"text": "Knowledge bases such as Freebase (,, or NELL (), may contain thousands of predicates and millions of concepts.", "labels": [], "entities": [{"text": "Freebase", "start_pos": 24, "end_pos": 32, "type": "DATASET", "confidence": 0.9554789066314697}]}, {"text": "The number of features involving concepts as constants (even if limited to simple structures such as the example rules above) will thus be prohibitively large.", "labels": [], "entities": []}, {"text": "Therefore, it is necessary to search the space of candidate paths \u03c0 very efficiently.", "labels": [], "entities": []}, {"text": "More efficient candidate generation is also necessary if one attempts to use a looser bound on the length of candidate paths.", "labels": [], "entities": [{"text": "candidate generation", "start_pos": 15, "end_pos": 35, "type": "TASK", "confidence": 0.8032305836677551}]}, {"text": "To achieve this, we propose using backward random walks.", "labels": [], "entities": []}, {"text": "Given target nodes that are known to be relevant for relation r, we perform backward random walks (up to finite length ) originating at these target nodes, where every graph node c reachable in this random walk process is considered as a potentially useful constant.", "labels": [], "entities": []}, {"text": "Consequently, the relational paths that connect nodes c and tare evaluated as possible random walk features.", "labels": [], "entities": []}, {"text": "As we will show, such paths provide informative class priors for relational classification tasks.", "labels": [], "entities": [{"text": "relational classification tasks", "start_pos": 65, "end_pos": 96, "type": "TASK", "confidence": 0.8884430726369222}]}, {"text": "Concretely, this paper makes the following contributions.", "labels": [], "entities": []}, {"text": "First, we outline and discuss anew and larger family of relational features that maybe represented in terms of random walks within the PRA framework.", "labels": [], "entities": []}, {"text": "These features represent paths with constants, expanding the expressiveness of PRA.", "labels": [], "entities": []}, {"text": "In addition, we propose to encode bi-directional random walk probabilities as features; we will show that accounting for this sort of directionality provides useful information about graph structure.", "labels": [], "entities": []}, {"text": "Second, we describe the learning of this extended set of paths by means of backward walks from relevant target nodes.", "labels": [], "entities": []}, {"text": "Importantly, the search and computation of the extended set of features is performed efficiently, maintaining high scalability of the framework.", "labels": [], "entities": []}, {"text": "Concretely, using backward walks, one can compute random walk probabilities in a bi-directional fashion; this means that for paths of length 2M , the time complexity of path finding is reduced from where |V | is the number of edge types in graph.", "labels": [], "entities": [{"text": "path finding", "start_pos": 169, "end_pos": 181, "type": "TASK", "confidence": 0.7782895565032959}]}, {"text": "Finally, we report experimental results for relational inference tasks in two different domains, including knowledge base link prediction and person named entity extraction from parsed text.", "labels": [], "entities": [{"text": "knowledge base link prediction", "start_pos": 107, "end_pos": 137, "type": "TASK", "confidence": 0.6230837926268578}, {"text": "person named entity extraction from parsed text", "start_pos": 142, "end_pos": 189, "type": "TASK", "confidence": 0.7289538766656604}]}, {"text": "It is shown that the proposed extensions allow one to effectively explore a larger feature space, significantly improving model quality over previously published results in both domains.", "labels": [], "entities": []}, {"text": "In particular, incorporating paths with constants significantly improves model quality on both tasks.", "labels": [], "entities": []}, {"text": "Bi-directional walk probability computation also enables the learning of longer predicate chains, and the modeling of long paths is shown to substantially improve performance on the person name extraction task.", "labels": [], "entities": [{"text": "person name extraction task", "start_pos": 182, "end_pos": 209, "type": "TASK", "confidence": 0.7845501452684402}]}, {"text": "Importantly, learning and inference remain highly efficient in both these settings.", "labels": [], "entities": []}], "datasetContent": [{"text": "In this section, we report the results of applying Cor-PRA to the tasks of knowledge base inference and person named entity extraction from parsed text.", "labels": [], "entities": [{"text": "person named entity extraction from parsed text", "start_pos": 104, "end_pos": 151, "type": "TASK", "confidence": 0.7284548495497022}]}, {"text": "We performed 3-fold cross validation experiments, given datasets of labeled queries.", "labels": [], "entities": []}, {"text": "For each query node in the evaluation set, a list of graph nodes ranked by their estimated relevancy to the query node sand relation r is generated.", "labels": [], "entities": []}, {"text": "Ideally, relevant nodes should be ranked at the top of these lists.", "labels": [], "entities": []}, {"text": "Since the number of correct answers is large for some queries, we report results in terms of mean average precision (MAP), a measure that reflects both precision and recall).", "labels": [], "entities": [{"text": "mean average precision (MAP)", "start_pos": 93, "end_pos": 121, "type": "METRIC", "confidence": 0.9126696089903513}, {"text": "precision", "start_pos": 152, "end_pos": 161, "type": "METRIC", "confidence": 0.9988939166069031}, {"text": "recall", "start_pos": 166, "end_pos": 172, "type": "METRIC", "confidence": 0.9964905381202698}]}, {"text": "The coverage and precision thresholds of Cor-PRA were set to h = 2 and a = 0.001 in all of the experiments, following empirical tuning using a small subset of the training data.", "labels": [], "entities": [{"text": "coverage", "start_pos": 4, "end_pos": 12, "type": "METRIC", "confidence": 0.9964202642440796}, {"text": "precision thresholds", "start_pos": 17, "end_pos": 37, "type": "METRIC", "confidence": 0.9755305647850037}]}, {"text": "The particle filtering path-finding algorithm was applied using the parameter setting w g = 10 6 , so as to find useful paths with high probability and yet constrain the computational cost.", "labels": [], "entities": [{"text": "particle filtering path-finding", "start_pos": 4, "end_pos": 35, "type": "TASK", "confidence": 0.8799528479576111}]}, {"text": "Our results are compared against the FOIL algorithm , which learns first-order horn clauses.", "labels": [], "entities": [{"text": "FOIL", "start_pos": 37, "end_pos": 41, "type": "METRIC", "confidence": 0.8211144804954529}]}, {"text": "In order to evaluate FOIL using MAP, its candidate beliefs are first ranked by the number of FOIL rules they match.", "labels": [], "entities": [{"text": "FOIL", "start_pos": 21, "end_pos": 25, "type": "TASK", "confidence": 0.9555785059928894}]}, {"text": "We further report results using Random Walks with Restart (RWR), also 2 F1 is the harmonic mean of precision and recall, where the latter is defined as  known as personalized PageRank), a popular random walk based graph similarity measure, that has been shown to be fairly successful for many types of tasks (e.g.,).", "labels": [], "entities": [{"text": "F1", "start_pos": 72, "end_pos": 74, "type": "METRIC", "confidence": 0.9858322143554688}, {"text": "precision", "start_pos": 99, "end_pos": 108, "type": "METRIC", "confidence": 0.9991707801818848}, {"text": "recall", "start_pos": 113, "end_pos": 119, "type": "METRIC", "confidence": 0.9973897337913513}]}, {"text": "Finally, we compare against PRA, which models relational paths in the form of edge-sequences (no constants), using only uni-directional path probabilities, P (s \u2192 t; \u03c0).", "labels": [], "entities": []}, {"text": "All experiments were run on a machine with a 16 core Intel Xeon 2.33GHz CPU and 24Gb of memory.", "labels": [], "entities": []}, {"text": "All methods are trained and tested with the same data splits.", "labels": [], "entities": []}, {"text": "We report the total training time of each method, measuring the efficiency of inference and induction as a whole.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: MAP and training time [sec] on KB  inference and NE extraction tasks. const i denotes  constant paths up to length i.", "labels": [], "entities": [{"text": "MAP", "start_pos": 10, "end_pos": 13, "type": "TASK", "confidence": 0.8005369901657104}, {"text": "NE extraction tasks", "start_pos": 59, "end_pos": 78, "type": "TASK", "confidence": 0.895040492216746}]}]}