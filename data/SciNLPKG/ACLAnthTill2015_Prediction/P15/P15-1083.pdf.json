{"title": [{"text": "Detecting Deceptive Groups Using Conversations and Network Analysis", "labels": [], "entities": [{"text": "Detecting Deceptive Groups", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.9049235383669535}, {"text": "Network Analysis", "start_pos": 51, "end_pos": 67, "type": "TASK", "confidence": 0.7633963525295258}]}], "abstractContent": [{"text": "Deception detection has been formulated as a supervised binary classification problem on single documents.", "labels": [], "entities": [{"text": "Deception detection", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.940544843673706}]}, {"text": "However, in daily life, millions of fraud cases involve detailed conversations between deceivers and victims.", "labels": [], "entities": []}, {"text": "Deceivers may dynamically adjust their deceptive statements according to the reactions of victims.", "labels": [], "entities": []}, {"text": "In addition, people may form groups and collaborate to deceive others.", "labels": [], "entities": []}, {"text": "In this paper, we seek to identify deceptive groups from their conversations.", "labels": [], "entities": []}, {"text": "We propose a novel subgroup detection method that combines linguistic signals and signed network analysis for dynamic clustering.", "labels": [], "entities": [{"text": "subgroup detection", "start_pos": 19, "end_pos": 37, "type": "TASK", "confidence": 0.8551361262798309}]}, {"text": "A social-elimination game called Killer Game is introduced as a case study 1.", "labels": [], "entities": []}, {"text": "Experimental results demonstrate that our approach significantly out-performs human voting and state-of-the-art subgroup detection methods at dynamically differentiating the deceptive groups from truth-tellers.", "labels": [], "entities": [{"text": "subgroup detection", "start_pos": 112, "end_pos": 130, "type": "TASK", "confidence": 0.7546278834342957}]}], "introductionContent": [{"text": "Deception generally entails messages and information intentionally transmitted to create a false conclusion.", "labels": [], "entities": [{"text": "Deception", "start_pos": 0, "end_pos": 9, "type": "TASK", "confidence": 0.9528074264526367}]}, {"text": "Deception detection is an important task fora wide range of applications including law enforcement, intelligence gathering, and financial fraud.", "labels": [], "entities": [{"text": "Deception detection", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.9615196883678436}, {"text": "intelligence gathering", "start_pos": 100, "end_pos": 122, "type": "TASK", "confidence": 0.7349986135959625}]}, {"text": "Most of the previous work (e.g.,) focused on content analysis of a single document in isolation (e.g., a product review).", "labels": [], "entities": []}, {"text": "The promoters of a product may post fake complimentary reviews, while their competitors may hire people to write fake negative reviews).", "labels": [], "entities": []}, {"text": "However, when we want to detect deception from text or voice conversations, the deception behavior maybe affected by the following factors beyond textual statements.", "labels": [], "entities": []}], "datasetContent": [{"text": "We recorded 10 games from 3J3F 6 , one of the most popular Chinese online killer game websites . A screenshot of the game system interface is shown in.", "labels": [], "entities": [{"text": "3J3F 6", "start_pos": 26, "end_pos": 32, "type": "DATASET", "confidence": 0.8799536228179932}]}, {"text": "There are 16 participating players per game: 4 detectives, 4 killers and 8 citizens.", "labels": [], "entities": []}, {"text": "Each player occupies a position in 1 . All the surviving players can express their attitudes via a voice channel using 2 , while detectives and killers can also communicate with teammates in their respective private team channels 3 via texts.", "labels": [], "entities": []}, {"text": "The system provides real-time updates on the game progress, voting results, and soon using the public channel 4 . We manually transcribed speech and stored the text information in the public channel, which contains the voting and death information.", "labels": [], "entities": []}, {"text": "The average game length  is about 76.3 minutes and there are on average 5 rounds and 411 sentences per game.", "labels": [], "entities": []}, {"text": "Note that our method is language-independent and could easily be adapted to other languages.", "labels": [], "entities": []}, {"text": "We use two metrics to evaluate the clustering accuracy: Purity and Entropy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 46, "end_pos": 54, "type": "METRIC", "confidence": 0.9242344498634338}, {"text": "Purity", "start_pos": 56, "end_pos": 62, "type": "METRIC", "confidence": 0.9806267619132996}, {"text": "Entropy", "start_pos": 67, "end_pos": 74, "type": "METRIC", "confidence": 0.9924136996269226}]}, {"text": "Purity () is a metric in which each cluster is assigned to the class with the majority vote in the cluster, and then the accuracy of this assignment is measured by dividing the number of correctly assigned instances by the total number of instances N . More formally: where \u2126 = {w 1 , w 2 , \u00b7 \u00b7 \u00b7 , wk } is the set of clusters and C = {c 1 , c 2 , \u00b7 \u00b7 \u00b7 , c j } is the set of classes.", "labels": [], "entities": [{"text": "Purity", "start_pos": 0, "end_pos": 6, "type": "METRIC", "confidence": 0.9503622651100159}, {"text": "accuracy", "start_pos": 121, "end_pos": 129, "type": "METRIC", "confidence": 0.9993330836296082}]}, {"text": "wk is interpreted as the set of instances in wk and c j is the set of instances inc j . The purity increases as the quality of clustering improves.", "labels": [], "entities": [{"text": "purity", "start_pos": 92, "end_pos": 98, "type": "METRIC", "confidence": 0.9974422454833984}]}, {"text": "Entropy () measures the uniformity of a cluster.", "labels": [], "entities": [{"text": "Entropy", "start_pos": 0, "end_pos": 7, "type": "METRIC", "confidence": 0.9677800536155701}]}, {"text": "The entropy for all clusters is defined by the weighted sum of the entropy of each cluster: where P (i, j) is the probability of finding an element from the category i in the cluster j, n j is the number of items in cluster j and n is the total number of items in the distribution.", "labels": [], "entities": []}, {"text": "The entropy decreases as the quality of clustering improves.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Results on subgroup detection. D refers to DAPC, N refers to Network, H refers to Human Voting, and eD", "labels": [], "entities": [{"text": "subgroup detection", "start_pos": 21, "end_pos": 39, "type": "TASK", "confidence": 0.7962324023246765}]}]}