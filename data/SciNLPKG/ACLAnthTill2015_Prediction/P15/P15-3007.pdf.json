{"title": [{"text": "Learning to Map Dependency Parses to Abstract Meaning Representations", "labels": [], "entities": [{"text": "Learning to Map Dependency Parses to Abstract Meaning Representations", "start_pos": 0, "end_pos": 69, "type": "TASK", "confidence": 0.7362582021289401}]}], "abstractContent": [{"text": "Meaning Representation (AMR) is a semantic representation language used to capture the meaning of English sentences.", "labels": [], "entities": [{"text": "Meaning Representation (AMR)", "start_pos": 0, "end_pos": 28, "type": "TASK", "confidence": 0.8236553311347962}]}, {"text": "In this work, we propose an AMR parser based on dependency parse rewrite rules.", "labels": [], "entities": [{"text": "AMR parser", "start_pos": 28, "end_pos": 38, "type": "TASK", "confidence": 0.8480805456638336}, {"text": "dependency parse rewrite", "start_pos": 48, "end_pos": 72, "type": "TASK", "confidence": 0.7421234548091888}]}, {"text": "This approach transfers dependency parses into AMRs by integrating the syntactic dependencies, semantic arguments, named entity and co-reference information.", "labels": [], "entities": [{"text": "dependency parses", "start_pos": 24, "end_pos": 41, "type": "TASK", "confidence": 0.79966601729393}]}, {"text": "A dependency parse to AMR graph aligner is also introduced as a preliminary step for designing the parser.", "labels": [], "entities": []}], "introductionContent": [{"text": "Abstract Meaning Representation (AMR) () is a semantic formalism that expresses the logical meanings of English sentences in the form of a directed, acyclic graph.", "labels": [], "entities": [{"text": "Abstract Meaning Representation (AMR)", "start_pos": 0, "end_pos": 37, "type": "TASK", "confidence": 0.842721551656723}]}, {"text": "AMR focuses on the semantic concepts (nodes on the graph), and relations (labeled edges on the graph) between those concepts.", "labels": [], "entities": [{"text": "AMR", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.6739702224731445}]}, {"text": "AMR relies heavily on predicate-argument structures defined in the PropBank (PB)).", "labels": [], "entities": [{"text": "AMR", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.8757607340812683}, {"text": "PropBank (PB))", "start_pos": 67, "end_pos": 81, "type": "DATASET", "confidence": 0.8856341391801834}]}, {"text": "The representation encodes rich information, including semantic roles, named entities, and co-reference information.", "labels": [], "entities": []}, {"text": "In this proposal, we focus on the design of an automatic AMR parser in a supervised fashion from dependency parses.", "labels": [], "entities": [{"text": "AMR parser", "start_pos": 57, "end_pos": 67, "type": "TASK", "confidence": 0.8539672195911407}]}, {"text": "In contrast with recent semantic parsing algorithms, we start the parsing process from the dependency parses rather than the sentences.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 24, "end_pos": 40, "type": "TASK", "confidence": 0.7676994204521179}]}, {"text": "A dependency parse provides both the semantic dependency information for the sentence, and the structure of the relations between the headword and their dependencies.", "labels": [], "entities": [{"text": "dependency parse", "start_pos": 2, "end_pos": 18, "type": "TASK", "confidence": 0.7526794672012329}]}, {"text": "These can provide strong features for semantic parsing.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 38, "end_pos": 54, "type": "TASK", "confidence": 0.789815753698349}]}, {"text": "By using a binary-branching bottom-up shift-reduced algorithm, the statistical model for the rewrite rules can be learned discriminatively.", "labels": [], "entities": []}, {"text": "Although the AMR parser is my thesis topic, in this proposal we will pay more attention to preliminary workthe AMR -Dependency Parse aligner.", "labels": [], "entities": [{"text": "AMR", "start_pos": 13, "end_pos": 16, "type": "DATASET", "confidence": 0.7170560359954834}, {"text": "AMR -Dependency Parse aligner", "start_pos": 111, "end_pos": 140, "type": "DATASET", "confidence": 0.7502134799957275}]}, {"text": "To extract the rewrite rules and the statistical model, we need the links between AMR concepts and the word nodes within the dependency parse.", "labels": [], "entities": []}, {"text": "An example alignment is shown in.", "labels": [], "entities": []}, {"text": "Alignment between an AMR concept and dependency node is needed because 1) it represents the meaning of the sub-graph of the concept and its child concepts corresponding to the phrase of the headword node, and 2) the dependency node contains sufficient information for the extraction of rewrite rules.", "labels": [], "entities": []}, {"text": "For example, the word node \"Vinken\" on the dependency parse side in links to the lexical concept \"Vinken\" and, furthermore, links to the \"p2/name\" and the \"p/person\" concepts since \"Vinken\" is the head of the named entity (NE) \"Pierre Vinken\" and the head of the noun phrase \"Pierre Vinken, 61 years old.\"", "labels": [], "entities": []}, {"text": "The secondary aim of this proposal is to design an alignment model between AMR concepts and dependency parses.", "labels": [], "entities": [{"text": "AMR", "start_pos": 75, "end_pos": 78, "type": "TASK", "confidence": 0.9353542923927307}, {"text": "dependency parses", "start_pos": 92, "end_pos": 109, "type": "TASK", "confidence": 0.7174856215715408}]}, {"text": "We use EM to search the hidden derivations by combining the features of lexical form, relation label, NE, semantic role, etc.", "labels": [], "entities": []}, {"text": "After EM processing, both the alignments and all the feature probabilities can be estimated.", "labels": [], "entities": []}, {"text": "The design of a rewrite-based AMR parser is described in Sec.", "labels": [], "entities": [{"text": "AMR parser", "start_pos": 30, "end_pos": 40, "type": "TASK", "confidence": 0.7777574062347412}]}, {"text": "2, and the aligner is in Sec.", "labels": [], "entities": []}, {"text": "3. Our preliminary experiments and results are pre-: The alignment between an AMR subgraph and a dependency parse.", "labels": [], "entities": []}, {"text": "A red line links the corresponding concept and dependency node.", "labels": [], "entities": []}, {"text": "4, followed by future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "Here, we describe a preliminary experiment for the AMR-Dependency Parse aligner, including the data description, experimental setup, and results.", "labels": [], "entities": [{"text": "AMR-Dependency Parse aligner", "start_pos": 51, "end_pos": 79, "type": "DATASET", "confidence": 0.6451209286848704}]}], "tableCaptions": [{"text": " Table 3: The data split of train/dev./test set. \"# of  NE\", \"# of Pred.\" and \"# of Args\" stand for the  number of named entities, predicate and argument  annotations in the data set, respectively.", "labels": [], "entities": [{"text": "Pred.", "start_pos": 67, "end_pos": 72, "type": "METRIC", "confidence": 0.9629947543144226}]}]}