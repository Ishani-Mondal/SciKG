{"title": [{"text": "Word-based Japanese typed dependency parsing with grammatical function analysis", "labels": [], "entities": [{"text": "typed dependency parsing", "start_pos": 20, "end_pos": 44, "type": "TASK", "confidence": 0.6040305892626444}]}], "abstractContent": [{"text": "We present a novel scheme for word-based Japanese typed dependency parser which integrates syntactic structure analysis and grammatical function analysis such as predicate-argument structure analysis.", "labels": [], "entities": [{"text": "word-based Japanese typed dependency parser", "start_pos": 30, "end_pos": 73, "type": "TASK", "confidence": 0.5871646344661713}, {"text": "syntactic structure analysis", "start_pos": 91, "end_pos": 119, "type": "TASK", "confidence": 0.7093917727470398}, {"text": "predicate-argument structure analysis", "start_pos": 162, "end_pos": 199, "type": "TASK", "confidence": 0.7385756770769755}]}, {"text": "Compared to bunsetsu-based dependency parsing, which is predominantly used in Japanese NLP, it provides a natural way of extracting syntactic constituents, which is useful for downstream applications such as statistical machine translation.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 27, "end_pos": 45, "type": "TASK", "confidence": 0.6507471203804016}, {"text": "statistical machine translation", "start_pos": 208, "end_pos": 239, "type": "TASK", "confidence": 0.7308048009872437}]}, {"text": "It also makes it possible to jointly decide dependency and predicate-argument structure , which is usually implemented as two separate steps.", "labels": [], "entities": []}, {"text": "We convert an existing treebank to the new dependency scheme and report parsing results as a baseline for future research.", "labels": [], "entities": []}, {"text": "We achieved a better accuracy for assigning function labels than a predicate-argument structure ana-lyzer by using grammatical functions as dependency label.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 21, "end_pos": 29, "type": "METRIC", "confidence": 0.9995427131652832}]}], "introductionContent": [{"text": "The goal of our research is to design a Japanese typed dependency parsing that has sufficient linguistically derived structural and relational information for NLP applications such as statistical machine translation.", "labels": [], "entities": [{"text": "Japanese typed dependency parsing", "start_pos": 40, "end_pos": 73, "type": "TASK", "confidence": 0.5646902844309807}, {"text": "statistical machine translation", "start_pos": 184, "end_pos": 215, "type": "TASK", "confidence": 0.6962063411871592}]}, {"text": "We focus on the Japanesespecific aspects of designing a kind of Stanford typed dependencies (de.", "labels": [], "entities": []}, {"text": "Syntactic structures are usually represented as dependencies between chunks called bunsetsus.", "labels": [], "entities": []}, {"text": "A bunsetsu is a Japanese grammatical and phonological unit that consists of one or more content words such as a noun, verb, or adverb followed by a sequence of zero or more function words such as auxiliary verbs, postpositional particles, or sentence-final particles.", "labels": [], "entities": [{"text": "A bunsetsu is a Japanese grammatical and phonological unit that consists of one or more content words such as a noun, verb, or adverb followed by a sequence of zero or more function words such as auxiliary verbs, postpositional particles, or sentence-final particles", "start_pos": 0, "end_pos": 266, "type": "Description", "confidence": 0.8226455798808564}]}, {"text": "Most publicly available Japanese parsers, including CaboCha 1 () and KNP 2 (), return bunsetsu-based dependency as syntactic structure.", "labels": [], "entities": []}, {"text": "Such parsers are generally highly accurate and have been widely used in various NLP applications.", "labels": [], "entities": []}, {"text": "However, bunsetsu-based representations also have two serious shortcomings: one is the discrepancy between syntactic and semantic units, and the other is insufficient syntactic information.", "labels": [], "entities": []}, {"text": "Bunsetsu chunks do not always correspond to constituents (e.g. NP, VP), which complicates the task of extracting semantic units from bunsetsubased representations.", "labels": [], "entities": []}, {"text": "This kind of problem often arises in handling such nesting structures as coordinating constructions.", "labels": [], "entities": []}, {"text": "For example, there are three dependencies in a sentence (1): a coordinating dependency b2 -b3 and ordinary dependencies b1 -b3 and b3 -b4.", "labels": [], "entities": []}, {"text": "In extracting predicate-argument structures, it is not possible to directly extract a coordinated noun phrase \"wine and sake\" as a direct object of the verb \"drank\".", "labels": [], "entities": []}, {"text": "In other words, we need an implicit interpretation rule in order to extract NP in coordinating construction: head bunsetsu b3 should be divided into a content word and a function word , then the content word should be merged with the dependent bunsetsu b2.", "labels": [], "entities": []}, {"text": "risuto list 'A list of wine and sake that (someone) drank' Therefore, predicate-argument structure analysis is usually implemented as a post-processor of bunsetsu-based syntactic parser, not just for assigning grammatical functions, but for identifying constituents, such as an analyzer SynCha: A tokenized and chunked sentence.", "labels": [], "entities": [{"text": "predicate-argument structure analysis", "start_pos": 70, "end_pos": 107, "type": "TASK", "confidence": 0.8821918765703837}]}, {"text": "et al., 2011), which uses the parsing results from CaboCha.", "labels": [], "entities": [{"text": "CaboCha.", "start_pos": 51, "end_pos": 59, "type": "DATASET", "confidence": 0.9455052316188812}]}, {"text": "We assume that using a word as a parsing unit instead of a bunsetsu chunk helps to maintain consistency between syntactic structure analysis and predicate-argument structure analysis.", "labels": [], "entities": [{"text": "syntactic structure analysis", "start_pos": 112, "end_pos": 140, "type": "TASK", "confidence": 0.6920696198940277}, {"text": "predicate-argument structure analysis", "start_pos": 145, "end_pos": 182, "type": "TASK", "confidence": 0.7195013562838236}]}, {"text": "Another problem is that linguistically different constructions share the same representation.", "labels": [], "entities": []}, {"text": "The difference of a gapped relative clause and a gapless relative clause is atypical example.", "labels": [], "entities": []}, {"text": "In sentences (2) and (3), we cannot discriminate the two relations between bunsetsus b2 and b3 using unlabeled dependency: the former is a subject-predicate construction of the noun \"cat\" and the verb \"eat\" (subject gap relative clause) while the latter is not a predicate-argument construction (gapless relative clause).", "labels": [], "entities": []}, {"text": "hanashi story 'the story about having eaten fish' We aim to build a Japanese typed dependency scheme that can properly deal with syntactic constituency and grammatical functions in the same representation without implicit interpretation rules.", "labels": [], "entities": []}, {"text": "The design of Japanese typed dependencies is described in Section 3, and we present our evaluation of the dependency parsing results fora parser trained with a dependency corpus in Section 4.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 106, "end_pos": 124, "type": "TASK", "confidence": 0.6941109448671341}]}, {"text": "built word-based dependency corpora in Japanese.", "labels": [], "entities": []}], "datasetContent": [{"text": "We demonstrated the performance of the typed dependency parsing based on our scheme by using the dependency corpus automatically converted from a constituent treebank and an off-the-self parser.", "labels": [], "entities": [{"text": "typed dependency parsing", "start_pos": 39, "end_pos": 63, "type": "TASK", "confidence": 0.6150067845980326}]}], "tableCaptions": [{"text": " Table 4: Predicate-argument structure analysis.", "labels": [], "entities": [{"text": "Predicate-argument structure analysis", "start_pos": 10, "end_pos": 47, "type": "TASK", "confidence": 0.9041778445243835}]}]}