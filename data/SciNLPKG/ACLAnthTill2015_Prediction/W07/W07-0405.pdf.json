{"title": [{"text": "Proceedings of SSST, NAACL-HLT 2007 / AMTA Workshop on Syntax and Structure in Statistical Binarization, Synchronous Binarization, and Target-side Binarization *", "labels": [], "entities": [{"text": "SSST", "start_pos": 15, "end_pos": 19, "type": "TASK", "confidence": 0.9689483046531677}, {"text": "NAACL-HLT 2007 / AMTA Workshop", "start_pos": 21, "end_pos": 51, "type": "DATASET", "confidence": 0.6954697608947754}, {"text": "Statistical Binarization", "start_pos": 79, "end_pos": 103, "type": "TASK", "confidence": 0.7578493356704712}]}], "abstractContent": [{"text": "Binarization is essential for achieving polynomial time complexities in parsing and syntax-based machine translation.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 97, "end_pos": 116, "type": "TASK", "confidence": 0.7040019631385803}]}, {"text": "This paper presents anew binariza-tion scheme, target-side binarization, and compares it with source-side and synchronous binarizations on both string-based and tree-based systems using synchronous grammars.", "labels": [], "entities": []}, {"text": "In particular, we demonstrate the effectiveness of target-side binarization on a large-scale tree-to-string translation system.", "labels": [], "entities": []}], "introductionContent": [{"text": "Several recent syntax-based models for machine translation) can be seen as instances of the general framework of synchronous grammars and tree transducers.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 39, "end_pos": 58, "type": "TASK", "confidence": 0.7588956952095032}]}, {"text": "In this framework, decoding can bethought of as parsing problems, whose complexity is in general exponential in the number of nonterminals on the right hand side of a grammar rule.", "labels": [], "entities": []}, {"text": "To alleviate this problem, one can borrow from parsing the technique of binarizing context-free grammars (into Chomsky Normal Form) to reduce the complexity.", "labels": [], "entities": []}, {"text": "With synchronous context-free grammars (SCFG), however, this problem becomes more complicated with the additional dimension of target-side permutation.", "labels": [], "entities": []}, {"text": "The simplest method of binarizing an SCFG is to binarize (left-to-right) on the source-side as if treating it as a monolingual CFG for the sourcelangauge.", "labels": [], "entities": []}, {"text": "However, this approach does not guaran-tee contiguous spans on the target-side, due to the arbitrary re-ordering of nonterminals between the two languages.", "labels": [], "entities": []}, {"text": "As a result, decoding with an integrated language model still has an exponential complexity.", "labels": [], "entities": []}, {"text": "Synchronous binarization () solves this problem by simultaneously binarizing both source and target-sides of asynchronous rule, making sure of contiguous spans on both sides whenever possible.", "labels": [], "entities": []}, {"text": "Neglecting the small amount of non-binarizable rules, the decoding complexity with an integrated language model becomes polynomial and translation quality is significantly improved thanks to the better search.", "labels": [], "entities": []}, {"text": "However, this method is more sophisticated to implement than the previous method and binarizability ratio decreases on freer word-order languages).", "labels": [], "entities": []}, {"text": "This paper presents a third alternative, targetside binarization, which is the symmetric version of the simple source-side variant mentioned above.", "labels": [], "entities": []}, {"text": "We compare it with the other two schemes in two popular instantiations of MT systems based on SCFGs: the string-based systems) where the input is a string to be parsed using the source-side of the SCFG; and the treebased systems () where the input is a parse tree and is recursively converted into a target string using the SCFG as a tree-transducer.", "labels": [], "entities": [{"text": "MT", "start_pos": 74, "end_pos": 76, "type": "TASK", "confidence": 0.9694096446037292}]}, {"text": "While synchronous binarization is the best strategy for string-based systems, we show that target-side binarization can achieve the same performance of synchronous binarization for treebased systems, with much simpler implementation and 100% binarizability.", "labels": [], "entities": []}], "datasetContent": [{"text": "Section 3 shows that target-side binarization achieves the same polynomial decoding complexity as the more sophisticated synchronous binarization in the tree-based systems.", "labels": [], "entities": []}, {"text": "We now empirically compare target-side binarization with an even simpler variant, on-the-fly generation, where the only difference is that the latter does target-side left-to-right binarization during +LM decoding on a hyperedgeper-hyperedge basis, without sharing common virtual nonterminals across hyperedges, while the former binarizes the whole \u2212LM forest before the +LM decoding.", "labels": [], "entities": []}, {"text": "Our experiments are on English-to-Chinese translation in the tree-to-string system of , which takes a source-language parse tree as input and tries to recursively convert it to a targetlanguage string according to transfer rules in asynchronous grammar ().", "labels": [], "entities": [{"text": "English-to-Chinese translation", "start_pos": 23, "end_pos": 53, "type": "TASK", "confidence": 0.6624653935432434}]}, {"text": "For instance, the following rule translates an English passive construction into Chinese.", "labels": [], "entities": []}, {"text": "Although the rules are actually in asynchronous tree-substitution grammar (STSG) instead of an SCFG, its derivation structure is still a hypergraph and all the analysis in Section 3.2 still applies.", "labels": [], "entities": []}, {"text": "This system performs slightly better than the state-of-the-art phrase-based system Pharaoh) on English to Chinese translation.", "labels": [], "entities": [{"text": "English to Chinese translation", "start_pos": 95, "end_pos": 125, "type": "TASK", "confidence": 0.6361377835273743}]}, {"text": "Avery similar system for the reverse direction is described in ().", "labels": [], "entities": []}, {"text": "Our data preparation follows ( ): the training data is a parallel corpus of 28.3M words on the English side, from which we extracted 24.7M tree-to-string rules using the algorithm of (), and trained a Chinese trigram model on the Chinese side.", "labels": [], "entities": []}, {"text": "We test our methods on the same test-set as in ( ) which is a 140 sentence subset of NIST 2003 MT evaluation with 9-36 words on the English side.", "labels": [], "entities": [{"text": "NIST 2003 MT evaluation", "start_pos": 85, "end_pos": 108, "type": "DATASET", "confidence": 0.904679998755455}]}, {"text": "The weights for the loglinear model is tuned on a separate development set.", "labels": [], "entities": []}, {"text": "compares the number of nodes in the binarized forests against the original forest.", "labels": [], "entities": []}, {"text": "On-the-fly generation essentially works on a larger forest with duplicate nodes due to the lack of sharing, which is on average 1.85 times bigger than the target-side binarized forest.", "labels": [], "entities": [{"text": "On-the-fly generation", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.7153662741184235}]}, {"text": "This difference is also reflected in the decoding speed, which is illustrated in under various beam settings and where the amount of computation is measured by the number of +LM items generated.", "labels": [], "entities": []}, {"text": "At each individual beam setting, the two methods produce exactly the same set of translations (i.e., there is no relative search error), but the target-side binarization is consistently 1.3 times faster thanks to the sharing.", "labels": [], "entities": []}, {"text": "In terms of translation quality, the final BLEU score at the largest beam setting is 0.2614, significantly higher than Pharaoh's 0.2354 as reported in ).", "labels": [], "entities": [{"text": "translation", "start_pos": 12, "end_pos": 23, "type": "TASK", "confidence": 0.9636995196342468}, {"text": "BLEU score", "start_pos": 43, "end_pos": 53, "type": "METRIC", "confidence": 0.9753966927528381}]}], "tableCaptions": [{"text": " Table 1: Source and target arities of the three bina- rization schemes of an SCFG rule of rank n.", "labels": [], "entities": []}]}