{"title": [{"text": "Technical Support Dialog Systems: Issues, Problems, and Solutions", "labels": [], "entities": [{"text": "Technical Support Dialog Systems", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.7640871852636337}]}], "abstractContent": [{"text": "The goal of this paper is to give a description of the state of the art, the issues, the problems, and the solutions related to industrial dialog systems for the automation of technical support.", "labels": [], "entities": []}, {"text": "After a general description of the evolution of the spoken dialog industry, and the challenges in the development of technical support applications, we will discuss two specific problems through a series of experimental results.", "labels": [], "entities": []}, {"text": "The first problem is the identification of the call reason, or symptom, from loosely constrained user utterances.", "labels": [], "entities": []}, {"text": "The second is the use of data for the experimental optimization of the Voice User Interface (VUI).", "labels": [], "entities": []}], "introductionContent": [{"text": "Since the beginning of the telephony spoken dialog industry, in the mid 1990, we have been witnessing the evolution of at least three generations of systems.", "labels": [], "entities": []}, {"text": "What differentiates each generation is not only the increase of complexity, but also the different architectures used.", "labels": [], "entities": []}, {"text": "provides a summary of the features that distinguish each generation.", "labels": [], "entities": []}, {"text": "The early first generation systems were mostly informational, in that they would require some information from the user, and would provide information in return.", "labels": [], "entities": []}, {"text": "Examples of those systems, mostly developed during the mid and late 1990s, are package tracking, simple financial applications, and flight status information.", "labels": [], "entities": [{"text": "package tracking", "start_pos": 79, "end_pos": 95, "type": "TASK", "confidence": 0.779451459646225}]}, {"text": "At the time there were no standards for developing dialog systems, (VoiceXML 1.0 was published as a recommendation in year 2000) and thus the first generation dialog applications were implemented on proprietary platforms, typically evolutions of existing touch-tone IVR (Interactive Voice Response) architectures.", "labels": [], "entities": []}, {"text": "Since the early developments, spoken dialog systems were implemented as a graph, called callflow.", "labels": [], "entities": []}, {"text": "The nodes of the call-flow typically represent actions performed by the system and the arcs represent an enumeration of the possible outcomes.", "labels": [], "entities": []}, {"text": "Playing a prompt and interpreting the user response through a speech recognition grammar is atypical action.", "labels": [], "entities": []}, {"text": "Dialog modules () were introduced in order to reduce the complexity and increase reusability of call-flows.", "labels": [], "entities": []}, {"text": "A Dialog Module (or DM) is defined as a call-flow object that encapsulates many of the interactions needed forgetting one piece of information from the user, including retries, timeout handling, disambiguation, etc.", "labels": [], "entities": []}, {"text": "Modern commercial dialog systems use DMs as their active call-flow nodes.", "labels": [], "entities": []}, {"text": "The number of DMs in a call-flow is generally an indication of the application complexity.", "labels": [], "entities": []}, {"text": "First generation applications showed a range of complexity of a few to tens of DMs, typically spanning a few turns of interaction.", "labels": [], "entities": []}, {"text": "The dialog modality is another characterization of applications.", "labels": [], "entities": []}, {"text": "Early applications supported strict directed dialog interaction, meaning that at each turn the system would direct the user by proposing a finite-and typically small-number of choices.", "labels": [], "entities": []}, {"text": "That would also result in a limited grammar or vocabulary at each turn.", "labels": [], "entities": []}, {"text": "The applications of the second generation were typically transactional, in the sense that they could perform a transaction on behalf of the user, like moving funds between bank accounts, trading stocks, or buying tickets.", "labels": [], "entities": []}, {"text": "Most of those applications were developed using the new standards, typically as collections of VoiceXML documents.", "labels": [], "entities": []}, {"text": "The complexity moved to the range of dozens of dialog modules, spanning a number of turns of interactions of the order often or more.", "labels": [], "entities": []}, {"text": "At the same time, some of the applications started using a technology known as Statistical Spoken Language Understanding, or SSLU (), for mapping loosely constrained user utterances to a finite number of pre-defined semantic categories.", "labels": [], "entities": [{"text": "Statistical Spoken Language Understanding", "start_pos": 79, "end_pos": 120, "type": "TASK", "confidence": 0.6721794307231903}]}, {"text": "The natural language modality-as opposed to directed dialog-was initially used mostly for call-routing, i.e. to route calls to the appropriate call center based on a more or less lengthy description of the reason for the call by the user.", "labels": [], "entities": []}, {"text": "While the model behind the first and second generations of dialog applications can be described by the form-filling paradigm, and the interaction follows a pre-determined simple script, the systems of the third generation have raised to a qualitatively different level of complexity.", "labels": [], "entities": []}, {"text": "Problem solving applications, like customer care, help desk, and technical support, are characterized by a level of complexity ranging in the thousands of DMs, fora number of turns of dynamic interaction that can reach into the dozens.", "labels": [], "entities": [{"text": "Problem solving", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.9009313881397247}]}, {"text": "As the sophistication of the applications evolved, so did the system architecture by moving the logic from the client (VoiceXML browser, or voice-browser) to the server ().", "labels": [], "entities": []}, {"text": "More and more system are today based on generic dialog application server which interprets a dialog specification described by a-typically proprietarymarkup language and serve the voice-browser with dynamically generated VoiceXML documents.", "labels": [], "entities": []}, {"text": "Finally, the interaction modality of the third generation systems is moving from the strictly directed dialog application, to directed dialog, with some natural language (SSLU) turns, and some limited mixed-initiative (i.e. the possibility for the user to change the course of the dialog by making an unsolicited request).", "labels": [], "entities": []}], "datasetContent": [{"text": "Voice User Interface (VUI) is typically considered an art.", "labels": [], "entities": [{"text": "Voice User Interface (VUI)", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.7471428513526917}]}, {"text": "VUI designers acquire their experience by analyzing the effect of different prompts on the behavior of users, and can often predict whether anew prompt can help, confuse, or expedite the interaction.", "labels": [], "entities": []}, {"text": "Unfortunately, like all technologies relying on the anecdotal experience of the designer, in VUI it is difficult to make fine adjustments to an interface and predict the effect of competing similar designs before the application is actually deployed.", "labels": [], "entities": []}, {"text": "However, in large volume applications, and when a global measure of performance is available, one can test different non-disruptive design hypotheses on the field, while the application is running.", "labels": [], "entities": []}, {"text": "We call this process experimental VUI.", "labels": [], "entities": [{"text": "VUI", "start_pos": 34, "end_pos": 37, "type": "DATASET", "confidence": 0.6795824766159058}]}, {"text": "There have been, in the past, several studies aimed at using machine learning for the design of dialog systems ().", "labels": [], "entities": []}, {"text": "Unfortunately, the problem of full design of a system based uniquely on machine learning is a very difficult one, and cannot be fully utilized yet for commercial systems.", "labels": [], "entities": []}, {"text": "A simpler and less ambitious goal is that of finding the optimal dialog strategy among a small number of competing designs, where all the initial designs are working reasonably well ().", "labels": [], "entities": []}, {"text": "Comparing competing designs requires carrying on an exploration based on random selection of each design at crucial points of the dialog.", "labels": [], "entities": []}, {"text": "Once a reward schema is defined, one can use it for changing the exploration probability so as to maximize a function of the accumulated reward using, for instance, one of the algorithms described in).", "labels": [], "entities": []}, {"text": "Defining many different competing designs at several points of the interaction is often impractical and costly.", "labels": [], "entities": []}, {"text": "Moreover, in a deployed commercial application, one needs to be careful about maintaining a reasonable user experience during exploration.", "labels": [], "entities": []}, {"text": "Thus, the competing designs have to be chosen carefully and applied to portions of the dialog where the choice of the optimal design can make a significant difference for the reward measure in use.", "labels": [], "entities": []}, {"text": "In the experiments described below we selected the symptom identification as a point worth exploring.", "labels": [], "entities": [{"text": "symptom identification", "start_pos": 51, "end_pos": 73, "type": "TASK", "confidence": 0.8765301406383514}]}, {"text": "in an internet technical support application We then defined three prompting schemas -Schema A: the system plays an open prompt -Schema B: the system plays an open prompt, and then provides some examples of requests -Schema C: The system plays an open prompt, and then suggests a command that provides a list of choices.", "labels": [], "entities": []}, {"text": "The three schemas were implemented on a deployed system for limited time.", "labels": [], "entities": []}, {"text": "There was 1/3 probability for each individual call to go through one of the above schemas.", "labels": [], "entities": []}, {"text": "The target function chosen for optimization was the average automation rate.", "labels": [], "entities": [{"text": "automation rate", "start_pos": 60, "end_pos": 75, "type": "METRIC", "confidence": 0.93683722615242}]}, {"text": "shows the effect on the cumulated average automation rate for each one of the competing design.", "labels": [], "entities": [{"text": "cumulated average automation rate", "start_pos": 24, "end_pos": 57, "type": "METRIC", "confidence": 0.8439315110445023}]}, {"text": "The exploration was carried out until the difference in the automation rate among the three designs reached statistical significance, which was after 13 days with a total number of 21,491 calls.", "labels": [], "entities": [{"text": "automation rate", "start_pos": 60, "end_pos": 75, "type": "METRIC", "confidence": 0.9704257249832153}]}, {"text": "At that point in time we established that design B had superior performance, as compared to A and C, with a difference of 0.68 percent points.", "labels": [], "entities": []}, {"text": "Event though the gain in total automation rate (i.e. 0.68 percent points) seems to be modest, one has to consider that this increase is simply caused only by the selection of the best wording of a single prompt in an application with thousands of prompts.", "labels": [], "entities": [{"text": "total automation rate", "start_pos": 25, "end_pos": 46, "type": "METRIC", "confidence": 0.772496779759725}]}, {"text": "One can expect to obtain more important improvements by at looking to other areas of the dialog where experimental VUI can be applied and selecting the optimal prompt can have an impact on the overall automation rate.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Evolution of spoken dialog systems.", "labels": [], "entities": []}, {"text": " Table 2: Accuracy results for Hierarchical  SSLU with 79 symptoms.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 10, "end_pos": 18, "type": "METRIC", "confidence": 0.9992551207542419}, {"text": "Hierarchical  SSLU", "start_pos": 31, "end_pos": 49, "type": "TASK", "confidence": 0.7611075341701508}]}, {"text": " Table 3: Result of the confirmation analy- sis based on the results of 895 calls", "labels": [], "entities": []}]}