{"title": [{"text": "Speech Recognition Grammar Compilation in Grammatical Framework", "labels": [], "entities": [{"text": "Speech Recognition Grammar Compilation", "start_pos": 0, "end_pos": 38, "type": "TASK", "confidence": 0.8143698200583458}]}], "abstractContent": [{"text": "This paper describes how grammar-based language models for speech recognition systems can be generated from Grammatical Framework (GF) grammars.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 59, "end_pos": 77, "type": "TASK", "confidence": 0.7458937466144562}]}, {"text": "Context-free grammars and finite-state models can be generated in several formats: GSL, SRGS, JSGF, and HTK SLF.", "labels": [], "entities": [{"text": "SRGS", "start_pos": 88, "end_pos": 92, "type": "DATASET", "confidence": 0.7146698832511902}, {"text": "JSGF", "start_pos": 94, "end_pos": 98, "type": "DATASET", "confidence": 0.7395849823951721}]}, {"text": "In addition, semantic interpretation code can be embedded in the generated context-free grammars.", "labels": [], "entities": [{"text": "semantic interpretation code", "start_pos": 13, "end_pos": 41, "type": "TASK", "confidence": 0.777162233988444}]}, {"text": "This enables rapid development of portable, multilingual and easily modifiable speech recognition applications.", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 79, "end_pos": 97, "type": "TASK", "confidence": 0.7140713781118393}]}], "introductionContent": [{"text": "Speech recognition grammars are used for guiding speech recognizers in many applications.", "labels": [], "entities": [{"text": "Speech recognition grammars", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.8177868127822876}, {"text": "speech recognizers", "start_pos": 49, "end_pos": 67, "type": "TASK", "confidence": 0.7190665900707245}]}, {"text": "However, there area number of problems associated with writing grammars in the low-level, systemspecific formats required by speech recognizers.", "labels": [], "entities": []}, {"text": "This work addresses these problems by generating speech recognition grammars and semantic interpretation components from grammars written in Grammatical Framework (GF), a high-level, typetheoretical grammar formalism.", "labels": [], "entities": [{"text": "speech recognition grammars and semantic interpretation", "start_pos": 49, "end_pos": 104, "type": "TASK", "confidence": 0.7645081778367361}]}, {"text": "Compared to existing work on compiling unification grammars, such as Regulus (), our work uses a type-theoretical grammar formalism with a focus on multilinguality and modular grammar development, and supports multiple speech recognition grammar formalisms, including finite-state models.", "labels": [], "entities": []}, {"text": "We first outline some existing problems in the development and maintenance of speech recognition grammars, and describe how our work attempts to address these problems.", "labels": [], "entities": [{"text": "speech recognition grammars", "start_pos": 78, "end_pos": 105, "type": "TASK", "confidence": 0.7769673466682434}]}, {"text": "In the following two sections we introduce speech recognition grammars and Grammatical Framework.", "labels": [], "entities": [{"text": "speech recognition grammars", "start_pos": 43, "end_pos": 70, "type": "TASK", "confidence": 0.8410475055376688}]}, {"text": "The bulk of the paper then describes how we generate context-free speech recognition grammars, finite-state language models and semantic interpretation code from GF grammars.", "labels": [], "entities": [{"text": "context-free speech recognition grammars", "start_pos": 53, "end_pos": 93, "type": "TASK", "confidence": 0.7441930025815964}]}, {"text": "We conclude by giving references to a number of experimental dialogue systems which already use our grammar compiler for generating speech recognition grammars.", "labels": [], "entities": [{"text": "speech recognition grammars", "start_pos": 132, "end_pos": 159, "type": "TASK", "confidence": 0.7745479842027029}]}, {"text": "Expressivity Speech recognition grammars are written in simple formalisms which do not have the powerful constructs of high-level grammar formalisms.", "labels": [], "entities": [{"text": "Expressivity Speech recognition grammars", "start_pos": 0, "end_pos": 40, "type": "TASK", "confidence": 0.7074306383728981}]}, {"text": "This makes speech recognition grammar writing labor-intensive and error prone, especially for languages with more inflection and agreement than English.", "labels": [], "entities": [{"text": "speech recognition grammar writing", "start_pos": 11, "end_pos": 45, "type": "TASK", "confidence": 0.8677013218402863}]}, {"text": "This is solved by using a high-level grammar formalism with powerful constructs and a grammar library which implements the domain-independent linguistic details.", "labels": [], "entities": []}, {"text": "Duplicated work When speech recognition grammars are written directly in the low-level format required by the speech recognizer, other parts of the system, such as semantic interpretation components, must often be constructed separately.", "labels": [], "entities": [{"text": "speech recognition grammars", "start_pos": 21, "end_pos": 48, "type": "TASK", "confidence": 0.7970640858014425}]}, {"text": "This duplicated work can be avoided by generating all the components from a single declarative source, such as a GF grammar.", "labels": [], "entities": []}, {"text": "Consistency Because of the lack of abstraction mechanisms and consistency checks, it is difficult to modify a system which uses hand-written speech recognition grammars.", "labels": [], "entities": []}, {"text": "The problem is multiplied when the system is multilingual.", "labels": [], "entities": []}, {"text": "The developer has to modify the speech recognition grammar and the semantic interpretation component manually for each language.", "labels": [], "entities": [{"text": "speech recognition grammar", "start_pos": 32, "end_pos": 58, "type": "TASK", "confidence": 0.773639072974523}]}, {"text": "A simple change may require touching many parts of the grammar, and there are no automatic consistency checks.", "labels": [], "entities": [{"text": "consistency", "start_pos": 91, "end_pos": 102, "type": "METRIC", "confidence": 0.9362286925315857}]}, {"text": "The strong typing of the GF language enforces consistency between the semantics and the concrete representation in each language.", "labels": [], "entities": []}, {"text": "Localization With hand-written grammars, it is about as difficult to add support fora new language as it is to write the grammar and semantic interpretation for the first language.", "labels": [], "entities": []}, {"text": "GF's support for multilingual grammars and the common interface implemented by all grammars in the GF resource grammar library makes it easier to translate a grammar to anew language.", "labels": [], "entities": [{"text": "GF", "start_pos": 0, "end_pos": 2, "type": "DATASET", "confidence": 0.9344569444656372}, {"text": "GF resource grammar library", "start_pos": 99, "end_pos": 126, "type": "DATASET", "confidence": 0.9186423867940903}]}, {"text": "Portability A grammar in any given speech recognition grammar format cannot be used with a speech recognizer which uses another format.", "labels": [], "entities": []}, {"text": "In our approach, a GF grammar is used as the canonical representation which the developer works with, and speech recognition grammars in many formats can be generated automatically from this representation.", "labels": [], "entities": [{"text": "speech recognition grammars", "start_pos": 106, "end_pos": 133, "type": "TASK", "confidence": 0.7453470428784689}]}], "datasetContent": [], "tableCaptions": []}