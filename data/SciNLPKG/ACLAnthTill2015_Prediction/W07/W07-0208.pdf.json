{"title": [{"text": "TextGraphs-2: Graph-Based Algorithms for Natural Language Processing", "labels": [], "entities": []}], "abstractContent": [{"text": "We argue in favor of the the use of labeled directed graph to represent various types of linguistic structures, and illustrate how this allows one to view NLP tasks as graph transformations.", "labels": [], "entities": []}, {"text": "We present a general method for learning such transformations from an annotated corpus and describe experiments with two applications of the method: identification of non-local depenencies (using Penn Treebank data) and semantic role labeling (using Proposition Bank data).", "labels": [], "entities": [{"text": "identification of non-local depenencies", "start_pos": 149, "end_pos": 188, "type": "TASK", "confidence": 0.8321096748113632}, {"text": "Penn Treebank data", "start_pos": 196, "end_pos": 214, "type": "DATASET", "confidence": 0.9922270576159159}, {"text": "semantic role labeling", "start_pos": 220, "end_pos": 242, "type": "TASK", "confidence": 0.6919866104920706}, {"text": "Proposition Bank data", "start_pos": 250, "end_pos": 271, "type": "DATASET", "confidence": 0.9112246036529541}]}], "introductionContent": [{"text": "Availability of linguistically annotated corpora such as the Penn Treebank (, Proposition Bank (), and FrameNet) has stimulated much research on methods for automatic syntactic and semantic analysis of text.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 61, "end_pos": 74, "type": "DATASET", "confidence": 0.9958186149597168}, {"text": "automatic syntactic and semantic analysis of text", "start_pos": 157, "end_pos": 206, "type": "TASK", "confidence": 0.7113527016980308}]}, {"text": "Rich annotations of corpora has allowed for the development of techniques for recovering deep linguistic structures: syntactic non-local dependencies; Jijkoun and de) and semantic arguments).", "labels": [], "entities": []}, {"text": "Most state-of-the-art methods for the latter two tasks use a cascaded architecture: they employ syntactic parsers and re-cast the corresponding tasks as pattern matching) or classification () problems.", "labels": [], "entities": []}, {"text": "Other methods (Jijkoun and) use combinations of pattern matching and classification.", "labels": [], "entities": [{"text": "Jijkoun", "start_pos": 15, "end_pos": 22, "type": "DATASET", "confidence": 0.8509608507156372}, {"text": "pattern matching", "start_pos": 48, "end_pos": 64, "type": "TASK", "confidence": 0.7100110948085785}]}, {"text": "The method presented in this paper belongs to the latter category.", "labels": [], "entities": []}, {"text": "Specifically, we propose (1) to use a flexible and expressive graph-based representation of linguistic structures at different levels; and (2) to view NLP tasks as graph transformation problems: namely, problems of transforming graphs of one type into graphs of another type.", "labels": [], "entities": []}, {"text": "An example of such a transformation is adding a level of the predicate argument structure or semantic arguments to syntactically annotated sentences.", "labels": [], "entities": []}, {"text": "Furthermore, we describe a general method to automatically learn such transformations from annotated corpora.", "labels": [], "entities": []}, {"text": "Our method combines pattern matching on graphs and machine learning (classification) and can be viewed as an extension of the TransformationBased Learning paradigm.", "labels": [], "entities": [{"text": "pattern matching", "start_pos": 20, "end_pos": 36, "type": "TASK", "confidence": 0.7471974790096283}]}, {"text": "After describing the method for learning graph transformations we demonstrate its applicability on two tasks: identification of non-local dependencies (using Penn Treebank data) and semantic roles labeling (using Proposition Bank data).", "labels": [], "entities": [{"text": "Penn Treebank data", "start_pos": 158, "end_pos": 176, "type": "DATASET", "confidence": 0.9945689837137858}, {"text": "semantic roles labeling", "start_pos": 182, "end_pos": 205, "type": "TASK", "confidence": 0.6066515247027079}, {"text": "Proposition Bank data", "start_pos": 213, "end_pos": 234, "type": "DATASET", "confidence": 0.9021734793980917}]}, {"text": "The paper is organized as follows.", "labels": [], "entities": []}, {"text": "In Section 2 we give our motivations for using graphs to encode linguistic data.", "labels": [], "entities": []}, {"text": "In Section 3 we describe our method for learning graph transformations and in Section 4 we report on experiments with applications of our method.", "labels": [], "entities": [{"text": "learning graph transformations", "start_pos": 40, "end_pos": 70, "type": "TASK", "confidence": 0.6205644408861796}]}, {"text": "We conclude in Section 5.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Evaluation of our method for identification  of empty nodes and their antecedents (12 first itera- tions).", "labels": [], "entities": []}, {"text": " Table 2: Evaluation of adding Penn Treebank func- tion tags.", "labels": [], "entities": [{"text": "Penn Treebank func- tion tags", "start_pos": 31, "end_pos": 60, "type": "DATASET", "confidence": 0.9695612092812856}]}, {"text": " Table 3: Evaluation of our method for semantic role  identification with Propbank: with Charniak parses  and with parses processed by the system of Sec- tion 4.1.", "labels": [], "entities": [{"text": "semantic role  identification", "start_pos": 39, "end_pos": 68, "type": "TASK", "confidence": 0.6913880805174509}]}, {"text": " Table 4: Evaluation of our methods for semantic role  identification with Propbank (12 first iterations).", "labels": [], "entities": [{"text": "semantic role  identification", "start_pos": 40, "end_pos": 69, "type": "TASK", "confidence": 0.7282719413439432}, {"text": "Propbank", "start_pos": 75, "end_pos": 83, "type": "DATASET", "confidence": 0.9269254803657532}]}]}