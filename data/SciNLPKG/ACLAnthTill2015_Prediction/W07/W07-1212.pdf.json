{"title": [{"text": "Creating a Systemic Functional Grammar Corpus from the Penn Treebank", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 55, "end_pos": 68, "type": "DATASET", "confidence": 0.9541209936141968}]}], "abstractContent": [{"text": "The lack of a large annotated systemic functional grammar (SFG) corpus has posed a significant challenge for the development of the theory.", "labels": [], "entities": [{"text": "systemic functional grammar (SFG)", "start_pos": 30, "end_pos": 63, "type": "TASK", "confidence": 0.6899069646994272}]}, {"text": "Automating SFG annotation is challenging because the theory uses a minimal constituency model, allocating as much of the work as possible to a set of hierarchically organised features.", "labels": [], "entities": [{"text": "Automating SFG annotation", "start_pos": 0, "end_pos": 25, "type": "TASK", "confidence": 0.7795710364977518}]}, {"text": "In this paper we show that despite the unorthodox organisation of SFG, adapting existing resources remains the most practical way to create an annotated corpus.", "labels": [], "entities": [{"text": "SFG", "start_pos": 66, "end_pos": 69, "type": "DATASET", "confidence": 0.6274498105049133}]}, {"text": "We present and analyse SFGBank, an automated conversion of the Penn Treebank into sys-temic functional grammar.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 63, "end_pos": 76, "type": "DATASET", "confidence": 0.9959112405776978}]}, {"text": "The corpus is comparable to those available for other linguistic theories, offering many opportunities for new research.", "labels": [], "entities": []}], "introductionContent": [{"text": "Systemic functional grammar () aims to describe the set of meaningful choices a speaker makes when putting a thought into words.", "labels": [], "entities": [{"text": "Systemic functional grammar", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6941200494766235}]}, {"text": "Each of these choices is seen as a resource for shaping the meaning in a particular way, and the selection will have a distinct grammatical outcome as well as a semantic implication.", "labels": [], "entities": []}, {"text": "The choices are presented hierarchically, so that early selections restrict other choices.", "labels": [], "entities": []}, {"text": "For instance, if a speaker chooses imperative mood fora clause, they cannot choose a tense.", "labels": [], "entities": []}, {"text": "Each selection is linked to a syntactic expression rule.", "labels": [], "entities": []}, {"text": "When imperative mood is selected, the subject of the clause is suppressed; when interrogative mood is selected, the order of the subject and first auxiliary are reversed.", "labels": [], "entities": []}, {"text": "Systemic grammars are very different from grammars influenced by the formalist tradition.", "labels": [], "entities": []}, {"text": "Systemic analysis locates a constituent within a typology, and yields a set of features that describe its salient properties.", "labels": [], "entities": []}, {"text": "These features have proven useful for research in applied linguistics, on topics such as stylistics, discourse analysis and translation.", "labels": [], "entities": [{"text": "discourse analysis", "start_pos": 101, "end_pos": 119, "type": "TASK", "confidence": 0.7651503682136536}, {"text": "translation", "start_pos": 124, "end_pos": 135, "type": "TASK", "confidence": 0.8988668322563171}]}, {"text": "As a generative theory, systemic grammars are less effective.", "labels": [], "entities": [{"text": "generative theory", "start_pos": 5, "end_pos": 22, "type": "TASK", "confidence": 0.9543910622596741}]}, {"text": "There have been a few attempts, such as those discussed by O', but as yet a wide coverage systemic grammar that can be used for tractable parsing has not been developed.", "labels": [], "entities": []}, {"text": "The lack of a corpus and parser has limited research on systemic grammars, as corpus studies have been restricted to small samples of manually coded examples, or imprecise queries of unannotated data.", "labels": [], "entities": []}, {"text": "The corpus we present, obtained by converting the Penn Treebank, addresses this issue.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 50, "end_pos": 63, "type": "DATASET", "confidence": 0.9926029145717621}]}, {"text": "It also suggests away to automatically code novel text, by converting the output of a parser fora different formalism.", "labels": [], "entities": []}, {"text": "This would also allow the use of SFG features for NLP applications to be explored, and support current research using SFG for applied linguistics.", "labels": [], "entities": []}, {"text": "The conversion process relies on a set of manually coded rules.", "labels": [], "entities": [{"text": "conversion", "start_pos": 4, "end_pos": 14, "type": "TASK", "confidence": 0.9818131923675537}]}, {"text": "The first step of the process is to collect SFG clauses and their constituents from parses in the Penn Treebank.", "labels": [], "entities": [{"text": "SFG clauses and their constituents", "start_pos": 44, "end_pos": 78, "type": "TASK", "confidence": 0.7498410940170288}, {"text": "Penn Treebank", "start_pos": 98, "end_pos": 111, "type": "DATASET", "confidence": 0.9877552390098572}]}, {"text": "Each clause constituent is then assigned up to three function labels, for the three simultaneous semantic and pragmatic structures describes.", "labels": [], "entities": []}, {"text": "Finally, the system features are calculated, using rules referring to the function labels assigned in the previous step.", "labels": [], "entities": []}, {"text": "This paper extends the work described in Honnibal (2004).", "labels": [], "entities": [{"text": "Honnibal (2004)", "start_pos": 41, "end_pos": 56, "type": "DATASET", "confidence": 0.9148417860269547}]}], "datasetContent": [], "tableCaptions": []}