{"title": [{"text": "ElixirFM -Implementation of Functional Arabic Morphology", "labels": [], "entities": [{"text": "Implementation of Functional Arabic Morphology", "start_pos": 10, "end_pos": 56, "type": "TASK", "confidence": 0.6158267796039582}]}], "abstractContent": [{"text": "Functional Arabic Morphology is a formulation of the Arabic inflectional system seeking the working interface between morphology and syntax.", "labels": [], "entities": [{"text": "Functional Arabic Morphology", "start_pos": 0, "end_pos": 28, "type": "TASK", "confidence": 0.696220854918162}]}, {"text": "ElixirFM is its high-level implementation that reuses and extends the Functional Morphology library for Haskell.", "labels": [], "entities": []}, {"text": "Inflection and derivation are modeled in terms of paradigms, grammatical categories, lexemes and word classes.", "labels": [], "entities": []}, {"text": "The computation of analysis or generation is conceptually distinguished from the general-purpose linguistic model.", "labels": [], "entities": [{"text": "analysis or generation", "start_pos": 19, "end_pos": 41, "type": "TASK", "confidence": 0.6799981594085693}]}, {"text": "The lexicon of ElixirFM is designed with respect to abstraction, yet is no more complicated than printed dictionaries.", "labels": [], "entities": []}, {"text": "It is derived from the open-source Buckwal-ter lexicon and is enhanced with information sourcing from the syntactic annotations of the Prague Arabic Dependency Treebank.", "labels": [], "entities": [{"text": "Buckwal-ter lexicon", "start_pos": 35, "end_pos": 54, "type": "DATASET", "confidence": 0.9638375639915466}, {"text": "Prague Arabic Dependency Treebank", "start_pos": 135, "end_pos": 168, "type": "DATASET", "confidence": 0.9691463559865952}]}, {"text": "1 Overview One can observe several different streams both in the computational and the purely linguistic modeling of morphology.", "labels": [], "entities": []}, {"text": "Some are motivated by the need to analyze word forms as to their compositional structure, others consider word inflection as being driven by the underlying system of the language and the formal requirements of its grammar.", "labels": [], "entities": []}, {"text": "In Section 2, before we focus on the principles of ElixirFM, we briefly follow the characterization of morphological theories presented by Stump (2001) and extend the classification to the most prominent computational models of Arabic morphology (Beesley, 2001; Buckwalter, 2002; Habash et al., 2005; El Dada and Ranta, 2006).", "labels": [], "entities": []}, {"text": "In Section 3, we survey some of the categories of the syntax-morphology interface in Modern Written Arabic, as described by the Functional Arabic Morphology.", "labels": [], "entities": [{"text": "Functional Arabic Morphology", "start_pos": 128, "end_pos": 156, "type": "DATASET", "confidence": 0.5923001070817312}]}, {"text": "In passing, we will introduce the basic concepts of programming in Haskell, a modern purely functional language that is an excellent choice for declarative generative modeling of morphologies, as Forsberg and Ranta (2004) have shown.", "labels": [], "entities": [{"text": "generative modeling of morphologies", "start_pos": 156, "end_pos": 191, "type": "TASK", "confidence": 0.8398349732160568}]}, {"text": "Section 4 will be devoted to describing the lexicon of ElixirFM.", "labels": [], "entities": [{"text": "ElixirFM", "start_pos": 55, "end_pos": 63, "type": "DATASET", "confidence": 0.9374284744262695}]}, {"text": "We will develop a so-called domain-specific language embedded in Haskell with which we will achieve lexical definitions that are simultaneously a source code that can be checked for consistency , a data structure ready for rather independent processing, and still an easy-to-read-and-edit document resembling the printed dictionaries.", "labels": [], "entities": []}, {"text": "In Section 5, we will illustrate how rules of inflection and derivation interact with the parameters of the grammar and the lexical information.", "labels": [], "entities": []}, {"text": "We will demonstrate, also with reference to the Functional Morphology library (Forsberg and Ranta, 2004), the reusability of the system in many applications, including computational analysis and generation in various modes, exploring and exporting of the lexicon , printing of the inflectional paradigms, etc.", "labels": [], "entities": [{"text": "Functional Morphology library", "start_pos": 48, "end_pos": 77, "type": "DATASET", "confidence": 0.60306116938591}, {"text": "computational analysis and generation", "start_pos": 168, "end_pos": 205, "type": "TASK", "confidence": 0.7704836875200272}]}, {"text": "2 Morphological Models According to Stump (2001), morphological theories can be classified along two scales.", "labels": [], "entities": []}, {"text": "The first one deals with the core or the process of inflection: lexical theories associate word's morphosyntactic properties with affixes inferential theories consider inflection as a result of operations on lexemes; morphosyntactic prop-1", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}