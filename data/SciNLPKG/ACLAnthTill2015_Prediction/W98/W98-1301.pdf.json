{"title": [{"text": "The Proper Treatment of Optimality in Computational Phonology", "labels": [], "entities": [{"text": "Proper Treatment of Optimality", "start_pos": 4, "end_pos": 34, "type": "TASK", "confidence": 0.7773719131946564}]}], "abstractContent": [{"text": "This paper presents a novel formalization of optimality theory.", "labels": [], "entities": [{"text": "optimality theory", "start_pos": 45, "end_pos": 62, "type": "TASK", "confidence": 0.8841119110584259}]}, {"text": "Unlike previous treatments of optimality in computational linguistics, starting with EUison (1994), the new approach does not require any explicit marking and counting of constraint violations.", "labels": [], "entities": []}, {"text": "It is based on the notion of \"lenient composition\", defined as the combination of ordinary composition and priority union.", "labels": [], "entities": []}, {"text": "If an underlying form has outputs that can meet a given constraint, lenient composition enforces the constraint; if none of the output candidates meets the constraint, lenient composition allows all of them.", "labels": [], "entities": []}, {"text": "For the sake of greater efficiency, we may \"leniently compose\" the GEN relation and all the constraints into a single finite-state transducer that maps each underlying form directly into its optimal surface realizations, and vice versa.", "labels": [], "entities": []}, {"text": "Seen f~om this perspective, optimality theolT is surprisingly similar to the two older strains of finite-state phonology: classical rewrite systems and two-level models.", "labels": [], "entities": []}, {"text": "In particular, the ranking of optimality constraints corresponds to the ordering of rewrite rules.", "labels": [], "entities": []}], "introductionContent": [{"text": "It has been recognized for sometime that Optimality Theory (OT), introduced by Prince and Smolensky, is from a computational point of view closely related to classical phonological rewrite systems (Chomsky and Halle and to two-level descriptions (Kosksnniemi).", "labels": [], "entities": [{"text": "Optimality Theory (OT)", "start_pos": 41, "end_pos": 63, "type": "TASK", "confidence": 0.835020112991333}]}, {"text": "Ellison [61 observes that the ~EN function of OT can be regarded as a regular relation and that OT constraints seem to be regular.", "labels": [], "entities": [{"text": "OT", "start_pos": 46, "end_pos": 48, "type": "DATASET", "confidence": 0.7809871435165405}]}, {"text": "Thus each constraint can be modeled as a transducer that maps a string to a sequence of marks indicating the presence or absence of a violation.", "labels": [], "entities": []}, {"text": "The most optimal solution can then be found by sorting and comparing the marks.", "labels": [], "entities": []}, {"text": "Frank and Satta give a formal proof that OT models can be construed as regtdar relations provided that the number of violations is bounded.", "labels": [], "entities": []}, {"text": "Eisner develops a typology of OT constraints that corresponds to two types of rules in two-level descriptions: restrictions and prohibitions.", "labels": [], "entities": []}, {"text": "The practice of marking and counting constraint violations is closely related to the tableau method introduced in Prince and Smolensky for selecting the most optimal output candidate.", "labels": [], "entities": []}, {"text": "Much of the current work in optimality theory consists of constructing tableaux that demonstrate the need for particular constraints and rankings that allow the favored candidate to emerge with the best score.", "labels": [], "entities": [{"text": "optimality theory", "start_pos": 28, "end_pos": 45, "type": "TASK", "confidence": 0.8995212614536285}]}, {"text": "From a computational viewpoint, this evaluation method is suboptimal.", "labels": [], "entities": []}, {"text": "Although the work of ~EN and the assignment of violation marks can be carried out by finite-state transducers, the sorting and counting of the marks envisioned by Ellison and subsequent work (Walther) is an off-line activity that is not a finite-state process.", "labels": [], "entities": []}, {"text": "This kind of optimality computation cannot be straightforwardly integrated with other types of linguistic processing (morphological analysis, text-to-speech generation etc.) that are commonly performed by means of finite-state transduction.", "labels": [], "entities": [{"text": "linguistic processing (morphological analysis", "start_pos": 95, "end_pos": 140, "type": "TASK", "confidence": 0.705300235748291}, {"text": "text-to-speech generation", "start_pos": 142, "end_pos": 167, "type": "TASK", "confidence": 0.7020278871059418}]}, {"text": "This paper demonstrates that the computation of the most optimal surface realizations of any input string can be carried out entirely within a finite-state calculus, subject to the limitation (Frank and Satta) that the maximal number of violations that need to be considered is bounded, we will show that optimality constraints can be treated computationally in a similar m~-ner to two-level constraints and rewrite rules.", "labels": [], "entities": []}, {"text": "For example, optimality constraints can be merged with one another, respecting their rAniclug, just as it is possible to merge rewrite rules and two-level constraints.", "labels": [], "entities": []}, {"text": "A system of optimality constraints can be imposed on a finite-state lexicon creating a transducer that maps each member of a possibly infinite set of lexicai forms into its most optimal surface realization, and vice versa.", "labels": [], "entities": []}, {"text": "For the sake of conciseness, we limit the discussion to optimality theory as originally presented in Prince and Smolensky.", "labels": [], "entities": [{"text": "optimality theory", "start_pos": 56, "end_pos": 73, "type": "TASK", "confidence": 0.8516414761543274}]}, {"text": "The techniques described below can also be applied to the correspondence version of the theory (McCarthy and Prince) that expands the model to encompass output/output constraints between reduplicant and base forms.", "labels": [], "entities": []}, {"text": "To set the stage for discussing the application and merging of optimality constraints it is useful to look first at the corresponding operations in the context of rewrite rules and two-level constraints.", "labels": [], "entities": []}, {"text": "Thus we can see both the similarities and the differences among the three approaches.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}