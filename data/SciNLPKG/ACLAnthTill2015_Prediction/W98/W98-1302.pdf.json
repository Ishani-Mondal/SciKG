{"title": [], "abstractContent": [{"text": "We show that context-free parsing can be realised by a 2-phase process, relying on an approximated context-free gr~mm~r.", "labels": [], "entities": []}, {"text": "In the first phase {t finite transducer performs parsing according to the approximation.", "labels": [], "entities": []}, {"text": "In the second phase, the approximated parses are refined according to the original grammar.", "labels": [], "entities": []}], "introductionContent": [{"text": "A recent publication presented a novel way of transforming a context-free grammar into anew grammar that generates a regular language.", "labels": [], "entities": []}, {"text": "This new language is a superset of the orighal language.", "labels": [], "entities": []}, {"text": "It was argued that this approach has advantages over other methods of regular approximation.", "labels": [], "entities": [{"text": "regular approximation", "start_pos": 70, "end_pos": 91, "type": "TASK", "confidence": 0.7060404568910599}]}, {"text": "Our method of approximation is the following.", "labels": [], "entities": []}, {"text": "We define a condition on context-free grammars that is a suiBcient condition fora grammar to generate a regular language.", "labels": [], "entities": []}, {"text": "We then give a transformation that turns an arbitrary grammar into another grammar that satisfies this condition.", "labels": [], "entities": []}, {"text": "This transformation is obviously not language-preserving; it adds strings to the language generated by the original grammar, in such away that the language becomes regular.", "labels": [], "entities": []}, {"text": "In the present communication we show how this procedure needs to be extended so that context-free parsing can be realised by a 2-phase process.", "labels": [], "entities": []}, {"text": "For the first phase, the approximated grammar is turned into a finite transducer.", "labels": [], "entities": []}, {"text": "This transducer processes the input in linear time and produces a table.", "labels": [], "entities": []}, {"text": "In the second phase, this table is processed to obtain the set of all parses according to the original grammar.", "labels": [], "entities": []}, {"text": "The order of the time complexity of the second phase is cubic, which corresponds to the time complexity of most context-free parsing algorithms that are used in practice.", "labels": [], "entities": []}, {"text": "However, the first phase filters out many parses that are inconsistent with respect to the regular approximation.", "labels": [], "entities": []}, {"text": "This may reduce the effort needed by the second phase.", "labels": [], "entities": []}, {"text": "It is interesting to note that the work presented here is conceptually related to use of regular lookahead in context-free parsing.", "labels": [], "entities": []}, {"text": "' The structure of this paper is as follows.", "labels": [], "entities": []}, {"text": "In Section 2 we recall some standard definitions from language theory.", "labels": [], "entities": []}, {"text": "Section 3 investigates a sut~cient condition fora context-free grammar to generate a regular language, We also present the construction of a finite transducer from such a grammar.", "labels": [], "entities": []}, {"text": "How this transducer reads input and how the output of the transducer can be turned into a representation of all parse trees is discussed in Sections 4 and 5, respectively.", "labels": [], "entities": []}, {"text": "An algorithm to transform a grammar if the sufficient condition mentioned above is not satisfied is given in Section 6.", "labels": [], "entities": []}, {"text": "Section 7 explains how this transformation can be incorporated into the construction of the transducer and how the output of such a transducer is then to be interpreted in order to obtain parse trees according to the original grammar.", "labels": [], "entities": []}, {"text": "Some preliminary conclusions drawn from empirical results are given in Section 8.", "labels": [], "entities": []}, {"text": "A context-free grammar G is a 4-tuple (27, N, P, S), where 27 and N are two finite disjoint sets of terminals and nonterminals, respectively, SE N is the start symbol, and P is a finite set of rules.", "labels": [], "entities": []}, {"text": "Each rule has the form A ~ ~ with A E N and a E V', where V denotes N t3 27.", "labels": [], "entities": []}, {"text": "The relation ~ on N \u00d7 V* is extended to a relation on V* \u00d7 V* as usual.", "labels": [], "entities": []}, {"text": "The transitive and reflexive closure of ~ is denoted by -r*.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}