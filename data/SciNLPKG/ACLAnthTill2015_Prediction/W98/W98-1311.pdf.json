{"title": [{"text": "Using Genericity to Create Cutomizable Finite-State Tools", "labels": [], "entities": []}], "abstractContent": [{"text": "In this article we present the realization of a generic finite-state system.", "labels": [], "entities": []}, {"text": "The system has been used to create concrete lexical tools for word form analysis, word form generation, creation and derivation history, and spenchecking.", "labels": [], "entities": [{"text": "word form analysis", "start_pos": 62, "end_pos": 80, "type": "TASK", "confidence": 0.7314674258232117}, {"text": "word form generation", "start_pos": 82, "end_pos": 102, "type": "TASK", "confidence": 0.7454725901285807}]}, {"text": "It will also be used to create a finite-state transducer for the recognition of phrases.", "labels": [], "entities": []}, {"text": "Producing a finite-state component with the generic system requires little e~ort.", "labels": [], "entities": []}, {"text": "We will first emphasize its meaning and its architecture from a design point of view; then we will present some lexical finite-state tools created with it.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}