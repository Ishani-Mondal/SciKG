{"title": [{"text": "Arabic Morphology Using Only Finite-State Operations", "labels": [], "entities": []}], "abstractContent": [{"text": "Finite-state morphology has been successful in the description and computational implementation of a wide variety of natural languages.", "labels": [], "entities": [{"text": "Finite-state morphology", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.7618391215801239}]}, {"text": "However, the particular challenges of Arabic, and the limitations of some implementations of finite-state morphology, have led many researchers to believe that finite-state power was not sufficient to handle Arabic and other Semitic morphology.", "labels": [], "entities": []}, {"text": "This paper illustrates how the morphotactics and the variation rules of Arabic have been described using only finite-state operations and how this approach has been implemented in a significant morphological analyzer/generator.", "labels": [], "entities": []}], "introductionContent": [{"text": "In Arabic, as in other natural languages, the two challenges of morphological analysis are the description of 1) the morphotactics and 2) the variation rules.", "labels": [], "entities": [{"text": "morphological analysis", "start_pos": 64, "end_pos": 86, "type": "TASK", "confidence": 0.7827103435993195}]}, {"text": "Morphotactics is the study of how morphemes combine together to make wellformed words.", "labels": [], "entities": []}, {"text": "Variations are the discrepancies between the underlying or morphophonemic strings and their surface realization, which are either phonological or orthographical strings depending on the purpose of the grammar.", "labels": [], "entities": []}, {"text": "The key insight and claim of the finite-state approach to morphologyis that both morphotactics and variation grammars can be written as regular expressions, which are compiled and implemented on computers as finite-state automata.", "labels": [], "entities": []}, {"text": "Such grammars are interesting theoretically because they are highly constrained; and in practical computational linguistics for natural languages, finitestate automata are fast, usually compact in size, bidirectional, combinable using all valid finite-state operations, and consultable using language-independent lookup code.", "labels": [], "entities": []}, {"text": "Finite-state approaches to morphology, including the readily available implementation known as Two-Level Morphology, have been shown to work in significant projects for French, English, Spanish, Portuguese, Italian, Finnish, Turkish and a wide variety of other natural languages.", "labels": [], "entities": []}, {"text": "But despite the high attractiveness of finitestate computing, many investigators have concluded that finite-state techniques are not adequate for describing Semitic root-and-pattern morphology.", "labels": [], "entities": []}, {"text": "This paper will present the case that fully implemented finite-state morphology can be and has been used successfully for Arabic.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}