{"title": [{"text": "Hashing-based Approaches to Spelling Correction of Personal Names", "labels": [], "entities": [{"text": "Hashing-based Approaches to Spelling Correction of Personal Names", "start_pos": 0, "end_pos": 65, "type": "TASK", "confidence": 0.7344818897545338}]}], "abstractContent": [{"text": "We propose two hashing-based solutions to the problem of fast and effective personal names spelling correction in People Search applications.", "labels": [], "entities": [{"text": "personal names spelling correction", "start_pos": 76, "end_pos": 110, "type": "TASK", "confidence": 0.7380803972482681}]}, {"text": "The key idea behind our methods is to learn hash functions that map similar names to similar (and compact) binary code-words.", "labels": [], "entities": []}, {"text": "The two methods differ in the data they use for learning the hash functions-the first method uses a set of names in a given lan-guage/script whereas the second uses a set of bilingual names.", "labels": [], "entities": []}, {"text": "We show that both methods give excellent retrieval performance in comparison to several baselines on two lists of misspelled personal names.", "labels": [], "entities": []}, {"text": "More over, the method that uses bilingual data for learning hash functions gives the best performance.", "labels": [], "entities": []}], "introductionContent": [{"text": "Over the last few years, People Search has emerged as an important search service.", "labels": [], "entities": [{"text": "People Search", "start_pos": 25, "end_pos": 38, "type": "TASK", "confidence": 0.5575434267520905}]}, {"text": "Unlike general Web Search and Enterprise Search where users search for information on a wide range of topics including people, products, news, events, etc., People Search is about people.", "labels": [], "entities": []}, {"text": "Hence, personal names are used predominantly as queries in People Search.", "labels": [], "entities": []}, {"text": "As in general Web Search, a good percentage of queries in People Search is misspelled.", "labels": [], "entities": []}, {"text": "Naturally, spelling correction of misspelled personal names plays a very important role in not only reducing the time and effort needed by users to find people they are searching for but also in ensuring good user experience.", "labels": [], "entities": [{"text": "spelling correction of misspelled personal names", "start_pos": 11, "end_pos": 59, "type": "TASK", "confidence": 0.9333571394284567}]}, {"text": "Spelling errors in personal names are of a different nature compared to those in general text.", "labels": [], "entities": [{"text": "Spelling errors in personal names", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.7437180638313293}]}, {"text": "Long before People Search became widely popular, researchers working on the problem of personal name matching had recognized the human tendency to be inexact in recollecting names from the memory and specifying them.", "labels": [], "entities": [{"text": "People Search", "start_pos": 12, "end_pos": 25, "type": "TASK", "confidence": 0.7198549807071686}, {"text": "personal name matching", "start_pos": 87, "end_pos": 109, "type": "TASK", "confidence": 0.6473812460899353}]}, {"text": "A study of personal names in hospital databases found that only 39% of the errors in the names were single typographical errors . Further, multiple and long distance typographical errors (Gregzorz Kondrak for Grzegorz Kondrak), phonetic errors (as in Erik Bryl for Eric Brill), cognitive errors (as in Silvia Cucerzan for Silviu Cucerzan) and word substitutions (as in Rob Moore for Bob Moore) are observed relatively more frequently in personal names compared to general text.", "labels": [], "entities": [{"text": "word substitutions", "start_pos": 343, "end_pos": 361, "type": "TASK", "confidence": 0.6825264990329742}]}, {"text": "In addition to within-the-word errors, People Search queries are plagued by errors that are not usually seen in general text.", "labels": [], "entities": []}, {"text": "The study by Friedman and Sideli discovered that 36% of the errors were due to addition or deletion of a word (as in Ricardo Baeza for Ricardo Baeza-Yates).", "labels": [], "entities": []}, {"text": "Although word addition and deletion generally do not come under the purview of spelling correction, in People Search they are important and need to be addressed.", "labels": [], "entities": [{"text": "word addition", "start_pos": 9, "end_pos": 22, "type": "TASK", "confidence": 0.7977899312973022}, {"text": "spelling correction", "start_pos": 79, "end_pos": 98, "type": "TASK", "confidence": 0.8037627041339874}]}, {"text": "Standard approaches to general purpose spelling correction are not well-suited for correcting misspelled personal names.", "labels": [], "entities": [{"text": "general purpose spelling correction", "start_pos": 23, "end_pos": 58, "type": "TASK", "confidence": 0.743555560708046}, {"text": "correcting misspelled personal names", "start_pos": 83, "end_pos": 119, "type": "TASK", "confidence": 0.8589072525501251}]}, {"text": "As pointed out by), these approaches either try to correct individual words (and will fail to correct Him Clijsters to Kim Clijsters) or employ features based on relatively wide context windows which are not available for queries in Web Search and People Search.", "labels": [], "entities": []}, {"text": "Spelling correction techniques meant for general purpose web-queries require large volumes of training data in the form of query logs for learning the error models (,).", "labels": [], "entities": [{"text": "Spelling correction", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.9849501848220825}]}, {"text": "However, query logs are not available in some applications (e.g. Email address book search).", "labels": [], "entities": [{"text": "Email address book search", "start_pos": 65, "end_pos": 90, "type": "TASK", "confidence": 0.6864492744207382}]}, {"text": "Further, unlike general purpose web-queries where word order often matters, in People Search word order is lax (e.g. I might search for either Kristina Toutanova or Toutanova Kristina).", "labels": [], "entities": []}, {"text": "Therefore, spelling correction techniques that rely crucially on bigram and higher order language models will fail on queries with a different word order than what is observed in the query log.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 11, "end_pos": 30, "type": "TASK", "confidence": 0.9665364325046539}]}, {"text": "Unlike general purpose Web Search where it is not reasonable to assume the availability of a highcoverage trusted lexicon, People Search typically employs large authoritative name directories.", "labels": [], "entities": []}, {"text": "For instance, if one is searching fora friend on Facebook, the correct spelling of the friend's name exists in the Facebook people directory 2 (assuming that the friend is a registered user of Facebook at the time of the search).", "labels": [], "entities": []}, {"text": "Similarly, if one is searching fora contact in Enterprise address book, the correct spelling of the contact is part of the address book.", "labels": [], "entities": [{"text": "Enterprise address book", "start_pos": 47, "end_pos": 70, "type": "DATASET", "confidence": 0.9267006516456604}]}, {"text": "In fact, even in Web Search, broad-coverage name directories are available in the form of Wikipedia, IMDB, etc.", "labels": [], "entities": []}, {"text": "The availability of large authoritative name directories that serve as the source of trusted spellings of names throws open the possibility of correcting misspelled personal names with the help of name matching techniques (,), (.", "labels": [], "entities": [{"text": "name matching", "start_pos": 197, "end_pos": 210, "type": "TASK", "confidence": 0.7042762488126755}]}, {"text": "However, the best of the name matching techniques can at best work with a few thousand names to give acceptable response time and accuracy.", "labels": [], "entities": [{"text": "name matching", "start_pos": 25, "end_pos": 38, "type": "TASK", "confidence": 0.8510120809078217}, {"text": "accuracy", "start_pos": 130, "end_pos": 138, "type": "METRIC", "confidence": 0.9946818947792053}]}, {"text": "They do not scale up to the needs of People Search applications where the directories can have millions of names.", "labels": [], "entities": []}, {"text": "In this work, we develop hashing-based name similarity search techniques and employ them for spelling correction of personal names.", "labels": [], "entities": [{"text": "hashing-based name similarity search", "start_pos": 25, "end_pos": 61, "type": "TASK", "confidence": 0.6835431233048439}, {"text": "spelling correction of personal names", "start_pos": 93, "end_pos": 130, "type": "TASK", "confidence": 0.920057737827301}]}, {"text": "The motivation for using hashing as a building block of spelling correction is the following: given a query, we want to return the global best match in the name directory 2 http://www.facebook.com/directory/people/ that exceeds a similarity threshold.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 56, "end_pos": 75, "type": "TASK", "confidence": 0.9153606593608856}]}, {"text": "As matching the query with the names in the directory is a time consuming task especially for large name directories, we solve the search problem in two stages: \u2022 NAME BUCKETING: For each token of the query, we do an approximate nearest neighbor search of the name tokens of the directory and produce a list of candidates, i.e., tokens that are approximate matches of the query token.", "labels": [], "entities": [{"text": "NAME", "start_pos": 163, "end_pos": 167, "type": "METRIC", "confidence": 0.9958640336990356}, {"text": "BUCKETING", "start_pos": 168, "end_pos": 177, "type": "METRIC", "confidence": 0.773199200630188}]}, {"text": "Using the list of candidate tokens, we extract the list of candidate names which contain at least one approximately matching token.", "labels": [], "entities": []}, {"text": "\u2022 NAME MATCHING: We do a rigorous matching of the query with candidate names.", "labels": [], "entities": [{"text": "NAME", "start_pos": 2, "end_pos": 6, "type": "METRIC", "confidence": 0.9894043207168579}, {"text": "MATCHING", "start_pos": 7, "end_pos": 15, "type": "METRIC", "confidence": 0.5450348258018494}]}, {"text": "Clearly, our success in finding the right name suggestion for the query in the NAME MATCHING stage depends crucially on our success in getting the right name suggestion in the list of candidates produced by the NAME BUCKETING stage search.", "labels": [], "entities": [{"text": "NAME MATCHING stage", "start_pos": 79, "end_pos": 98, "type": "TASK", "confidence": 0.44134198625882465}, {"text": "NAME BUCKETING stage search", "start_pos": 211, "end_pos": 238, "type": "TASK", "confidence": 0.5614835694432259}]}, {"text": "Therefore, we need a name similarity search technique that can ensure very high recall without producing too many candidates.", "labels": [], "entities": [{"text": "name similarity search", "start_pos": 21, "end_pos": 43, "type": "TASK", "confidence": 0.8745983640352885}, {"text": "recall", "start_pos": 80, "end_pos": 86, "type": "METRIC", "confidence": 0.9982777833938599}]}, {"text": "Hashing is best suited for this task of fast and approximate name matching.", "labels": [], "entities": [{"text": "Hashing", "start_pos": 0, "end_pos": 7, "type": "TASK", "confidence": 0.9348576664924622}, {"text": "name matching", "start_pos": 61, "end_pos": 74, "type": "TASK", "confidence": 0.7376223802566528}]}, {"text": "We hash the query tokens as well as directory tokens into d bit binary codes.", "labels": [], "entities": []}, {"text": "With binary codes, finding approximate matches fora query token is as easy as finding all the database tokens that are at a Hamming distance of r or less from the query token in the binary code representation,.", "labels": [], "entities": []}, {"text": "When the binary codes are compact, this search can be done in a fraction of a second on directories containing millions of names on a simple processor.", "labels": [], "entities": []}, {"text": "Our contributions are: \u2022 We develop a novel data-driven technique for learning hash functions for mapping similar names to similar binary codes using a set of names in a given language/script (i.e. monolingual data).", "labels": [], "entities": []}, {"text": "We formulate the problem of learning hash functions as an optmization problem whose relaxation can be solved as a generalized Eigenvalue problem.", "labels": [], "entities": []}, {"text": "\u2022 We show that hash functions can also be learnt using bilingual data in the form of name equivalents in two languages.", "labels": [], "entities": []}, {"text": "We formulate the problem of learning hash functions as an optmization problem whose relaxation can be solved using Canonical Correlation Analysis.", "labels": [], "entities": []}, {"text": "(Section 2.2) \u2022 We develop new similarity measures for matching names (Section 3.1).", "labels": [], "entities": []}, {"text": "\u2022 We evaluate the two methods systematically and compare our performance against multiple baselines.", "labels": [], "entities": []}], "datasetContent": [{"text": "We now discuss the experiments we conducted to study the retrieval performance of the two hashingbased approaches developed in the previous sections.", "labels": [], "entities": []}, {"text": "Apart from evaluating the systems on test sets using different name directories, we were interested in comparing our systems with several baselines, understanding the effect of some of the choices we made (e.g. training data size, conjugate language) and comparative analysis of retrieval performance on queries of different complexity.", "labels": [], "entities": []}, {"text": "We tested the proposed hashing-based spelling correction algorithms on two test sets: \u2022 DUMBTIONARY: 1231 misspellings of various names from Dumbtionary 8 and a name directory consisting of about 550, 000 names gleaned from the English Wikipedia.", "labels": [], "entities": [{"text": "spelling correction", "start_pos": 37, "end_pos": 56, "type": "TASK", "confidence": 0.7227505147457123}, {"text": "DUMBTIONARY", "start_pos": 88, "end_pos": 99, "type": "METRIC", "confidence": 0.9737929701805115}]}, {"text": "Each of the misspellings had a correct spelling in the name directory.", "labels": [], "entities": []}, {"text": "\u2022 INTRANET: 200 misspellings of employees taken from the search logs of the intranet of a large organization and a name directory consisting of about 150, 000 employee names.", "labels": [], "entities": [{"text": "INTRANET", "start_pos": 2, "end_pos": 10, "type": "METRIC", "confidence": 0.9913954138755798}]}, {"text": "Each of the misspellings had a correct spelling in the name directory.: Edit distance of a misspelling from the correct name.", "labels": [], "entities": [{"text": "Edit distance", "start_pos": 72, "end_pos": 85, "type": "METRIC", "confidence": 0.9450723230838776}]}], "tableCaptions": [{"text": " Table 1: Edit distance of a misspelling from the correct  name.", "labels": [], "entities": [{"text": "Edit distance", "start_pos": 10, "end_pos": 23, "type": "METRIC", "confidence": 0.9355637729167938}]}, {"text": " Table 2: Precision@1 of the various systems on DUMB- TIONARY.", "labels": [], "entities": [{"text": "Precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9572492837905884}, {"text": "DUMB- TIONARY", "start_pos": 48, "end_pos": 61, "type": "DATASET", "confidence": 0.675179680188497}]}, {"text": " Table 3: Precision@1 for queries at various edit distances  on DUMBTIONARY.", "labels": [], "entities": [{"text": "Precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9534972906112671}]}, {"text": " Table 4: Precision@1 of the various systems on IN- TRANET.", "labels": [], "entities": [{"text": "Precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9529651403427124}, {"text": "IN- TRANET", "start_pos": 48, "end_pos": 58, "type": "DATASET", "confidence": 0.7473118106524149}]}, {"text": " Table 6: Percentage error reduction over the best base- line.", "labels": [], "entities": [{"text": "Percentage error reduction", "start_pos": 10, "end_pos": 36, "type": "METRIC", "confidence": 0.8724667231241862}]}, {"text": " Table 7: Precision@1 on DUMBTIONARY as a function  of training data size.", "labels": [], "entities": [{"text": "Precision@1", "start_pos": 10, "end_pos": 21, "type": "METRIC", "confidence": 0.9505822062492371}]}, {"text": " Table 8: Precision@1 on INTRANET as a function of  training data size.", "labels": [], "entities": [{"text": "Precision@1", "start_pos": 10, "end_pos": 21, "type": "METRIC", "confidence": 0.9586496551831564}, {"text": "INTRANET", "start_pos": 25, "end_pos": 33, "type": "DATASET", "confidence": 0.811259388923645}]}, {"text": " Table 9: Precision@1 of B-HASH for various conjugate  languages.", "labels": [], "entities": [{"text": "Precision@1", "start_pos": 10, "end_pos": 21, "type": "METRIC", "confidence": 0.9218419591585795}]}, {"text": " Table 11: Average response time in milliseconds (single  threaded system running on 2.86 GHz Intel Xeon Proces- sor).", "labels": [], "entities": [{"text": "Average response time", "start_pos": 11, "end_pos": 32, "type": "METRIC", "confidence": 0.8429361979166666}]}]}