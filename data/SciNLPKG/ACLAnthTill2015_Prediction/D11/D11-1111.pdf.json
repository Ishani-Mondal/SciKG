{"title": [{"text": "Computing Logical Form on Regulatory Texts *", "labels": [], "entities": []}], "abstractContent": [{"text": "The computation of logical form has been proposed as an intermediate step in the translation of sentences to logic.", "labels": [], "entities": [{"text": "translation of sentences", "start_pos": 81, "end_pos": 105, "type": "TASK", "confidence": 0.8687947789827982}]}, {"text": "Logical form encodes the resolution of scope ambiguities.", "labels": [], "entities": [{"text": "resolution of scope ambiguities", "start_pos": 25, "end_pos": 56, "type": "TASK", "confidence": 0.8083433657884598}]}, {"text": "In this paper, we describe experiments on a modest-sized corpus of regulation annotated with a novel variant of logical form, called abstract syntax trees (ASTs).", "labels": [], "entities": []}, {"text": "The main step in computing ASTs is to order scope-taking operators.", "labels": [], "entities": [{"text": "ASTs", "start_pos": 27, "end_pos": 31, "type": "TASK", "confidence": 0.9583310484886169}]}, {"text": "A learning model for ranking is adapted for this ordering.", "labels": [], "entities": []}, {"text": "We design features by studying the problem of comparing the scope of one operator to another.", "labels": [], "entities": []}, {"text": "The scope comparisons are used to compute ASTs, with an F-score of 90.6% on the set of ordering decisons.", "labels": [], "entities": [{"text": "ASTs", "start_pos": 42, "end_pos": 46, "type": "TASK", "confidence": 0.9863035082817078}, {"text": "F-score", "start_pos": 56, "end_pos": 63, "type": "METRIC", "confidence": 0.9987151622772217}]}], "introductionContent": [{"text": "argued fora level of logical form as a prelude to translating sentences to logic.", "labels": [], "entities": []}, {"text": "Just as a parse tree determines the constituent structure of a sentence, a logical form of a sentence represents one way of resolving scope ambiguities.", "labels": [], "entities": []}, {"text": "The level of logical form is an appealing layer of modularity; it allows us to take a step beyond parsing in studying scope phenomenon, and yet, avoid the open problem of fully translating sentences to logic.", "labels": [], "entities": []}, {"text": "Data-driven analyses of scope have been of interest in psycholinguistics) and more recently in NLP.", "labels": [], "entities": []}, {"text": "The focus has typically been on predicting the preferred scopal ordering of sentences with two quantifying determiners, for example, in the sentence \"every kid climbed a tree\".", "labels": [], "entities": []}, {"text": "In the related problem of translating database queries to logic, and consider the scope of adjectives in addition to determiners, for example the scope of \"cheapest\" in the noun phrase \"the cheapest flights from Boston to New York\".", "labels": [], "entities": [{"text": "translating database queries", "start_pos": 26, "end_pos": 54, "type": "TASK", "confidence": 0.8657774527867635}]}, {"text": "To our knowledge, empirical studies of scope have been restricted to phenomenon between and within noun phrases.", "labels": [], "entities": []}, {"text": "In this paper, we describe experiments on a novel annotation of scope phenomenon in regulatory texts -Section 610 of the Food and Drug Administration's Code of Federal Regulations 1 (FDA CFR).", "labels": [], "entities": [{"text": "Food and Drug Administration's Code of Federal Regulations 1 (FDA CFR)", "start_pos": 121, "end_pos": 191, "type": "DATASET", "confidence": 0.5786711339439664}]}, {"text": "Determiners, modals, negation, and verb phrase modifiers are the main scope-taking operators.", "labels": [], "entities": []}, {"text": "We have annotated 195 sentences with a variant of logical form, called abstract syntax trees (ASTs).", "labels": [], "entities": []}, {"text": "Our focus is on the problem of computing the AST, given a (variant of a) parse tree of a sentence.", "labels": [], "entities": [{"text": "AST", "start_pos": 45, "end_pos": 48, "type": "TASK", "confidence": 0.9659223556518555}]}, {"text": "The long term goal of this work is to assist in the translation of regulation to logic, for the application of conformance checking.", "labels": [], "entities": [{"text": "translation of regulation", "start_pos": 52, "end_pos": 77, "type": "TASK", "confidence": 0.9188288847605387}, {"text": "conformance checking", "start_pos": 111, "end_pos": 131, "type": "TASK", "confidence": 0.9117656648159027}]}, {"text": "The problem is to formally determine whether an organization conforms to regulation, by checking the organization's records using the logical translation of regulation.", "labels": [], "entities": []}, {"text": "Conformance checking has been of interest in a variety of regulatory contexts, and examples include privacy policy ( and business contracts;).", "labels": [], "entities": [{"text": "Conformance checking", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.8768511712551117}]}, {"text": "We now discuss some problems that arise in defin-ing logical form and the assumptions that we make to circumvent these problems.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: De Re scope distribution. An operator has de re  scope iff it outscopes the postcondition marker.", "labels": [], "entities": []}, {"text": " Table 2: De Re scope distribution for determiners.", "labels": [], "entities": [{"text": "determiners", "start_pos": 39, "end_pos": 50, "type": "TASK", "confidence": 0.9698010087013245}]}, {"text": " Table 3: De Re scope distribution for VP modifiers.", "labels": [], "entities": []}, {"text": " Table 4: De Re vs De Dicto classification. Average accu- racies over 10-fold cross-validation. The rows describe  the subset of observations considered, and the columns  describe the subset of features used.", "labels": [], "entities": [{"text": "De Re vs De Dicto classification", "start_pos": 10, "end_pos": 42, "type": "TASK", "confidence": 0.5163255234559377}, {"text": "accu- racies", "start_pos": 52, "end_pos": 64, "type": "METRIC", "confidence": 0.9587301214536031}]}, {"text": " Table 5: Ordering siblings and embedded operators.  Average accuracies over 10-fold cross-validation. The  columns describe the subset of features used.", "labels": [], "entities": [{"text": "accuracies", "start_pos": 61, "end_pos": 71, "type": "METRIC", "confidence": 0.9087556600570679}]}, {"text": " Table 6: Performance of the algorithms in computing the  ASTs. Averaged over 10-fold cross-validation. 195 ASTs  in total, an average of 8.6 preterminals per AST, and 1.8  operators per preterminal.", "labels": [], "entities": [{"text": "ASTs", "start_pos": 58, "end_pos": 62, "type": "TASK", "confidence": 0.9300239086151123}]}]}