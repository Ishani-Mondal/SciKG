{"title": [{"text": "Bootstrapped Named Entity Recognition for Product Attribute Extraction", "labels": [], "entities": [{"text": "Bootstrapped Named Entity Recognition", "start_pos": 0, "end_pos": 37, "type": "TASK", "confidence": 0.6174003928899765}, {"text": "Product Attribute Extraction", "start_pos": 42, "end_pos": 70, "type": "TASK", "confidence": 0.7394209106763204}]}], "abstractContent": [{"text": "We present a named entity recognition (NER) system for extracting product attributes and values from listing titles.", "labels": [], "entities": [{"text": "named entity recognition (NER)", "start_pos": 13, "end_pos": 43, "type": "TASK", "confidence": 0.8236658076445261}, {"text": "extracting product attributes and values from listing titles", "start_pos": 55, "end_pos": 115, "type": "TASK", "confidence": 0.7314179316163063}]}, {"text": "Information extraction from short listing titles present a unique challenge, with the lack of informative context and grammatical structure.", "labels": [], "entities": [{"text": "Information extraction from short listing titles", "start_pos": 0, "end_pos": 48, "type": "TASK", "confidence": 0.8615411023298899}]}, {"text": "In this work, we combine supervised NER with bootstrap-ping to expand the seed list, and output normalized results.", "labels": [], "entities": []}, {"text": "Focusing on listings from eBay's clothing and shoes categories, our bootstrapped NER system is able to identify new brands corresponding to spelling variants and typographical errors of the known brands, as well as identifying novel brands.", "labels": [], "entities": []}, {"text": "Among the top 300 new brands predicted, our system achieves 90.33% precision.", "labels": [], "entities": [{"text": "precision", "start_pos": 67, "end_pos": 76, "type": "METRIC", "confidence": 0.999262273311615}]}, {"text": "To output normalized attribute values, we explore several string comparison algorithms and found n-gram sub-string matching to work well in practice.", "labels": [], "entities": []}], "introductionContent": [{"text": "Traditional named entity recognition (NER) task has expanded beyond identifying people, location, and organization to book titles, email addresses, phone numbers, and protein names (.", "labels": [], "entities": [{"text": "named entity recognition (NER) task", "start_pos": 12, "end_pos": 47, "type": "TASK", "confidence": 0.8208192076001849}]}, {"text": "Recently there has been a surge of interest in extracting product attributes from online data due to the rapid growth of E-Commerce.", "labels": [], "entities": []}, {"text": "Current work in this domain focuses on mining product reviews and descriptions from retailer websites.", "labels": [], "entities": [{"text": "mining product reviews and descriptions from retailer websites", "start_pos": 39, "end_pos": 101, "type": "TASK", "confidence": 0.793679803609848}]}, {"text": "Such text data tend to belong and generate enough context for the target task (Brody and Elhadad 2010;;.", "labels": [], "entities": []}, {"text": "In this paper, we focus on mining short product listing titles, which poses unique challenges.", "labels": [], "entities": [{"text": "mining short product listing titles", "start_pos": 27, "end_pos": 62, "type": "TASK", "confidence": 0.7295659780502319}]}, {"text": "Short listings are typical in classified ads where each seller is given limited space (in terms of words) to describe the product.", "labels": [], "entities": []}, {"text": "On eBay, product listing titles cannot exceed 55 characters in length.", "labels": [], "entities": []}, {"text": "Similarly, on Craigslist and newspaper ads, the length of a listing title is restricted.", "labels": [], "entities": [{"text": "length", "start_pos": 48, "end_pos": 54, "type": "METRIC", "confidence": 0.9651907682418823}]}, {"text": "Extracting product attributes from such short titles faces the following challenges: \u2022 Loss of grammatical structure in short listings where many nouns are piled together.", "labels": [], "entities": [{"text": "Extracting product", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.8846679031848907}]}, {"text": "\u2022 Typographical errors, abbreviations, and acronyms that must be normalized to the standardized values.", "labels": [], "entities": [{"text": "Typographical", "start_pos": 2, "end_pos": 15, "type": "METRIC", "confidence": 0.8504751324653625}]}, {"text": "\u2022 Lack of contextual information to infer product attribute value.", "labels": [], "entities": []}, {"text": "It can be argued that the use of short listings simplifies the problem of attribute extraction, since short listings can be easily annotated and one can apply supervised learning approach to extract product attributes.", "labels": [], "entities": [{"text": "attribute extraction", "start_pos": 74, "end_pos": 94, "type": "TASK", "confidence": 0.7529339790344238}]}, {"text": "However, as the size of the data grows, obtaining labeled training set on the scale of millions of listings becomes very expensive.", "labels": [], "entities": []}, {"text": "In such a scenario, incorporating unlabeled examples in a semisupervised fashion to scale up the solution becomes a necessity rather than a luxury.", "labels": [], "entities": []}, {"text": "We formulate the product attribute extraction problem as a named entity recognition (NER) task and investigate supervised and semi-supervised approaches to this problem.", "labels": [], "entities": [{"text": "product attribute extraction problem", "start_pos": 17, "end_pos": 53, "type": "TASK", "confidence": 0.688390351831913}, {"text": "named entity recognition (NER) task", "start_pos": 59, "end_pos": 94, "type": "TASK", "confidence": 0.8218467235565186}]}, {"text": "In addition, we have investigated attribute discovery, and normalization to standardized values.", "labels": [], "entities": [{"text": "attribute discovery", "start_pos": 34, "end_pos": 53, "type": "TASK", "confidence": 0.7632120847702026}]}, {"text": "We use listings from eBay's clothing and shoes categories and develop an attribute extraction system for 4 attribute types.", "labels": [], "entities": []}, {"text": "We have 105, 335 listings from men's clothing category and 72, 628 listings from women's clothing category 1557 on eBay, constituting a dataset of 1, 380, 337 word tokens.", "labels": [], "entities": []}, {"text": "In the first part of this work, we outline a supervised learning approach to attribute value extraction where we train a sequential classifier and evaluate the extraction performance on a set of hand-labeled listings.", "labels": [], "entities": [{"text": "attribute value extraction", "start_pos": 77, "end_pos": 103, "type": "TASK", "confidence": 0.6451979875564575}]}, {"text": "Using maximum entropy and SVM as the base classifier (for classifying the individual word tokens), a hidden Markov model (HMM) is trained on the the probabilistic output of the base classifier, and a sequential label prediction is obtained using a Viterbi decoding.", "labels": [], "entities": []}, {"text": "We show a performance comparison of supervised HMM, MaxEnt, SVM, and CRF for this task.", "labels": [], "entities": []}, {"text": "In the second part of our work, to grow our seed list of attributes, we present a bootstrapped algorithm for attribute value discovery and normalization, honing in on one particular attribute (brand).", "labels": [], "entities": [{"text": "attribute value discovery", "start_pos": 109, "end_pos": 134, "type": "TASK", "confidence": 0.6579814652601877}]}, {"text": "The goal is given an initial list of unambiguous brands, we grow the seed dictionary by discovering context patterns that are often associated with such attribute type.", "labels": [], "entities": []}, {"text": "First, we automatically partition data into a training/test set by labeling word tokens in each listing using exact matching to entries in the dictionary.", "labels": [], "entities": []}, {"text": "Brand phrases that can be confused with other attributes, e.g. the word camel -both a brand and a color -will not be apart of this initial seed list to create the training set.", "labels": [], "entities": []}, {"text": "A classifier is then trained to learn context patterns surrounding the known brands from the training set, and is used to discover new brands from the test set.", "labels": [], "entities": []}, {"text": "Finally, for known attribute values, we normalize the results to match to words in our dictionary.", "labels": [], "entities": []}, {"text": "Normalizing the variants of a known brand to a single normalized output value is an important aspect of a successful information extraction system.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 117, "end_pos": 139, "type": "TASK", "confidence": 0.8317390084266663}]}, {"text": "To this end, we investigate several string similarity/distance measures for this task and found that n-gram substring similarity) yields accurate normalization results.", "labels": [], "entities": []}, {"text": "The main contribution of this work is a product attribute extraction system that addresses the unique problems of information extraction from short listing titles.", "labels": [], "entities": [{"text": "product attribute extraction", "start_pos": 40, "end_pos": 68, "type": "TASK", "confidence": 0.6366633276144663}, {"text": "information extraction from short listing titles", "start_pos": 114, "end_pos": 162, "type": "TASK", "confidence": 0.8583319286505381}]}, {"text": "We combine supervised NER with bootstrapping to expand the seed list, and investigate several methods to normalize the extracted results.", "labels": [], "entities": [{"text": "NER", "start_pos": 22, "end_pos": 25, "type": "TASK", "confidence": 0.9221881628036499}]}, {"text": "Our system has been tested on large-scale eBay listing datasets to demonstrate its effectiveness.", "labels": [], "entities": [{"text": "eBay listing datasets", "start_pos": 42, "end_pos": 63, "type": "DATASET", "confidence": 0.8149224718411764}]}], "datasetContent": [{"text": "In this section, we compare the generative model based and discriminative model classifiers for supervised NER tasks.", "labels": [], "entities": [{"text": "NER tasks", "start_pos": 107, "end_pos": 116, "type": "TASK", "confidence": 0.9072892367839813}]}, {"text": "Given 1, 000 manually tagged listings from the clothing and shoes category in eBay, we adopt a 90-10 split and use 90% of the data for training and 10% for testing.", "labels": [], "entities": []}, {"text": "Each listing title is tokenized into a sequence of word tokens, each manu-  ally assigned to one of the 5 tags: brand (B), size (S), color (C), garment type (G), and none of the above (NA).", "labels": [], "entities": []}, {"text": "In order to more accurately capture the boundary of multi-token attribute values, we further sub-divide each tag into 2 classes using -beg and -in sub-tags.", "labels": [], "entities": []}, {"text": "This step increases the number of classes that our classifier needs to handle from 5 to 9 classes given as follows: {B-beg, B-in, C-beg, C-in, S-beg, S-in, G-beg, G-in, and NA}.", "labels": [], "entities": []}, {"text": "shows a comparison of classification accuracy from 4 classifiers -SVM, MaxEnt, HMM, and CRF.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 37, "end_pos": 45, "type": "METRIC", "confidence": 0.8908444046974182}]}, {"text": "Supervised HMM, with the most simplistic feature, yields the baseline result at 83.82% accuracy.", "labels": [], "entities": [{"text": "baseline", "start_pos": 61, "end_pos": 69, "type": "METRIC", "confidence": 0.9609942436218262}, {"text": "accuracy", "start_pos": 87, "end_pos": 95, "type": "METRIC", "confidence": 0.9991323351860046}]}, {"text": "All the discriminative classifiers -CRF, MaxEnt, and SVM -outperform the baseline by HMM, with CRF improving on the baseline performance by the largest margin, concurring to other reports of its state-of-the-art results.", "labels": [], "entities": []}, {"text": "Indeed, when using exactly the same set of features as SVM and MaxEnt, the performance of CRF indeed drops to 89.11%, which is on par with that of SVM and MaxEnt.", "labels": [], "entities": []}, {"text": "However, when restricting to using dictionary and word identity features, the performance of CRF improves, indicating the importance of feature selection to such model.", "labels": [], "entities": []}, {"text": "SVM and MaxEnt yield similar performance with SVM slightly outperforming MaxEnt classifier by 1.6%.", "labels": [], "entities": [{"text": "SVM", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.9180943369865417}]}, {"text": "The incorporation of temporal smoothness constraint enforced by the Viterbi algorithm slightly improves the label sequence prediction (comparing row 1 and row 2 in).", "labels": [], "entities": []}, {"text": "The HMM implementation used in our experiments is the Hunpos tagger in (, which captures the state transitional probabilities using second-order Markov model.", "labels": [], "entities": []}, {"text": "For SVM, we use the popular libSVM package which produces probabilistic output from fitting a sigmoid function to the distances between samples and the separating hyperplane.", "labels": [], "entities": [{"text": "SVM", "start_pos": 4, "end_pos": 7, "type": "TASK", "confidence": 0.9628722071647644}]}, {"text": "We use linear kernel in our experiments, although RBF kernel with grid search for optimal parameters yield slightly superior 1562 performance, with a significantly higher computational cost.", "labels": [], "entities": []}, {"text": "The MaxEnt implementation used in our experiment is the version available from the NLTK toolkit, with BFGS optimizer.", "labels": [], "entities": [{"text": "NLTK toolkit", "start_pos": 83, "end_pos": 95, "type": "DATASET", "confidence": 0.9380475580692291}, {"text": "BFGS", "start_pos": 102, "end_pos": 106, "type": "METRIC", "confidence": 0.8688082695007324}]}, {"text": "For CRF, we use the linear-chain CRF model available from the Mallet package 1 .  In the first experiment, a set of 72, 628 listings from the women's clothing category is partitioned into a training set of 39, 448 listings and test set of 33, 180 listings based on an initial seed list of known 6, 312 women's apparel brands manually prepared by our fashion experts.", "labels": [], "entities": [{"text": "CRF", "start_pos": 4, "end_pos": 7, "type": "TASK", "confidence": 0.9688877463340759}, {"text": "Mallet package", "start_pos": 62, "end_pos": 76, "type": "DATASET", "confidence": 0.9756940603256226}]}, {"text": "The partitioning is done, as described in great detail above, in such away that known brands in the seed list do not exist in the 1563  test data (using exact string matching criterion).", "labels": [], "entities": [{"text": "1563  test data", "start_pos": 130, "end_pos": 145, "type": "DATASET", "confidence": 0.9486400882403055}]}, {"text": "We train a 5-class MaxEnt classifier and adopt the same feature sets as described in Section 4.1.3.", "labels": [], "entities": []}, {"text": "During the test phase, the classifier predicts the most likely brand attribute from each listing, where we are only interested in the predictions with confidence scores exceeding a set threshold.", "labels": [], "entities": []}, {"text": "We ranked order the predicted brands by their confidence scores (probabilities) and the top 300 unique brands are selected.", "labels": [], "entities": []}, {"text": "We manually verify the 300 predicted brands and found that 90.33% of the predicted brands are indeed names of designers or women's apparel stores (true positive), resulting a precision score of 90.33%.", "labels": [], "entities": [{"text": "precision score", "start_pos": 175, "end_pos": 190, "type": "METRIC", "confidence": 0.9812353253364563}]}, {"text": "Indeed, the precision score presented above is obtained using an exact matching criterion where partial extraction of a brand is regarded as amiss, i.e. our extractor extracts only Calvin when Calvin Klein is present in the listing (false positive).", "labels": [], "entities": [{"text": "precision score", "start_pos": 12, "end_pos": 27, "type": "METRIC", "confidence": 0.9744495451450348}]}, {"text": "The left column of shows examples of newly discovered brands from Women's clothing category.", "labels": [], "entities": []}, {"text": "Many of these newly discovered brands are indeed misspelled versions of the known brands in the seed dictionary.", "labels": [], "entities": []}, {"text": "The middle column of shows a set of Men's clothing brands learned automatically from a similar experiment conducted on a set of 105, 335 listings from Men's clothing category.", "labels": [], "entities": []}, {"text": "Using an ini- tial set of 3, 499 known brand seeds, we partition the dataset into a training set of 67, 307 listings and a test set of 38, 028 listings (for later reference we refer to this test set asset A).", "labels": [], "entities": []}, {"text": "Based on the top 200 predicted brands, 179 of which are verified as being true positive samples, resulting in 89.5% precision.", "labels": [], "entities": [{"text": "precision", "start_pos": 116, "end_pos": 125, "type": "METRIC", "confidence": 0.9991600513458252}]}, {"text": "We carryout a similar experiment to grow the seed dictionary for garment type, and are able to identify the top 60 new garment types.", "labels": [], "entities": []}, {"text": "54 out of 60 are true positive samples, resulting in precision score = 90%.", "labels": [], "entities": [{"text": "precision score", "start_pos": 53, "end_pos": 68, "type": "METRIC", "confidence": 0.9681096076965332}]}, {"text": "Examples of the newly discovered garment types are shown in (right column), where abbreviated forms of garment types such as jkt (short for jacket) and pjs (short for pajamas) are also discovered through our algorithm.", "labels": [], "entities": []}, {"text": "By adding these newly discovered attributes back to the dictionary, we can now re-evaluate our supervised NER system from section 4 with the grown seed list.", "labels": [], "entities": []}, {"text": "To this end, we construct 2 test sets from the same 105, 335 listings of Men's clothing category as used in Section 4.", "labels": [], "entities": []}, {"text": "Test set 1 is a set of 500 listings randomly sampled from the 38, 028-listing subset known not to contain any brands in the original brand seed dictionary (set A).", "labels": [], "entities": []}, {"text": "As seen in, an improvement of 9% inaccuracy results from the use of the grown seed list.", "labels": [], "entities": [{"text": "inaccuracy", "start_pos": 33, "end_pos": 43, "type": "METRIC", "confidence": 0.9832772016525269}]}, {"text": "Since this dataset is known to not contain any brands from the original brand seed dictionary, the addition of 200 new brands solely accounts for all the accuracy boost.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 154, "end_pos": 162, "type": "METRIC", "confidence": 0.999363362789154}]}, {"text": "Test set 2 is constructed slightly differently by randomly sampling 500 listings from the entire 105, 335 listings of Men's clothing category.", "labels": [], "entities": []}, {"text": "As seen in, a smaller improvement of 3.7% is observed.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Classification accuracy (%) on 9-class NER on  men's clothing dataset, comparing SVM, MaxEnt, super- vised HMM, and CRF.", "labels": [], "entities": [{"text": "Classification", "start_pos": 10, "end_pos": 24, "type": "METRIC", "confidence": 0.8576187491416931}, {"text": "accuracy", "start_pos": 25, "end_pos": 33, "type": "METRIC", "confidence": 0.846250593662262}, {"text": "men's clothing dataset", "start_pos": 57, "end_pos": 79, "type": "DATASET", "confidence": 0.6272195503115654}, {"text": "SVM", "start_pos": 91, "end_pos": 94, "type": "DATASET", "confidence": 0.7243229150772095}, {"text": "MaxEnt", "start_pos": 96, "end_pos": 102, "type": "DATASET", "confidence": 0.7323041558265686}]}, {"text": " Table 4: NER Accuracy on 2 test sets as the seed dictio- nary for brands grows. Results shown here are obtained  the same Men's clothing category dataset, as used to show  the supervised NER results in", "labels": [], "entities": [{"text": "NER", "start_pos": 10, "end_pos": 13, "type": "TASK", "confidence": 0.9500020146369934}, {"text": "Accuracy", "start_pos": 14, "end_pos": 22, "type": "METRIC", "confidence": 0.9666156768798828}, {"text": "Men's clothing category dataset", "start_pos": 123, "end_pos": 154, "type": "DATASET", "confidence": 0.5700735092163086}, {"text": "NER", "start_pos": 188, "end_pos": 191, "type": "TASK", "confidence": 0.8020555377006531}]}]}