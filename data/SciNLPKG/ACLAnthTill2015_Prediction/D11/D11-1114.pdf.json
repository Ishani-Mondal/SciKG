{"title": [{"text": "Exact Inference for Generative Probabilistic Non-Projective Dependency Parsing", "labels": [], "entities": [{"text": "Exact Inference", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.7958239316940308}, {"text": "Generative Probabilistic Non-Projective Dependency Parsing", "start_pos": 20, "end_pos": 78, "type": "TASK", "confidence": 0.6331106901168824}]}], "abstractContent": [{"text": "We describe a generative model for non-projective dependency parsing based on a simplified version of a transition system that has recently appeared in the literature.", "labels": [], "entities": [{"text": "non-projective dependency parsing", "start_pos": 35, "end_pos": 68, "type": "TASK", "confidence": 0.717880646387736}]}, {"text": "We then develop a dynamic programming parsing algorithm for our model, and derive an inside-outside algorithm that can be used for unsu-pervised learning of non-projective dependency trees.", "labels": [], "entities": [{"text": "dynamic programming parsing", "start_pos": 18, "end_pos": 45, "type": "TASK", "confidence": 0.6562600334485372}]}], "introductionContent": [{"text": "Dependency grammars have received considerable attention in the statistical parsing community in recent years.", "labels": [], "entities": [{"text": "Dependency grammars", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8522357642650604}, {"text": "statistical parsing", "start_pos": 64, "end_pos": 83, "type": "TASK", "confidence": 0.7985289990901947}]}, {"text": "These grammatical formalisms offer a good balance between structural expressivity and processing efficiency.", "labels": [], "entities": []}, {"text": "Most notably, when non-projectivity is supported, these formalisms can model crossing syntactic relations that are typical in languages with relatively free word order.", "labels": [], "entities": []}, {"text": "Recent work has reduced non-projective parsing to the identification of a maximum spanning tree in a graph ().", "labels": [], "entities": [{"text": "non-projective parsing", "start_pos": 24, "end_pos": 46, "type": "TASK", "confidence": 0.6510985493659973}]}, {"text": "An alternative to this approach is to use transitionbased parsing, where there is an incremental processing of a string with a model that scores transitions between parser states, conditioned on the parse history.", "labels": [], "entities": [{"text": "transitionbased parsing", "start_pos": 42, "end_pos": 65, "type": "TASK", "confidence": 0.5849674642086029}]}, {"text": "This paper focuses on the latter approach.", "labels": [], "entities": []}, {"text": "The above work on transition-based parsing has focused on greedy algorithms set in a statistical framework.", "labels": [], "entities": [{"text": "transition-based parsing", "start_pos": 18, "end_pos": 42, "type": "TASK", "confidence": 0.5789191126823425}]}, {"text": "More recently, dynamic programming has been successfully used for projective parsing).", "labels": [], "entities": [{"text": "projective parsing", "start_pos": 66, "end_pos": 84, "type": "TASK", "confidence": 0.6844701021909714}]}, {"text": "Dynamic programming algorithms for parsing (also known as chart-based algorithms) allow polynomial space representations of all parse trees fora given input string, even in cases where the size of this set is exponential in the length of the string itself.", "labels": [], "entities": [{"text": "parsing", "start_pos": 35, "end_pos": 42, "type": "TASK", "confidence": 0.9760002493858337}]}, {"text": "In combination with appropriate semirings, these packed representations can be exploited to compute many values of interest for machine learning, such as best parses and feature expectations.", "labels": [], "entities": []}, {"text": "In this paper we move one step forward with respect to and and present a polynomial dynamic programming algorithm for non-projective transitionbased parsing.", "labels": [], "entities": []}, {"text": "Our algorithm is coupled with a simplified version of the transition system from Attardi (2006), which has high coverage for the type of non-projective structures that appear in various treebanks.", "labels": [], "entities": []}, {"text": "Instead of an additional transition operation which permits swapping of two elements in the stack (), Attardi's system allows reduction of elements at non-adjacent positions in the stack.", "labels": [], "entities": []}, {"text": "We also present a generative probabilistic model for transition-based parsing.", "labels": [], "entities": [{"text": "transition-based parsing", "start_pos": 53, "end_pos": 77, "type": "TASK", "confidence": 0.6195795834064484}]}, {"text": "The implication for this, for example, is that one can now approach the problem of unsupervised learning of non-projective dependency structures within the transition-based framework.", "labels": [], "entities": []}, {"text": "Dynamic programming algorithms for nonprojective parsing have been proposed by, and, but they all run in exponential time in the 'gap degree' of the parsed structures.", "labels": [], "entities": []}, {"text": "To the best of our knowledge, this paper is the first to 1234 introduce a dynamic programming algorithm for inference with non-projective structures of unbounded gap degree.", "labels": [], "entities": []}, {"text": "The rest of this paper is organized as follows.", "labels": [], "entities": []}, {"text": "In \u00a72 and \u00a73 we outline the transition-based model we use, together with a probabilistic generative interpretation.", "labels": [], "entities": []}, {"text": "In \u00a74 we give the tabular algorithm for parsing, and in \u00a75 we discuss statistical inference using expectation maximization.", "labels": [], "entities": [{"text": "parsing", "start_pos": 40, "end_pos": 47, "type": "TASK", "confidence": 0.9778844714164734}]}, {"text": "We then discuss some other aspects of the work in \u00a76 and conclude in \u00a77.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: The number of non-projective relations of vari- ous degrees for several treebanks (training sets), as repor- ted by the parser of Attardi (2006). Deg. stands for 'de- gree.' The parser did not detect non-projective relations  of degree higher than 4.", "labels": [], "entities": []}]}