{"title": [{"text": "Evolving new lexical association measures using genetic programming", "labels": [], "entities": [{"text": "Evolving", "start_pos": 0, "end_pos": 8, "type": "TASK", "confidence": 0.9471470713615417}]}], "abstractContent": [{"text": "Automatic extraction of collocations from large corpora has been the focus of many research efforts.", "labels": [], "entities": []}, {"text": "Most approaches concentrate on improving and combining known lexical association measures.", "labels": [], "entities": []}, {"text": "In this paper, we describe a genetic programming approach for evolving new association measures, which is not limited to any specific language, corpus, or type of collocation.", "labels": [], "entities": []}, {"text": "Our preliminary experimental results show that the evolved measures outperform three known association measures.", "labels": [], "entities": []}], "introductionContent": [{"text": "A collocation is an expression consisting of two or more words that correspond to some conventional way of saying things).", "labels": [], "entities": []}, {"text": "Related to the term collocation is the term n-gram, which is used to denote any sequence of n words.", "labels": [], "entities": []}, {"text": "There are many possible applications of collocations: automatic language generation, word sense disambiguation, improving text categorization, information retrieval, etc.", "labels": [], "entities": [{"text": "automatic language generation", "start_pos": 54, "end_pos": 83, "type": "TASK", "confidence": 0.6730159819126129}, {"text": "word sense disambiguation", "start_pos": 85, "end_pos": 110, "type": "TASK", "confidence": 0.717489500840505}, {"text": "information retrieval", "start_pos": 143, "end_pos": 164, "type": "TASK", "confidence": 0.8131711483001709}]}, {"text": "As different applications require different types of collocations that are often not found in dictionaries, automatic extraction of collocations from large textual corpora has been the focus of much research in the last decade; see, for example, (.", "labels": [], "entities": [{"text": "automatic extraction of collocations from large textual corpora", "start_pos": 108, "end_pos": 171, "type": "TASK", "confidence": 0.8261482566595078}]}, {"text": "Automatic extraction of collocations is usually performed by employing lexical association measures (AMs) to indicate how strongly the words comprising an n-gram are associated.", "labels": [], "entities": [{"text": "lexical association measures (AMs)", "start_pos": 71, "end_pos": 105, "type": "METRIC", "confidence": 0.7301038950681686}]}, {"text": "However, the use of lexical AMs for the purpose of collocation extraction has reached a plateau; recent research in this field has focused on combining the existing AMs in the hope of improving the results ().", "labels": [], "entities": [{"text": "collocation extraction", "start_pos": 51, "end_pos": 73, "type": "TASK", "confidence": 0.8100316226482391}]}, {"text": "In this paper, we propose an approach for deriving new AMs for collocation extraction based on genetic programming.", "labels": [], "entities": [{"text": "collocation extraction", "start_pos": 63, "end_pos": 85, "type": "TASK", "confidence": 0.7997178137302399}]}, {"text": "A similar approach has been usefully applied in text mining) as well as in information retrieval ().", "labels": [], "entities": [{"text": "text mining", "start_pos": 48, "end_pos": 59, "type": "TASK", "confidence": 0.86017906665802}, {"text": "information retrieval", "start_pos": 75, "end_pos": 96, "type": "TASK", "confidence": 0.837421327829361}]}, {"text": "Genetic programming is an evolutionary computational technique designed to mimic the process of natural evolution for the purpose of solving complex optimization problems by stochastically searching through the whole space of possible solutions.", "labels": [], "entities": [{"text": "Genetic programming", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.6955965012311935}]}, {"text": "The search begins from an arbitrary seed of possible solutions (the initial population), which are then improved (evolved) through many iterations by employing the operations of selection, crossover, and mutation.", "labels": [], "entities": []}, {"text": "The process is repeated until a termination criterion is met, which is generally defined by the goodness of the best solution or the expiration of a time limit.", "labels": [], "entities": []}], "datasetContent": [{"text": "We use the previously described genetic programming approach to evolve AMs for extracting collocations consisting of three words from a corpus of 7008 Croatian legislative documents.", "labels": [], "entities": [{"text": "extracting collocations consisting of three words from a corpus of 7008 Croatian legislative documents", "start_pos": 79, "end_pos": 181, "type": "TASK", "confidence": 0.6000881046056747}]}, {"text": "Prior to this, words from the corpus were lemmatized and POS tagged.", "labels": [], "entities": []}, {"text": "Conjunctions, propositions, pronouns, interjections, and particles were treated as stop-words and tagged with a POS tag X.", "labels": [], "entities": []}, {"text": "N-grams starting or ending with a stopword, or containing a verb, were filtered out.", "labels": [], "entities": []}, {"text": "For evaluation purposes we had a human expert annotate 200 collocations and 200 noncollocations, divided into the evaluation and validation sample.", "labels": [], "entities": []}, {"text": "We considered an n-gram to be a collocation if it is a compound noun, terminological expression, or a proper name.", "labels": [], "entities": []}, {"text": "Note that we could have adopted any other definition of a collocation, since this definition is implicit in the samples provided.", "labels": [], "entities": []}, {"text": "In our experiments, we varied a number of genetic programming parameters.", "labels": [], "entities": []}, {"text": "The size of the initial population varied between 50 and 50 thousand randomly generated solutions.", "labels": [], "entities": []}, {"text": "To examine the effects of including some known AMs on the performance, the following AMs had a 50% chance of being included in the initial population: pointwise mutual information, the Dice coefficient, and the heuristic measure defined in): otherwise.", "labels": [], "entities": []}, {"text": "For the selection operator we used the well-known three-tournament selection.", "labels": [], "entities": []}, {"text": "The probability of mutation was chosen from the interval [0.0001, 0.3], and the parsimony factor \u03b7 from the interval [0, 0.05], thereby allowing a maximum of 5% loss of F 1 in favor of smaller solutions.", "labels": [], "entities": [{"text": "parsimony factor \u03b7", "start_pos": 80, "end_pos": 98, "type": "METRIC", "confidence": 0.9614110986391703}, {"text": "F 1", "start_pos": 169, "end_pos": 172, "type": "METRIC", "confidence": 0.9873275756835938}]}, {"text": "The maximal size of the tree in nodes was chosen from the interval.", "labels": [], "entities": []}, {"text": "After the F 1 score for the validation sample began dropping, the algorithm would continue for another k iterations before stopping.", "labels": [], "entities": [{"text": "F 1 score", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9715787172317505}]}, {"text": "The parameter k was chosen from the interval [10 4 , 10 7 ].", "labels": [], "entities": []}, {"text": "The experiments were run with 800 different random combinations of the aforementioned parameters.", "labels": [], "entities": []}], "tableCaptions": []}