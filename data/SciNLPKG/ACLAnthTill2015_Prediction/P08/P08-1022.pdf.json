{"title": [{"text": "Hypertagging: Supertagging for Surface Realization with CCG", "labels": [], "entities": [{"text": "Supertagging", "start_pos": 14, "end_pos": 26, "type": "TASK", "confidence": 0.96326744556427}, {"text": "Surface Realization", "start_pos": 31, "end_pos": 50, "type": "TASK", "confidence": 0.6958548277616501}, {"text": "CCG", "start_pos": 56, "end_pos": 59, "type": "DATASET", "confidence": 0.6773134469985962}]}], "abstractContent": [{"text": "In lexicalized grammatical formalisms, it is possible to separate lexical category assignment from the combinatory processes that make use of such categories, such as parsing and realization.", "labels": [], "entities": [{"text": "lexical category assignment", "start_pos": 66, "end_pos": 93, "type": "TASK", "confidence": 0.7183270454406738}, {"text": "parsing and realization", "start_pos": 167, "end_pos": 190, "type": "TASK", "confidence": 0.7338359554608663}]}, {"text": "We adapt techniques from supertagging-a relatively recent technique that performs complex lexical tagging before full parsing (Bangalore and Joshi, 1999; Clark, 2002)-for chart realization in OpenCCG, an open-source NLP toolkit for CCG.", "labels": [], "entities": [{"text": "chart realization", "start_pos": 171, "end_pos": 188, "type": "TASK", "confidence": 0.7238457798957825}]}, {"text": "We call this approach hypertagging, as it operates at a level \"above\" the syntax, tagging semantic representations with syntactic lexical categories.", "labels": [], "entities": []}, {"text": "Our results demonstrate that a hypertagger-informed chart realizer can achieve substantial improvements in realization speed (being approximately twice as fast) with superior realization quality.", "labels": [], "entities": [{"text": "hypertagger-informed chart realizer", "start_pos": 31, "end_pos": 66, "type": "TASK", "confidence": 0.7111211617787679}]}], "introductionContent": [{"text": "In lexicalized grammatical formalisms such as Lexicalized Tree Adjoining Grammar (, Combinatory Categorial Grammar and Head-Driven PhraseStructure Grammar, it is possible to separate lexical category assignment -the assignment of informative syntactic categories to linguistic objects such as words or lexical predicates -from the combinatory processes that make use of such categories -such as parsing and surface realization.", "labels": [], "entities": [{"text": "Lexicalized Tree Adjoining Grammar", "start_pos": 46, "end_pos": 80, "type": "TASK", "confidence": 0.6675970107316971}, {"text": "lexical category assignment -the assignment of informative syntactic categories to linguistic objects such as words or lexical predicates", "start_pos": 183, "end_pos": 320, "type": "TASK", "confidence": 0.6277836137696317}, {"text": "parsing and surface realization", "start_pos": 395, "end_pos": 426, "type": "TASK", "confidence": 0.6711821481585503}]}, {"text": "One way of performing lexical assignment is simply to hypothesize all possible lexical categories and then search for the best combination thereof, as in the CCG parser in or the chart realizer in.", "labels": [], "entities": [{"text": "lexical assignment", "start_pos": 22, "end_pos": 40, "type": "TASK", "confidence": 0.8528875708580017}]}, {"text": "A relatively recent technique for lexical category assignment is supertagging (), a preprocessing step to parsing that assigns likely categories based on word and part-ofspeech (POS) contextual information.", "labels": [], "entities": [{"text": "lexical category assignment", "start_pos": 34, "end_pos": 61, "type": "TASK", "confidence": 0.6346749862035116}]}, {"text": "Supertagging was dubbed \"almost parsing\" by these authors, because an oracle supertagger left relatively little work for their parser, while speeding up parse times considerably.", "labels": [], "entities": []}, {"text": "Supertagging has been more recently extended to a multitagging paradigm in CCG), leading to extremely efficient parsing with state-of-the-art dependency recovery.", "labels": [], "entities": [{"text": "parsing", "start_pos": 112, "end_pos": 119, "type": "TASK", "confidence": 0.9691391587257385}]}, {"text": "We have adapted this multitagging approach to lexical category assignment for realization using the CCG-based natural language toolkit OpenCCG.", "labels": [], "entities": [{"text": "lexical category assignment", "start_pos": 46, "end_pos": 73, "type": "TASK", "confidence": 0.7075440883636475}, {"text": "OpenCCG", "start_pos": 135, "end_pos": 142, "type": "DATASET", "confidence": 0.502497136592865}]}, {"text": "Instead of basing category assignment on linear word and POS context, however, we predict lexical categories based on contexts within a directed graph structure representing the logical form (LF) of a proposition to be realized.", "labels": [], "entities": [{"text": "category assignment", "start_pos": 18, "end_pos": 37, "type": "TASK", "confidence": 0.7727816700935364}]}, {"text": "Assigned categories are instantiated in OpenCCG's chart realizer where, together with a treebank-derived syntactic grammar and a factored language model, they constrain the English word-strings that are chosen to express the LF.", "labels": [], "entities": []}, {"text": "We have dubbed this approach hypertagging, as it operates at a level \"above\" the syntax, moving from semantic representations to syntactic categories.", "labels": [], "entities": []}, {"text": "We evaluate this hypertagger in two ways: first, we evaluate it as a tagger, where the hypertagger achieves high single-best (93.6%) and multitagging labelling accuracies (95.8-99.4% with category per lexical predication ratios ranging from 1.1 to 3.9).", "labels": [], "entities": []}, {"text": "Second, we compare a hypertagger-augmented version of OpenCCG's chart realizer with the preexisting chart realizer () that simply instantiates the chart with all possible CCG categories (subject to frequency cutoffs) for each input LF predicate.", "labels": [], "entities": []}, {"text": "The hypertagger-seeded realizer runs approximately twice as fast as the pre-existing OpenCCG realizer and finds a larger number of complete realizations, resorting less to chart fragment assembly in order to produce an output within a 15 second per-sentence time limit.", "labels": [], "entities": []}, {"text": "Moreover, the overall BLEU () and METEOR) scores, as well as numbers of exact string matches (as measured against to the original sentences in the CCGbank) are higher for the hypertagger-seeded realizer than for the preexisting realizer.", "labels": [], "entities": [{"text": "BLEU", "start_pos": 22, "end_pos": 26, "type": "METRIC", "confidence": 0.9989780187606812}, {"text": "METEOR", "start_pos": 34, "end_pos": 40, "type": "METRIC", "confidence": 0.9825138449668884}, {"text": "CCGbank", "start_pos": 147, "end_pos": 154, "type": "DATASET", "confidence": 0.9582468867301941}]}, {"text": "This paper is structured as follows: Section 2 provides background on chart realization in OpenCCG using a corpus-derived grammar.", "labels": [], "entities": [{"text": "chart realization", "start_pos": 70, "end_pos": 87, "type": "TASK", "confidence": 0.7393687665462494}]}, {"text": "Section 3 describes our hypertagging approach and how it is integrated into the realizer.", "labels": [], "entities": []}, {"text": "Section 4 describes our results, followed by related work in Section 5 and our conclusions in Section 6.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Hypertagger accuracy on Sections 00 and 23.  Results (in percentages) are for per-logical-predication  (PR) and per-whole-graph (GRPH) tagging accurcies.  Difference between best-only and baselines (b.l.) is sig- nificant (p < 2 \u00b7 10 \u221216 ) by McNemar's \u03c7 2 test.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 22, "end_pos": 30, "type": "METRIC", "confidence": 0.9564256072044373}]}, {"text": " Table 3: Hypertagger feature ablation testing results on  Section 00. The full feature set outperforms all others sig- nificantly (p < 2.2 \u00b7 10 \u221216 ). Results for per-predication  (PR) and per-whole-graph (GRPH) tagging percentage  accuracies are listed. (Key: no-POS=no POS features;  no-attr=no syntactico-semantic attributes such as tense  and number; non-lex=non-lexicalized features only (no  predication names).", "labels": [], "entities": []}, {"text": " Table 5: Realization quality metrics exact match, BLEU and METEOR, on complete realizations only and overall,  with and without hypertagger, on Sections 00 and 23.", "labels": [], "entities": [{"text": "BLEU", "start_pos": 51, "end_pos": 55, "type": "METRIC", "confidence": 0.9994304776191711}, {"text": "METEOR", "start_pos": 60, "end_pos": 66, "type": "METRIC", "confidence": 0.996619701385498}]}, {"text": " Table 4: Percentage of grammatically complete realiza- tions, runtimes for complete realizations and overall run- times, with and without hypertagger, on Sections 00 and  23.", "labels": [], "entities": []}]}