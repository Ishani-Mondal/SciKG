{"title": [{"text": "NLTK: The Natural Language Toolkit", "labels": [], "entities": []}], "abstractContent": [{"text": "NLTK, the Natural Language Toolkit, is a suite of open source program modules, tutorials and problem sets, providing ready-to-use computational linguistics courseware.", "labels": [], "entities": [{"text": "NLTK", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8977193236351013}]}, {"text": "NLTK covers symbolic and statistical natural language processing, and is interfaced to annotated corpora.", "labels": [], "entities": [{"text": "NLTK", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8632233738899231}, {"text": "statistical natural language processing", "start_pos": 25, "end_pos": 64, "type": "TASK", "confidence": 0.6005740910768509}]}, {"text": "Students augment and replace existing components, learn structured programming by example, and manipulate sophisticated models from the outset.", "labels": [], "entities": []}], "introductionContent": [{"text": "Teachers of introductory courses on computational linguistics are often faced with the challenge of setting up a practical programming component for student assignments and projects.", "labels": [], "entities": []}, {"text": "This is a difficult task because different computational linguistics domains require a variety of different data structures and functions, and because a diverse range of topics may need to be included in the syllabus.", "labels": [], "entities": []}, {"text": "A widespread practice is to employ multiple programming languages, where each language provides native data structures and functions that area good fit for the task at hand.", "labels": [], "entities": []}, {"text": "For example, a course might use Prolog for parsing, Perl for corpus processing, and a finite-state toolkit for morphological analysis.", "labels": [], "entities": [{"text": "parsing", "start_pos": 43, "end_pos": 50, "type": "TASK", "confidence": 0.9735565185546875}, {"text": "corpus processing", "start_pos": 61, "end_pos": 78, "type": "TASK", "confidence": 0.7504051029682159}]}, {"text": "By relying on the built-in features of various languages, the teacher avoids having to develop a lot of software infrastructure.", "labels": [], "entities": []}, {"text": "An unfortunate consequence is that a significant part of such courses must be devoted to teaching programming languages.", "labels": [], "entities": []}, {"text": "Further, many interesting projects span a variety of domains, and would require that multiple languages be bridged.", "labels": [], "entities": []}, {"text": "For example, a student project that involved syntactic parsing of corpus data from a morphologically rich language might involve all three of the languages mentioned above: Perl for string processing; a finite state toolkit for morphological analysis; and Prolog for parsing.", "labels": [], "entities": [{"text": "syntactic parsing of corpus", "start_pos": 45, "end_pos": 72, "type": "TASK", "confidence": 0.8184978663921356}, {"text": "parsing", "start_pos": 267, "end_pos": 274, "type": "TASK", "confidence": 0.970916748046875}]}, {"text": "It is clear that these considerable overheads and shortcomings warrant afresh approach.", "labels": [], "entities": []}, {"text": "Apart from the practical component, computational linguistics courses may also depend on software for in-class demonstrations.", "labels": [], "entities": [{"text": "computational linguistics", "start_pos": 36, "end_pos": 61, "type": "TASK", "confidence": 0.788819432258606}]}, {"text": "This context calls for highly interactive graphical user interfaces, making it possible to view program state (e.g. the chart of a chart parser), observe program execution step-by-step (e.g. execution of a finite-state machine), and even make minor modifications to programs in response to \"what if\" questions from the class.", "labels": [], "entities": []}, {"text": "Because of these difficulties it is common to avoid live demonstrations, and keep classes for theoretical presentations only.", "labels": [], "entities": []}, {"text": "Apart from being dull, this approach leaves students to solve important practical problems on their own, or to deal with them less efficiently in office hours.", "labels": [], "entities": []}, {"text": "In this paper we introduce anew approach to the above challenges, a streamlined and flexible way of organizing the practical component of an introductory computational linguistics course.", "labels": [], "entities": [{"text": "introductory computational linguistics course", "start_pos": 141, "end_pos": 186, "type": "TASK", "confidence": 0.7756921574473381}]}, {"text": "We describe NLTK, the Natural Language Toolkit, which we have developed in conjunction with a course we have taught at the University of Pennsylvania.", "labels": [], "entities": []}, {"text": "The Natural Language Toolkit is available under an open source license from http://nltk.sf.net/.", "labels": [], "entities": []}, {"text": "NLTK runs on all platforms supported by Python, including Windows, OS X, Linux, and Unix.", "labels": [], "entities": [{"text": "NLTK", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8908727765083313}]}], "datasetContent": [{"text": "We used NLTK as a basis for the assignments and student projects in CIS-530, an introductory computational linguistics class taught at the University of Pennsylvania.", "labels": [], "entities": []}, {"text": "CIS-530 is a graduate level class, although some advanced undergraduates were also enrolled.", "labels": [], "entities": [{"text": "CIS-530", "start_pos": 0, "end_pos": 7, "type": "DATASET", "confidence": 0.9763635396957397}]}, {"text": "Most students had a background in either computer science or linguistics (and occasionally both).", "labels": [], "entities": []}, {"text": "Students were required to complete five assignments, two exams, and a final project.", "labels": [], "entities": []}, {"text": "All class materials are available from the course website http://www.cis.upenn.edu/~cis530/.", "labels": [], "entities": []}, {"text": "The experience of using NLTK was very positive, both for us and for the students.", "labels": [], "entities": []}, {"text": "The students liked the fact that they could do interesting projects from the outset.", "labels": [], "entities": []}, {"text": "They also liked being able to run everything on their computer at home.", "labels": [], "entities": []}, {"text": "The students found the extensive documentation very helpful for learning to use the toolkit.", "labels": [], "entities": []}, {"text": "They found the interfaces defined by NLTK intuitive, and appreciated the ease with which they could combine different components to create complete NLP systems.", "labels": [], "entities": []}, {"text": "We did encounter a few difficulties during the semester.", "labels": [], "entities": []}, {"text": "One problem was finding large clean corpora that the students could use for their assignments.", "labels": [], "entities": []}, {"text": "Several of the students needed assistance finding suitable corpora for their final projects.", "labels": [], "entities": []}, {"text": "Another issue was the fact that we were actively developing NLTK during the semester; some modules were only completed one or two weeks before the students used them.", "labels": [], "entities": []}, {"text": "As a result, students who worked at home needed to download new versions of the toolkit several times throughout the semester.", "labels": [], "entities": []}, {"text": "Luckily, Python has extensive support for installation scripts, which made these upgrades simple.", "labels": [], "entities": []}, {"text": "The students encountered a couple of bugs in the toolkit, but none were serious, and all were quickly corrected.", "labels": [], "entities": []}], "tableCaptions": []}