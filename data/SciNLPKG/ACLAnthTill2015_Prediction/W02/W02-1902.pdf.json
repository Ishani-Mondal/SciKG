{"title": [{"text": "Multilingual Question Answering with High Portability on Relational Databases", "labels": [], "entities": [{"text": "Multilingual Question Answering", "start_pos": 0, "end_pos": 31, "type": "TASK", "confidence": 0.7084589103857676}]}], "abstractContent": [{"text": "This paper describes a highly-portable multilingual question answering system on multiple relational databases.", "labels": [], "entities": [{"text": "question answering", "start_pos": 52, "end_pos": 70, "type": "TASK", "confidence": 0.7098049819469452}]}, {"text": "We apply semantic category and pattern-based grammars, into natural language interfaces to relational databases.", "labels": [], "entities": []}, {"text": "Lexico-semantic pattern (LSP) and multi-level grammars achieve portability of languages, domains, and DBMSs.", "labels": [], "entities": []}, {"text": "The LSP-based linguistic processing does not require deep analysis that sacrifices robustness and flexibility, but can handle delicate natural language questions.", "labels": [], "entities": [{"text": "LSP-based linguistic processing", "start_pos": 4, "end_pos": 35, "type": "TASK", "confidence": 0.7119936943054199}]}, {"text": "To maximize portability, we drive various dependent parts into two tight corners, i.e., language-dependent part into front linguistic analysis, and domain-dependent and database-dependent parts into backend SQL query generation.", "labels": [], "entities": [{"text": "front linguistic analysis", "start_pos": 117, "end_pos": 142, "type": "TASK", "confidence": 0.6020598212877909}, {"text": "SQL query generation", "start_pos": 207, "end_pos": 227, "type": "TASK", "confidence": 0.6699182391166687}]}, {"text": "Experiments with 779 queries generate only constraint-missing errors, which can be easily corrected by adding new terms, of 2.25% for English and 5.67% for Korean.", "labels": [], "entities": []}], "introductionContent": [{"text": "As a natural language (NL) interface, question answering on relational databases 1 allows users to access information stored in databases by requests in natural language, and generates as output natural language sentences, tables, and graphical representation.", "labels": [], "entities": [{"text": "question answering", "start_pos": 38, "end_pos": 56, "type": "TASK", "confidence": 0.8281908631324768}]}, {"text": "The NL interface can be combined with other interfaces to databases: a 1 We also call it NLIDB (Natural Language Interface to DataBases).", "labels": [], "entities": []}, {"text": "formal query language interface directly using SQL, a form-based interface with fields to input query patterns, and a graphical interface using a keyboard and a mouse to access tables.", "labels": [], "entities": []}, {"text": "The NL interface does not require the learning of formal query languages, and it easily represents negation and quantification, and provides discourse processing.", "labels": [], "entities": []}, {"text": "The use of natural language has both advantages and disadvantages.", "labels": [], "entities": []}, {"text": "Including general NLP problems such as quantifier scoping, PP attachment, anaphora resolution, and elliptical questions, current NLIDB has many shortcomings: First, as a frequent complaint, it is difficult for users to understand which kinds of questions are actually allowed or not.", "labels": [], "entities": [{"text": "PP attachment", "start_pos": 59, "end_pos": 72, "type": "TASK", "confidence": 0.8422233164310455}, {"text": "anaphora resolution", "start_pos": 74, "end_pos": 93, "type": "TASK", "confidence": 0.7096486985683441}]}, {"text": "Second, the user assumes that the system is intelligent; he or she thinks NLIDB has commonsense, and can deduce facts.", "labels": [], "entities": [{"text": "NLIDB", "start_pos": 74, "end_pos": 79, "type": "DATASET", "confidence": 0.8964643478393555}]}, {"text": "Finally, users do not know whether a failure is caused by linguistic coverage or by conceptual mismatch.", "labels": [], "entities": []}, {"text": "Nevertheless, natural language does not need training in any communication media or predefined access patterns.", "labels": [], "entities": []}, {"text": "NLIDB systems, one of the first applications of natural language processing, including \"LUNAR\" were developed from the 1970s.", "labels": [], "entities": [{"text": "NLIDB", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.9212538003921509}, {"text": "natural language processing", "start_pos": 48, "end_pos": 75, "type": "TASK", "confidence": 0.6881575783093771}]}, {"text": "In the 1980s, research focuses on intermediate representation and portability, and attempts to interface with various systems.", "labels": [], "entities": []}, {"text": "CHAT-80 transforms an English query into PROLOG representation, and ASK teaches users new words and concepts.", "labels": [], "entities": [{"text": "PROLOG representation", "start_pos": 41, "end_pos": 62, "type": "TASK", "confidence": 0.6817474961280823}]}, {"text": "From 1990s, commercial systems based on linguistic theories such as GPSG, HPSG, and PATR-II appear, and some systems attempt to semi-automatically construct domain knowledge.", "labels": [], "entities": [{"text": "GPSG", "start_pos": 68, "end_pos": 72, "type": "DATASET", "confidence": 0.9117686748504639}, {"text": "HPSG", "start_pos": 74, "end_pos": 78, "type": "DATASET", "confidence": 0.8325794339179993}]}, {"text": "MASQUE/SQL uses a semi-automatic domain editor, and LOQUI, a commercial system, adopts GPSG grammar.", "labels": [], "entities": []}, {"text": "Meanwhile, Demers introduces a lexicalist approach for natural language to SQL translation, and as the CoBase project of UCLA, Meng and Chu combine information retrieval and a natural language interface.", "labels": [], "entities": [{"text": "SQL translation", "start_pos": 75, "end_pos": 90, "type": "TASK", "confidence": 0.8163361251354218}]}, {"text": "The major problems of the previous systems are as follows.", "labels": [], "entities": []}, {"text": "First, they do not effectively reflect the vocabulary used in the description of database attributes into linguistic processing.", "labels": [], "entities": []}, {"text": "Second, they require users to pose natural language queries atone time using a single sentence rather than give the flexibility by dialog-based query processing.", "labels": [], "entities": []}, {"text": "The discordance between attribute vocabulary and linguistic processing vocabulary causes the portability problem of domain knowledge from knowledge acquisition bottleneck; the systems need extensive efforts by some experts who are highly experienced in linguistics as well as in the domain and the task.", "labels": [], "entities": []}, {"text": "Androutsopoulos [2], which are mainly referenced for this section, classifies NLIDB approaches into the following four major categories.", "labels": [], "entities": []}, {"text": "Pattern matching systems: Some of the early systems exclude linguistic processing.", "labels": [], "entities": [{"text": "Pattern matching", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.7785187661647797}]}, {"text": "They are easy to implement, but have many critical limitations caused by linguistic shallowness.", "labels": [], "entities": []}], "datasetContent": [{"text": "Pursuing high portability in languages, domains, and DBMSs, we implemented a multi-lingual question answering system on relational databases.", "labels": [], "entities": [{"text": "question answering", "start_pos": 91, "end_pos": 109, "type": "TASK", "confidence": 0.7001683264970779}]}, {"text": "The target languages are English and Korean, which are completely different in linguistic structures.", "labels": [], "entities": []}, {"text": "Our system dealt with two domains for Korean: first, an audio-video product database with 418 entries automatically populated from an information extraction system, and second, a price comparison database with 1964 entries and multiple schemas from a BestBuyer 12 comparison shopping mall.", "labels": [], "entities": [{"text": "BestBuyer 12 comparison shopping mall", "start_pos": 251, "end_pos": 288, "type": "DATASET", "confidence": 0.9217469692230225}]}, {"text": "For multiple languages, we manually translated all the Korean entries into English.", "labels": [], "entities": []}, {"text": "Oracle 8.0.5 and MySQL 3.23.22 were used as two different DBMSs.", "labels": [], "entities": []}, {"text": "Our system processes the user question from a Web browser, and produces an SQL query.", "labels": [], "entities": []}, {"text": "Next, CGI (Common Gateway Interface) sends the query to DBMSs.", "labels": [], "entities": []}, {"text": "For the result retrieved from databases, the user can ask anew question or make a context-based refinement of the question.", "labels": [], "entities": []}, {"text": "For training, five graduate students prepare 192 questions for each language (see appendix A).", "labels": [], "entities": []}, {"text": "The questions include negation, quantifiers, multiple conjunctions, multiple question types, various lexicography, user-defined terms, synonyms, and many value operators.", "labels": [], "entities": []}, {"text": "For the test, we gather 779 unique queries (355 for English and 424 for Korean) and 111 refinement queries (19 for English and 92 for Korean) from the system log for about four months (see appendix A and B).", "labels": [], "entities": []}, {"text": "Our system does not fail for the questions because of the LSP-based robustness , but some SQL queries with wrong constraints (2.25% for English) are caused by undefined terms, such as \"wide TV\" and \"voice multiplex,\" and by an illegal unit such as \"cm\" and \"mm.\"", "labels": [], "entities": []}, {"text": "In Korean, the rate of wrong constraints rises to 5.67% that are mainly caused by the irregular transiterations of the foreign words, for example, \"\ud154\ub808\ube44,\" \"\ud154\ub808\ube44\uc804,\" \"\ud154\ub808\ube44\uc804,\" \"\ud14c\ub808\ube44,\" \"\ud14c\ub808\ube44\uc83c,\" \"\ud14c\ub808\ube44\uc83c,\" \"\ud2f0\ube0c\uc774,\" and \"\ud2f0\ube44\" for \"TV.\"", "labels": [], "entities": []}, {"text": "However, all the above errors can be easily corrected by adding new terms.", "labels": [], "entities": []}, {"text": "This phenomenon is also true for multi-level grammars.", "labels": [], "entities": []}, {"text": "For anew linguistic expression, we simply decompose it and disperse the components throughout the grammars.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 4.1  shows the current linguistic resources  constructed from the training set for both  languages.", "labels": [], "entities": []}]}