{"title": [{"text": "A Complete, Efficient Sentence-Realization Algorithm for Unification Grammar", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper describes an efficient sentence-realization algorithm that is complete fora very general class of unification grammars.", "labels": [], "entities": []}, {"text": "Under fairly modest constraints on the grammar, the algorithm is shown to have polynomial time complexity for generation of sentences whose logical form exactly matches the goal logical form.", "labels": [], "entities": []}, {"text": "The algorithm can be extended to handle what is arguably the most important subcase of the logical-form equivalence problem, permutation of logical conjunction.", "labels": [], "entities": []}, {"text": "With this extension the algorithm is no longer polynomial, but it seems to be about as efficient as the nature of the problem permits.", "labels": [], "entities": []}], "introductionContent": [{"text": "We describe an efficient sentence-realization algorithm that is complete fora very general class of unification grammars.", "labels": [], "entities": []}, {"text": "Given a goal consisting of a category and a logical form (LF), our algorithm will generate every string classified by the grammar as having the goal category and goal LF.", "labels": [], "entities": []}, {"text": "The only constraint required for completeness is a weakened version of Shieber's (1988) semantic monotonicity property.", "labels": [], "entities": []}, {"text": "Under fairly modest constraints on the grammar, the algorithm is shown to have polynomial time complexity for strict generation; i.e., not addressing LF equivalence.", "labels": [], "entities": []}, {"text": "The exact polynomial depends on details of the grammar, and we discuss the likely order of the polynomial for English.", "labels": [], "entities": []}, {"text": "We extend the algorithm to be complete for the generation of sentences whose LF is equivalent to a goal LF under permutation of \u00d2-ary logical conjunction.", "labels": [], "entities": []}, {"text": "This is arguably the most important subcase of what has come to be called \"the logical-form equivalence problem\".", "labels": [], "entities": []}, {"text": "Allowing permutation of conjunction makes the generation problem inherently worst-case exponential, but our algorithm seems to be about as efficient as one could expect under the circumstances.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}