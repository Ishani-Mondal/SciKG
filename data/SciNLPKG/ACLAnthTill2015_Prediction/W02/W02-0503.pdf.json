{"title": [{"text": "Acquisition System for Arabic Noun Morphology", "labels": [], "entities": []}], "abstractContent": [{"text": "Many papers have discussed different aspects of Arabic verb morphology.", "labels": [], "entities": [{"text": "Arabic verb morphology", "start_pos": 48, "end_pos": 70, "type": "TASK", "confidence": 0.6522427101929983}]}, {"text": "Some of them used patterns; others used patterns and affixes.", "labels": [], "entities": []}, {"text": "But very few have discussed Arabic noun morphology particularly for nouns that are not derived from verbs.", "labels": [], "entities": [{"text": "Arabic noun morphology", "start_pos": 28, "end_pos": 50, "type": "TASK", "confidence": 0.6500174800554911}]}, {"text": "In this paper we describe a learning system that can analyze Arabic nouns to produce their morphological information and their paradigms with respect to both gender and number using a rule base that uses suffix analysis as well as pattern analysis.", "labels": [], "entities": []}, {"text": "The system utilizes user-feedback to classify the noun and identify the group that it belongs to.", "labels": [], "entities": []}], "introductionContent": [{"text": "A morphology system is the backbone of a natural language processing system.", "labels": [], "entities": []}, {"text": "No application in this field can survive without a good morphology system to support it.", "labels": [], "entities": []}, {"text": "The Arabic language has its own features that are not found in other languages.", "labels": [], "entities": []}, {"text": "That is why many researchers have worked in this area.", "labels": [], "entities": []}, {"text": "present an algorithm to generate the root and the pattern of a given Arabic word.", "labels": [], "entities": []}, {"text": "The main concept in the algorithm is to locate the position of the root's letters in the pattern and examine the letters in the same position in a given word to see whether the tri graph forms a valid Arabic root or not.", "labels": [], "entities": []}, {"text": "Al-Shalabi (1998) developed a system that removes the longest possible prefix from the word where the three letters of the root must lie somewhere in the first four or five characters of the remainder.", "labels": [], "entities": []}, {"text": "Then he generates some combinations and checks each one of them with all the roots in the file.", "labels": [], "entities": []}, {"text": "Al-Shalabi reduced the processing, but he discussed this from point of view of verbs not nouns.", "labels": [], "entities": []}, {"text": "Anne Roeck and Waleed Al-Fares (2000) developed a clustering algorithm for Arabic words sharing the same verbal root.", "labels": [], "entities": []}, {"text": "They used root-based clusters to substitute for dictionaries in indexing for information retrieval.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 77, "end_pos": 98, "type": "TASK", "confidence": 0.7689690291881561}]}, {"text": "described anew technique for constructing finite-state transducers that involves reapplying a regular-expression compiler to its own output.", "labels": [], "entities": []}, {"text": "They implemented the system in an algorithm called compilereplace.", "labels": [], "entities": [{"text": "compilereplace", "start_pos": 51, "end_pos": 65, "type": "DATASET", "confidence": 0.8517475724220276}]}, {"text": "This technique has proved useful for handling non-concatenate phenomena, and they demonstrate it on Malay full-stem reduplication and Arabic stem inter-digitations.", "labels": [], "entities": []}, {"text": "Most verbs in the Arabic language follow clear rules that define their morphology and generate their paradigms.", "labels": [], "entities": []}, {"text": "Those nouns that are not derived from roots do not seem to follow a similar set of well-defined rules.", "labels": [], "entities": []}, {"text": "Instead there are groups showing family resemblances.", "labels": [], "entities": []}, {"text": "We believe that nouns in Arabic that are not derived from roots are governed not only by phonological rules but by lexical patterns that must be identified and stored for each noun.", "labels": [], "entities": []}, {"text": "Like irregular verbs in English their forms are determined by history and etymology, not just phonology.", "labels": [], "entities": []}, {"text": "Among many other examples, Pinker (1999) points to the survival of past forms became for become and overcame for overcome, modeled on came for come, while succumb, with the same sound pattern, has a regular past form succumbed.", "labels": [], "entities": []}, {"text": "The same kinds of phenomena are especially apparent for proper nouns in Arabic derived from Indian and Persian names.", "labels": [], "entities": []}, {"text": "Pinker uses examples like this, as well as emerging research in neurophysiology, to argue for the coexistence of phonological rules and lexical storage of English verb patterns.", "labels": [], "entities": []}, {"text": "We believe that further work in Arabic computational linguistics requires the development of a pattern bank for nouns.", "labels": [], "entities": []}, {"text": "This paper describes the tool that we have built for this purpose.", "labels": [], "entities": []}, {"text": "While the set of patterns for common nouns in Arabic may soon be established, newspapers and other dynamic sources of language will always contain new proper names, so we expect our tool to be a permanent part of our system, even though we may need it less often as time goes on.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 4. First Cycle to Generate Question", "labels": [], "entities": [{"text": "Generate Question", "start_pos": 25, "end_pos": 42, "type": "TASK", "confidence": 0.754483163356781}]}, {"text": " Table 5. Second Cycle to Generate Question", "labels": [], "entities": [{"text": "Generate Question", "start_pos": 26, "end_pos": 43, "type": "TASK", "confidence": 0.7641623914241791}]}, {"text": " Table 7. Suffix / Pattern / Noun Morphology  Analyzer", "labels": [], "entities": [{"text": "Suffix / Pattern / Noun Morphology  Analyzer", "start_pos": 10, "end_pos": 54, "type": "TASK", "confidence": 0.8174411484173366}]}, {"text": " Table 8. Noun Classifier Methods", "labels": [], "entities": [{"text": "Noun Classifier", "start_pos": 10, "end_pos": 25, "type": "TASK", "confidence": 0.6008000671863556}]}]}