{"title": [{"text": "Disambiguating Noun Compounds with Latent Semantic Indexing", "labels": [], "entities": []}], "abstractContent": [{"text": "Technical terms in text often appear as noun compounds, a frequently occurring yet highly ambiguous construction whose interpretation relies on extra-syntactic information.", "labels": [], "entities": []}, {"text": "Several statistical methods for disambiguating compounds have been reported in the literature, often with quite impressive results.", "labels": [], "entities": []}, {"text": "However, a striking feature of all these approaches is that they rely on the existence of previously seen un-ambiguous compounds, meaning they are prone to the problem of sparse data.", "labels": [], "entities": []}, {"text": "This difficulty has been overcome somewhat through the use of hand-crafted knowledge resources to collect statistics on \"concepts\" rather than noun tokens , but domain-independence has been sacrificed by doing so.", "labels": [], "entities": []}, {"text": "We report hereon work investigating the application of Latent Semantic Indexing to provide a robust domain-independent source of the extra-syntactic knowledge necessary for noun compound disambiguation.", "labels": [], "entities": [{"text": "noun compound disambiguation", "start_pos": 173, "end_pos": 201, "type": "TASK", "confidence": 0.7825700640678406}]}], "introductionContent": [{"text": "Noun compounds area frequently encountered construction in natural language processing (NLP), consisting of a sequence of two or more nouns which together function syntactically as a noun.", "labels": [], "entities": [{"text": "natural language processing (NLP)", "start_pos": 59, "end_pos": 92, "type": "TASK", "confidence": 0.7584766447544098}]}, {"text": "In English, compounds consisting of two nouns are predominantly right-headed.", "labels": [], "entities": []}, {"text": "However, compound construction is recursive and both the modifier and the head can themselves be compounds, resulting in structural ambiguities.", "labels": [], "entities": []}, {"text": "Consider the following pair of noun compounds: 1.", "labels": [], "entities": []}, {"text": "(a) (cantilever (swing wing)) (b) ((information retrieval) experiment) Both compounds consist of the same parts-ofspeech, yet the structures differ: (1a) is rightbranching, while (1b) is left-branching.", "labels": [], "entities": []}, {"text": "Phrase structure grammar rules for noun compounds are often similar inform to N \u2192 N N.", "labels": [], "entities": [{"text": "Phrase structure grammar", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.9235504269599915}]}, {"text": "This rule is applied once to two-word noun compounds, and recursively in the case of longer compounds; therefore the syntax of compounds longer than two words is underconstrained by grammar, resulting in a syntactic ambiguity which grows exponentially with the length of the compound.", "labels": [], "entities": []}, {"text": "Besides causing problems for syntactic parsers, the ambiguities inherent in these structures pose difficulties for NLP systems which attempt to analyse the underlying semantic relationships present in compound technical terms.", "labels": [], "entities": []}, {"text": "Often, the first step in such analyses is to decompose terms into nested modifier-head pairs.", "labels": [], "entities": []}, {"text": "However, such a decomposition is non-trivial for the case of compounds consisting of three or more nouns due to the structural ambiguity of these constructions.", "labels": [], "entities": []}, {"text": "The identification of modifier-head pairs in compounds also has applications within the field of information retrieval (IR).", "labels": [], "entities": [{"text": "information retrieval (IR)", "start_pos": 97, "end_pos": 123, "type": "TASK", "confidence": 0.8758418560028076}]}, {"text": "Several studies have shown that extracting modifier-head pairs from text and including these as compound indexing terms can improve recall and precision.", "labels": [], "entities": [{"text": "recall", "start_pos": 132, "end_pos": 138, "type": "METRIC", "confidence": 0.9966206550598145}, {"text": "precision", "start_pos": 143, "end_pos": 152, "type": "METRIC", "confidence": 0.9962869882583618}]}, {"text": "Identification of these noun modifier relationships is also important for terminology translation.", "labels": [], "entities": [{"text": "terminology translation", "start_pos": 74, "end_pos": 97, "type": "TASK", "confidence": 0.9419786632061005}]}, {"text": "However, obtaining correct modifier-head pairs is once again hampered by \"the notorious ambiguity of nominal compounds\".", "labels": [], "entities": []}, {"text": "To summarise, the syntactic disambiguation of noun compounds is important for several NLP applications; however, disambiguation is difficult because attachments within compounds are not syntactically governed.", "labels": [], "entities": [{"text": "syntactic disambiguation of noun compounds", "start_pos": 18, "end_pos": 60, "type": "TASK", "confidence": 0.833337950706482}]}, {"text": "Clearly, then, this lack of syntactic constraints forces us to consider the use of extra-syntactic factors in the process of disambiguation.", "labels": [], "entities": []}, {"text": "The work reported here describes an approach for automatically deriving a syntactical analysis of noun compounds by adapting Latent Semantic Indexing, a well-established IR technique, to supply this extra-syntactic information.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Characteristics of the datasets.", "labels": [], "entities": []}, {"text": " Table 3: Percentage disambiguation accuracy on each collection. The Baseline row shows the  accuracy of always choosing a left-branching analysis. Highest accuracies for the Adjacency and  Dependency algorithms are shown, with the corresponding number of SVD factors in parentheses.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 36, "end_pos": 44, "type": "METRIC", "confidence": 0.9616724252700806}, {"text": "accuracy", "start_pos": 93, "end_pos": 101, "type": "METRIC", "confidence": 0.9993909597396851}]}]}