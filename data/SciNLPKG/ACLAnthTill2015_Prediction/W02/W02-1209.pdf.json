{"title": [{"text": "Decomposition for ISO/IEC 10646 Ideographic Characters", "labels": [], "entities": [{"text": "ISO/IEC 10646 Ideographic Characters", "start_pos": 18, "end_pos": 54, "type": "DATASET", "confidence": 0.6613079061110815}]}], "abstractContent": [{"text": "Ideograph characters are often formed by some smaller functional units, which we call character components.", "labels": [], "entities": []}], "introductionContent": [{"text": "ISO/IEC 10646) in its current version, contains more than 27,000 Han characters, or ideograph characters as it is called, in its basic multilingual plane and another 40,000 in the second plane.", "labels": [], "entities": [{"text": "ISO/IEC 10646)", "start_pos": 0, "end_pos": 14, "type": "DATASET", "confidence": 0.883753526210785}]}, {"text": "The complete set of ideograph repertoire includes Han characters in all national/regional standards as well as all characters from the Kang Xi Dictionary( ) and other major references.", "labels": [], "entities": [{"text": "Kang Xi Dictionary", "start_pos": 135, "end_pos": 153, "type": "DATASET", "confidence": 0.8408235907554626}]}, {"text": "In almost all the current encoding systems including ISO 10646 and Unicode, each Han character is treated as a separate unique symbol and given a separate code point.", "labels": [], "entities": []}, {"text": "This single character encoding method has some serious drawbacks.", "labels": [], "entities": [{"text": "character encoding", "start_pos": 12, "end_pos": 30, "type": "TASK", "confidence": 0.7383002042770386}]}, {"text": "Consider most of the alphabet-based languages, such as English, even though new words are created quite frequently, the alphabet itself is quite stable.", "labels": [], "entities": []}, {"text": "Thus the newly adopted words do not have any impact on coding standards.", "labels": [], "entities": []}, {"text": "When new Han characters are created, they must be assigned anew code point, thus all codesets supporting Han characters must leave space for extension.", "labels": [], "entities": []}, {"text": "As there is no formal rule to limit the formation of new Han characters, the standardization process for code point assignment can be potentially endless.", "labels": [], "entities": [{"text": "code point assignment", "start_pos": 105, "end_pos": 126, "type": "TASK", "confidence": 0.6625758012135824}]}, {"text": "On the other hand, new Han characters are almost always be created using some existing character components which can be existing radicals, characters proper, or pure components which are not used alone as characters.", "labels": [], "entities": []}, {"text": "If we can use coded components to describe anew character, we can potentially eliminate the standardization process.", "labels": [], "entities": [{"text": "standardization", "start_pos": 92, "end_pos": 107, "type": "TASK", "confidence": 0.9510863423347473}]}, {"text": "Han characters can be considered as a two dimensional encoding of components.", "labels": [], "entities": []}, {"text": "The same set of components when used in different relative positions can form different characters.", "labels": [], "entities": []}, {"text": "For example the two components and can form two different characters: depending on the relative positions of the two components.", "labels": [], "entities": []}, {"text": "However, the current internal code point assignments in noway can reveal the relationship of the these characters with respect to their component characters.", "labels": [], "entities": []}, {"text": "Because of the limitation of the encoding system, people have to put a lot of efforts to develop different input methods.", "labels": [], "entities": []}, {"text": "Searching for characters with similar shapes are also quite difficult.", "labels": [], "entities": []}, {"text": "The 12 Ideographic Description Characters.", "labels": [], "entities": []}, {"text": "Each IDC symbol shows atypical ideograph character composition structure.", "labels": [], "entities": []}, {"text": "For example, (U+2FF0) indicates that a character is formed by two components, one on the left-hand side and one on the right-hand side.", "labels": [], "entities": []}, {"text": "All IDCs except U+2FF2 and U+2FF3 have cardinality of two because the decomposition requires two components only.", "labels": [], "entities": []}, {"text": "Details of these symbols can be found in Annex F of ISO 10646 2nd Edition and in John Jenkens' report.", "labels": [], "entities": [{"text": "ISO 10646 2nd Edition", "start_pos": 52, "end_pos": 73, "type": "DATASET", "confidence": 0.8597897738218307}]}], "datasetContent": [{"text": "Since the algorithms have to do excessive search for many combinations in many levels recursively, performance becomes a very important issue especially if we want to make this for public access through the internet.", "labels": [], "entities": []}, {"text": "However, since the decomposition is static, it does not need to be done in real time.", "labels": [], "entities": []}, {"text": "as the search doesn't need to be done online, In other words, searching of the same data will always give the same result unless the decomposition rules or algorithms are changed.", "labels": [], "entities": []}, {"text": "Consequently, we built two pre-searched tables to store the results of both \"Compnt-to-Char\" algorithm and the \"Char-to-Compnt\"algorithm.", "labels": [], "entities": []}, {"text": "Once we have the pre-searched tables, we can totally avoid the recursive search.", "labels": [], "entities": []}, {"text": "Instead, the search result can be directly retrieved in a single tuple.", "labels": [], "entities": []}, {"text": "This results in much better performance both in terms of usage of CPU time and I/O usage..", "labels": [], "entities": []}, {"text": "Examples of pre-searched results of \"Cha-to-Compnt\"Algorithm", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1. The 12 Ideograph Description  Characters", "labels": [], "entities": []}]}