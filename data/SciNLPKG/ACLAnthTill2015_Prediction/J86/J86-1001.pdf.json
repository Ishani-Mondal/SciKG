{"title": [{"text": "RESOLVING LEXICAL AMBIGUITY IN A DETERMINISTIC PARSER", "labels": [], "entities": [{"text": "RESOLVING LEXICAL AMBIGUITY IN A DETERMINISTIC PARSER", "start_pos": 0, "end_pos": 53, "type": "METRIC", "confidence": 0.6872570259230477}]}], "abstractContent": [{"text": "Lexical ambiguity and especially part-of-speech ambiguity is the source of much non-determinism in parsing.", "labels": [], "entities": []}, {"text": "As a result, the resolution of lexical ambiguity presents deterministic parsing with a major test.", "labels": [], "entities": []}, {"text": "If deterministic parsing is to be viable, it must be shown that lexical ambiguity can be resolved easily deterministically.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 3, "end_pos": 24, "type": "TASK", "confidence": 0.625043123960495}]}, {"text": "In this paper, it is shown that Marcus's \"diagnostics\" can be handled without any mechanisms beyond what is required to parse grammatical sentences and reject ungrammatical sentences.", "labels": [], "entities": []}, {"text": "It is also shown that many other classes of ambiguity can be easily resolved as well.", "labels": [], "entities": []}], "introductionContent": [{"text": "Lexical ambiguity, and especially part-of-speech ambiguity, is the source of much non-determinism in parsing.", "labels": [], "entities": []}, {"text": "As a result, the resolution of lexical ambiguity presents deterministic parsing) with a major test.", "labels": [], "entities": []}, {"text": "If deterministic parsing is to be viable, it should be shown that lexical ambiguity can be resolved deterministically for many situations in which people do not have trouble.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 3, "end_pos": 24, "type": "TASK", "confidence": 0.6291810274124146}]}, {"text": "In this paper, it is shown that Marcus's \"diagnostics\" can be handled without any mechanisms beyond what is required to parse grammatical sentences and reject ungrammatical sentences and that many other classes of ambiguity can be easily resolved as well.", "labels": [], "entities": [{"text": "Marcus's \"diagnostics\"", "start_pos": 32, "end_pos": 54, "type": "TASK", "confidence": 0.5431691586971283}]}, {"text": "This result is possible because of the constraints on English from word order and number agreement.", "labels": [], "entities": []}, {"text": "Although many high-level constituents can be \"moved\" in English, the lower-level structure of some constituents is relatively fixed.", "labels": [], "entities": []}, {"text": "For example, after a determiner, one expects a noun rather than a verb.", "labels": [], "entities": []}, {"text": "In this paper we also wish to ask, \"How might this low-level fixed order assist in the resolution of ambiguity?\"", "labels": [], "entities": [{"text": "resolution of ambiguity", "start_pos": 87, "end_pos": 110, "type": "TASK", "confidence": 0.9071552157402039}]}, {"text": "We will not give a definite answer to this question, but will see that it is extremely useful in the resolution of ambiguity.", "labels": [], "entities": [{"text": "resolution", "start_pos": 101, "end_pos": 111, "type": "TASK", "confidence": 0.9741252064704895}]}, {"text": "The examples of ambiguity shown in this paper seem to cause no apparent problems to a person reading them.", "labels": [], "entities": []}, {"text": "That is, all of these examples read easily and certainly do not exhibit the garden path effect, except, of course, the examples that are intended to be difficult.", "labels": [], "entities": []}, {"text": "If a parser is to be psychologically plausible, then it is desirable that it handle these examples in such away as to explain why people have no apparent difficulty with most sentences, despite the inherent ambiguity in them.", "labels": [], "entities": []}, {"text": "In parsing English, one of the major causes of nondeterminism is part-of-speech ambiguity.", "labels": [], "entities": []}, {"text": "If a word can be two parts of speech, then a non-deterministic parser may have to explore both possibilities.", "labels": [], "entities": []}, {"text": "If one claims to be able to parse English deterministically, then the resolution of part-of-speech ambiguity is a very important area.", "labels": [], "entities": [{"text": "resolution of part-of-speech ambiguity", "start_pos": 70, "end_pos": 108, "type": "TASK", "confidence": 0.7820557653903961}]}, {"text": "It should be noted that a non-deterministic parser does not need to tackle the problem of local part-of-speech ambiguity.", "labels": [], "entities": []}, {"text": "If it should make an error, then it can backtrack and correct it.", "labels": [], "entities": []}, {"text": "Alternatively, it could maintain all possible parses at once and throw some of them away.", "labels": [], "entities": []}, {"text": "In deterministic parsing we are not allowed to use either backtracking or parallelism.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 3, "end_pos": 24, "type": "TASK", "confidence": 0.6063866019248962}]}, {"text": "Although this problem has been investigated for many non-deterministic parsers, it has not been the critical problem that it is for deterministic parsing.", "labels": [], "entities": []}, {"text": "To handle ambiguity deterministically, we must never make an error.", "labels": [], "entities": []}, {"text": "As a result, our methods of disambiguation must be reliable.", "labels": [], "entities": [{"text": "disambiguation", "start_pos": 28, "end_pos": 42, "type": "TASK", "confidence": 0.9629788398742676}]}, {"text": "We will see that many cases of ambiguity can be resolved using standard techniques that have been applied to non-deterministic parsers.", "labels": [], "entities": []}, {"text": "If it is possible to handle all the examples of local ambiguity presented here, with no additional mechanism, device or feature than is needed for ordinary sentence parsing, then our goal above can be considered met.", "labels": [], "entities": [{"text": "sentence parsing", "start_pos": 156, "end_pos": 172, "type": "TASK", "confidence": 0.7355400323867798}]}, {"text": "One .Copyright1986 by the Association for Computational Linguistics.", "labels": [], "entities": [{"text": "Copyright1986", "start_pos": 5, "end_pos": 18, "type": "DATASET", "confidence": 0.958713948726654}]}, {"text": "Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page.", "labels": [], "entities": [{"text": "CL reference", "start_pos": 149, "end_pos": 161, "type": "DATASET", "confidence": 0.8458401560783386}]}, {"text": "To copy otherwise, or to republish, requires a fee and/or specific permission.", "labels": [], "entities": []}, {"text": "0362-613X/86/010001-12503.00 possible explanation for the fact that people do not notice local ambiguities maybe that there is no special mechanism needed for them, so that nothing differing from normal parsing is necessary.", "labels": [], "entities": []}, {"text": "Conversely, if it is necessary to add special mechanisms and routines to the parser just to handle these examples of ambiguity, then this will not explain how people can understand these examples so well and it can be considered a weakness in the model.", "labels": [], "entities": []}, {"text": "To say part-of-speech ambiguity can be handled deterministically but with the use of special mechanisms would be no surprise and not very important.", "labels": [], "entities": []}, {"text": "To say one can handle part-of-speech ambiguity deterministically with no special mechanisms is a more significant claim.", "labels": [], "entities": []}, {"text": "In this paper it is indeed suggested that many cases of part-of-speech ambiguity can be handled by the parser with no special mechanisms.", "labels": [], "entities": []}, {"text": "This paper is a summary of a section of the author's Ph.D. thesis) with the same title and describes work done at the University of Edinburgh.", "labels": [], "entities": []}, {"text": "That thesis presents ROBIE, a deterministic parser that is able to resolve lexical ambiguities and that is fully implemented in PROLOG.", "labels": [], "entities": [{"text": "ROBIE", "start_pos": 21, "end_pos": 26, "type": "METRIC", "confidence": 0.8141013979911804}]}, {"text": "ROBIE has two lookahead buffers and does not use Marcus's Attention Shift mechanism.", "labels": [], "entities": [{"text": "ROBIE", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.8698176741600037}]}, {"text": "This means that ROBIE scans the current token and one more of lookahead.", "labels": [], "entities": [{"text": "ROBIE", "start_pos": 16, "end_pos": 21, "type": "METRIC", "confidence": 0.908970832824707}]}, {"text": "PARSIFAL scanned the current token and two lookahead cells.", "labels": [], "entities": [{"text": "PARSIFAL", "start_pos": 0, "end_pos": 8, "type": "METRIC", "confidence": 0.7899541258811951}]}, {"text": "In this paper, only local ambiguities are addressed, that is, ambiguities that can be resolved within the sentence.", "labels": [], "entities": []}, {"text": "Global ambiguities, which require context to resolve, are not discussed.", "labels": [], "entities": []}, {"text": "For this paper, it is assumed that the reader is familiar with deterministic parsing and no other understanding of specific parsing mechanisms is assumed.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 63, "end_pos": 84, "type": "TASK", "confidence": 0.59442238509655}]}, {"text": "In the rest of this paper, we look at lexical ambiguity from simple examples to more complex ones.", "labels": [], "entities": []}, {"text": "We start with how words are defined within the parser to be ambiguous and how the morphology can be used to resolve ambiguities.", "labels": [], "entities": []}, {"text": "Next we look at how word order and finally various types of agreement can be used to resolve most remaining ambiguities.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}