{"title": [{"text": "Some Uses of Higher-Order Logic in Computational Linguistics", "labels": [], "entities": []}], "abstractContent": [{"text": "Consideration of the question of meaning in the framework of linguistics often requires an allusion to sets and other higher-order notions.", "labels": [], "entities": []}, {"text": "The traditional approach to representing and reasoning about meaning in a computational setting has been to use knowledge representation sys 7 tems that are either based on first-order logic or that use mechanisms whose formal justifications are to be provided after the fact.", "labels": [], "entities": [{"text": "representing and reasoning about meaning", "start_pos": 28, "end_pos": 68, "type": "TASK", "confidence": 0.7765489816665649}]}, {"text": "In this paper we shall consider the use of a higher-order logic for this task.", "labels": [], "entities": []}, {"text": "We first present aversion of definite clauses (positive Horn clauses) that is based on this logic.", "labels": [], "entities": []}, {"text": "Predicate and function variables may occur in such clauses and the terms in the language are the typed h-terms.", "labels": [], "entities": []}, {"text": "Such term structures have a richness that maybe exploited in representing meanings.", "labels": [], "entities": []}, {"text": "We also describe a higher-order logic programming language, called ~Prolog, which represents programs as higher-order definite clauses and interprets them using a depth-first interpreter.", "labels": [], "entities": []}, {"text": "A virtue of this language is that it is possible to write programs in it that integrate syntactic and semantic analyses into one computational paradigm.", "labels": [], "entities": []}, {"text": "This is to be contrasted with the more common practice of using two entirely different computation paradigms, such as DCGs or ATNs for parsing and frames or semantic nets for semantic processing.", "labels": [], "entities": []}, {"text": "We illustrate such an integration in this language by considering a simple example, and we claim that its use makes the task of providing formal justifications for the computations specified much more direct.", "labels": [], "entities": []}, {"text": "1. Introduction The representation of meaning, and the use of such a representation to draw inferences, is an issue of central concern in natural language understanding systems.", "labels": [], "entities": [{"text": "representation of meaning", "start_pos": 20, "end_pos": 45, "type": "TASK", "confidence": 0.8415809472401937}, {"text": "natural language understanding", "start_pos": 138, "end_pos": 168, "type": "TASK", "confidence": 0.6322317024072012}]}, {"text": "A theoretical understanding of meaning is generally based on logic, and it has been recognized that a higher-order logic is particularly well suited to this task.", "labels": [], "entities": []}, {"text": "Montague, for example, used such a logic to provide a compositional semantics for simple English sentences.", "labels": [], "entities": []}, {"text": "In the computational framework, knowledge representation systems are given the task of representing the semantical notions that are needed in natural", "labels": [], "entities": []}], "introductionContent": [{"text": "The representation of meaning, and the use of such a representation to draw inferences, is an issue of central concern in natural language understanding systems.", "labels": [], "entities": [{"text": "representation of meaning", "start_pos": 4, "end_pos": 29, "type": "TASK", "confidence": 0.862426221370697}, {"text": "natural language understanding", "start_pos": 122, "end_pos": 152, "type": "TASK", "confidence": 0.6351939042409261}]}, {"text": "A theoretical understanding of meaning is generally based on logic, and it has been recognized that a higher-order logic is particularly well suited to this task.", "labels": [], "entities": []}, {"text": "Montague, for example, used such a logic to provide a compositional semantics for simple English sentences.", "labels": [], "entities": []}, {"text": "In the computational framework, knowledge representation systems are given the task of representing the semantical notions that are needed in natural This work has been supported by NSF grants MCS-82-19196-CER, MCS-82-07294, AI Center grants MCS-83-05221, US Army Research Office grant ARO-DAA29-84-9-0027, and DARPA N000-14-85-K-0018.", "labels": [], "entities": [{"text": "DARPA N000-14-85-K-0018", "start_pos": 311, "end_pos": 334, "type": "DATASET", "confidence": 0.7578702867031097}]}, {"text": "While the formal justifications that are provided for such systems is usually logical, the actual formalisms used are often distantly related to logic.", "labels": [], "entities": []}, {"text": "Our approach in this paper is to represent meanings directly by using logical expressions, and to describe the process of inference by specifying manipulations on such expressions.", "labels": [], "entities": []}, {"text": "As it turns out, most programming languages are poorly suited for an approach such as ours.", "labels": [], "entities": []}, {"text": "Prolog, for instance, permits the representation and the examination of the structure of first-order terms, but it is not easy to use such terms to represent first-order formulas which contain quantification.", "labels": [], "entities": []}, {"text": "Lisp on the other hand allows the construction of lambda expressions which could encode the binding operations of quantifiers, but does not provide logical primitives for studying the internal structure of such expressions.", "labels": [], "entities": []}, {"text": "A language that is based on a higher-order logic seems to be the most natural vehicle for an approach such as ours, and in the first part of this paper we shall describe such a language.", "labels": [], "entities": []}, {"text": "We shall then use this language to describe computations of a kind that is needed in a natural language understanding system.", "labels": [], "entities": [{"text": "natural language understanding", "start_pos": 87, "end_pos": 117, "type": "TASK", "confidence": 0.7365598678588867}]}, {"text": "Before we embark on this task, however, we need to consider the arguments that are often made against the computational use of a higher-order logic.", "labels": [], "entities": []}, {"text": "Indeed, several authors in the current literature on computational linguistics and knowledge representation have presented reasons for preferring first-order logic over higher-order logic in natural language understanding systems, and amongst these the following three appear frequently.", "labels": [], "entities": [{"text": "knowledge representation", "start_pos": 83, "end_pos": 107, "type": "TASK", "confidence": 0.7296213954687119}]}, {"text": "(1} GSdel showed that second-order logic is essentially incomplete, i.e. true second-order logic statements are not recursively enumerable.", "labels": [], "entities": []}, {"text": "Hence, theorem provers for this logic cannot be, even theoretically, complete.", "labels": [], "entities": []}, {"text": "(2) Higher-order objects like functions and predicates can themselves be considered to be first-order objects of some sort.", "labels": [], "entities": []}, {"text": "Hence, a sorted first-order logic can be used to encode higher-order objects.", "labels": [], "entities": []}, {"text": "(3) Little research on theorem proving in higher-order logics has been done.", "labels": [], "entities": [{"text": "theorem proving", "start_pos": 23, "end_pos": 38, "type": "TASK", "confidence": 0.869718074798584}]}, {"text": "Moreover, there is reason to believe that theorem proving in such a logic is extremely difficult.", "labels": [], "entities": [{"text": "theorem proving", "start_pos": 42, "end_pos": 57, "type": "TASK", "confidence": 0.8708447813987732}]}, {"text": "These facts are often used to conclude that a higherorder logic should not be used to formalize systems if such formalizations are to be computationally meaningful.", "labels": [], "entities": []}, {"text": "While there is some truth in each of these observations, we feel that they do not warrant the conclusion that is drawn from it.", "labels": [], "entities": []}, {"text": "We discuss our reasons for this belief below.", "labels": [], "entities": []}, {"text": "The point regarding the essential undecidability of second-order logic has actually little import on the computational uses of higher-order logic.", "labels": [], "entities": []}, {"text": "This is because the second-order logic as it is construed in this observation, is not a proof system but rather a truth system of a very particular kind.", "labels": [], "entities": []}, {"text": "Roughly put, the second-order logic in question is not so much a logic as it is a branch of mathematics which is interested in properties about the integers.", "labels": [], "entities": []}, {"text": "There are higher-order logics that have been provided which contain the formulas of second-order logic but which do not assume the same notion of models (i.e. the integers).", "labels": [], "entities": []}, {"text": "These logics, in fact, have general models, including the standard, integer model, as well as other non-standard models, and with respect to this semantics, the logic has a sound and complete proof system.", "labels": [], "entities": []}, {"text": "From a theoretical point-of-view, the second observations is important.", "labels": [], "entities": []}, {"text": "Indeed, any system which could not be encoded into first-order logic would be more powerful than Turing machines and, hence, would be a rather unsatisfactory computationally!", "labels": [], "entities": []}, {"text": "The existence of such an encoding has little significance, however, with regard to the appropriateness of one language over another fora given set of computational tasks.", "labels": [], "entities": []}, {"text": "Clearly, all general purpose programming languages can be encoded onto first-order logic, but this has little significance with regard to the suitability of a given programming language for certain applications.", "labels": [], "entities": []}, {"text": "Although less work has been done on theorem proving in higher-order logic than in first-order logic as claimed in the last point, the nature of proofs in higher-order logic is far from mysterious.", "labels": [], "entities": [{"text": "theorem proving", "start_pos": 36, "end_pos": 51, "type": "TASK", "confidence": 0.7887338995933533}]}, {"text": "For example, higher-order resolution and unification has been developed, and based on these principles, several theorem provers for various higherorder logics (see and its references) have been built and", "labels": [], "entities": [{"text": "higher-order resolution", "start_pos": 13, "end_pos": 36, "type": "TASK", "confidence": 0.7794698774814606}]}], "datasetContent": [], "tableCaptions": []}