{"title": [{"text": "A Computational Framework for Non-Lexicalist Semantics", "labels": [], "entities": []}], "abstractContent": [{"text": "Under a lexicalist approach to semantics, a verb completely encodes its syntactic and semantic structures, along with the relevant syntax-to-semantics mapping; polysemy is typically attributed to the existence of different lexical entries.", "labels": [], "entities": []}, {"text": "A lexicon organized in this fashion contains much redundant information and is unable to capture cross-categorial morphological derivations.", "labels": [], "entities": []}, {"text": "The solution is to spread the \"se-mantic load\" of lexical entries to other morphemes not typically taken to bear semantic content.", "labels": [], "entities": []}, {"text": "This approach follows current trends in linguistic theory, and more perspicuously accounts for alternations in argument structure.", "labels": [], "entities": []}, {"text": "I demonstrate how such a framework can be computationally realized with a feature-based, agenda-driven chart parser for the Minimalist Program.", "labels": [], "entities": [{"text": "Minimalist Program", "start_pos": 124, "end_pos": 142, "type": "DATASET", "confidence": 0.7684971988201141}]}], "introductionContent": [{"text": "The understanding of natural language text includes not only analysis of syntactic structure, but also of semantic content.", "labels": [], "entities": []}, {"text": "Due to advances in statistical syntactic parsing techniques), attention has recently shifted towards the harder question of analyzing the meaning of natural language sentences.", "labels": [], "entities": [{"text": "statistical syntactic parsing", "start_pos": 19, "end_pos": 48, "type": "TASK", "confidence": 0.6328832308451334}, {"text": "analyzing the meaning of natural language sentences", "start_pos": 124, "end_pos": 175, "type": "TASK", "confidence": 0.8364552940641131}]}, {"text": "A common lexical semantic representation in the computational linguistics literature is a frame-based model where syntactic arguments are associated with various semantic roles (essentially frame slots).", "labels": [], "entities": []}, {"text": "Verbs are viewed as simple predicates over their arguments.", "labels": [], "entities": []}, {"text": "This approach has its roots in Fillmore's Case, and serves as the foundation for two current large-scale semantic annotation projects: FrameNet ( and).", "labels": [], "entities": [{"text": "Fillmore's Case", "start_pos": 31, "end_pos": 46, "type": "DATASET", "confidence": 0.6896289587020874}]}, {"text": "Underlying the semantic roles approach is a lexicalist assumption, that is, each verb's lexical entry completely encodes (more formally, projects) its syntactic and semantic structures.", "labels": [], "entities": []}, {"text": "Alternations in argument structure are usually attributed to multiple lexical entries (i.e., verb senses).", "labels": [], "entities": []}, {"text": "Under the lexicalist approach, the semantics of the verb break might look something like this: (1) break(agent, theme) agent: subject theme: object break(agent, theme, instrument) agent: subject theme: object instrument: oblique(with) break(theme) theme: subject . .", "labels": [], "entities": []}, {"text": "The lexicon explicitly specifies the different subcategorization frames of a verb, e.g., the causative frame, the causative instrumental frame, the inchoative frame, etc.", "labels": [], "entities": []}, {"text": "The major drawback of this approach, however, is the tremendous amount of redundancy in the lexicon-for example, the class of prototypical transitive verbs where the agent appears as the subject and the theme as the direct object must all duplicate this pattern.", "labels": [], "entities": []}, {"text": "The typical solution to the redundancy problem is to group verbs according to their argument realization patterns, possibly arranged in an inheritance hierarchy.", "labels": [], "entities": []}, {"text": "The argument structure and syntax-tosemantics mapping would then only need to be specified once for each verb class.", "labels": [], "entities": []}, {"text": "In addition, lexical rules could be formulated to derive certain alternations from more basic forms.", "labels": [], "entities": []}, {"text": "Nevertheless, the lexicalist approach does not capture productive morphological processes that pervade natural language, for example, flat.V \u2192 flatten.ADJ or hammer.N \u2192 hammer.V; most frameworks for computational semantics fail to capture the deeper derivational relationship between morphologically-related terms.", "labels": [], "entities": []}, {"text": "For languages with rich derivational morphology, this problem is often critical: the standard architectural view of morphological analysis as a preprocessor presents difficulties in handling semantically meaningful affixes.", "labels": [], "entities": []}, {"text": "In this paper, I present a computational implementation of Distributed Morphology, a non-lexicalist linguistic theory that erases the distinction between syntactic derivation and morphological derivation.", "labels": [], "entities": []}, {"text": "This framework leads to finer-grained semantics capable of better capturing linguistic generalizations.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}