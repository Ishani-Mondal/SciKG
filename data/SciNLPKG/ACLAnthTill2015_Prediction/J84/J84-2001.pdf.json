{"title": [{"text": "A Phrase-Structured Grammatical Framework for Transportable Natural Language Processing I", "labels": [], "entities": []}], "abstractContent": [{"text": "We present methods of dealing with the syntactic problems that arise in the construction of natural language processors that seek to allow users, as opposed to computational linguists, to customize an interface to operate with anew domain of data.", "labels": [], "entities": []}, {"text": "In particular, we describe a grammatical formalism, based on augmented phrase-structure rules, which allows a parser to perform many important domain-specific disambiguations by reference to a pre-defined grammar and a collection of auxiliary files produced during an initial knowledge acquisition session with the user.", "labels": [], "entities": []}, {"text": "We illustrate the workings of this formalism with examples from the grammar developed for our Layered Domain Class (LDC) system, though similarly motivated systems ought also to benefit from our formalisms.", "labels": [], "entities": []}, {"text": "In addition to showing the theoretical advantage of providing many of the fine-tuning capabilities of so-called semantic grammars within the context of a domain-independent grammar, we demonstrate several practical benefits to our approach.", "labels": [], "entities": []}, {"text": "The results of three experiments with our grammar and parser are also given.", "labels": [], "entities": []}], "introductionContent": [{"text": "As a result of advances in natural language processing, programs that provide practical English-language capabilities have begun to rival more conventional means of computer interactions for certain purposes, including database retrieval, online help facilities, and limited forms of office assistance.", "labels": [], "entities": [{"text": "database retrieval", "start_pos": 219, "end_pos": 237, "type": "TASK", "confidence": 0.7482091188430786}]}, {"text": "Although several prototype systems have provided customization facilities that allow users to specify synonyms, syntactic paraphrases, and the like, traditional approaches have resulted in systems wedded to a single domain of data.", "labels": [], "entities": []}, {"text": "That is, users are unable to access novel types of data without acquiring ~ new or modified processor specifically tailored to the new domain by the system designer(s).", "labels": [], "entities": []}, {"text": "Not surprisingly, an important trend in natural language system design is in allowing users themselves to adapt an existing processor fora new domain.", "labels": [], "entities": [{"text": "natural language system design", "start_pos": 40, "end_pos": 70, "type": "TASK", "confidence": 0.6487522199749947}]}, {"text": "Accordingly, prototype systems that permit user customizations or rapid customizations by a designer have included REL, POL and ASK), CONSUL, IRUS (,, TEAM), a system developed at Bell Labs, and our own LDC system (.", "labels": [], "entities": [{"text": "REL", "start_pos": 115, "end_pos": 118, "type": "METRIC", "confidence": 0.9450912475585938}, {"text": "POL", "start_pos": 120, "end_pos": 123, "type": "METRIC", "confidence": 0.8905224204063416}, {"text": "IRUS", "start_pos": 142, "end_pos": 146, "type": "METRIC", "confidence": 0.8497848510742188}]}, {"text": "Since the successful construction of a transportable system requires sound methods of representing what is to be learned, the design of formalisms to be used in transportable natural language processors relates to the scientific, as well as the engineering, aspects of computational linguistics.", "labels": [], "entities": []}, {"text": "In this paper we present methods of dealing with the syntactic problems that have arisen in the construction of our LDC system.", "labels": [], "entities": []}, {"text": "In particular, we shall describe a grammatical formalism, based on augmented phrase-structure rules, which allows a parser to make domain-specific decisions by referring to a dictionary and other auxiliary files produced during an initial learning session with the user.", "labels": [], "entities": []}, {"text": "We illustrate the workings of our grammatical formalism with examples from the existing LDC grammar, but we note that similarly motivated systems ought also to benefit from our formalisms.", "labels": [], "entities": []}, {"text": "We will also include the results of some experiments with our existing grammar as applied to several domains.", "labels": [], "entities": []}, {"text": "In addition to showing the theoretical advantage of being able to provide many of the fine-tuning capabilities of so-called semantic grammars within the context of a domain-independent grammar, we demonstrate several practical benefits to our approach.", "labels": [], "entities": []}, {"text": "For example, the conciseness of our formalism allows shorter grammars than many previous formalisms would allow, at least for the intended class of retrieval applications.", "labels": [], "entities": []}, {"text": "This offers not only added perspicuity but other benefits as well.", "labels": [], "entities": [{"text": "perspicuity", "start_pos": 27, "end_pos": 38, "type": "METRIC", "confidence": 0.9703972935676575}]}, {"text": "For instance, we have been able to write simple (almost trivial) LISP routines that pre-process a grammar to construct the files used by the parser to increase efficiency and to perform valuable disambiguations.", "labels": [], "entities": []}], "datasetContent": [{"text": "Having completed the parser and constructed a suitably broad grammar for use in several layered domains, we have begun to experiment with our parser in the manner of to see how significantly certain of our pruning methods can reduce the time complexity of parsing.", "labels": [], "entities": []}, {"text": "Some of the pruning techniques we have studied are I. the use of a Start file that tells what grammatical categories may begin each syntax routine, 2.", "labels": [], "entities": []}, {"text": "the use of local compatibility checking Section 3.3.1), and 3.", "labels": [], "entities": []}, {"text": "the use of non-local compatibility checking (Sections 3.3.2 and 3.3.3).", "labels": [], "entities": []}, {"text": "In addition to efficiency interests, the latter two techniques influence what parse structure is found for spurious or ambiguous inputs, which is also a concern worthy of study.", "labels": [], "entities": []}, {"text": "However, we have postponed an investigation of parsing \"accuracy\" until we have begun to elicit actual inputs from realistic users.", "labels": [], "entities": [{"text": "parsing \"", "start_pos": 47, "end_pos": 56, "type": "TASK", "confidence": 0.8958635628223419}, {"text": "accuracy", "start_pos": 56, "end_pos": 64, "type": "METRIC", "confidence": 0.8734514713287354}]}, {"text": "We now describe several experiments with the LDC grammar and parser.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1. Reduction in Parsing Times by the Use of the \"Start\" File", "labels": [], "entities": []}, {"text": " Table 3. As  with the experiments discussed above, these measurements  have limited statistical significance due to the small  sample sizes of grammars and of inputs. However, the  preliminary indication is that checking for nonlocal  compatibility adds more time to parsing than it saves.  This suggests that the benefits of such nonlocal checking  will be primarily in improved accuracy of disambiguations,  rather than speed of parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 268, "end_pos": 275, "type": "TASK", "confidence": 0.9656486511230469}, {"text": "accuracy", "start_pos": 381, "end_pos": 389, "type": "METRIC", "confidence": 0.9987828135490417}]}, {"text": " Table 2. Effect of In-line Instantiation of Superfluous Call Commands", "labels": [], "entities": []}, {"text": " Table 3. Time Spent in Nonlocal Compatibility Checking", "labels": [], "entities": [{"text": "Time Spent in Nonlocal Compatibility Checking", "start_pos": 10, "end_pos": 55, "type": "TASK", "confidence": 0.5795278400182724}]}]}