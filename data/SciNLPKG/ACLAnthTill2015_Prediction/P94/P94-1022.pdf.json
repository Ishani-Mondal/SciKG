{"title": [{"text": "Capturing CFLs with Tree Adjoining Grammars", "labels": [], "entities": [{"text": "Capturing CFLs", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.9274550974369049}]}], "abstractContent": [{"text": "We define a decidable class of TAGs that is strongly equivalent to CFGs and is cubic-time parsable.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 67, "end_pos": 71, "type": "DATASET", "confidence": 0.879570484161377}]}, {"text": "This class serves to lexicalize CFGs in the same manner as the LC, FGs of Schabes and Waters but with considerably less restriction on the form of the grammars.", "labels": [], "entities": []}, {"text": "The class provides a nornlal form for TAGs that generate local sets m rnuch the same way that regular grammars provide a normal form for CFGs that generate regular sets.", "labels": [], "entities": []}], "introductionContent": [{"text": "We introduce the notion of Regular Form for Tree Adjoining (;rammars (TA(;s).", "labels": [], "entities": []}, {"text": "The class of TAGs that are in regular from is equivalent in strong generative capacity 1 to the Context-Free Grammars, that is, the sets of trees generated by TAGs in this class are the local sets--the sets of derivation trees generated by CFGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 240, "end_pos": 244, "type": "DATASET", "confidence": 0.9014905095100403}]}, {"text": "2 Our investigations were initially motivated by the work of Schabes, Joshi, and Waters in lexicalization of CFGs via TAGs ().", "labels": [], "entities": []}, {"text": "The class we describe not only serves to lexicalize CFGs in away that is more faithtiff and more flexible in its encoding than earlier work, but provides a basis for using the more expressive TAG formalism to define Context-Free Languages (CFLs.)", "labels": [], "entities": []}, {"text": "In and a general notion of lexicalized grammars is introduced.", "labels": [], "entities": []}, {"text": "A grammar is lexicalized in this sense if each of the basic structures it manipulates is associated with a lexical item, its anchor.", "labels": [], "entities": []}, {"text": "The set of structures relevant to a particular input string, then, is selected by the lexical *The work reported here owes a great deal to extensive discussions with K.", "labels": [], "entities": []}, {"text": "1 We will refer to equivalence of the sets of trees generated by two grammars or classes of grammars as strong equivalence.", "labels": [], "entities": []}, {"text": "Equivalence of their string languages will be referred to as weak equivalence.", "labels": [], "entities": []}, {"text": "2Technically, the sets of trees generated by TAGs in the class are recognizable sets.", "labels": [], "entities": []}, {"text": "The local and recognizable sets are equivalent modulo projection.", "labels": [], "entities": []}, {"text": "We discuss the distinction in the next section.", "labels": [], "entities": []}, {"text": "items that occur in that string.", "labels": [], "entities": []}, {"text": "There area number of reasons for exploring lexicalized grammars.", "labels": [], "entities": []}, {"text": "Chief among these are linguistic considerations--lexicalized grammars reflect the tendency in many current syntactic theories to have the details of the syntactic structure be projected from the lexicon.", "labels": [], "entities": []}, {"text": "There are also practical advantages.", "labels": [], "entities": []}, {"text": "All lexicalized grammars are finitely ambiguous and, consequently, recognition for them is decidable.", "labels": [], "entities": []}, {"text": "Further, lexicalization supports strategies that can, in practice, improve the speed of recognition algorithms (.", "labels": [], "entities": []}, {"text": "One grammar formalism is said to lezicalize another ( if for every grammar in the second formalism there is a lexicalized grammar in the first that generates exactly the same set of structures.", "labels": [], "entities": []}, {"text": "While CFGs are attractive for efficiency of recognition, have shown that an arbitrary CFG cannot, in general, be converted into a strongly equivalent lexiealized CFG.", "labels": [], "entities": []}, {"text": "Instead, they show how CFGs can be lexicalized by LTAGS (Lexicalized TAGs).", "labels": [], "entities": []}, {"text": "While the LTAG that lexicalizes a given CFG must be strongly equivalent to that CFG, both the languages and sets of trees generated by LTAGs as a class are strict supersets of the CFLs and local sets.", "labels": [], "entities": []}, {"text": "Thus, while this gives a means of constructing a lexicalized grammar from an existing CFG, it does not provide a direct method for constructing lexicalized grammars that are known to be equivalent to (unspecified) CFGs.", "labels": [], "entities": []}, {"text": "Furthermore, the best known recognition algorithm for LTAGs runs in O(n 6) time.", "labels": [], "entities": []}, {"text": "define Lexicalized Context-Free Grammars (LCFGs), a class of lexicalized TAGs (with restricted adjunction) that not only lexicalizes CFGs, but is cubic-time parsable and is weakly equivalent to CFGs.", "labels": [], "entities": []}, {"text": "These LCFGs have a couple of shortcomings.", "labels": [], "entities": []}, {"text": "First, they are not strongly equivalent to CFGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 43, "end_pos": 47, "type": "DATASET", "confidence": 0.8115091919898987}]}, {"text": "Since they are cubic-time parsable this is primarily a theoretical rather than practical concern.", "labels": [], "entities": []}, {"text": "More importantly, they employ structures of a highly restricted form.", "labels": [], "entities": []}, {"text": "Thus the restrictions of the formalism, in some cases, may override linguistic considerations in constructing the grammar.", "labels": [], "entities": []}, {"text": "Clearly any class of TAGs that are cubic-time parsable, or that are equivalent in any sense to CFGs, must be restricted in someway.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 95, "end_pos": 99, "type": "DATASET", "confidence": 0.8673102259635925}]}, {"text": "The question is what restrictions are necessary.", "labels": [], "entities": []}, {"text": "In this paper we directly address the issue of identifying a class of TAGs that are strongly equivalent to CFGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 107, "end_pos": 111, "type": "DATASET", "confidence": 0.8760005235671997}]}, {"text": "In doing so we define such a class--TAGs in regular form--that is decidable, cubic-time parsable, and lexicalizes CFGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 114, "end_pos": 118, "type": "DATASET", "confidence": 0.8931314945220947}]}, {"text": "Further, regular form is essentially a closure condition on the elementary trees of the TAG.", "labels": [], "entities": []}, {"text": "Rather than restricting the form of the trees that can be employed, or the mechanisms by which they are combined, it requires that whenever a tree with a particular form can be derived then certain other related trees must be derivable as well.", "labels": [], "entities": []}, {"text": "The algorithm for deciding whether a given grammar is in regular form can produce a set of elementary trees that will extend a grammar that does not meet the condition to one that does.", "labels": [], "entities": []}, {"text": "3 Thus the grammar can be written largely on the basis of the linguistic structures that it is intended to capture.", "labels": [], "entities": []}, {"text": "We show that, while the LCFGs that are built by Schabes and Waters's algorithm for lexicalization of CFGs are in regular form, the restrictions they employ are unnecessarily strong.", "labels": [], "entities": []}, {"text": "Regular form provides a partial answer to the more general issue of characterizing the TAGs that generate local sets.", "labels": [], "entities": []}, {"text": "It serves as a normal form for these TAGs in the same way that regular grammars serve as a normal form for CFGs that generate regular languages.", "labels": [], "entities": []}, {"text": "While for every TAG that generates a local set there is a TAG in regular form that generates the same set, and every TAG in regular form generates a local set (modulo projection), there are TAGs that are not in regular form that generate local sets, just as there are CFGs that generate regular languages that are not regular grammars.", "labels": [], "entities": []}, {"text": "The next section of this paper briefly introduces notation for TAGs and the concept of recognizable sets.", "labels": [], "entities": [{"text": "TAGs", "start_pos": 63, "end_pos": 67, "type": "TASK", "confidence": 0.8973121643066406}]}, {"text": "Our results on regular form are developed in the subsequent section.", "labels": [], "entities": []}, {"text": "We first define a restricted use of the adjunction operation--derivation by regular adjunction--which we show derives only recognizable sets.", "labels": [], "entities": []}, {"text": "We then define the class of TAGs in regular form and show that the set of trees derivable in a TAG of this form is derivable by regular adjunction in that TAG and is therefore recognizable.", "labels": [], "entities": []}, {"text": "We next show that every local set can be generated by a TAG in regular form and that Schabes and Waters's construction for LCFGs in fact produces TAGs in regular form.", "labels": [], "entities": []}, {"text": "Finally, we provide an algorithm for deciding if a given TAG is in regular form.", "labels": [], "entities": []}, {"text": "We close with a discussion of the implications of this work with respect to the lexicalization of CFGs and the use of TAGs to define languages that are strictly context-free, and raise the question of whether our results can be strengthened for some classes of TAGs.", "labels": [], "entities": [{"text": "CFGs", "start_pos": 98, "end_pos": 102, "type": "DATASET", "confidence": 0.8609949946403503}]}, {"text": "3Although the result of this process is not, in general, equivalent to the original grammar.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}