{"title": [{"text": "AN INTEGRATED HEURISTIC SCHEME FOR PARTIAL PARSE EVALUATION", "labels": [], "entities": [{"text": "INTEGRATED HEURISTIC SCHEME FOR PARTIAL PARSE EVALUATION", "start_pos": 3, "end_pos": 59, "type": "METRIC", "confidence": 0.7618773835045951}]}], "abstractContent": [{"text": "GLR* is a recently developed robust version of the Generalized LR Parser [Tomita, 1986], that can parse almost any input sentence by ignoring unrecognizable parts of the sentence.", "labels": [], "entities": [{"text": "Generalized LR Parser [Tomita, 1986", "start_pos": 51, "end_pos": 86, "type": "TASK", "confidence": 0.5019339408193316}]}, {"text": "On a given input sentence, the parser returns a collection of parses that correspond to maximal, or close to maximal, parsable subsets of the original input.", "labels": [], "entities": []}, {"text": "This paper describes recent work on developing an integrated heuristic scheme for selecting the parse that is deemed \"best\" from such a collection.", "labels": [], "entities": []}, {"text": "We describe the heuristic measures used and their combination scheme.", "labels": [], "entities": []}, {"text": "Preliminary results from experiments conducted on parsing speech recognized spontaneous speech are also reported.", "labels": [], "entities": [{"text": "parsing speech", "start_pos": 50, "end_pos": 64, "type": "TASK", "confidence": 0.9035355746746063}]}, {"text": "The GLR* Parser The GLR Parsing Algorithm The Generalized LR Parser, developed by Tomita [Tomita, 1986], extended the original Lit parsing algorithm to the case of non-LR languages, where the parsing tables contain entries with multiple parsing actions.", "labels": [], "entities": []}, {"text": "Tomita's algorithm uses a Graph Structured Stack (GSS) in order to efficiently pursue in parallel the different parsing options that arise as a result of the multiple entries in the parsing tables.", "labels": [], "entities": []}, {"text": "A second data structure uses pointers to keep track of all possible parse trees throughout the parsing of the input, while sharing common subtrees of these different parses.", "labels": [], "entities": []}, {"text": "A process of local ambiguity packing allows the parser to pack sub-parses that are rooted in the same non-terminal into a single structure that represents them all.", "labels": [], "entities": []}, {"text": "The GLR parser is the syntactic engine of the Universal Parser Architecture developed at CMU [Tomita et al., 1988].", "labels": [], "entities": [{"text": "CMU", "start_pos": 89, "end_pos": 92, "type": "DATASET", "confidence": 0.8807474970817566}]}, {"text": "The architecture supports grammatical specification in an LFG framework; that consists of context-free grammar rules augmented with feature bundles that are associated with the non-terminals of the rules.", "labels": [], "entities": [{"text": "grammatical specification", "start_pos": 26, "end_pos": 51, "type": "TASK", "confidence": 0.7416425049304962}]}, {"text": "Feature structure computation is, for the most part, specified and implemented via unification operations.", "labels": [], "entities": []}, {"text": "This allows the grammar to constrain the applicability of context-free rules.", "labels": [], "entities": []}, {"text": "The result of parsing an input sentence consists of both a parse tree and the computed feature structure associated with the non-terminal at the root of the tree.", "labels": [], "entities": [{"text": "parsing an input sentence", "start_pos": 14, "end_pos": 39, "type": "TASK", "confidence": 0.8205272406339645}]}], "introductionContent": [], "datasetContent": [{"text": "At the end of the process of parsing a sentence, the GLR* parser returns with a set of possible parses, each corresponding to some grammatical subset of words of the input sentence.", "labels": [], "entities": []}, {"text": "Due to the beam search heuristic and the ambiguity packing scheme, this set of parses is limited to maximal or close to maximal grammatical subsets.", "labels": [], "entities": []}, {"text": "The principle goal is then to find the maximal parsable subset of the input string (and its parse).", "labels": [], "entities": []}, {"text": "However, in many cases there are several distinct maximal parses, each consisting of a different subset of words of the original sentence.", "labels": [], "entities": []}, {"text": "Furthermore, our experience has shown that in many cases, ignoring an additional one or two input words may result in a parse that is syntactically and/or semantically more coherent.", "labels": [], "entities": []}, {"text": "We have thus developed an evaluation heuristic that combines several different measures, in order to select the parse that is deemed overall \"best\".", "labels": [], "entities": []}, {"text": "Our heuristic uses a set of features by which each of the parse candidates can be evaluated and compared.", "labels": [], "entities": []}, {"text": "We use features of both the candidate parse and the ignored parts of the original input sentence.", "labels": [], "entities": []}, {"text": "The features are designed to be general and, for the most part, grammar and domain independent.", "labels": [], "entities": []}, {"text": "For each parse, the heuristic computes a penalty score for each of the features.", "labels": [], "entities": []}, {"text": "The penalties of the different features are then combined into a single score using a linear combination.", "labels": [], "entities": []}, {"text": "The weights used in this scheme are adjustable, and can be optimized fora particular domain and/or grammar.", "labels": [], "entities": []}, {"text": "The parser then selects the parse ranked best (i.e. the parse of lowest overall score).", "labels": [], "entities": []}, {"text": "1  So far, we have experimented with the following set of evaluation features: The penalty scheme for skipped words is designed to prefer parses that correspond to fewer skipped words.", "labels": [], "entities": []}, {"text": "It assigns a penalty in the range of (0.95 -1.05) for each word of the original sentence that was skipped.", "labels": [], "entities": []}, {"text": "The scheme is such that words that are skipped later in the sentence receive the slightly higher penalty.", "labels": [], "entities": []}, {"text": "This preference was designed to handle the phenomena of false starts, which is common in spontaneous speech.", "labels": [], "entities": []}, {"text": "The GLR* parser has a capability for handling common word substitutions when the parser's input string is the output of a speech recognition system.", "labels": [], "entities": [{"text": "GLR* parser", "start_pos": 4, "end_pos": 15, "type": "TASK", "confidence": 0.6830101013183594}, {"text": "handling common word substitutions", "start_pos": 37, "end_pos": 71, "type": "TASK", "confidence": 0.6006939932703972}]}, {"text": "When the input contains a pre-determined commonly substituted word, the parser attempts to continue with both 1The system can display then best parses found, where the parameter n is controlled by the user at runtime.", "labels": [], "entities": []}, {"text": "By default, we set n to one, and the parse with the lowest score is displayed.", "labels": [], "entities": []}, {"text": "the original input word and a specified \"correct\" word.", "labels": [], "entities": []}, {"text": "The number of substituted words is used as an evaluation feature, so as to prefer an analysis with fewer substituted words.", "labels": [], "entities": []}, {"text": "The grammars we have been working with allow a single input sentence to be analyzed as several grammatical \"sentences\" or fragments.", "labels": [], "entities": []}, {"text": "Our experiments have indicated that, inmost cases, a less fragmented analysis is more desirable.", "labels": [], "entities": []}, {"text": "We therefore use the sum of the number of fragments in the analysis as an additional feature.", "labels": [], "entities": []}, {"text": "We have recently augmented the parser with a statistical disambiguation module.", "labels": [], "entities": []}, {"text": "We use a framework similar to the one proposed by, in which the shift and reduce actions of the LR parsing tables are directly augmented with probabilities.", "labels": [], "entities": [{"text": "LR parsing", "start_pos": 96, "end_pos": 106, "type": "TASK", "confidence": 0.5969363003969193}]}, {"text": "Training of the probabilities is performed on a set of disambiguated parses.", "labels": [], "entities": []}, {"text": "The probabilities of the parse actions induce statistical scores on alternative parse trees, which are used for disambiguation.", "labels": [], "entities": []}, {"text": "However, additionally, we use the statistical score of the disambiguated parse as an additional evaluation feature across parses.", "labels": [], "entities": []}, {"text": "The statistical score value is first converted into a confidence measure, such that more \"common\" parse trees receive a lower penalty score.", "labels": [], "entities": []}, {"text": "This is done using the following formula: The penalty scores of the features are then combined by a linear combination.", "labels": [], "entities": []}, {"text": "The weights assigned to the features determine the way they interact.", "labels": [], "entities": []}, {"text": "In our experiments so far, we have fined tuned these weights manually, so as to try and optimize the results on a training set of data.", "labels": [], "entities": []}, {"text": "However, we plan on investigating the possibility of using some known optimization techniques for this task.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1.  The results indicate that using the GLR* parser results  in a significant improvement in performance. When", "labels": [], "entities": [{"text": "GLR* parser", "start_pos": 47, "end_pos": 58, "type": "DATASET", "confidence": 0.7959002455075582}]}]}