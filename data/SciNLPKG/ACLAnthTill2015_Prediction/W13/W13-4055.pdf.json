{"title": [{"text": "Integration and test environment for an in-vehicle dialogue system in the SIMSI project", "labels": [], "entities": []}], "abstractContent": [{"text": "The goal of the SIMSI (Safe In-vehicle Multimodal Speech Interaction) project is threefold.", "labels": [], "entities": [{"text": "SIMSI (Safe In-vehicle Multimodal Speech Interaction)", "start_pos": 16, "end_pos": 69, "type": "TASK", "confidence": 0.5686774700880051}]}, {"text": "Firstly, to integrate a dialogue system for menu-based dialogue with a GUI-driven in-vehicle infotainment system.", "labels": [], "entities": []}, {"text": "Secondly, to further improve the integrated system with respect to driver distraction , thus making the system safer to use while driving.", "labels": [], "entities": []}, {"text": "Thirdly, to verify that the resulting system decreases visual distraction and cognitive load during interaction.", "labels": [], "entities": []}, {"text": "This demo paper describes the integration of the two existing systems, and the test environment designed to enable evaluation of the system.", "labels": [], "entities": []}, {"text": "1 Background 1.1 Driver distraction and safety Driver distraction is one common cause of accidents , and is often caused by the driver interacting with technologies such as mobile phones, media players or navigation systems.", "labels": [], "entities": [{"text": "Driver distraction", "start_pos": 47, "end_pos": 65, "type": "TASK", "confidence": 0.5907298624515533}]}, {"text": "The so-called 100-car study (Neale et al., 2005) revealed that secondary task distraction is the largest cause of driver inattention, and that the handling of wireless devices is the most common secondary task.", "labels": [], "entities": [{"text": "secondary task distraction", "start_pos": 63, "end_pos": 89, "type": "TASK", "confidence": 0.6510431170463562}]}, {"text": "The goal of SIMSI is to design systems which enable safe interaction with technologies in vehicles, by reducing the cognitive load imposed by the interaction and minimizing head-down time.", "labels": [], "entities": []}, {"text": "1.2 The Talkamatic Dialogue Manager Based on Larsson (2002) and later work, Talka-matic AB has developed the Talkamatic Dialogue Manager (TDM) with the goal of being the most competent and usable dialogue manager on the market, both from the perspective of the user and from the perspective of the HMI developer.", "labels": [], "entities": []}, {"text": "TDM provides a general interaction model founded inhuman interaction patterns, resulting in a high degree of naturalness and flexibility which increases usability.", "labels": [], "entities": [{"text": "TDM", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8764604330062866}]}, {"text": "Also, TDM reduces complexity for developers and users, helping them to reach their goals faster and at a lower cost.", "labels": [], "entities": []}, {"text": "A major problem with the current state-of-the-art in-vehicle spoken dialogue systems is that they are either too simplistic to be useful to the end user, or alternatively that they are fairly sophisticated but unmanageable for the manufacturer due to the size and complexity of the implementation.", "labels": [], "entities": []}, {"text": "TDM offers sophisticated multi-modal interaction management solutions which allow for easy modification and development, allowing interaction designers to easily explore new solutions and reducing overhead for new dialogue applications in terms of code and development man-hours.", "labels": [], "entities": [{"text": "TDM", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.9185671806335449}]}, {"text": "TDM deals with several interaction patterns which are basic to human-human linguistic interaction , and offers truly integrated multimodal-ity which allows user to freely switch between (or combine) modalities.", "labels": [], "entities": []}, {"text": "All these solutions are domain-independent which means that they need not be implemented in each application.", "labels": [], "entities": []}, {"text": "Using Talkamatic technology, dialogue behaviour can be altered without touching application properties, and application properties can be updated without touching the dialogue logic.", "labels": [], "entities": []}, {"text": "This makes testing of different dialogue strategies, prompts etc.", "labels": [], "entities": []}, {"text": "considerably quicker and easier than when using regular state-machine-based dialogue systems.", "labels": [], "entities": []}, {"text": "In addition, as the dialogue strategy is separated from the application logic, development time for new dialogue applications can be significantly reduced.", "labels": [], "entities": []}, {"text": "Furthermore, the developer designing the application does not need to be a dialogue expert as the dialogue design is built into the dialogue manager.", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}