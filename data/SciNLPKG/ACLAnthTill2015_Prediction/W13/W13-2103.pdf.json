{"title": [{"text": "User-Controlled, Robust Natural Language Generation from an Evolving Knowledge Base", "labels": [], "entities": [{"text": "Natural Language Generation", "start_pos": 24, "end_pos": 51, "type": "TASK", "confidence": 0.6953083078066508}]}], "abstractContent": [{"text": "In this paper we describe a natural language generation system which produces complex sentences from a biology knowledge base.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 28, "end_pos": 55, "type": "TASK", "confidence": 0.7076011697451273}]}, {"text": "The NLG system allows domain experts to discover errors in the knowledge base and generates certain parts of answers in response to users' questions in an e-textbook application.", "labels": [], "entities": []}, {"text": "The system allows domain experts to cus-tomise its lexical resources and to set parameters which influence syntactic constructions in generated sentences.", "labels": [], "entities": []}, {"text": "The system is capable of dealing with certain types of incomplete inputs arising from a knowledge base which is constantly edited and includes a referring expression generation module which keeps track of discourse history.", "labels": [], "entities": [{"text": "referring expression generation", "start_pos": 145, "end_pos": 176, "type": "TASK", "confidence": 0.646807461977005}]}, {"text": "Our referring expression module is available for download as the open source Antfarm tool 1 .", "labels": [], "entities": []}], "introductionContent": [{"text": "In this paper we describe a natural language generation system we have developed to interface with a biology knowledge base.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 28, "end_pos": 55, "type": "TASK", "confidence": 0.6901245911916097}]}, {"text": "The knowledge base (KB) encodes sentences from a biology textbook, and the ultimate goal of our project is to develop an intelligent textbook application which can eventually answer students' questions about biology).", "labels": [], "entities": []}, {"text": "The natural language generation module is part of a larger system, which includes a question understanding module, question answering and reasoning algorithms, as well as an answer presentation module which produces pages with information from the KB.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 4, "end_pos": 31, "type": "TASK", "confidence": 0.7000038425127665}, {"text": "question understanding", "start_pos": 84, "end_pos": 106, "type": "TASK", "confidence": 0.7673260569572449}, {"text": "question answering", "start_pos": 115, "end_pos": 133, "type": "TASK", "confidence": 0.8577027022838593}]}, {"text": "We measure the progress and consistency of encoding by asking \"what is an X?\" type questions of the application and evaluate the quality of answers.", "labels": [], "entities": [{"text": "consistency", "start_pos": 28, "end_pos": 39, "type": "METRIC", "confidence": 0.9853237867355347}]}, {"text": "In response to these questions, the system generates \"glossary pages\" of concepts, which display all information about concept X in the KB that are deemed relevant.", "labels": [], "entities": []}, {"text": "The NLG module is used for two purposes in our system: to check the completeness and consistency of the KB (instead of looking at complex graphs of the encoded knowledge, it is easier to detect errors in natural language sentences), and to present parts of answers in response to questions.", "labels": [], "entities": [{"text": "consistency", "start_pos": 85, "end_pos": 96, "type": "METRIC", "confidence": 0.9910743832588196}]}, {"text": "One goal of our project was to develop a tool which empowers biology teachers to encode domain knowledge with little training informal knowledge representation.", "labels": [], "entities": []}, {"text": "In the same spirit, we aimed to develop an NLG system which allowed domain experts to easily and intuitively customize the generated sentences as much as possible, without any training on the grammar or internal workings of the system.", "labels": [], "entities": []}, {"text": "This was necessary because many domain-specific concepts in the KB are best expressed by biology terminology and linguistic constructions specific to the domain.", "labels": [], "entities": []}, {"text": "We developed a utility which allows encoders to not only associate lexical items with concepts in the KB but also customise certain lexical parameters which influence the structure of sentences generated to describe events.", "labels": [], "entities": []}, {"text": "Another requirement was robustness: since the knowledge base is constantly edited, the NLG system had to be able to deal with missing lexical information, incomplete inputs, changing encoding guidelines, and bugs in the KB as much as possible.", "labels": [], "entities": []}, {"text": "The system also had to be flexible in the sense: Architecture of the AURA NLG system that it had to be able to generate different versions of the same output to suit specific contexts or types of concepts in its input.", "labels": [], "entities": [{"text": "AURA NLG", "start_pos": 69, "end_pos": 77, "type": "DATASET", "confidence": 0.9578576683998108}]}, {"text": "Our system therefore generates all possible realizations fora given input, and allows the answer presentation module to send parameters to determine which output is returned in a specific context.", "labels": [], "entities": []}, {"text": "After describing the architecture of the NLG module in detail we explain how the system is able to deal with unseen combination of event-to-entity relations when describing events.", "labels": [], "entities": []}, {"text": "We illustrate the utility we developed to allow domain experts to customize the system's output by adding parameters to lexical entries associated with concepts.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}