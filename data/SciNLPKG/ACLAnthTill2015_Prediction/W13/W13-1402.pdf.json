{"title": [], "abstractContent": [{"text": "This work presents a novel method for recognizing and extracting classical Arabic poems found in textual sources.", "labels": [], "entities": [{"text": "recognizing and extracting classical Arabic poems found in textual sources", "start_pos": 38, "end_pos": 112, "type": "TASK", "confidence": 0.7919806152582168}]}, {"text": "The method utilizes the basic classical Arabic poem features such as structure, rhyme, writing style, and word usage.", "labels": [], "entities": []}, {"text": "The proposed method achieves a precision of 96.94% while keeping a high recall value at 92.24%.", "labels": [], "entities": [{"text": "precision", "start_pos": 31, "end_pos": 40, "type": "METRIC", "confidence": 0.9995007514953613}, {"text": "recall value", "start_pos": 72, "end_pos": 84, "type": "METRIC", "confidence": 0.9815980494022369}]}, {"text": "The method was also used to build a prototype search engine for classical Arabic poems.", "labels": [], "entities": []}], "introductionContent": [{"text": "Searching for poetry instances on the web, as well as identifying and extracting them, is a challenging problem.", "labels": [], "entities": []}, {"text": "Contributing to the difficulty are the following: creators of web content do not usually follow a fixed standard format when publishing poetry content; there is no special HTML tags that can be used to identify and format poetry content; and finally poetry content is usually intermixed with other content published on the web.", "labels": [], "entities": []}, {"text": "In this paper, a classical Arabic poetry recognition and extraction method has been proposed.", "labels": [], "entities": [{"text": "Arabic poetry recognition and extraction", "start_pos": 27, "end_pos": 67, "type": "TASK", "confidence": 0.6864520728588104}]}, {"text": "The method utilizes poem features and writing styles to identify and isolate one or more poem text bodies in a given piece of text.", "labels": [], "entities": []}, {"text": "As an implementation of the poetry recognition and extraction method, a prototype Arabic poetry search engine was developed.", "labels": [], "entities": [{"text": "poetry recognition and extraction", "start_pos": 28, "end_pos": 61, "type": "TASK", "confidence": 0.8042738884687424}]}, {"text": "The paper is organized as follows.", "labels": [], "entities": []}, {"text": "In Section 2, the related works are briefly discussed.", "labels": [], "entities": []}, {"text": "Section 3 gives a general overview of Arabic poems features.", "labels": [], "entities": []}, {"text": "Section 4 discusses the methodology used to identify and extract poem content from a given text.", "labels": [], "entities": [{"text": "identify and extract poem content from a given text", "start_pos": 44, "end_pos": 95, "type": "TASK", "confidence": 0.7318403025468191}]}, {"text": "It also presents the used evaluation method.", "labels": [], "entities": []}, {"text": "In Section 5, we discuss the experimentation including the used dataset and results.", "labels": [], "entities": []}, {"text": "A prototype implementation of the method is presented in Section 6 followed by conclusions and future work plans.", "labels": [], "entities": []}], "datasetContent": [{"text": "To evaluate the proposed method, we applied the F-measure) based on the precision and recall measures.", "labels": [], "entities": [{"text": "F-measure", "start_pos": 48, "end_pos": 57, "type": "METRIC", "confidence": 0.9962332844734192}, {"text": "precision", "start_pos": 72, "end_pos": 81, "type": "METRIC", "confidence": 0.9994224309921265}, {"text": "recall", "start_pos": 86, "end_pos": 92, "type": "METRIC", "confidence": 0.9971211552619934}]}, {"text": "Precision, as shown in Equation 1, is calculated by dividing the total number of the correct lines produced by the method over the total number of lines in the output.", "labels": [], "entities": [{"text": "Precision", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.9869483709335327}]}, {"text": "Given that our method processes the input data and generates output as half-verse per line.", "labels": [], "entities": []}, {"text": "Recall, as shown in Equation 2, is computed similarly except that we divide over the model total number of correct lines.", "labels": [], "entities": []}, {"text": "The model resembles the prefect solution for such input data.", "labels": [], "entities": []}, {"text": "During the development phase of the method, we used several development datasets utilizing data drawn from the web.", "labels": [], "entities": []}, {"text": "For evaluation purposes, we assembled a dataset using text from hundred randomly selected HTML web-pages.", "labels": [], "entities": []}, {"text": "The set contains 50 HTML pages with classical Arabic poem instances (positive set) and 50 pages without poem instances (negative set).", "labels": [], "entities": []}, {"text": "To select the positive set, we randomly chose 5 poets and searched Google and selected the first 10 pages that contain poem instances for each poet.", "labels": [], "entities": []}, {"text": "The negative set was similarly chosen by selecting the first 50 pages that contain no poem instances for an arbitrary query.", "labels": [], "entities": []}, {"text": "Text from the selected web-pages was converted to plain text using the Apache Tika toolkit and saved in a single large text file.", "labels": [], "entities": []}, {"text": "This resulted in a text file that contains about 23K non-empty lines including 161 classical Arabic poem instances having 4,740 half-verses.", "labels": [], "entities": []}], "tableCaptions": []}