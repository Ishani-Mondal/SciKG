{"title": [{"text": "Processing Structured Input with Skipping Nested Automata", "labels": [], "entities": []}], "abstractContent": [{"text": "We propose anew kind of finite-state au-tomata, suitable for structured input characters corresponding to unranked trees of small depth.", "labels": [], "entities": []}, {"text": "As a motivating application , we regard executing morphosyntactic queries on a richly annotated text corpus.", "labels": [], "entities": []}], "introductionContent": [{"text": "Efficient lookup in natural language corpora becomes increasingly important, correspondingly to the growth of their size.", "labels": [], "entities": [{"text": "Efficient", "start_pos": 0, "end_pos": 9, "type": "METRIC", "confidence": 0.9501224160194397}]}, {"text": "We focus on complex queries, involving regular expressions over segments and specifying their syntactic attributes (e.g. \"find all sequences of five nouns or gerunds in a row\").", "labels": [], "entities": []}, {"text": "For such queries, indexing the corpus is in general not sufficient; finite-state devices come then as the natural tool to use.", "labels": [], "entities": []}, {"text": "The linguistic annotation of the text seems to begetting still more complex.", "labels": [], "entities": []}, {"text": "To illustrate that, German articles in the IMS Workbench are annotated with sets of readings, i.e. possible tuples of the grammatical case, number and gender (an example is shown in).", "labels": [], "entities": [{"text": "IMS Workbench", "start_pos": 43, "end_pos": 56, "type": "DATASET", "confidence": 0.924589216709137}]}, {"text": "Several other big corpora are stored in XML files, making it easy to extend their annotation in the future if so desired.", "labels": [], "entities": []}, {"text": "Hence, we consider a general setting where the segments are tree-shaped feature structures of fixed type, with list-valued attributes allowed (see).", "labels": [], "entities": []}, {"text": "A corpus query in this model should be a regular expression over segment specifications, being in turn Boolean combinations of attribute specifications, with quantifiers used in the case of list-valued attributes.", "labels": [], "entities": []}, {"text": "We may also wish to allow specifying string-valued attributes by regular expressions.", "labels": [], "entities": []}, {"text": "For instance, der Tisch /the table masculine / is a match for the expression 1 This example query is rather useless by itself; however, it compactly demonstrates several features which (variously combined) have been found needed in NLP applications.", "labels": [], "entities": []}, {"text": "(POS ! = N \u2228 WORD = \".*sch\") describing sequences of segments having a masculine-singular reading, in which all nouns end with sch.", "labels": [], "entities": [{"text": "POS ! = N \u2228 WORD", "start_pos": 1, "end_pos": 17, "type": "METRIC", "confidence": 0.7184771200021108}]}, {"text": "In this paper, we propose an adjustment of existing finite-state solutions suited for queries in such model.", "labels": [], "entities": []}, {"text": "Our crucial assumption is that the input, although unranked, has a reasonably bounded depth, e.g. by 10.", "labels": [], "entities": []}, {"text": "This is the casein morphosyntactic analysis (but often not in syntactic parsing).", "labels": [], "entities": [{"text": "syntactic parsing", "start_pos": 62, "end_pos": 79, "type": "TASK", "confidence": 0.7363323867321014}]}], "datasetContent": [{"text": "A preliminary version of our method has been used for finding the matches of relatively complex hand-written patterns aimed at shallow parsing and correcting errors in the IPI Corpus of Polish.", "labels": [], "entities": [{"text": "IPI Corpus of Polish", "start_pos": 172, "end_pos": 192, "type": "DATASET", "confidence": 0.9781268686056137}]}, {"text": "As a result, although the input size grew by about 30% due to introducing and nodes, over 75% of the obtained input was skipped, leading to an overall speed-up by about 50%.", "labels": [], "entities": []}, {"text": "Clearly, empirical results may depend heavily on the particular input and queries.", "labels": [], "entities": []}, {"text": "Hence, our solution may turnout to be narrowly scoped as well as to be useful in various aspects of XML processing.", "labels": [], "entities": [{"text": "XML processing", "start_pos": 100, "end_pos": 114, "type": "TASK", "confidence": 0.8251422047615051}]}, {"text": "Note that, although the expressive power of SNAs as presented is rather weak, it seems to be easily extendable by integrating our main idea with the general VPA model.", "labels": [], "entities": []}], "tableCaptions": []}