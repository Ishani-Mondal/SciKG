{"title": [{"text": "Semi-supervised Relation Extraction with Label Propagation", "labels": [], "entities": [{"text": "Semi-supervised Relation Extraction", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.6484560072422028}]}], "abstractContent": [{"text": "To overcome the problem of not having enough manually labeled relation instances for supervised relation extraction methods, in this paper we propose a label propagation (LP) based semi-supervised learning algorithm for relation extraction task to learn from both labeled and unla-beled data.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 96, "end_pos": 115, "type": "TASK", "confidence": 0.7699988484382629}, {"text": "relation extraction", "start_pos": 220, "end_pos": 239, "type": "TASK", "confidence": 0.8146197497844696}]}, {"text": "Evaluation on the ACE corpus showed when only a few labeled examples are available, our LP based relation extraction can achieve better performance than SVM and another bootstrapping method.", "labels": [], "entities": [{"text": "ACE corpus", "start_pos": 18, "end_pos": 28, "type": "DATASET", "confidence": 0.9306580126285553}, {"text": "relation extraction", "start_pos": 97, "end_pos": 116, "type": "TASK", "confidence": 0.7577088177204132}]}], "introductionContent": [{"text": "Relation extraction is the task of finding relationships between two entities from text.", "labels": [], "entities": [{"text": "Relation extraction", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.961500883102417}]}, {"text": "For the task, many machine learning methods have been proposed, including supervised methods (), semisupervised methods, and unsupervised method ().", "labels": [], "entities": []}, {"text": "Supervised relation extraction achieves good performance, but it requires a large amount of manually labeled relation instances.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 11, "end_pos": 30, "type": "TASK", "confidence": 0.802556037902832}]}, {"text": "Unsupervised methods do not need the definition of relation types and manually labeled data, but it is difficult to evaluate the clustering result since there is no relation type label for each instance in clusters.", "labels": [], "entities": []}, {"text": "Therefore, semisupervised learning has received attention, which can minimize corpus annotation requirement.", "labels": [], "entities": []}, {"text": "Current works on semi-supervised resolution for relation extraction task mostly use the bootstrapping algorithm, which is based on a local consistency assumption: examples close to labeled examples within the same class will have the same labels.", "labels": [], "entities": [{"text": "semi-supervised resolution", "start_pos": 17, "end_pos": 43, "type": "TASK", "confidence": 0.7353645414113998}, {"text": "relation extraction task", "start_pos": 48, "end_pos": 72, "type": "TASK", "confidence": 0.8982217907905579}]}, {"text": "Such methods ignore considering the similarity between unlabeled examples and do not perform classification from a global consistency viewpoint, which may fail to exploit appropriate manifold structure in data when training data is limited.", "labels": [], "entities": []}, {"text": "The objective of this paper is to present a label propagation based semi-supervised learning algorithm (LP algorithm) ( for Relation Extraction task.", "labels": [], "entities": [{"text": "Relation Extraction task", "start_pos": 124, "end_pos": 148, "type": "TASK", "confidence": 0.9310548305511475}]}, {"text": "This algorithm works by representing labeled and unlabeled examples as vertices in a connected graph, then propagating the label information from any vertex to nearby vertices through weighted edges iteratively, finally inferring the labels of unlabeled examples after the propagation process converges.", "labels": [], "entities": []}, {"text": "Through the label propagation process, our method can make the best of the information of labeled and unlabeled examples to realize a global consistency assumption: similar examples should have similar labels.", "labels": [], "entities": [{"text": "label propagation", "start_pos": 12, "end_pos": 29, "type": "TASK", "confidence": 0.71397465467453}]}, {"text": "In other words, the labels of unlabeled examples are determined by considering not only the similarity between labeled and unlabeled examples, but also the similarity between unlabeled examples.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Frequency of Relation SubTypes in the ACE training", "labels": [], "entities": [{"text": "Frequency of Relation SubTypes", "start_pos": 10, "end_pos": 40, "type": "TASK", "confidence": 0.652720257639885}, {"text": "ACE training", "start_pos": 48, "end_pos": 60, "type": "DATASET", "confidence": 0.9318059980869293}]}, {"text": " Table 2: Performance of Relation Detection: SVM and LP algorithm with different size of labeled data. The LP algorithm is", "labels": [], "entities": [{"text": "Relation Detection", "start_pos": 25, "end_pos": 43, "type": "TASK", "confidence": 0.7903249561786652}]}, {"text": " Table 3: Performance of Relation Classification on Relation Subtype: SVM and LP algorithm with different size of labeled data.", "labels": [], "entities": [{"text": "Relation Classification", "start_pos": 25, "end_pos": 48, "type": "TASK", "confidence": 0.9023333787918091}]}, {"text": " Table 4: Comparison of performance on individual relation", "labels": [], "entities": []}]}