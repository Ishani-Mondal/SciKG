{"title": [{"text": "Squibs and Discussions Dependency Unification Grammar for PROLOG", "labels": [], "entities": [{"text": "Squibs and Discussions Dependency Unification Grammar", "start_pos": 0, "end_pos": 53, "type": "TASK", "confidence": 0.742410828669866}, {"text": "PROLOG", "start_pos": 58, "end_pos": 64, "type": "TASK", "confidence": 0.6622411608695984}]}], "abstractContent": [], "introductionContent": [{"text": "The programming language PROLOG has proved to bean excellent tool for implementing natural language processing systems.", "labels": [], "entities": []}, {"text": "Its built-in resolution and unification mechanisms are well suited to both accept and generate sentences of artificial and natural languages.", "labels": [], "entities": []}, {"text": "Although supporting many different linguistic formalisms, its straightforwardness and elegance have perhaps best been demonstrated with definite clause grammars (DCGs) (, an extension to PROLOG's syntax allowing direct implementation of rules of context-free grammars as Horn clauses.", "labels": [], "entities": [{"text": "straightforwardness", "start_pos": 62, "end_pos": 81, "type": "METRIC", "confidence": 0.9478893876075745}]}, {"text": "While context-free grammars and DCGs--strongly related to the huge linguistic field of constituency or phrase structure grammars and their descendants--have become very popular among logic programmers, dependency grammars (DGs) have long remained a widely unnoticed linguistic alternative.", "labels": [], "entities": []}, {"text": "DG is based on the observation that each word of a sentence has individual slots to be filled by others, its so-called dependents.", "labels": [], "entities": []}, {"text": "Which dependents a particular word takes depends not only on its function within the sentence, but also on its meaning--like other contemporary linguistic frameworks, DG integrates both syntactic and semantic aspects of natural language.", "labels": [], "entities": []}, {"text": "DG was first formalized by and later, among others, by and.", "labels": [], "entities": [{"text": "DG", "start_pos": 0, "end_pos": 2, "type": "TASK", "confidence": 0.8698819279670715}]}, {"text": "The formalization presented in this paper is based on Hellwig's Dependency Unification Grammar (DUG)).", "labels": [], "entities": []}, {"text": "We merely add a framework for automatic translation of DUG rules to Horn clauses that makes DUGs as easy to implement as classic DCGs.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}