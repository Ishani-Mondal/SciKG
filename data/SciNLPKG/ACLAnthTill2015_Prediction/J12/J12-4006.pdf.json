{"title": [], "abstractContent": [{"text": "This article describes an approach to Lexical-Functional Grammar (LFG) generation that is based on the fact that the set of strings that an LFG grammar relates to a particular acyclic f-structure is a context-free language.", "labels": [], "entities": [{"text": "Lexical-Functional Grammar (LFG) generation", "start_pos": 38, "end_pos": 81, "type": "TASK", "confidence": 0.7835019181172053}]}, {"text": "We present an algorithm that produces for an arbitrary LFG grammar and an arbitrary acyclic input f-structure a context-free grammar describing exactly the set of strings that the given LFG grammar associates with that f-structure.", "labels": [], "entities": []}, {"text": "The individual sentences are then available through a standard context-free generator operating on that grammar.", "labels": [], "entities": []}, {"text": "The context-free grammar is constructed by specializing the context-free backbone of the LFG grammar for the given f-structure and serves as a compact representation of all generation results that the LFG grammar assigns to the input.", "labels": [], "entities": []}, {"text": "This approach extends to other grammatical formalisms with explicit context-free backbones, such as PATR, and also to formalisms that permit a context-free skeleton to be extracted from richer specifications.", "labels": [], "entities": []}, {"text": "It provides a general mathematical framework for understanding and improving the operation of a family of chart-based generation algorithms.", "labels": [], "entities": []}], "introductionContent": [{"text": "Algorithms providing compact representations of alternative syntactic analyses have been the state-of-the-art in parsing for many years.", "labels": [], "entities": []}, {"text": "For context-free grammars, for example, the well-known chart parsing algorithms have been used for more than four decades.", "labels": [], "entities": [{"text": "chart parsing", "start_pos": 55, "end_pos": 68, "type": "TASK", "confidence": 0.765023410320282}]}, {"text": "These assign to a sentence not just one possible analysis but a chart that compactly represents all possible syntactic analyses.", "labels": [], "entities": []}, {"text": "Algorithms have also been developed that extend packing to the functional specifications of unification grammars by producing compact representations of feature-structure ambiguities as well.", "labels": [], "entities": []}, {"text": "One that is pertinent to (but not restricted to) Lexical-Functional Grammar (LFG) is the contexted constraint satisfaction method developed by.", "labels": [], "entities": [{"text": "Lexical-Functional Grammar (LFG)", "start_pos": 49, "end_pos": 81, "type": "TASK", "confidence": 0.7916914522647858}]}, {"text": "These algorithms lead to better average time performance because they carefully manage the ambiguities that are rampant in natural language.", "labels": [], "entities": []}, {"text": "They work by dividing the parsing problem into two phases, a recognition or satisfiability phase that creates the compact representation and determines whether there is at least one parse, and an enumeration phase in which the alternative parses are produced one by one.", "labels": [], "entities": [{"text": "parsing problem", "start_pos": 26, "end_pos": 41, "type": "TASK", "confidence": 0.9253636598587036}]}, {"text": "Parsing performance is typically identified with the complexity of the first phase (e.g., the cubic bound for context-free parsing), because the collection of all parses can be delivered to a client application merely by presenting the compact representation.", "labels": [], "entities": [{"text": "Parsing", "start_pos": 0, "end_pos": 7, "type": "TASK", "confidence": 0.9375470876693726}]}, {"text": "A client maybe able to select a limited number of particularly desirable parses, perhaps the smallest or the most probable, without doing a full enumeration).", "labels": [], "entities": []}, {"text": "gives a clear formal characterization of the first phase of contextfree chart parsing.", "labels": [], "entities": [{"text": "contextfree chart parsing", "start_pos": 60, "end_pos": 85, "type": "TASK", "confidence": 0.6337181727091471}]}, {"text": "He observes that the recognition problem consists of finding the intersection of the language of the grammar with the input string, and then testing to see whether that intersection is empty.", "labels": [], "entities": []}, {"text": "Many language classes are closed under intersection with a regular set, and the result of the intersection of a language L(G) with a regular language \u03b1 is describable as a specialization G \u03b1 of G that assigns to all and only the strings in \u03b1 effectively the same parse trees as G would assign.", "labels": [], "entities": []}, {"text": "Lang argues that a chart for an input string s (a trivial regular language) and a context-free grammar G can be regarded as a specialization G s of G that derives either the empty language (if s does not belong to L(G)) or a language consisting of just that input.", "labels": [], "entities": []}, {"text": "In this view a parsing chart/grammar is a representation that makes it possible to enumerate all the derivation trees of the string, guaranteeing that each tree can be produced in a backtrack-free way in time proportional to its size.", "labels": [], "entities": []}, {"text": "This guarantee holds even for an infinitely ambiguous string: It would take forever to enumerate all valid derivations, but any particular one can be readout in linear time.", "labels": [], "entities": []}, {"text": "The procedure for tree enumeration follows directly from the standard context-free generation algorithm applied to the grammar G s . The generation problem for LFG and other description-based grammatical formalisms can also be viewed from this perspective.", "labels": [], "entities": []}, {"text": "Several algorithms have been proposed for generation that avoid redundant recomputation by storing intermediate processing results in a chart-like auxiliary data structure (e.g.,.", "labels": [], "entities": []}, {"text": "Most of them can be construed as having a first phase that provides a compact representation for alternative results, in this case for the strings that the grammar provides fora given functional or semantic input.", "labels": [], "entities": []}, {"text": "The individual generated strings are then produced by an enumeration procedure operating on this compact representation.", "labels": [], "entities": []}, {"text": "In this article we observe that the edges of a generation chart can be interpreted as rules of a specialized context-free grammar, just as in characterization of parsing.", "labels": [], "entities": [{"text": "characterization of parsing", "start_pos": 142, "end_pos": 169, "type": "TASK", "confidence": 0.7886874079704285}]}, {"text": "We present a generation algorithm that specializes the context-free backbone of a given LFG grammar to a grammar that describes exactly the strings that the LFG grammar relates to a given acyclic f-structure.", "labels": [], "entities": []}, {"text": "Derivations of the resulting grammar simulate all and only those derivations of the LFG grammar whose derived strings are assigned to that input.", "labels": [], "entities": []}, {"text": "Thus the generated string set is a context-free language compactly represented by the specialized grammar, and the individual members of that language can be enumerated, just as for parsing, by using standard context-free generation algorithms.", "labels": [], "entities": []}, {"text": "Our approach can be seen as a generalization and formalization of other chart-based generation algorithms, producing all and only correct outputs for larger combinations of grammars and inputs.", "labels": [], "entities": []}, {"text": "It extends to unification grammars with explicit context-free backbones, such as PATR (, and also to formalisms that permit a context-free skeleton to be extracted from richer specifications.", "labels": [], "entities": [{"text": "PATR", "start_pos": 81, "end_pos": 85, "type": "DATASET", "confidence": 0.6446362733840942}]}, {"text": "But it does not extend The components of an LFG representation: string, constituent structure, functional structure.", "labels": [], "entities": []}, {"text": "to cyclic input structures because, as we will show by example, an LFG grammar might relate to a cyclic structure a set of strings that is not context-free.", "labels": [], "entities": []}, {"text": "Because acyclic structures are normally assumed to be the only f-structures that are motivated for linguistic analysis, this restriction does not seem to limit the applicability of our algorithm for natural language generation.", "labels": [], "entities": [{"text": "natural language generation", "start_pos": 199, "end_pos": 226, "type": "TASK", "confidence": 0.684889684120814}]}, {"text": "We begin with some background so that we can make the problem and its solution more explicit.", "labels": [], "entities": []}, {"text": "Along with many other description-based grammar formalisms, an LFG grammar G assigns to every string sin its language at least one f-structure.", "labels": [], "entities": []}, {"text": "This situation can be characterized in terms of a derivation relation \u2206 G , defined as follows: (1) \u2206 G (s, F) iff G assigns to the string s the f-structure F In the LFG approach a sentence sand its f-structure F are not directly related.", "labels": [], "entities": []}, {"text": "Their relation is mediated by a valid c-structure for s).", "labels": [], "entities": []}, {"text": "The arrangement of the three components of an LFG representation is illustrated in.", "labels": [], "entities": []}, {"text": "This representation is derivable by a grammar that includes the annotated (nonterminal) rules in (2a-c) and lexical expansions in (2d-f).", "labels": [], "entities": []}, {"text": "Annotated lexical c-structure rules are just notational variants of traditional LFG lexical entries.", "labels": [], "entities": []}, {"text": "In accordance with the basic architecture of LFG, an LFG grammar provides a set of licensing conditions that determine grammatical representations by descriptive, modelbased rather than procedural methods.", "labels": [], "entities": []}, {"text": "The well-formedness of the representation in with respect to the grammar in (2) is thus characterized as follows.", "labels": [], "entities": []}, {"text": "The c-structure is valid or well-formed because we can assign to each nonterminal node a grammar rule that licenses or justifies the local mother-daughters configuration constituted by the node and its immediate daughters.", "labels": [], "entities": []}, {"text": "If we assume that the c-structure of consists of the nodes root, n 1 , .., n 8 and these nodes are related and labeled as depicted in, then the rule-mapping \u03c1 that justifies the c-structure is given by (3).", "labels": [], "entities": []}, {"text": "(3) \u03c1 root = (2a), \u03c1 n 1 = (2b), \u03c1 n 2 = (2c), \u03c1 n 3 = (2d), \u03c1 n 4 = (2e), \u03c1 n 5 = (2f ) S root NP n 1 VP n 2 DET n 3 N n 4 V n 5 an 6 student n 7 fell n 8", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}