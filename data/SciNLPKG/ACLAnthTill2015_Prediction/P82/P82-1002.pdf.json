{"title": [], "abstractContent": [{"text": "We argue that because the very concept of computation rests on notions of interpretation, the semantics of natural languages and the semantics of computational formalisms are in the deepest sense the same subject.", "labels": [], "entities": []}, {"text": "The attempt to use computational formalisms in aid of an explanation of natural language semantics, therefore, is an enterprise that must be undertaken with particular care.", "labels": [], "entities": []}, {"text": "We describe a framework for semantical analysis that we have used in the computational realm, and suggest that it may serve to underwrite computadonally-oriented linguistic ser.antics as well.", "labels": [], "entities": [{"text": "semantical analysis", "start_pos": 28, "end_pos": 47, "type": "TASK", "confidence": 0.8006481826305389}]}, {"text": "The major feature of this framework is the explicit recognition of both the declarative and the procedural import of meaningful expressions; we argue that whereas these two viewpoints have traditionally been taken as alternative, any comprehensive semantical theory must account for how both aspects of an expression contribute to its overall significance.", "labels": [], "entities": []}, {"text": "We have argued elsewhere 1 that the distinguishing mark of those objects and processes we call computational has to do with attn'buted semantics.\" we humans find computational processes coherent exactly because we attach semantical significance to their behaviour, ingredients, and so forth.", "labels": [], "entities": []}, {"text": "Put another way, computers, on our view, are those devices that we understand by deploying our linguistic faculties.", "labels": [], "entities": []}, {"text": "For example, the reason that a calculator is a computer, but a car is not, is that we take the ingredients of the calculator to be symbolic (standing, in this particular case, for numbers and functions and so forth), and understand the interactions and organisation of the calculator in terms of that interpretation (this part divides, this part represents the sum, and so on).", "labels": [], "entities": []}, {"text": "Even though by and large we are able to produce an explanation of the behaviour that does not rest on external semantic attribution (this is the formality condition mentioned by Fodor, Haugeland. and othersz), we nonetheless speak, when we use computational terms, in terms of this semantics.", "labels": [], "entities": []}, {"text": "These semantical concepts rest at the foundations of the discipline: the particular organisations that computers have their computational raison d'etre ~ emerge not only from their mechanical structure but also from their semantic interpretability.", "labels": [], "entities": []}, {"text": "Similarly, the terms of art employed in computer science-program, compiler, implementation, interpreter, and so forth-will ultimately he definable only with reference to this attributed semantics; they will not, on our view, ever be found reducible to non-semantical predicates?", "labels": [], "entities": []}, {"text": "This is a ramifying and problematic position, which we cannot defend here.", "labels": [], "entities": []}, {"text": "4 We may simply note, however, the overwhelming evidence in favour of a semantical approach manifested by everyday computational language.", "labels": [], "entities": []}, {"text": "Even the simple view of computer science as the study of symbol manipulation s reveals this bias.", "labels": [], "entities": []}, {"text": "Equally telling is the fact that programming languages are called languages.", "labels": [], "entities": []}, {"text": "In addition, language-derived concepts like name and reference and semantics permeate computational jargon (to say nothing of interpreter, value, variable, memory, expression, identifier and so on)-a fact that would be hard to explain if semantics were not crucially involved.", "labels": [], "entities": []}, {"text": "It is not just that in discussing computation we use language; rather, in discussing computation we use words that suggest that we are also talking about linguistic phenomena.", "labels": [], "entities": []}, {"text": "The question we will focus on in this paper, very briefly, is this: if computational artefacts are fundamentally linguistic, and if, therefore, it is appropriate to analyse them in terms of formal theories of semantics (it is apparent that this is a widely held view), then what is the proper relationship between the so-called computational semantics that results, and more standard linguistic semantics (the discipline that studies people and their natural languages: how we mean, and what we are talking about, and all of. that good stuff)?", "labels": [], "entities": []}, {"text": "And furthermore, what is it to use computational models to explain natural language semantics, if the computational models are themselves in need of semantical analysis?", "labels": [], "entities": []}, {"text": "On the face of it, there would seem to be a certain complexity that should he sorted out.", "labels": [], "entities": []}, {"text": "In answering these questions we will argue approximately as follows: in the limit computational semantics and linguistic semantics will coincide, at least in underlying conception, if not in surface detail (for example some issues, like ambiguity, may arise in one case and not in the other).", "labels": [], "entities": []}, {"text": "Unfortunately, however, as presently used in computer science the term \"semantics\" is given such an operational cast that it distracts attention from the human attribution of significance to computational structures.", "labels": [], "entities": []}, {"text": "6 In contrast, the most successful models of natural language semantics, embodied for example in standard model theories and even in Montague's program, have concentrated almost exclusively on referential or denotational aspects of declarative sentences.", "labels": [], "entities": []}, {"text": "Judging only by surface use, in other words, computational semantics and linguistic semantics appear almost orthogonal in concern, even though they are of course similar in so'le (for example they both use meta-theoretic mathematical techniques-functional composition, and so forth-to recursively specify the semantics of complex expressions from a", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}