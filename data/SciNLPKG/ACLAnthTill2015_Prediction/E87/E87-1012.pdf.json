{"title": [{"text": "A TOOL FOR THE AUTOMATIC CREATION, EXTENSION AND UPDATING OF LEXICAL KNOWI.F.nGE BA.~F-g", "labels": [], "entities": [{"text": "TOOL FOR THE AUTOMATIC CREATION", "start_pos": 2, "end_pos": 33, "type": "METRIC", "confidence": 0.7328297257423401}, {"text": "UPDATING OF LEXICAL KNOWI.F.nGE BA.", "start_pos": 49, "end_pos": 84, "type": "METRIC", "confidence": 0.8179033041000366}, {"text": "F-g", "start_pos": 85, "end_pos": 88, "type": "METRIC", "confidence": 0.8971453905105591}]}], "abstractContent": [{"text": "A tool is described which helps in the creation, extension and updating of lexical knowledge bases (LKBs).", "labels": [], "entities": []}, {"text": "Two levels of representation are distinguished: a static storage level and a dynamic knowledge level.", "labels": [], "entities": []}, {"text": "The latter is an object-oriented environment containing linguistic and lexicographic knowledge.", "labels": [], "entities": []}, {"text": "At the knowledge level, constructors and filters can be defined.", "labels": [], "entities": []}, {"text": "Constructors are objects which extend the LKB both horizontally (new information) and vertically (new entries) using the linguistic knowledge.", "labels": [], "entities": []}, {"text": "Filters are objects which derive new LKBs from existing ones thereby optionally changing the storage structure.", "labels": [], "entities": []}, {"text": "The latter use lexicographic knowledge.", "labels": [], "entities": []}], "introductionContent": [{"text": "Despite efforts in the development of tools for the collection, sorting and editing of lexical information (see for an overview), the compilation of lexical knowledge bases (LKBs, lexical databases, machine readable dictionaries) is still an expensive and time-intensive drudgery.", "labels": [], "entities": [{"text": "collection, sorting and editing of lexical information", "start_pos": 52, "end_pos": 106, "type": "TASK", "confidence": 0.7694397121667862}]}, {"text": "In the worst case, a LKB has to be built up from scratch, and even if one is available, it often does not come up to the requirements of a particular application.", "labels": [], "entities": []}, {"text": "In this paper we propose an architecture fora tool which helps both in the construction (extension and updating) of LKBs and in creating new LKBs on the basis of existing ones.", "labels": [], "entities": []}, {"text": "Our work falls in with recent insights about the organisation of LKBs.", "labels": [], "entities": [{"text": "organisation of LKBs", "start_pos": 49, "end_pos": 69, "type": "TASK", "confidence": 0.6324730813503265}]}, {"text": "The main idea is to distinguish two representation levels: a static storage /eve/ and a dynamic knowledge level At the storage level, lexicai entries are represented simply as records (with fields for spelling, phonetic transcription, lexical representation, syntactic category, case frames, frequency counts, definitions etc.) stored in text files for easy portability.", "labels": [], "entities": []}, {"text": "The knowledge level is an object-oriented environment, representing linguistic and lexicographic knowledge in a number of objects with attached information and procedures, organised in generalisation hierarchies.", "labels": [], "entities": []}, {"text": "Records at the storage level are lexical objects in a 'frozen' state.", "labels": [], "entities": []}, {"text": "When accessed from the knowledge level, these records 'come to life' as structured objects at some position in one or more generalisation hierarchies (record fields ate interpreted as slot fillers).", "labels": [], "entities": []}, {"text": "This way, a number of procedures becomes accessible (through inheritance) to these lexical objects.", "labels": [], "entities": []}, {"text": "For the creation and updating of dictio~es, coll~-stmctors ate defined: objects at the knowledge level which compute new lexicai objects (corresponding to new records at the storage level) and new information ~n~hed to already existing lexical objects (corresponding to new fields of existing records).", "labels": [], "entities": []}, {"text": "To achieve this, constructor objects mai\u00a2 use of information already existing in the LKB and of the linguistic kaowledge r~re~nted at the knowledge level.", "labels": [], "entities": [{"text": "LKB", "start_pos": 85, "end_pos": 88, "type": "DATASET", "confidence": 0.9370525479316711}]}, {"text": "Few constructors can be developed which arc complete, i.e. which can operate fully automatically without checking of the output by the user.", "labels": [], "entities": []}, {"text": "Themfore, a central part in our system is a cooperative user interface, whose task it is to reduce initiative from the user to a minimum.", "labels": [], "entities": []}, {"text": "Filters are another category of objects.", "labels": [], "entities": []}, {"text": "They use an existing LKB to create automatically anew one.", "labels": [], "entities": []}, {"text": "During this transformation, specified fields and entries arc k~, and others are omitted.", "labels": [], "entities": []}, {"text": "The storage strategy used maybe changed as well.", "labels": [], "entities": []}, {"text": "E.g. an indexed-sequential file of phoneme representations could be derived from a dictionary containing this as well as oliver information, and stored in another way (e.g. as a sequential text file).", "labels": [], "entities": []}, {"text": "The derived lexical knowledge base we calla daughter dict/onary (DD) and the source LKB moor dictionary (MD).", "labels": [], "entities": [{"text": "LKB moor dictionary (MD)", "start_pos": 84, "end_pos": 108, "type": "DATASET", "confidence": 0.8737496634324392}]}, {"text": "Filters use the lexicographic knowledge specified at the knowledge level.", "labels": [], "entities": []}, {"text": "In principle, one MD for each language should be sufficient.", "labels": [], "entities": [{"text": "MD", "start_pos": 18, "end_pos": 20, "type": "METRIC", "confidence": 0.9740185141563416}]}, {"text": "It should contain as much information as possible (see fora similar opinion).", "labels": [], "entities": []}, {"text": "Constmctors can be developed to assist in creating, extending and updating such an MD, thereby reducing its cost, while LKBs for specific applications or purposes could be derived from it by means of filters.", "labels": [], "entities": []}, {"text": "The basic architecture of our system is given in.", "labels": [], "entities": []}, {"text": "Processing systems should exhibit enough redundancy to have it both ways.", "labels": [], "entities": []}, {"text": "For instance, at the level of morphology, derived and inflected forms should be stored, but at the same time enough linguistic knowledge should be available to compute them if necessary (e.g. for new entries).", "labels": [], "entities": []}, {"text": "We think the proper place for this linguistic knowledge is the dictionary system.", "labels": [], "entities": []}, {"text": "There is some evidence that this redundancy is psychologically relevant as well.", "labels": [], "entities": []}, {"text": "The duplication of information (co-existing rules and stored forms) could be part of the explanation for the fuzzy results inmost psycholinguistic experiments aimed at resolving the concrete versus abstract controversy about the organisation of the mental lexicon.", "labels": [], "entities": []}, {"text": "The concrete hypothesis states that it is possible to produce and interpret word forms without resort to morphological rules while the abstract hypothesis claims that in production and comprehension rules are routinely used.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}