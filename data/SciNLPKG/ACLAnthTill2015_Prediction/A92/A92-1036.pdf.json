{"title": [{"text": "Portable Natural Language Generation using SPOKESMAN", "labels": [], "entities": [{"text": "SPOKESMAN", "start_pos": 43, "end_pos": 52, "type": "TASK", "confidence": 0.41448166966438293}]}], "abstractContent": [{"text": "1 This paper reports on the SPOKESMAN natural language generation system, which is a domain independent text generator designed to incrementally produce text for an underlying application program.", "labels": [], "entities": [{"text": "SPOKESMAN natural language generation", "start_pos": 28, "end_pos": 65, "type": "TASK", "confidence": 0.675366148352623}]}, {"text": "This work is a direct outgrowth of the work we reported on at the last ACL Applied Conference in 1988, where we connected an application program directly to the linguistic component, Mumble-86.", "labels": [], "entities": [{"text": "Mumble-86", "start_pos": 183, "end_pos": 192, "type": "DATASET", "confidence": 0.9796010851860046}]}, {"text": "The major addition has been anew component to the system, a text planner that provides the capability to compose the utterance incre-mentally.", "labels": [], "entities": []}, {"text": "The central feature of the text planning component is anew level of representation that both captures more linguistic generalizations and makes the system more portable, so that we can easily interface to different domains and different kinds of application programs.", "labels": [], "entities": [{"text": "text planning", "start_pos": 27, "end_pos": 40, "type": "TASK", "confidence": 0.7734847962856293}]}, {"text": "This larger system is called \"Spokesman\", as it acts as the mouthpiece fora number of application programs.", "labels": [], "entities": []}], "introductionContent": [{"text": "There are generally two approaches to achieving portability.", "labels": [], "entities": []}, {"text": "One is to build peripheral components that can automatically or semi-automatically acquire the knowledge needed to port to anew domain.", "labels": [], "entities": []}, {"text": "The second is to modularize the system so that the components that are not domain specific are kept separate from those that are, and to try to maximize the amount of knowledge in the more general components.", "labels": [], "entities": []}, {"text": "In the long term, a combination of these approaches will certainly be needed.", "labels": [], "entities": []}, {"text": "In the work presented here, we have concentrated on the later.", "labels": [], "entities": []}, {"text": "For example, by taking advantage of the fact that most of language is not particular to any domain, we have isolated the linguistic realization component and used the Text Structure to capture abstract linguistic generalizations.", "labels": [], "entities": []}, {"text": "Also by using the knowledge base of the application directly we cannot only capture generalizations about objects which are expressed similarly, but also handle those cases where the means of expression is specific to a particular domain.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}