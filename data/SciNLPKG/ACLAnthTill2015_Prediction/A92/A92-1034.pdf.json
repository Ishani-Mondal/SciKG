{"title": [{"text": "MORPHIa: A Practical Compiler for Reversible Morphology Rules", "labels": [], "entities": [{"text": "MORPHIa", "start_pos": 0, "end_pos": 7, "type": "DATASET", "confidence": 0.6874898672103882}]}], "abstractContent": [{"text": "Morph~ is a Common Lisp compiler for reversible inflectional morphology rules developed at the Center for Machine Translation at Carnegie Mellon University.", "labels": [], "entities": [{"text": "Machine Translation", "start_pos": 106, "end_pos": 125, "type": "TASK", "confidence": 0.725913479924202}]}, {"text": "This paper describes the Morph~ processing model, its implementation, and how it handles some common morphological processes.", "labels": [], "entities": []}], "introductionContent": [{"text": "The input to the Morph~ rule compiler is a rule file containing inflection rules, the specification of a discrimination network of morphological forms, and definitions of certain classes of strings and string mappings.", "labels": [], "entities": []}, {"text": "This rule file can be compiled into either a word generation program or a word parsing program.", "labels": [], "entities": [{"text": "word generation", "start_pos": 45, "end_pos": 60, "type": "TASK", "confidence": 0.702659860253334}, {"text": "word parsing", "start_pos": 74, "end_pos": 86, "type": "TASK", "confidence": 0.7323891520500183}]}, {"text": "The word generation program produces an inflected surface form from a feature structure, 1 while the word parsing program takes an inflected form and produces a set of feature structures for valid parses.", "labels": [], "entities": [{"text": "word generation", "start_pos": 4, "end_pos": 19, "type": "TASK", "confidence": 0.6975408494472504}, {"text": "word parsing", "start_pos": 101, "end_pos": 113, "type": "TASK", "confidence": 0.6938198059797287}]}], "datasetContent": [], "tableCaptions": []}