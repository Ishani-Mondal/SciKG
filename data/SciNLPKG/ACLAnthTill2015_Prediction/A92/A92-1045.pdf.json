{"title": [{"text": "Multi-Purpose Development and Operation Environments for Natural Language Applications", "labels": [], "entities": []}], "abstractContent": [], "introductionContent": [{"text": "Interactive user environments have been a central efficiencyenhancing feature of many modem computer applications, including natural language processing.", "labels": [], "entities": []}, {"text": "There are two major classes of users for whom NLP environments can be constructed --developers and end users, such as technical writers and translators.", "labels": [], "entities": []}, {"text": "Developers need help in the various knowledge acquisition tasks, such as dictionary and grammar writing for NLP applications.", "labels": [], "entities": [{"text": "knowledge acquisition", "start_pos": 36, "end_pos": 57, "type": "TASK", "confidence": 0.7479998469352722}, {"text": "dictionary and grammar writing", "start_pos": 73, "end_pos": 103, "type": "TASK", "confidence": 0.6085792705416679}]}, {"text": "End users look for efficiency enhancements in document preparation beyond the level of word processing support.", "labels": [], "entities": [{"text": "document preparation", "start_pos": 46, "end_pos": 66, "type": "TASK", "confidence": 0.7400266230106354}]}, {"text": "There are two approaches to the solution of this problem.", "labels": [], "entities": []}, {"text": "A dedicated workstation can be developed for each of the required functionalities.", "labels": [], "entities": []}, {"text": "Alternatively, workstations can be configured as sets of application routines attached to a universal user interface.", "labels": [], "entities": []}, {"text": "In this report we describe a general-purpose user environment, underdevelopment at the Center for Machine Translation of Carnegie Mellon University, capable of supporting a number of dedicated workstation configurations.", "labels": [], "entities": [{"text": "Machine Translation", "start_pos": 98, "end_pos": 117, "type": "TASK", "confidence": 0.7391704022884369}]}, {"text": "Among the types of end users whom this system will benefit are technical writers, text revisors and translators.", "labels": [], "entities": []}, {"text": "In the framework of NLP system development this tool supports dictionary and ontology acquisition.", "labels": [], "entities": [{"text": "ontology acquisition", "start_pos": 77, "end_pos": 97, "type": "TASK", "confidence": 0.695716917514801}]}, {"text": "A number of separate functionalities included in this system have been developed and used either in commercial word processing software packages or in NLP projects (e.g., the translator's tools described in and the developer environments IRACQ (, LUKE or ONTOS (, among many others).", "labels": [], "entities": [{"text": "IRACQ", "start_pos": 238, "end_pos": 243, "type": "DATASET", "confidence": 0.824691116809845}]}, {"text": "Our system allows a merge of the two directions in the tool development.", "labels": [], "entities": []}, {"text": "One direct reason to put the two previously separate kinds of functionality into a single system was to support the knowledge-based machineaided translation environment which involves an interactive human editor who uses an interface to help the machine understand the source text.", "labels": [], "entities": [{"text": "knowledge-based machineaided translation", "start_pos": 116, "end_pos": 156, "type": "TASK", "confidence": 0.6175607343514761}]}, {"text": "A standard Unix-and X-windows-based workstation platform has been selected for our system, whose working name is Tws, for \"Translator's Workstation.\"", "labels": [], "entities": []}, {"text": "We also used the C-based X11 toolkit called MOTIF and its CommonLisp interface called CLM.", "labels": [], "entities": []}, {"text": "In practice, TWS consists of a number of application (functionality) modules which are integrated through the central MOTIF-based user interface module.", "labels": [], "entities": []}, {"text": "For reasons of uniformity, each of the applications uses the facilities of the user interface for display and input.", "labels": [], "entities": []}, {"text": "Each module uses a standard window to interact with the user, and each window has standard menus which, among other functionalities, allow the user to invoke any other module.", "labels": [], "entities": []}, {"text": "Each module also has special menus.", "labels": [], "entities": []}, {"text": "The architecture of TWS is presented in.", "labels": [], "entities": [{"text": "TWS", "start_pos": 20, "end_pos": 23, "type": "DATASET", "confidence": 0.7161007523536682}]}, {"text": "/\" F~rne-\" TWS architecture.", "labels": [], "entities": [{"text": "F~rne-\" TWS architecture", "start_pos": 3, "end_pos": 27, "type": "DATASET", "confidence": 0.7481214006741842}]}, {"text": "The system was designed to make it easy to plug new modules into TWS.", "labels": [], "entities": [{"text": "TWS", "start_pos": 65, "end_pos": 68, "type": "DATASET", "confidence": 0.9050987362861633}]}, {"text": "We illustrate the basic interface and several application utilities that have been connected to the TWS.", "labels": [], "entities": [{"text": "TWS", "start_pos": 100, "end_pos": 103, "type": "DATASET", "confidence": 0.9284487962722778}]}, {"text": "Specifically, we illustrate the text editor (an end-user functionality), the utility for statistical processing of corpora (useful both for end users and for developers) and the ontology acquisition and maintenance tool, based on ONTOS (a developer functionality).", "labels": [], "entities": [{"text": "ontology acquisition and maintenance", "start_pos": 178, "end_pos": 214, "type": "TASK", "confidence": 0.8105307072401047}]}, {"text": "Due to the lack of space, we do not describe our interface to reference sources, such as online dictionaries or user-defined glossaries, or our interface-building interface which allows both the TWS developer and TWS user define and modify the user interfaces the system uses.", "labels": [], "entities": []}, {"text": "TWS is designed in such away that various utilities can be imported into the system, so that there is no need to implement every functionality locally.", "labels": [], "entities": [{"text": "TWS", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.8865988254547119}]}, {"text": "One example of an existing imported module in TWS is a set of bilingual text alignment routines.", "labels": [], "entities": [{"text": "TWS", "start_pos": 46, "end_pos": 49, "type": "DATASET", "confidence": 0.8343239426612854}, {"text": "text alignment", "start_pos": 72, "end_pos": 86, "type": "TASK", "confidence": 0.7090488374233246}]}, {"text": "The concept of importing utilities is very important to our work.", "labels": [], "entities": []}, {"text": "The user interface facilities of the kind we developed makes it easy to import applications with a minimum of effort and with a capability of making them \"look and feel\" similarly to the rest of the applications in the system.", "labels": [], "entities": []}, {"text": "In our future work we intend to mix the development of utilities with importing and integrating existing applications, whenever that is desirable and feasible.", "labels": [], "entities": []}, {"text": "shows a basic editing window of TWS.", "labels": [], "entities": [{"text": "TWS", "start_pos": 32, "end_pos": 35, "type": "DATASET", "confidence": 0.9039318561553955}]}, {"text": "The central feature of the TWS editor is its capability to emulate various existing word processors.", "labels": [], "entities": [{"text": "TWS editor", "start_pos": 27, "end_pos": 37, "type": "TASK", "confidence": 0.637219101190567}]}, {"text": "This feature is important from the standpoint of acceptance of the workstation environments by TM end users.", "labels": [], "entities": []}, {"text": "Currently the editor emulates WORD PERFECI\" and EMACS.", "labels": [], "entities": [{"text": "WORD", "start_pos": 30, "end_pos": 34, "type": "DATASET", "confidence": 0.519942581653595}, {"text": "PERFECI", "start_pos": 35, "end_pos": 42, "type": "METRIC", "confidence": 0.821494460105896}, {"text": "EMACS", "start_pos": 48, "end_pos": 53, "type": "DATASET", "confidence": 0.9470826983451843}]}, {"text": "illustrates the corpus processing functionality.", "labels": [], "entities": []}, {"text": "It can be used by end users to compare the usage of a term in various places in a set of documents and by the developer to gain insights for dictionary and ontology acquisition.", "labels": [], "entities": [{"text": "ontology acquisition", "start_pos": 156, "end_pos": 176, "type": "TASK", "confidence": 0.6881797909736633}]}, {"text": "A detailed discussion of the ONTOS system see in.", "labels": [], "entities": [{"text": "ONTOS", "start_pos": 29, "end_pos": 34, "type": "DATASET", "confidence": 0.47290584444999695}]}, {"text": "To include the ONTOS functionality into TWS, anew grapher has been built.", "labels": [], "entities": [{"text": "TWS", "start_pos": 40, "end_pos": 43, "type": "DATASET", "confidence": 0.8756865859031677}]}, {"text": "The grapher facilitates browsing through, editing, creating and deleting frames.", "labels": [], "entities": []}, {"text": "An important feature is its ability to handle graphs rather than trees, so that multiple inheritance can be graphically represented.", "labels": [], "entities": []}, {"text": "The ONTOS module inside TWS also supports a structured editor for manipulating ontological concepts symbolically.", "labels": [], "entities": [{"text": "TWS", "start_pos": 24, "end_pos": 27, "type": "DATASET", "confidence": 0.7838610410690308}]}, {"text": "J: A sample ontology.", "labels": [], "entities": []}, {"text": "The user may dynamically select portions of the ontology to display.", "labels": [], "entities": []}, {"text": "We believe that the TWS GRAPHER compares favorably with other graphers, notably the AGGREGRAPHS which is part of the GARNET system and the ISI GRAPHER (see.", "labels": [], "entities": [{"text": "TWS", "start_pos": 20, "end_pos": 23, "type": "DATASET", "confidence": 0.37568214535713196}, {"text": "GRAPHER", "start_pos": 24, "end_pos": 31, "type": "METRIC", "confidence": 0.7920194864273071}, {"text": "AGGREGRAPHS", "start_pos": 84, "end_pos": 95, "type": "DATASET", "confidence": 0.5433396697044373}, {"text": "GARNET system", "start_pos": 117, "end_pos": 130, "type": "DATASET", "confidence": 0.7855902314186096}, {"text": "ISI GRAPHER", "start_pos": 139, "end_pos": 150, "type": "DATASET", "confidence": 0.6011057496070862}]}, {"text": "Unlike AGGREGRAPHS, which can only display a knowledge base, our grapher lets the user edit it.", "labels": [], "entities": [{"text": "AGGREGRAPHS", "start_pos": 7, "end_pos": 18, "type": "DATASET", "confidence": 0.5604585409164429}]}, {"text": "As for the ISI GRAPHER, the latter cannot easily support more than one type of link between nodes, while the I~/s grapher can support an unlimited number of links, as well as validity and consistency tests for them.", "labels": [], "entities": [{"text": "ISI GRAPHER", "start_pos": 11, "end_pos": 22, "type": "DATASET", "confidence": 0.6325162053108215}, {"text": "validity", "start_pos": 175, "end_pos": 183, "type": "METRIC", "confidence": 0.9848222732543945}, {"text": "consistency", "start_pos": 188, "end_pos": 199, "type": "METRIC", "confidence": 0.7641756534576416}]}], "datasetContent": [], "tableCaptions": []}