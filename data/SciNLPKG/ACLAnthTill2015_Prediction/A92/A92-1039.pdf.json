{"title": [], "abstractContent": [{"text": "We describe a tool for the development and verification of broad-coverage grammars that are to be used for both analysis and generation.", "labels": [], "entities": []}, {"text": "Such a tool is used to ensure that the coverage of the grammar is sufficient (in logical terms the completeness of the grammar) and to control over-generation (the correctness of the grammar).", "labels": [], "entities": []}], "introductionContent": [{"text": "For practically applied natural language processing systems, grammars with extensive coverage are required.", "labels": [], "entities": []}, {"text": "The writing of broad-coverage grammars is so complex a task that it cannot be done on paper alone, but must be supported by powerful tools for testing the grammar with respect to consistency, coverage, overgeneration and accuracy.", "labels": [], "entities": [{"text": "consistency", "start_pos": 179, "end_pos": 190, "type": "METRIC", "confidence": 0.9825484752655029}, {"text": "accuracy", "start_pos": 221, "end_pos": 229, "type": "METRIC", "confidence": 0.9968029260635376}]}, {"text": "Grammar writing is similar to programming in that grammars and programs must be tested and debugged until their input/output behaviour meets the given specifications and they run efficiently.", "labels": [], "entities": [{"text": "Grammar writing", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.8551798462867737}]}, {"text": "Unlike programming, which can be approached by techniques like top-down refinement, modularization and soon, grammar writing is an incremental process, which consists of a cycle of \u2022 writing or modifying of the grammar, \u2022 testing of the grammar, \u2022 debugging the grammar.", "labels": [], "entities": [{"text": "grammar writing", "start_pos": 109, "end_pos": 124, "type": "TASK", "confidence": 0.7439964413642883}]}, {"text": "Grammar engineering tools must support this work cycle.", "labels": [], "entities": []}, {"text": "All existing grammar engineering tools include an editor for modification of the grammar, possibly enhanced by syntax checking, a locate function'for quick access to rules and lexical en~es.", "labels": [], "entities": []}, {"text": "More advanced Systems provide structureoriented editing or a graphical editor for feature structures.", "labels": [], "entities": []}, {"text": "Most grammar engineering tools are built around a (chart) parser, which is used to test the grammar by parsing sentences.", "labels": [], "entities": []}, {"text": "The parse results can be visualized and inspected in detail.", "labels": [], "entities": []}, {"text": "Generally, the chart, phrase structure trees and feature structures can be displayed graphically.", "labels": [], "entities": []}, {"text": "This work was supported by IBM Germany's LILOG project.", "labels": [], "entities": []}, {"text": "I would like to thank Roman Georg Arens, Jochen D0rre, Tibor Kiss, Ingo Raasch, Hans Uszkoreit and Jan Wilms for useful discussion.", "labels": [], "entities": []}, {"text": "These modes of presentation are often linked such that it is possible to select an edge of the chart or anode of the tree, and view the corresponding (sub)tree or feature structure or definition in the source file.", "labels": [], "entities": []}, {"text": "Few systems give diagnostic output that shows where a unification failure has occurred.", "labels": [], "entities": [{"text": "unification", "start_pos": 54, "end_pos": 65, "type": "TASK", "confidence": 0.9577688574790955}]}, {"text": "While a tool built around a parser is useful for checking the coverage and input/output behavior of the grammar, it does not help to control overgeneration, and is not very useful in locating errors in the grammar which are due to unification failure.", "labels": [], "entities": []}, {"text": "We propose a grammar engineering tool consisting of a parser for checking coverage, a generator for controlling overgeneration, debugging and documentation tools.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}