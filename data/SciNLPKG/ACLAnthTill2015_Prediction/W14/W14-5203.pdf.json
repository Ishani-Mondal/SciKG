{"title": [{"text": "Towards Model Driven Architectures for Human Language Technologies", "labels": [], "entities": []}], "abstractContent": [{"text": "Developing multipurpose Human Language Technologies (HLT) pipelines and integrating them into the large scale software environments is a complex software engineering task.", "labels": [], "entities": []}, {"text": "One needs to orchestrate a variety of new and legacy Natural Language Processing components, language models, linguistic and encyclopedic knowledge resources.", "labels": [], "entities": []}, {"text": "This requires working with a variety of different APIs, data formats and knowledge models.", "labels": [], "entities": []}, {"text": "In this paper, we propose to employ the Model Driven Development (MDD) approach to software engineering, which provides rich structural and behavioral modeling capabilities and solid software support for model transformation and code generation.", "labels": [], "entities": [{"text": "Model Driven Development (MDD)", "start_pos": 40, "end_pos": 70, "type": "TASK", "confidence": 0.7658184766769409}, {"text": "model transformation", "start_pos": 204, "end_pos": 224, "type": "TASK", "confidence": 0.7962026596069336}]}, {"text": "These benefits help to increase development productivity and quality of HLT assets.", "labels": [], "entities": []}, {"text": "We show how MDD techniques and tools facilitate working with different data formats, adapting to new languages and domains, managing UIMA type systems, and accessing the external knowledge bases.", "labels": [], "entities": []}], "introductionContent": [{"text": "Modern architectures of knowledge-based computing (cognitive computing) require HLT components to interact with increasingly many sources and services, such as Open Data and APIs, which may not be known before the system is designed.", "labels": [], "entities": []}, {"text": "IBM's Watson 1 , for instance, works on textual documents to provide question answering and other knowledge-based services by integrating lexical resources, ontologies, encyclopaedic data, and potentially any available information source.", "labels": [], "entities": [{"text": "question answering", "start_pos": 69, "end_pos": 87, "type": "TASK", "confidence": 0.7988413572311401}]}, {"text": "Also, they combine a variety of analytical procedures, which may use search, reasoning services, database queries, to provide answers based on many kinds of evidence.", "labels": [], "entities": []}, {"text": "Development platforms such as UIMA 2 or GATE 3 facilitate the development of HLT components to a great extent, by providing tools for annotating texts, based on vocabularies and ontologies, training and evaluating pipeline components, etc.", "labels": [], "entities": []}, {"text": "However, in general, they focus on working with specific analytical structures (annotations), rather than integrating distributed services and heterogeneous resources.", "labels": [], "entities": []}, {"text": "Such integration requires great flexibility in the way linguistic and conceptual data are encoded and exchanged, since each independent service or resource may adopt different representations for notions whose standardization is still in progress.", "labels": [], "entities": []}, {"text": "Therefore, developing HLT systems and working with them in such environments requires modeling, representing, mapping, manipulating, and exchanging linguistic and conceptual data in a robust and flexible way.", "labels": [], "entities": []}, {"text": "Supporting these tasks with mature methodologies, representational languages, and development environments appears to be of paramount importance.", "labels": [], "entities": []}, {"text": "Since the early 90s, Computer Sciences have envisioned methodologies, languages, practices, and tools for driving the development of software architectures by models (Model Driven Architecture, MDA) . The MDA approach starts from providing formal descriptions (models) of requirements, interactions, data structures, protocols and many other aspects of the desired system.", "labels": [], "entities": []}, {"text": "Then, models are turned into technical resources (e.g. schemes and software modules) by means of programmable transformation procedures.", "labels": [], "entities": []}, {"text": "Model-to-model transformations, both at schema and instance level, are also supported, based on model correspondence rules (mappings) that can be programmed in a declarative way.", "labels": [], "entities": []}, {"text": "As part of the development of UIMA-based NLP components, easily pluggable in services ecosystems, we are working on an open, flexible and interoperable pipeline, based on MDA.", "labels": [], "entities": []}, {"text": "We want our platform to be language agnostic and domain independent, to facilitate its use across projects and geographies.", "labels": [], "entities": []}, {"text": "To achieve this, we adopted the Eclipse Modeling Framework 5 as modeling and developing platform, and we generate UIMA resources (Type System) as a Platform Specific Model, by means of a specific transformation.", "labels": [], "entities": []}, {"text": "We started by designing models of all the required components, and analyzed the way to improve usability and facilitate interoperability by providing appropriate abstraction and layering.", "labels": [], "entities": []}, {"text": "In the present paper we provide the motivation of our architectural choices, we illustrate the basic features, and discuss relevant issues.", "labels": [], "entities": []}, {"text": "Also, we provide some example of how MDA facilitates the design and the implementation of open and easily adaptable HLT functionalities.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}