{"title": [{"text": "Experiments with Easy-first nonprojective constituent parsing", "labels": [], "entities": [{"text": "Easy-first nonprojective constituent parsing", "start_pos": 17, "end_pos": 61, "type": "TASK", "confidence": 0.5344410985708237}]}], "abstractContent": [{"text": "Less-configurational languages such as German often show not just morphological variation but also free word order and nonprojectivity.", "labels": [], "entities": []}, {"text": "German is not exceptional in this regard, as other morphologically-rich languages such as Czech, Tamil or Greek, offer similar challenges that make context-free constituent parsing less attractive.", "labels": [], "entities": [{"text": "context-free constituent parsing", "start_pos": 148, "end_pos": 180, "type": "TASK", "confidence": 0.6564931869506836}]}, {"text": "Advocates of dependency parsing have long pointed out that the free(r) word order and non-projective phenomena are handled in a more straightforward way by dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 13, "end_pos": 31, "type": "TASK", "confidence": 0.8574241697788239}, {"text": "dependency parsing", "start_pos": 156, "end_pos": 174, "type": "TASK", "confidence": 0.8235637247562408}]}, {"text": "However , certain other phenomena in language, such as gapping, ellipses or verbless sentences, are difficult to handle in a dependency formalism.", "labels": [], "entities": []}, {"text": "In this paper, we show that parsing of discontinuous constituents can be achieved using easy-first parsing with online reordering, an approach that previously has only been used for dependencies, and that the approach yields very fast parsing with reasonably accurate results that are close to the state of the art, surpassing existing results that use treebank grammars.", "labels": [], "entities": [{"text": "parsing of discontinuous constituents", "start_pos": 28, "end_pos": 65, "type": "TASK", "confidence": 0.8896502703428268}]}, {"text": "We also investigate the question whether phenomena where dependency representations maybe problematic-in particular, verbless clauses-can be handled by this model.", "labels": [], "entities": []}], "introductionContent": [{"text": "Automatic syntactic parsing has been fruitfully incorporated into sytems for information extraction, question answering, machine translation (, among others, but we also see syntactic structures being used to communicate facts about language use in the digital humanities or in investigations of the language of language learners.", "labels": [], "entities": [{"text": "Automatic syntactic parsing", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6666419506072998}, {"text": "information extraction", "start_pos": 77, "end_pos": 99, "type": "TASK", "confidence": 0.7605139315128326}, {"text": "question answering", "start_pos": 101, "end_pos": 119, "type": "TASK", "confidence": 0.8720694184303284}, {"text": "machine translation", "start_pos": 121, "end_pos": 140, "type": "TASK", "confidence": 0.7988594174385071}]}, {"text": "In all of these applications, we see fruitful use both of constituent trees, and of dependency trees.", "labels": [], "entities": []}, {"text": "Depending on the application, different criteria may become important: on one hand, the ability to produce structures that are (intuitively) compatible with semantic composition, or where arguments and adjuncts are related to their predicate in the tree, which commonly requires dealing with nonprojectivity.", "labels": [], "entities": []}, {"text": "Such a formalism should also deal with a wide range of constructions including verbless clauses.", "labels": [], "entities": []}, {"text": "Finally, parsing speed is somewhat important for many application cases, and a parser that changes the tokenization of the input or inserts additional \"null\" tokens runs afoul many of the fundamental assumptions in pipelines for semantic processing or information extraction.", "labels": [], "entities": [{"text": "parsing", "start_pos": 9, "end_pos": 16, "type": "TASK", "confidence": 0.9769281148910522}, {"text": "information extraction", "start_pos": 252, "end_pos": 274, "type": "TASK", "confidence": 0.7380946278572083}]}, {"text": "Because of its expressivity, the Negra/Tiger scheme has also been used for other languages such as Swedish as well as Georgian/Russian/Ukrainian, and as Early New High German (.", "labels": [], "entities": [{"text": "Negra/Tiger scheme", "start_pos": 33, "end_pos": 51, "type": "DATASET", "confidence": 0.8410129100084305}]}, {"text": "The Tiger scheme is arguably more expressive than either of the alternatives since it can capture both elliptic clauses (which are difficult to represent in normal dependency schemes) and nonprojective constructions (which have to be added as a second annotation layer in purely projective treebanks such as T\u00fcBa-D/Z).", "labels": [], "entities": []}, {"text": "It also makes it the most difficult to provide good automatic tool support, in terms of effective parsing components or of annotation tools, since parsing of discontinuous constituents has only recently become practical.", "labels": [], "entities": [{"text": "parsing", "start_pos": 98, "end_pos": 105, "type": "TASK", "confidence": 0.9677790403366089}, {"text": "parsing of discontinuous constituents", "start_pos": 147, "end_pos": 184, "type": "TASK", "confidence": 0.8736746460199356}]}, {"text": "The straightforward approach of to use a treebank-derived linear contextfree rewriting system suffers from near-exponential observed time consumption in practice.", "labels": [], "entities": []}, {"text": "Approaches that use context-free grammar approximation such as the ones of, or van, still have cubic time complexity; especially in the latter case, it is not clear whether techniques that allow fast PCFG parsing such as those of would be suitable for the subsequent steps with increased grammar complexity.", "labels": [], "entities": [{"text": "cubic time complexity", "start_pos": 95, "end_pos": 116, "type": "METRIC", "confidence": 0.7584323485692342}, {"text": "PCFG parsing", "start_pos": 200, "end_pos": 212, "type": "TASK", "confidence": 0.6698338687419891}]}, {"text": "In this paper, we present a novel application of the easy-first parsing principle of to discontinuous constituent parsing, which performs fast enough for interactive use (about 40 sentences per second) while giving an acceptable accuracy that is within the range normally seen with unmodified treebank grammars.", "labels": [], "entities": [{"text": "to discontinuous constituent parsing", "start_pos": 85, "end_pos": 121, "type": "TASK", "confidence": 0.6612213179469109}, {"text": "accuracy", "start_pos": 229, "end_pos": 237, "type": "METRIC", "confidence": 0.9976242184638977}]}, {"text": "In the remainder of the paper, we will include a short discussion of the interrelation between constituency and dependency relations of syntax, as well as relevant prior work in section 2, and discuss the construction of the parser in section 3.", "labels": [], "entities": []}, {"text": "Section 4 and following contain a discussion of quantitative results on the Tiger corpus, whereas the penultimate section contains a more detailed analysis of the parser behaviour on constructions that are problematic for either dependency parsers or projective constituent parsing.", "labels": [], "entities": [{"text": "Tiger corpus", "start_pos": 76, "end_pos": 88, "type": "DATASET", "confidence": 0.9718917310237885}, {"text": "dependency parsers or projective constituent parsing", "start_pos": 229, "end_pos": 281, "type": "TASK", "confidence": 0.6577792217334112}]}], "datasetContent": [{"text": "We applied two transformations to the data, which are automatically reversed in the parser output: one is adding NPs into PPs, which is also done by , and the other is that we make parenthetical material subordinate to its embedding clause, as also advocate.", "labels": [], "entities": []}, {"text": "Evaluation was performed using the evaluator from the DISCODOP package of van, excluding punctuation and the ROOT label added by disco-dop from the evaluation.", "labels": [], "entities": [{"text": "DISCODOP package of van", "start_pos": 54, "end_pos": 77, "type": "DATASET", "confidence": 0.9521059691905975}, {"text": "ROOT", "start_pos": 109, "end_pos": 113, "type": "METRIC", "confidence": 0.9917164444923401}]}, {"text": "Training was run for 15 epochs.", "labels": [], "entities": []}, {"text": "Parsing the 5000 development sentences took about 90-120 seconds for EAFI, which corresponds to 40-55 sentences per second (on a Core i7 2GHz) and is slightly faster than MaltParser using the ADG-derived model and a LibLinear classifier.", "labels": [], "entities": [{"text": "EAFI", "start_pos": 69, "end_pos": 73, "type": "METRIC", "confidence": 0.8212476372718811}]}, {"text": "In the results in table 2, we seethe results for the dependency-to-constiuents approach, as well as for the easy-first parsing with different reordering heuristics.", "labels": [], "entities": []}, {"text": "As in, we notice that the lazy strategy that keeps projective constituents together yields better results than the eager strategy which allows moving right away.", "labels": [], "entities": []}, {"text": "The overall results -around 76.6% f-score on gold tags and 73.1% f-score on predicted tags in sentences of 40 words and below -indicate the promise of this approach, even though they are significantly below the results of van Cranenburgh and Bod (2013) who achieve more than 78% f-measure using predicted tags on a different split of the Tiger treebank.", "labels": [], "entities": [{"text": "Tiger treebank", "start_pos": 338, "end_pos": 352, "type": "DATASET", "confidence": 0.9780525267124176}]}, {"text": "Van Cranenburgh's approach is about 15-20 times slower than ours, using 10 seconds fora 40-word sentence.", "labels": [], "entities": []}, {"text": "For informative purposes, we also included results for projective parsing in table 2, using a conversion that first attaches punctuation and then projectivizes the tree by detaching non-head children.", "labels": [], "entities": [{"text": "projective parsing", "start_pos": 55, "end_pos": 73, "type": "TASK", "confidence": 0.7048763930797577}]}, {"text": "Comparing the nonprojective parser and a variant that was trained on the projectivized version of the dataset, we see that the projective parser is about 1-2 percent worse than the nonprojective one, corresponding to our intuition that the reordering part improves the parsing on average.", "labels": [], "entities": []}, {"text": "We also see that the projective evaluation yields an estimate of parser performance that is substantially more optimistic than evaluating on the original treebank.", "labels": [], "entities": []}, {"text": "show previous results for discontinous constituent parsing on the Tiger and Negra treebanks.", "labels": [], "entities": [{"text": "discontinous constituent parsing", "start_pos": 26, "end_pos": 58, "type": "TASK", "confidence": 0.6168498595555624}, {"text": "Tiger and Negra treebanks", "start_pos": 66, "end_pos": 91, "type": "DATASET", "confidence": 0.8956578224897385}]}, {"text": "The current best results on the Tiger treebank have been achieved by van, whose approach yields 78.8% Parseval F 1 measure on the Tiger treebank in the split by, and 76.8% on the Negra treebank, in both cases with above 40% of exact matches among the sentences of up to 40 words.", "labels": [], "entities": [{"text": "Tiger treebank", "start_pos": 32, "end_pos": 46, "type": "DATASET", "confidence": 0.9891217350959778}, {"text": "Parseval F 1 measure", "start_pos": 102, "end_pos": 122, "type": "METRIC", "confidence": 0.9454382359981537}, {"text": "Tiger treebank", "start_pos": 130, "end_pos": 144, "type": "DATASET", "confidence": 0.994213730096817}, {"text": "Negra treebank", "start_pos": 179, "end_pos": 193, "type": "DATASET", "confidence": 0.9824556708335876}]}, {"text": "only report results on shorter sentences in Negra for their approach using a modified treebank LCFRS.", "labels": [], "entities": [{"text": "Negra", "start_pos": 44, "end_pos": 49, "type": "DATASET", "confidence": 0.8838376998901367}]}, {"text": "They achieve 75.6% on sentences of up to 30 words.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Results on SPMRL'13-dev (German, Tiger treebank) with varying preprocessing", "labels": [], "entities": [{"text": "SPMRL'13-dev", "start_pos": 21, "end_pos": 33, "type": "TASK", "confidence": 0.672375500202179}, {"text": "Tiger treebank)", "start_pos": 43, "end_pos": 58, "type": "DATASET", "confidence": 0.8064797421296438}]}, {"text": " Table 3: Results on SPMRL'13-dev (German, Tiger treebank) with pred preprocessing", "labels": [], "entities": [{"text": "SPMRL'13-dev (German, Tiger treebank)", "start_pos": 21, "end_pos": 58, "type": "DATASET", "confidence": 0.582880939756121}, {"text": "pred preprocessing", "start_pos": 64, "end_pos": 82, "type": "METRIC", "confidence": 0.7674899697303772}]}, {"text": " Table 4: Previous results on the Tiger treebank", "labels": [], "entities": [{"text": "Tiger treebank", "start_pos": 34, "end_pos": 48, "type": "DATASET", "confidence": 0.9766029417514801}]}, {"text": " Table 5: Previous results on the NeGra treebank", "labels": [], "entities": [{"text": "NeGra treebank", "start_pos": 34, "end_pos": 48, "type": "DATASET", "confidence": 0.9484250247478485}]}]}