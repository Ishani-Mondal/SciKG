{"title": [{"text": "Natural Language Reasoning Using proof-assistant technology: Rich Typing and beyond *", "labels": [], "entities": [{"text": "Natural Language Reasoning", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.668649693330129}]}], "abstractContent": [{"text": "In this paper, we study natural language inference based on the formal semantics in modern type theories (MTTs) and their implementations in proof-assistants such as Coq.", "labels": [], "entities": [{"text": "natural language inference", "start_pos": 24, "end_pos": 50, "type": "TASK", "confidence": 0.6404320895671844}]}, {"text": "To this end, the type theory UTT with coercive subtyping is used as the logical language in which natural language semantics is translated to, followed by the implementation of these semantics in the Coq proof-assistant.", "labels": [], "entities": []}, {"text": "Valid inferences are treated as theorems to be proven via Coq's proof machinery.", "labels": [], "entities": []}, {"text": "We shall emphasise that the rich typing mechanisms in MTTs (much richer than those in the simple type theory as used in the Montagovian setting) provide very useful tools in many respects informal semantics.", "labels": [], "entities": [{"text": "MTTs", "start_pos": 54, "end_pos": 58, "type": "TASK", "confidence": 0.8862935304641724}]}, {"text": "This is exemplified via the formalisation of various linguistic examples, including conjoined NPs, comparatives, adjectives as well as various linguistic coercions.", "labels": [], "entities": []}, {"text": "The aim of the paper is thus twofold: a) to show that the use of proof-assistant technology has indeed the potential to be developed into anew way of dealing with inference, and b) to exemplify the advantages of having a rich typing system to the study of formal semantics in general and natural language inference in particular.", "labels": [], "entities": []}], "introductionContent": [{"text": "Natural Language Inference (NLI), i.e. the task of determining whether an NL hypothesis can be inferred from an NL premise, has been an active research theme in computational semantics in which various approaches have been proposed (see, for example and some of the references therein).", "labels": [], "entities": [{"text": "Natural Language Inference (NLI)", "start_pos": 0, "end_pos": 32, "type": "TASK", "confidence": 0.7960927486419678}]}, {"text": "In this paper, we study NLI based * This work is supported by the research grant F/07-537/AJ of the Leverhulme Trust in the U.K. on formal semantics in MTTs with coercive subtyping and its implementation in the proof assistant Coq.", "labels": [], "entities": [{"text": "F/07-537/AJ", "start_pos": 81, "end_pos": 92, "type": "METRIC", "confidence": 0.7948016881942749}, {"text": "Leverhulme Trust", "start_pos": 100, "end_pos": 116, "type": "DATASET", "confidence": 0.9179214537143707}]}, {"text": "A Modern Type Theory (MTT) is a dependent type theory consisting of an internal logic, which follows the propositions-as-types principle.", "labels": [], "entities": [{"text": "Modern Type Theory (MTT)", "start_pos": 2, "end_pos": 26, "type": "TASK", "confidence": 0.7853462298711141}]}, {"text": "This latter feature along with the availability of powerful type structures make MTTs very useful for formal semantics.", "labels": [], "entities": []}, {"text": "The use of MTTs for NL semantics has been proposed with exciting results as regards various issues of NL semantics, ranging from quantification and anaphora to adjectival modification, co-predication, belief and context formalization.).", "labels": [], "entities": []}, {"text": "Recently, there has been a systematic study of MTT semantics using Luo's UTT with coercive subtyping (type theory with coercive subtyping, henceforth TTCS).", "labels": [], "entities": [{"text": "MTT semantics", "start_pos": 47, "end_pos": 60, "type": "TASK", "confidence": 0.9693128764629364}]}, {"text": "This is the version of MTT used in this paper.", "labels": [], "entities": [{"text": "MTT", "start_pos": 23, "end_pos": 26, "type": "DATASET", "confidence": 0.5111162066459656}]}, {"text": "More specifically, the paper concentrates on one of the key differences between MTTs and simple typed ones, i.e. rich typing.", "labels": [], "entities": []}, {"text": "Rich typing will be shown to be a key ingredient for both formal semantics in general and the study of NLI in particular.", "labels": [], "entities": []}, {"text": "A proof assistant is a computer system that assists the users to develop proofs of mathematical theorems.", "labels": [], "entities": []}, {"text": "A number of proof assistants implement MTTs.", "labels": [], "entities": [{"text": "MTTs", "start_pos": 39, "end_pos": 43, "type": "TASK", "confidence": 0.8968762159347534}]}, {"text": "For instance, the proof assistant Coq implements pCIC, the predicative Calculus of Inductive Constructions 1 and sup-ports some very useful tactics that can be used to help the users to automate (parts of) their proofs.", "labels": [], "entities": []}, {"text": "Proof assistants have been used in various applications in computer science (e.g., program verification) and formalised mathematics (e.g., formalisation of the proof of the 4-colour theorem in Coq).", "labels": [], "entities": [{"text": "program verification", "start_pos": 83, "end_pos": 103, "type": "TASK", "confidence": 0.8289126753807068}]}, {"text": "The above two developments, the use of MTT semantics on the one hand and the implementation of MTTs in proof assistants on the other, has opened anew research avenue: the use of existing proof assistants in dealing with NLI.", "labels": [], "entities": []}, {"text": "In this paper, two different goals are to be achieved: a) on a more practical level, to show how proof-assistant technology can be used in order to deal with NLI and b) on a theoretical level, the significance of rich typing for formal semantics and NLI in particular.", "labels": [], "entities": []}, {"text": "These two different aspects of the paper will be studied on a par, by concentrating on a number of NLI cases (quite a lot actually) that are adequately dealt with on a theoretical level via rich typing and the implementation of the account making use of rich type structures in Coq on a more practical level.", "labels": [], "entities": [{"text": "Coq", "start_pos": 278, "end_pos": 281, "type": "DATASET", "confidence": 0.9310305714607239}]}, {"text": "We shall also consider how to employ dependent typing in the coercive subtyping framework to formalise linguistic coercions.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}