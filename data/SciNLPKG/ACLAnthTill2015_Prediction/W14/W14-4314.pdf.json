{"title": [{"text": "An easy method to make dialogue systems incremental", "labels": [], "entities": []}], "abstractContent": [{"text": "Incrementality as away of managing the interactions between a dialogue system and its users has been shown to have concrete advantages over the traditional turn-taking frame.", "labels": [], "entities": []}, {"text": "Incremental systems are more reactive, more human-like, offer a better user experience and allow the user to correct errors faster, hence avoiding desynchronisations.", "labels": [], "entities": []}, {"text": "Several incremen-tal models have been proposed, however, their core underlying architecture is different from the classical dialogue systems.", "labels": [], "entities": []}, {"text": "As a result, they have to be implemented from scratch.", "labels": [], "entities": []}, {"text": "In this paper, we propose a method to transform traditional dialogue systems into incremental ones.", "labels": [], "entities": []}, {"text": "A new module, called the Scheduler is inserted between the client and the service so that from the client's point of view, the system behaves incrementally, even though the service does not.", "labels": [], "entities": []}], "introductionContent": [{"text": "An incremental compiler processes each instruction irrespectively from the others so that local modifications of the source code do not affect the global result.", "labels": [], "entities": []}, {"text": "This idea of incrementality has been adapted to the field of natural language analysis: instead of feeding modules with full utterances, the input signal is delivered and processed chunk by chunk (word byword for example) and each new piece engenders anew output hypothesis.", "labels": [], "entities": [{"text": "natural language analysis", "start_pos": 61, "end_pos": 86, "type": "TASK", "confidence": 0.6750656565030416}]}, {"text": "Human beings behave similarly when interacting with each other.", "labels": [], "entities": []}, {"text": "They understand each other gradually when they speak, they can interrupt each other and the listener is able to predict the end of an utterance before it is fully pronounced by the speaker.", "labels": [], "entities": []}, {"text": "Reading is also a task that we perform incrementally (.", "labels": [], "entities": [{"text": "Reading", "start_pos": 0, "end_pos": 7, "type": "TASK", "confidence": 0.9308457970619202}]}, {"text": "Traditional dialogue systems 1 work in a turntaking manner.", "labels": [], "entities": []}, {"text": "The user pronounces his request and after a silence is detected, the systems starts processing the utterance and planning an answer.", "labels": [], "entities": []}, {"text": "Some systems can even allow the user to barge in on them, however, they do not take the timing of the interruption into account nor try to link it with the system's utterance.", "labels": [], "entities": []}, {"text": "On the other hand, incremental dialogue systems process the user's request chunk by chunk as the latter is divided in several incremental units (IU) ().", "labels": [], "entities": []}, {"text": "They keep a hypothetical user request that evolves as new IUs arrive as input.", "labels": [], "entities": []}, {"text": "The response to this hypothesis can be used to make live feedback to the user using voice or other modalities if available.", "labels": [], "entities": []}, {"text": "As opposed to traditional systems, when the user interrupts the system, the content and the timing of its utterance are taken into account) to determine how to act on it.", "labels": [], "entities": []}, {"text": "Therefore, incremental systems have been shown to be more reactive, to offer a more human-like experience and to correct errors faster hence achieving better results in terms of user experience) and task completion).", "labels": [], "entities": []}, {"text": "Many incremental architectures have already been proposed.", "labels": [], "entities": []}, {"text": "Nevertheless, designing systems based on them requires an implementation from scratch as they are fundamentally different from traditional dialogue systems.", "labels": [], "entities": []}, {"text": "The objective of this paper is to propose a method of transforming a traditional system into an incremental one at minimal cost.", "labels": [], "entities": []}, {"text": "A new module called the Scheduler is inserted between the client and the service so that from the client's point of view, the system behaves incrementally, even though the service works in a traditional way.", "labels": [], "entities": []}, {"text": "Section 2 draws a state-of-the-art concerning incremental dialogue systems.", "labels": [], "entities": []}, {"text": "The architecture proposed here and the role of the Scheduler are presented in Section 3.", "labels": [], "entities": []}, {"text": "In Section 4, two implementations of our method are presented: CFAsT and DictaNum.", "labels": [], "entities": [{"text": "CFAsT", "start_pos": 63, "end_pos": 68, "type": "DATASET", "confidence": 0.9090855717658997}]}, {"text": "Then, a discussion is held in Section 5 before concluding the paper and presenting our next objectives in Section 6.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}