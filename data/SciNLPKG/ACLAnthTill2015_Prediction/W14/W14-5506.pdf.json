{"title": [{"text": "A hybrid approach for automatic clause boundary identification in Hindi", "labels": [], "entities": [{"text": "automatic clause boundary identification", "start_pos": 22, "end_pos": 62, "type": "TASK", "confidence": 0.6500644907355309}]}], "abstractContent": [{"text": "A complex sentence, divided into clauses, can be analyzed more easily than the complex sentence itself.", "labels": [], "entities": []}, {"text": "We present here, the task of clauses identification in Hindi text.", "labels": [], "entities": [{"text": "clauses identification", "start_pos": 29, "end_pos": 51, "type": "TASK", "confidence": 0.7935436069965363}]}, {"text": "To the best of our knowledge, not much work has been done on clause boundary identification for Hindi, which makes this task more important.", "labels": [], "entities": [{"text": "clause boundary identification", "start_pos": 61, "end_pos": 91, "type": "TASK", "confidence": 0.7530849575996399}]}, {"text": "We have built a Hybrid system which gives 90.804% F1-scores and 94.697% F1-scores for identification of clauses' start and end respectively.", "labels": [], "entities": [{"text": "F1-scores", "start_pos": 50, "end_pos": 59, "type": "METRIC", "confidence": 0.998978853225708}, {"text": "F1-scores", "start_pos": 72, "end_pos": 81, "type": "METRIC", "confidence": 0.9982748031616211}, {"text": "identification of clauses' start", "start_pos": 86, "end_pos": 118, "type": "TASK", "confidence": 0.8333356976509094}]}], "introductionContent": [{"text": "Clause is the minimal grammatical unit which can express a proposition.", "labels": [], "entities": []}, {"text": "It is a sequential group of words, containing a verb or a verb group(verb and its auxiliary), and its arguments which can be explicit or implicit in nature . This makes clause an important unit in language grammars and emphasis the need to identify and classify them as part of linguistic studies.", "labels": [], "entities": []}, {"text": "Analysis and processing of complex sentences is afar more challenging task as compared to a simple sentence.", "labels": [], "entities": [{"text": "Analysis and processing of complex sentences", "start_pos": 0, "end_pos": 44, "type": "TASK", "confidence": 0.7565261671940485}]}, {"text": "NLP applications often perform poorly as the complexity of the sentence increases.", "labels": [], "entities": []}, {"text": "\"It is impossible, to process a complex sentence if its clauses are not properly identified and classified according to their syntactic function in the sentence\".", "labels": [], "entities": []}, {"text": "Further, identifying clauses, and processing them separately are known to do better in many NLP tasks.", "labels": [], "entities": []}, {"text": "The performance of many NLP systems like Machine Translation, Parallel corpora alignment, Information Extraction, Syntactic parsing, automatic summarization and speech applications etc improves by introducing clause boundaries in a sentence (e.g.,).", "labels": [], "entities": [{"text": "Machine Translation", "start_pos": 41, "end_pos": 60, "type": "TASK", "confidence": 0.8572246134281158}, {"text": "Parallel corpora alignment", "start_pos": 62, "end_pos": 88, "type": "TASK", "confidence": 0.7522351741790771}, {"text": "Information Extraction", "start_pos": 90, "end_pos": 112, "type": "TASK", "confidence": 0.8276559710502625}, {"text": "Syntactic parsing", "start_pos": 114, "end_pos": 131, "type": "TASK", "confidence": 0.9007685482501984}]}, {"text": "We present a hybrid method which comprises of Conditional random fields(CRFs) () based statistical learning followed by some rules to automatically determine 'clause' boundaries (beginnings and ends) in complex or compound sentences.", "labels": [], "entities": []}, {"text": "CRFs is a framework for building undirected probabilistic graphical models to segment and label sequence data ().", "labels": [], "entities": []}, {"text": "In past, this framework has proved to be successful for sequence labeling task.", "labels": [], "entities": [{"text": "sequence labeling", "start_pos": 56, "end_pos": 73, "type": "TASK", "confidence": 0.8102017641067505}]}, {"text": "Van used CRFs for clause splitting task with some linguistic information giving 84.09% F1-score.", "labels": [], "entities": [{"text": "clause splitting", "start_pos": 18, "end_pos": 34, "type": "TASK", "confidence": 0.8563488721847534}, {"text": "F1-score", "start_pos": 87, "end_pos": 95, "type": "METRIC", "confidence": 0.9992008805274963}]}, {"text": "Our system has minimum dependency on linguistic resources,only part of speech (POS) and chunk information of lexical items is used with a fair performance of the system.", "labels": [], "entities": []}, {"text": "As far as we know, not much work has been done on clause boundary identification for Hindi and this makes this task more significant.", "labels": [], "entities": [{"text": "clause boundary identification", "start_pos": 50, "end_pos": 80, "type": "TASK", "confidence": 0.7786356608072916}]}, {"text": "This paper is structured as follows: In Section 2, we discuss the related works that has been done earlier on clause identification.", "labels": [], "entities": [{"text": "clause identification", "start_pos": 110, "end_pos": 131, "type": "TASK", "confidence": 0.869131326675415}]}, {"text": "Section 3 describes the creation of dataset for various system use.", "labels": [], "entities": []}, {"text": "In Section 4, we talk about methodology of our system.", "labels": [], "entities": []}, {"text": "Section 5 outlines the system performance.", "labels": [], "entities": []}, {"text": "In section 6, some issues related clause identification are discussed.", "labels": [], "entities": [{"text": "clause identification", "start_pos": 34, "end_pos": 55, "type": "TASK", "confidence": 0.8682551085948944}]}, {"text": "In Section 7, we conclude and talk about future works in this area.", "labels": [], "entities": []}], "datasetContent": [{"text": "In Hindi, We don't have any data available annotated with clause boundary, Soto generate clause annotated corpora we have used () technique where they have showed how implicit clause information present in dependency trees can be used to extract clauses in sentences.", "labels": [], "entities": []}, {"text": "By this technique we have automatically generated 16000 sentences of Hindi treebank) marked with clause boudaries.", "labels": [], "entities": []}, {"text": "Out of which, 14500 sentences were taken as training set, 500 for development set and remaining 1000 sentences for testing set.", "labels": [], "entities": []}, {"text": "As these sentences were generated automatically there are chances of noises inform of wrongly marked clause boundaries, so for proper evaluation of the system, we have manually corrected the wrongly marked clauses in development and testing sets.", "labels": [], "entities": []}, {"text": "As mentioned earlier we have used () technique to automatically generate 16000 sentences of Hindi treebank marked with clause boundaries.", "labels": [], "entities": []}, {"text": "Out of these 16000 sentences, a set of 1500 sentences with average length of 16 words was randomly selected.", "labels": [], "entities": []}, {"text": "This set was then manually corrected at the level of clause boundary for accurate evaluation of the system.", "labels": [], "entities": []}, {"text": "It should be noted that this set was not used in training of the models.", "labels": [], "entities": []}, {"text": "Further we have divided this set into two set; development set which consist of 500 sentences and testing set which consist of 1000 sentences.", "labels": [], "entities": []}, {"text": "We have evaluated the system with both models (step-by-step and merged) along with post-processing module, and we have noticed system with step-by-step model performs better than the system with merged model.: Results on testing set.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Results on development set.", "labels": [], "entities": []}, {"text": " Table 3: Results on testing set.", "labels": [], "entities": []}]}