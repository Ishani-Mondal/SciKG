{"title": [{"text": "Generalizing inflection tables into paradigms with finite state operations", "labels": [], "entities": []}], "abstractContent": [{"text": "Extracting and performing an alignment of the longest common subsequence in inflection tables has been shown to be a fruitful approach to supervised learning of morphological paradigms.", "labels": [], "entities": []}, {"text": "However, finding the longest subsequence common to multiple strings is well known to bean intractable problem.", "labels": [], "entities": []}, {"text": "Additional constraints on the solution sought complicate the problem further-such as requiring that the particular subsequence extracted, if there is ambiguity, be one that is best alignable in an inflection table.", "labels": [], "entities": []}, {"text": "In this paper we present and discuss the design of a tool that performs the extraction through some advanced techniques infinite state calculus and does so efficiently enough for the practical purposes of inflection table generalization.", "labels": [], "entities": [{"text": "inflection table generalization", "start_pos": 205, "end_pos": 236, "type": "TASK", "confidence": 0.621515820423762}]}], "introductionContent": [{"text": "Supervised learning of morphological paradigms from inflection tables has recently been approached from a number of directions.", "labels": [], "entities": []}, {"text": "One approach is given in, where morphological paradigm induction is performed by extracting the longest common subsequence (LCS) from a set of words representing an inflection table.", "labels": [], "entities": [{"text": "morphological paradigm induction", "start_pos": 32, "end_pos": 64, "type": "TASK", "confidence": 0.6891693274180094}]}, {"text": "Although that work presents encouraging results as regards learning morphological paradigms from inflection tables, no details are given as to how the paradigms themselves are extracted.", "labels": [], "entities": []}, {"text": "The purpose of this paper is to describe how such a paradigm extraction procedure can be performed using only finite state operations.", "labels": [], "entities": [{"text": "paradigm extraction", "start_pos": 52, "end_pos": 71, "type": "TASK", "confidence": 0.760907769203186}]}, {"text": "Extracting the longest common subsequence from a large number of strings is known as the multiple longest common subsequence problem (MLCS), and is computationally intractable.", "labels": [], "entities": []}, {"text": "In fields like bioinformatics specialized heuristic algorithms have been developed for efficiently extracting common subsequences from DNA sequences.", "labels": [], "entities": []}, {"text": "In linguistics applications where the goal is to extract common patterns in an inflection table, however, the problem manifests itself in a different guise.", "labels": [], "entities": []}, {"text": "While most applications in other fields work with a small number of fairly long sequences, inflection tables may contain hundreds of short sequences.", "labels": [], "entities": []}, {"text": "Additionally, it is not enough to extract the LCS from an inflection table.", "labels": [], "entities": []}, {"text": "The LCS itself is often ambiguous and maybe factorized in several different ways in a table.", "labels": [], "entities": []}, {"text": "This means that we operate under the additional constraint that the LCS must not only be found, but, in case of ambiguity, its most contiguous factorization must also be indicated, as this often produces linguistically interesting generalizations.", "labels": [], "entities": []}, {"text": "In this paper we will address the problem of extracting the minimal MLCS through entirely finite state means.", "labels": [], "entities": []}, {"text": "Finite state methods lend themselves to solving this kind of an optimization problem concisely, and, as it turns out, also efficiently enough for practical purposes.", "labels": [], "entities": []}, {"text": "This paper is laid out as follows.", "labels": [], "entities": []}, {"text": "First, we outline the MLCS-based approach to supervised learning of morphological paradigms in section 2.", "labels": [], "entities": []}, {"text": "We then describe in broad strokes the algorithm required for generalizing inflection tables into paradigms in section 3.", "labels": [], "entities": [{"text": "generalizing inflection tables", "start_pos": 61, "end_pos": 91, "type": "TASK", "confidence": 0.8583523631095886}]}, {"text": "Next, we give a finite state implementation of the algorithm in section 4, followed by a brief discussion of a stand-alone software tool based on this that extracts paradigms from collections of inflection tables in section 5.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2:  Paradigm generalization from  Wiktionary-gathered inflection tables.", "labels": [], "entities": [{"text": "Paradigm generalization", "start_pos": 11, "end_pos": 34, "type": "TASK", "confidence": 0.8989265263080597}]}]}