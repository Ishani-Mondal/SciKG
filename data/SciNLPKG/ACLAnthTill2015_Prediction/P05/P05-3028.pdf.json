{"title": [{"text": "A Flexible Stand-Off Data Model with Query Language for Multi-Level Annotation", "labels": [], "entities": []}], "abstractContent": [{"text": "We present an implemented XML data model and anew, simplified query language for multi-level annotated corpora.", "labels": [], "entities": []}, {"text": "The new query language involves automatic conversion of queries into the underlying , more complicated MMAXQL query language.", "labels": [], "entities": [{"text": "MMAXQL query language", "start_pos": 103, "end_pos": 124, "type": "DATASET", "confidence": 0.8225057323773702}]}, {"text": "It supports queries for sequential and hierarchical, but also associative (e.g. coreferential) relations.", "labels": [], "entities": []}, {"text": "The simplified query language has been designed with non-expert users in mind.", "labels": [], "entities": []}], "introductionContent": [{"text": "Growing interest in richly annotated corpora is a driving force for the development of annotation tools that can handle multiple levels of annotation.", "labels": [], "entities": []}, {"text": "We find it crucial in order to make full use of the potential of multi-level annotation that individual annotation levels be treated as self-contained modules which are independent of other annotation levels.", "labels": [], "entities": []}, {"text": "This independence should also include the storing of each level in a separate file.", "labels": [], "entities": []}, {"text": "If these principles are observed, annotation data management (incl.", "labels": [], "entities": [{"text": "annotation data management", "start_pos": 34, "end_pos": 60, "type": "TASK", "confidence": 0.6324243446191152}]}, {"text": "level addition, removal and replacement, but also conversion into and from other formats) is greatly facilitated.", "labels": [], "entities": [{"text": "level addition", "start_pos": 0, "end_pos": 14, "type": "TASK", "confidence": 0.6655450463294983}]}, {"text": "The way to keep individual annotation levels independent of each other is by defining each with direct reference to the underlying basedata, i.e. the text or transcribed speech.", "labels": [], "entities": []}, {"text": "Both sequential and hierarchical (i.e. embedding or dominance) relations between markables on different levels are thus only expressed implicitly, viz. by means of the relations of their basedata elements.", "labels": [], "entities": []}, {"text": "While it has become common practice to use the stand-off mechanism to relate several annotation levels to one basedata file, it is also not uncommon to find this mechanism applied for relating markables to other markables (on a different or the same level) directly, expressing the relation between them explicitly.", "labels": [], "entities": []}, {"text": "We argue that this is unfavourable not only with respect to annotation data management (cf. above), but also with respect to querying: Users should not be required to formulate queries in terms of structural properties of data representation that are irrelevant for their query.", "labels": [], "entities": [{"text": "annotation data management", "start_pos": 60, "end_pos": 86, "type": "TASK", "confidence": 0.6880078017711639}]}, {"text": "Instead, users should be allowed to relate markables from all levels in a fairly unrestricted and ad-hoc way.", "labels": [], "entities": []}, {"text": "Since querying is thus considerably simplified, exploratory data analysis of annotated corpora is facilitated for all users, including non-experts.", "labels": [], "entities": []}, {"text": "Our multi-level annotation tool MMAX2 1 uses implicit relations only.", "labels": [], "entities": [{"text": "MMAX2", "start_pos": 32, "end_pos": 37, "type": "DATASET", "confidence": 0.8554005026817322}]}, {"text": "Its query language MMAXQL is rather complicated and not suitable for naive users.", "labels": [], "entities": [{"text": "MMAXQL", "start_pos": 19, "end_pos": 25, "type": "DATASET", "confidence": 0.8836594223976135}]}, {"text": "We present an alternative query method consisting of a simpler and more intuitive query language and a method to generate MMAXQL queries from the former.", "labels": [], "entities": []}, {"text": "The new, simplified MMAXQL can express a wide range of queries in a concise way, including queries for associative relations representing e.g. coreference.", "labels": [], "entities": [{"text": "MMAXQL", "start_pos": 20, "end_pos": 26, "type": "DATASET", "confidence": 0.8033440709114075}]}], "datasetContent": [], "tableCaptions": []}