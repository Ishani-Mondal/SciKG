{"title": [{"text": "Simple Algorithms for Complex Relation Extraction with Applications to Biomedical IE", "labels": [], "entities": [{"text": "Complex Relation Extraction", "start_pos": 22, "end_pos": 49, "type": "TASK", "confidence": 0.8047749201456705}, {"text": "IE", "start_pos": 82, "end_pos": 84, "type": "TASK", "confidence": 0.79697185754776}]}], "abstractContent": [{"text": "A complex relation is any n-ary relation in which some of the arguments maybe be unspecified.", "labels": [], "entities": []}, {"text": "We present here a simple two-stage method for extracting complex relations between named entities in text.", "labels": [], "entities": [{"text": "extracting complex relations between named entities in text", "start_pos": 46, "end_pos": 105, "type": "TASK", "confidence": 0.8447420671582222}]}, {"text": "The first stage creates a graph from pairs of entities that are likely to be related, and the second stage scores maximal cliques in that graph as potential complex relation instances.", "labels": [], "entities": []}, {"text": "We evaluate the new method against a standard baseline for extracting genomic variation relations from biomed-ical text.", "labels": [], "entities": []}], "introductionContent": [{"text": "Most research on text information extraction (IE) has focused on accurate tagging of named entities.", "labels": [], "entities": [{"text": "text information extraction (IE)", "start_pos": 17, "end_pos": 49, "type": "TASK", "confidence": 0.8349205454190572}, {"text": "accurate tagging of named entities", "start_pos": 65, "end_pos": 99, "type": "TASK", "confidence": 0.7151175558567047}]}, {"text": "Successful early named-entity taggers were based on finite-state generative models ().", "labels": [], "entities": [{"text": "named-entity taggers", "start_pos": 17, "end_pos": 37, "type": "TASK", "confidence": 0.7314584851264954}]}, {"text": "More recently, discriminatively-trained models have been shown to be more accurate than generative models (;).", "labels": [], "entities": [{"text": "generative", "start_pos": 88, "end_pos": 98, "type": "TASK", "confidence": 0.9730035662651062}]}, {"text": "Both kinds of models have been developed for tagging entities such as people, places and organizations in news material.", "labels": [], "entities": [{"text": "tagging entities such as people, places and organizations in news material", "start_pos": 45, "end_pos": 119, "type": "TASK", "confidence": 0.7365251829226812}]}, {"text": "However, the rapid development of bioinformatics has recently generated interest on the extraction of biological entities such as genes () and genomic variations () from biomedical literature.", "labels": [], "entities": []}, {"text": "The next logical step for IE is to begin to develop methods for extracting meaningful relations involving named entities.", "labels": [], "entities": [{"text": "IE", "start_pos": 26, "end_pos": 28, "type": "TASK", "confidence": 0.995600700378418}, {"text": "extracting meaningful relations involving named entities", "start_pos": 64, "end_pos": 120, "type": "TASK", "confidence": 0.814307451248169}]}, {"text": "Such relations would be extremely useful in applications like question answering, automatic database generation, and intelligent document searching and indexing.", "labels": [], "entities": [{"text": "question answering", "start_pos": 62, "end_pos": 80, "type": "TASK", "confidence": 0.9377123117446899}, {"text": "database generation", "start_pos": 92, "end_pos": 111, "type": "TASK", "confidence": 0.6856854110956192}, {"text": "document searching and indexing", "start_pos": 129, "end_pos": 160, "type": "TASK", "confidence": 0.7224781662225723}]}, {"text": "Though not as well studied as entity extraction, relation extraction has still seen a significant amount of work.", "labels": [], "entities": [{"text": "entity extraction", "start_pos": 30, "end_pos": 47, "type": "TASK", "confidence": 0.81448033452034}, {"text": "relation extraction", "start_pos": 49, "end_pos": 68, "type": "TASK", "confidence": 0.9708017110824585}]}, {"text": "We discuss some previous approaches at greater length in Section 2.", "labels": [], "entities": []}, {"text": "Most relation extraction systems focus on the specific problem of extracting binary relations, such as the employee of relation or protein-protein interaction relation.", "labels": [], "entities": [{"text": "relation extraction", "start_pos": 5, "end_pos": 24, "type": "TASK", "confidence": 0.7602082192897797}]}, {"text": "Very little work has been done in recognizing and extracting more complex relations.", "labels": [], "entities": []}, {"text": "We define a complex relation as any n-ary relation among n typed entities.", "labels": [], "entities": []}, {"text": "The relation is defined by the schema (t 1 , . .", "labels": [], "entities": []}, {"text": ", tn ) where ti \u2208 T are entity types.", "labels": [], "entities": []}, {"text": "An instance (or tuple) in the relation is a list of entities (e 1 , . .", "labels": [], "entities": []}, {"text": ", en ) such that either type(e i ) = ti , ore i =\u22a5 indicating that the ith element of the tuple is missing.", "labels": [], "entities": []}, {"text": "For example, assume that the entity types are T = {person, job, company} and we are interested in the ternary relation with schema (person, job, company) that relates a person to their job at a particular company.", "labels": [], "entities": []}, {"text": "For the sentence \"John Smith is the CEO at Inc.", "labels": [], "entities": []}, {"text": "Corp.\", the system would ideally extract the tuple (John Smith, CEO, Inc. Corp.).", "labels": [], "entities": []}, {"text": "However, for the sentence \"Everyday John Smith goes to his office at Inc.", "labels": [], "entities": []}, {"text": "Corp.\", the system would extract (John Smith, \u22a5, Inc. Corp.), since there is no mention of a job title.", "labels": [], "entities": [{"text": "John Smith, \u22a5, Inc. Corp.)", "start_pos": 34, "end_pos": 60, "type": "DATASET", "confidence": 0.9535556212067604}]}, {"text": "Hence, the goal of complex relation extraction is to identify all instances of the relation of interest in some piece of text, including incomplete instances.", "labels": [], "entities": [{"text": "complex relation extraction", "start_pos": 19, "end_pos": 46, "type": "TASK", "confidence": 0.6579703291257223}]}, {"text": "We present here several simple methods for extracting complex relations.", "labels": [], "entities": []}, {"text": "All the methods start by recognized pairs of entity mentions, that is, binary relation instances, that appear to be arguments of the relation of interest.", "labels": [], "entities": []}, {"text": "Those pairs can be seen as the edges of a graph with entity mentions as nodes.", "labels": [], "entities": []}, {"text": "The algorithms then try to reconstruct complex relations by making tuples from selected maximal cliques in the graph.", "labels": [], "entities": []}, {"text": "The methods are general and can be applied to any complex relation fitting the above definition.", "labels": [], "entities": []}, {"text": "We also assume throughout the paper that the entities and their type are known a priori in the text.", "labels": [], "entities": []}, {"text": "This is a fair assumption given the current high standard of state-of-the-art named-entity extractors.", "labels": [], "entities": []}, {"text": "A primary advantage of factoring complex relations into binary relations is that it allows the use of standard classification algorithms to decide whether particular pairs of entity mentions are related.", "labels": [], "entities": []}, {"text": "In addition, the factoring makes training data less sparse and reduces the computational cost of extraction.", "labels": [], "entities": []}, {"text": "We will discuss these benefits further in Section 4.", "labels": [], "entities": []}, {"text": "We evaluated the methods on a large set of annotated biomedical documents to extract relations related to genomic variations, demonstrating a considerable improvement over a reasonable baseline.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Binary relation classification results for the  maximum entropy classifier. ACT: actual number of  related pairs, PRD: predicted number of related pairs  and COR: correctly identified related pairs.", "labels": [], "entities": [{"text": "Binary relation classification", "start_pos": 10, "end_pos": 40, "type": "TASK", "confidence": 0.6042395730813345}, {"text": "ACT", "start_pos": 86, "end_pos": 89, "type": "METRIC", "confidence": 0.9976060390472412}, {"text": "COR", "start_pos": 168, "end_pos": 171, "type": "METRIC", "confidence": 0.9770467877388}]}, {"text": " Table 3: Full relation classification results. For a  relation to be classified correctly, all the entities in  the relation must be correctly identified.", "labels": [], "entities": [{"text": "Full relation classification", "start_pos": 10, "end_pos": 38, "type": "TASK", "confidence": 0.6828475395838419}]}, {"text": " Table 4: Breakdown of true positive relations by  type that were returned by each system. Each cell  contains three numbers, Actual:Predicted:Correct,  which represents for each arity the actual, predicted  and correct number of relations for each system.", "labels": [], "entities": [{"text": "Breakdown of true positive relations", "start_pos": 10, "end_pos": 46, "type": "TASK", "confidence": 0.772049081325531}, {"text": "Predicted", "start_pos": 133, "end_pos": 142, "type": "METRIC", "confidence": 0.992347002029419}, {"text": "Correct", "start_pos": 143, "end_pos": 150, "type": "METRIC", "confidence": 0.8941389918327332}]}]}