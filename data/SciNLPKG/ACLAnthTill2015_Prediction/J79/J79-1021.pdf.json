{"title": [{"text": "Current bibliography -26 AMERICA@ JOURlUAL OF COMPUTATIONAL tTNGUISTICS is published by the Center for Applied Linguistics for the Association for Computational Linguistics MANAGEMENT STAFF Americaa Journal of Computational Linguistics This I MP L IE S HAVING SOME K IN D OF MEMORY STRUCTURE IN WHICH THE INTERRELATIONSHIPS O F VARIOUS P IE C E SO F KNOWLEDGE ARE STORED AND IN T O WHICH NEW THE MEANINGS O F THE TERMS STORED IN MEMORY ARE PRE", "labels": [], "entities": [{"text": "STAFF Americaa Journal of Computational Linguistics", "start_pos": 184, "end_pos": 235, "type": "DATASET", "confidence": 0.7689768423636755}, {"text": "VARIOUS P IE C E SO F KNOWLEDGE ARE", "start_pos": 328, "end_pos": 363, "type": "METRIC", "confidence": 0.8905648390452067}]}], "abstractContent": [{"text": "Ihe maohine translation problem has recently been replaced by much narrower goals and computer processing of language has become part df artificial intelligence (AI), speech recognition, and structural pattern recognition.", "labels": [], "entities": [{"text": "Ihe maohine translation", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.5877706209818522}, {"text": "speech recognition", "start_pos": 167, "end_pos": 185, "type": "TASK", "confidence": 0.7741307318210602}, {"text": "structural pattern recognition", "start_pos": 191, "end_pos": 221, "type": "TASK", "confidence": 0.6635171075661978}]}, {"text": "These are each specialized computer science research fields with distinct objectives and assumptions.", "labels": [], "entities": []}, {"text": "The narrower goals involve making it possible fora computer user to employ a near natural-language mode for problem-salving, information retrieval, and other applications.", "labels": [], "entities": [{"text": "information retrieval", "start_pos": 125, "end_pos": 146, "type": "TASK", "confidence": 0.7964266538619995}]}, {"text": "Naturdl computer responses have also been created and a special term, \"understanding\", has been used to describe the resulting computek-human dialogues.", "labels": [], "entities": []}, {"text": "Phe purpose of this paper is to survey these recent developments to make the A1 literature accessible to researchers mainly interested in computation on written text or spoken language.", "labels": [], "entities": []}, {"text": "1, INTRODUCTION The computer literature discussed in this paper uses several linguistic terms in special ways, when there is a possibility sf congusion, quotation marks will be used to identify technical terms in computer science.", "labels": [], "entities": [{"text": "INTRODUCTION", "start_pos": 3, "end_pos": 15, "type": "METRIC", "confidence": 0.754523754119873}]}, {"text": "The term \"understanding\" is frequently used as a synonym for \"the addition of logical relationships or semantics to syntactic pro-cessing\".", "labels": [], "entities": []}, {"text": "This use is substantially qarrower than the word's implicit association with \"human behavior implemented by computer'' the narrower use is introduced as a neutral reference point, The question of whether a computer porgram can operate in a human-like way is central to artificial intelligence.", "labels": [], "entities": []}, {"text": "\"Do current 'understanding' program systems show how extended human-like capability can be implemented using com-puters?\" is a related pragmatic questton Initially this investigation sought to examine whether programs which \"under-stand\" language in the stipulated narrow sense are protatypes which could lead to expanded capability.", "labels": [], "entities": []}, {"text": "Unfortunately, \"language understanding\" and its special subtopic \"speeeh understanding'' are insufficiently developed to permit profitable discussion of the original question Hence an operational approach to the recent literature is taken here.", "labels": [], "entities": [{"text": "language understanding", "start_pos": 16, "end_pos": 38, "type": "TASK", "confidence": 0.7173692435026169}]}, {"text": "This paper outlines how \"language understanding\" research has evolved and identifies key elements of program organization used to achieve limited computer \"understanding\".", "labels": [], "entities": [{"text": "language understanding\"", "start_pos": 25, "end_pos": 48, "type": "TASK", "confidence": 0.7983923554420471}]}, {"text": "2, LEVEL AND DOMAIN Current A 1 programs for lankuage processing are organized by level and restricted to specified domains.", "labels": [], "entities": [{"text": "LEVEL", "start_pos": 3, "end_pos": 8, "type": "METRIC", "confidence": 0.9973209500312805}, {"text": "DOMAIN", "start_pos": 13, "end_pos": 19, "type": "METRIC", "confidence": 0.9816375374794006}, {"text": "lankuage processing", "start_pos": 45, "end_pos": 64, "type": "TASK", "confidence": 0.8635494410991669}]}, {"text": "This section presents those ideas and comments on the limitations that they entail.", "labels": [], "entities": []}, {"text": "Three principal levels of language-processing software are 1.", "labels": [], "entities": []}, {"text": "\"Lexical\" (allowed vocabulary) 2.", "labels": [], "entities": []}, {"text": "\"Syntactic\" (allowed phrases or sentences) 3 \"Semantic\" (allowed meanings) ln practice all these levels must operate many times for the computer to interpret even a small portion, say two words, of restricted natural-language input.", "labels": [], "entities": []}, {"text": "Programs that perform operations on each level are, respectively, 1.", "labels": [], "entities": []}, {"text": "2. Word string acceptable grammatically?", "labels": [], "entities": []}, {"text": "3. Word string acceptable logically?", "labels": [], "entities": []}, {"text": "A program to detect \"meaning\" (logical consequences of word interpretations) must also perform grammatical operations for certain words to determine apart of speech (noun, verb, adjective , etc.)", "labels": [], "entities": []}, {"text": "One method makes a tentative assigrlment, parses, then tests for plausibility via consistency with known facts.", "labels": [], "entities": []}, {"text": "To reduce the complexity of this task, the designer limits the subset of language allower or the \"world\" (i.e. the subject) discussed.", "labels": [], "entities": []}, {"text": "The word \"domain\" sums up this concept, other terms for \"restricted domain\" are \"limited scope of discourse\", \"narrow problem domain\", and \"restricted English framework\" The limitation of vocabulary or context constrains the lexicon and semantics of the \"language\".", "labels": [], "entities": []}, {"text": "The trend in t he design of software for \"natural-language understanding\" is to deal with (a) a specialized vocabulary, and (b) a particular context or set of allowed interpretations in order to reduce processing time.", "labels": [], "entities": [{"text": "natural-language understanding", "start_pos": 42, "end_pos": 72, "type": "TASK", "confidence": 0.7552649974822998}]}, {"text": "Although computing results for several highly specialized problems Le,g.", "labels": [], "entities": []}, {"text": "7, 231 are impressive examples of language processing in restricted domains, they do not answer several key concerns.", "labels": [], "entities": [{"text": "language processing", "start_pos": 34, "end_pos": 53, "type": "TASK", "confidence": 0.7203528583049774}]}, {"text": "1. Do specialized vocabularies have sufficient complexity to warrant comparison with true natural language?", "labels": [], "entities": []}, {"text": "2. Are current \"understanding\" programs, organized by level and using domain reatrictidn, extendable to true natural language?", "labels": [], "entities": []}, {"text": "Syntactic processing is interdependent with meaning and involves the allowed logical relationships among words %n the lexicon.", "labels": [], "entities": [{"text": "Syntactic processing", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.8913097083568573}]}, {"text": "Most natural-language software is highly developed at the \"syntactic\" level Howwer, the number of times the \"syntactic\" level must be ent'ered can grow explosively as the \"naturalness\" of the language to be processed increases.", "labels": [], "entities": [{"text": "Howwer", "start_pos": 76, "end_pos": 82, "type": "DATASET", "confidence": 0.9535519480705261}]}, {"text": "Success on artificial domains cannot imply a great deal about processing truly natural language.", "labels": [], "entities": []}, {"text": "3 , PROGRAM SYSTEMS The systems cited in this section answer questions, perform commands, or conduct dialogues.", "labels": [], "entities": []}, {"text": "Programs that enable a user to execute a task via computer in an on-line mode are generally called \"interactive\" Some systems are so rich in their language-processing capability that they are called \"conversational\" Systems that have complicated capabilities and can reply with a sophisticated tesponse to an inquiry are called \"question answering\".", "labels": [], "entities": [{"text": "question answering", "start_pos": 329, "end_pos": 347, "type": "TASK", "confidence": 0.816955953836441}]}, {"text": "The survey [I] discusses two \"conversational\" pkograms ELIZA [2, 31 and STUDENT [41, which answers questions regarding algebraic word problems.", "labels": [], "entities": [{"text": "ELIZA", "start_pos": 55, "end_pos": 60, "type": "METRIC", "confidence": 0.84815514087677}, {"text": "STUDENT", "start_pos": 72, "end_pos": 79, "type": "METRIC", "confidence": 0.9245779514312744}]}, {"text": "SIR [51 answers questions about logic.", "labels": [], "entities": [{"text": "SIR", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.5392430424690247}]}, {"text": "Both [41 and [51 appear in [61 , the introd,rction there provides a general discussion of \"semantic information and computer programs involving \"semantics\" The \"question-answering\" program systems described in [2-51 were sophisticated mainly in methods of solving a problem or determining a response to a statement.", "labels": [], "entities": [{"text": "determining a response to a statement", "start_pos": 277, "end_pos": 314, "type": "TASK", "confidence": 0.5901919504006704}]}, {"text": "Other systems have emphasized the retrieval of facts encoded in English.", "labels": [], "entities": [{"text": "retrieval of facts encoded in English", "start_pos": 34, "end_pos": 71, "type": "TASK", "confidence": 0.8013361990451813}]}, {"text": "The \"blocks-world\" system described in [71 contrasts with these in that it has sophisticated language-processing capability It infers antecedents of pronouns and resolves ambiguities in input word strings regarding blocks on a table.", "labels": [], "entities": []}, {"text": "The distinction between \"interactive\", \"conversational\", and \"question-answering\" is less important when the blocks-world is the. domain.", "labels": [], "entities": []}, {"text": "The computer-science contribution is a program to interaet ,wfth the domain as if it could \"underktand\" the input, in the sense that it takes the proper action even when the input is somewhat ambiguous.", "labels": [], "entities": []}, {"text": "To resolve ambiguities the program refers to existing relationships among the blocks.", "labels": [], "entities": []}, {"text": "The effect of [71 was to provide a sophisticated example of computer \"understanding\" which led to attempts to apply similar principLes to speech inputs.", "labels": [], "entities": []}, {"text": "(More detail on parallel developments in speech processing is presented later.)", "labels": [], "entities": [{"text": "speech processing", "start_pos": 41, "end_pos": 58, "type": "TASK", "confidence": 0.7583396136760712}]}, {"text": "The early \"language-understanding\" systems, BASEBALL [ 9 ] , ELLZA, and STUDENT, were based on two special formats: one to represent the knowledge they store and one to find meaning in the English input.", "labels": [], "entities": [{"text": "BASEBALL", "start_pos": 44, "end_pos": 52, "type": "METRIC", "confidence": 0.8901349902153015}, {"text": "ELLZA", "start_pos": 61, "end_pos": 66, "type": "METRIC", "confidence": 0.994536817073822}, {"text": "STUDENT", "start_pos": 72, "end_pos": 79, "type": "METRIC", "confidence": 0.895268440246582}]}, {"text": "They discard all input information which cannot be transformed for internal storage.", "labels": [], "entities": []}, {"text": "The comparison of ELIZA and STUDENT in [I] is with regard to the degree of \"understanding\" ELIZA responds either by transfoiming the input sentence (essentially mimicry) following isolation of a keyword or by using a prestored content-free remark.", "labels": [], "entities": []}, {"text": "STUDENT translates natural-language \"descriptions of algebraic equations, ...", "labels": [], "entities": []}, {"text": "proceeds to identify the unknowns involved and the relationships which hold between them, and (obtains and solves) a set of equations\" [ I , p 851.", "labels": [], "entities": []}, {"text": "Hence ELIZA munderstands\" only a few key words; it transf6rms these words via a seatence-reassembly rule, discards other parts of the sentence, and adds stock phrases to create the response.", "labels": [], "entities": []}, {"text": "STUDENT solves the underlying algebraic problem-i t \"unders'tands\" in that it \"answers questions based on information contained in the input\" [4, p.", "labels": [], "entities": []}, {"text": "1351. ELIZA responds but does not \"understand\", since the reply has little to do with the information in the input sentence, but rather serves to keep the person in a dialogue.", "labels": [], "entities": []}, {"text": "Programs with an ability to spout back similar to ELIZA's usually store a body of text and an indexing scheme to it.", "labels": [], "entities": []}, {"text": "This approach has obvious limitations and was replaced by systems that use a formal representation to store limited logical concepts associated with the text.", "labels": [], "entities": []}, {"text": "One of them is SIR, which can deduce set relationships anong objects described by natural language.", "labels": [], "entities": []}, {"text": "SIR is designed to meet the requirement that \"in addition tu echoing, upon request, the facts it has been given, a machine which 'understands' must be able to recognize the logical implications of those facts.", "labels": [], "entities": [{"text": "SIR", "start_pos": 0, "end_pos": 3, "type": "TASK", "confidence": 0.9250577688217163}]}, {"text": "It alqo must be able to identify (from a large data store) facts which are relevant to 8 particular question'' [51.", "labels": [], "entities": []}, {"text": "Limited-logic systems are important because they provide methods to represent complex facts encoded in English-language statements so that the facts can be used by computer programs or accessed by a person who did not input the original textual statement of the fact.", "labels": [], "entities": []}, {"text": "Such a second user may employ a completely different form of language encoding.", "labels": [], "entities": []}, {"text": "Programs of this sort include DEACON [lo, 111 and the early version of CONVERSE [121.", "labels": [], "entities": [{"text": "DEACON", "start_pos": 30, "end_pos": 36, "type": "METRIC", "confidence": 0.8131412267684937}]}, {"text": "The former could \"handle time questions\" and used a bottom-up analysis method which allowed questions to be nested.", "labels": [], "entities": []}, {"text": "For example, the question \"Who is the commander of the battalion at Fort Fubar?\" was handled by first internally answering the questian \"What battalion is at Fort Fubar?\"", "labels": [], "entities": []}, {"text": "The answer was then substituted directly into the original question to make ic \"Who is the commander of the 69th batta-lion?\" which the system then answered.", "labels": [], "entities": []}, {"text": "371 CONVERSE contained provisions for allwing even more complex forms of input questions (Recent versions are described in 113-151 .) Deductive systems can be divided into general systems which add a flrst-order predicate-calculus theorem-proving capability to limited-loglc systems to improve the complexity oE the facts they can \"infer\", and proccdurnl systcms which enable other computations to obtain complex information The theorem-proving capability is designed to work Erom a group of logical statements given as input (or statements consistent with the'se input s-tements) However, facts INCONSISTENT with the original statements cannot always be detected and deductive systems quickly become impractical as the number of input statements (elementary facts, axioms) becomes large [ b , 7, 161, since the time to obtain a proof grows to an impractical length.", "labels": [], "entities": []}, {"text": "Special programming languages (e.g. QA4 [17, 181 , PLANNER [ 2 0 , 211) , have added strategy capabilities and better methods of problem representation to reduce computing time to practical values QA4 (seeks) to develop natural, intuitive representations of problems and problem-solving programs.", "labels": [], "entities": [{"text": "PLANNER [ 2 0", "start_pos": 51, "end_pos": 64, "type": "DATASET", "confidence": 0.85208959877491}, {"text": "problem representation", "start_pos": 129, "end_pos": 151, "type": "TASK", "confidence": 0.718107283115387}, {"text": "QA4", "start_pos": 197, "end_pos": 200, "type": "DATASET", "confidence": 0.8817784786224365}]}, {"text": "(The user can) blend ...", "labels": [], "entities": []}, {"text": "procedural and declarative information that includes explicit instructions, intuitive advice, and semantic definitions.", "labels": [], "entities": []}, {"text": "\u20ac171 However, there is currently nobody of evidence regarding the effectiveness of the programs written in this programming language or related ones on problem-solving tasks in general or \"lapguage understanding1' in particular.", "labels": [], "entities": [{"text": "lapguage understanding1", "start_pos": 189, "end_pos": 212, "type": "TASK", "confidence": 0.6829192638397217}]}, {"text": "There is a need for experimental evaluation of the strategies that the pro-gsahing language permits for \"language understanding\" problems.", "labels": [], "entities": [{"text": "language understanding\"", "start_pos": 105, "end_pos": 128, "type": "TASK", "confidence": 0.7985731760660807}]}, {"text": "Procedural deductive systems facilitate the augmentation of an existing store of complex information.", "labels": [], "entities": []}, {"text": "Usually systems require anew set of subprograms to deal with new data: each change in a subprogram may affect more of the other subprograms.", "labels": [], "entities": []}, {"text": "The structure grows more awkward and difficult to generalize..", "labels": [], "entities": []}, {"text": "system may become too unwieldy for further expkrimentation.", "labels": [], "entities": []}, {"text": "911 In procedural systems the software is somewhat modular In 19 \"semantic primitives\" were assumed to exist as LISP sub-routines.", "labels": [], "entities": []}, {"text": "PLANNER 1201 allows complex information to be expressed as procedures without requiring user involvement with the details of interaction anong procedures (but [21] reports some second thoughts).", "labels": [], "entities": [{"text": "PLANNER 1201", "start_pos": 0, "end_pos": 12, "type": "DATASET", "confidence": 0.9214253723621368}]}, {"text": "The work of many other groups could be added to this survey.", "labels": [], "entities": []}, {"text": "Recent work on REL, building on on [ lo , 111 is reported in [36, 371; [24, 251 are relevant collections; and [26] is a survey paper.", "labels": [], "entities": [{"text": "REL", "start_pos": 15, "end_pos": 18, "type": "DATASET", "confidence": 0.5440805554389954}]}, {"text": "4, DEDUCTION In all of the program systems described thus far, \"language understanding\" depends on the \"deductive capabilities\" of the *Some experiments on problem-solving effectiveness of special programing languages in another context appear in [ 2 2 ].", "labels": [], "entities": [{"text": "DEDUCTION", "start_pos": 3, "end_pos": 12, "type": "METRIC", "confidence": 0.9754334688186646}, {"text": "language understanding", "start_pos": 64, "end_pos": 86, "type": "TASK", "confidence": 0.7220383882522583}]}, {"text": "program, t ha ti s , it s ab i l it y to \"infer\" fa ct sand rela.tionships from given statements.", "labels": [], "entities": []}, {"text": "In some cases deduction involves d i s-cerning st r u ct u re in a s e t off ac t sand re la ti m sh i p s.", "labels": [], "entities": [{"text": "deduction", "start_pos": 14, "end_pos": 23, "type": "TASK", "confidence": 0.9735112190246582}]}, {"text": "This s e ct i on describes how \"imderstanding\" prOgrAmS qhemselves a re st r u ct u re d and how t ha t st r u ct u re l i mi t s tfheir ca pa bi l it y f or general deduction.", "labels": [], "entities": []}, {"text": "Theorem-proving programs use an inference r u l e i ll u s-t r at ed in [ 2 3 p.", "labels": [], "entities": []}, {"text": "611 to deduce new knowledge.", "labels": [], "entities": []}, {"text": "A formal succession of 1ogi.cal st e p s ca ll ed re so l u ti on s leads to the new fa ct.", "labels": [], "entities": []}, {"text": "The example t he re begins with P1-P4 given: P1 if xi s pa rt of v , and if vi s pa rt of y , then xi s pa rt of y; P2 a f in g er i s pa rt of a hand; P3 a hand i s pa rt of an arm; P4 an arm i s pa rt of a man A pr'oof t ha t P9 a f in g er i s pa rt of am an i s derived by st e p s , such a s combining P1 and P 2 tog e t P6 if a hand i s pa rt of y , then a f in g er i s pa rt of y Unfortunately, it i s easy to move o u t s id e the domain where the computer can make u s e f u l deductions, and the formal reso-l u ti on process i s extremely lengthy and thus pr oh i bi ti v e l y co st l y in computer ti me.", "labels": [], "entities": []}, {"text": "In [31, 321 it i s shown t ha t some statements (\"whol d id not write-?It) are unanswerable and t ha t t he re is no algorithm which can d e t e ct whether a question stated in a zero-one lo g i ca l form can beb answered.", "labels": [], "entities": []}, {"text": "Henc.e theorem proving is not: e-sential to \"deduction\" and \"under-standing\" systems, natural or artificial, must rely on other techniques, e. g. , outside information such as knowledge about Lhe domain.", "labels": [], "entities": [{"text": "Henc.e theorem proving", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.7144145766894022}]}, {"text": "In most \"understanding\" programs, information on a primitive level of processing can be inaccurate; for example, the identification of a sound string \"blew\" can be inaccurately \"blue\" Subsequent processing levels combine identified pri-mitives.", "labels": [], "entities": []}, {"text": "If parts of speech are concerned, the level is syntactic ; if meaning is involved, \"semantic\"; if domain is involved , the lave1 is that of the \"world\".", "labels": [], "entities": []}, {"text": "Sach level can bean aid in a deductive process, leading to \"understanding\" an input segment of language.", "labels": [], "entities": []}, {"text": "Programs NOW EXIST which operationally satisfy most of the following points concerning \"understanding\" in narrow domains (emphasis has been added) Perhaps tha most importaht criterion for undersvand-ing a language is the ability TO RELATE THE INFORMATION CONTAINED in a sentence TO KNOWLEDGE PREVIOUSLY ACQUIRED.", "labels": [], "entities": [{"text": "RELATE", "start_pos": 232, "end_pos": 238, "type": "METRIC", "confidence": 0.9668720364570618}]}, {"text": ".. The memory structure in these programs maybe regarded as 3emantic, cog-nitive, or conceptual structures.,.these programs can make statements or answer questions based not only an the individual statemegts they were previausly to l d , but also On THOSE INTERRELATIONSHIPS BETWEEN CONCEPTS that were built up from separate sentences as information was incorporated into the structure.", "labels": [], "entities": [{"text": "BETWEEN", "start_pos": 275, "end_pos": 282, "type": "METRIC", "confidence": 0.7742510437965393}]}, {"text": "This has been accomplished through clever (and lengthy) computer programming, and by taking advantage of structure inherent in special proklem domains such as stacking blocks on a table, moving chess pieces, and retrieving facts about a large naval organization.", "labels": [], "entities": []}, {"text": "Program systems for understanding begin with a \"front end\": a portion designed to transform language input into a computer representatiort.", "labels": [], "entities": []}, {"text": "The representation maybe as simple as a character-by-character encoding of alphabetic, space marker, and punctuation elements.", "labels": [], "entities": []}, {"text": "However, a complex \"front end\" could involve word and phrase detection anti encoding.", "labels": [], "entities": [{"text": "word and phrase detection anti encoding", "start_pos": 45, "end_pos": 84, "type": "TASK", "confidence": 0.6667400846878687}]}, {"text": "The usual computer science term fol a computer representation is \"data structure'' [271 and there are many types.", "labels": [], "entities": []}, {"text": "The language processimg program DEACON used ring sqructures 1111, a representation frequently used to store queues.", "labels": [], "entities": []}, {"text": "In principle a data structure can represent involved associations, but in practice simple order or ancestor relationships predominate Completely different and far more complex types of structure are inherent in natural language.", "labels": [], "entities": []}, {"text": "For example, from 1281 \"The-professors signed a petition.\" is not true. has for valid interpretations: (a) The professors DIDN'T sign a petition.", "labels": [], "entities": []}, {"text": "(b) THE PROFESSORS didn't sign a petition.", "labels": [], "entities": []}, {"text": "(c) The professors didn't sign a PETITION.", "labels": [], "entities": [{"text": "PETITION", "start_pos": 33, "end_pos": 41, "type": "METRIC", "confidence": 0.9351288676261902}]}, {"text": "(d) The professors di'dn't SIGN a petition: Iterative substitution of alternatives to deduce overall meaning yields cumbersome processing, especially when there are nested uncertainties.", "labels": [], "entities": []}, {"text": "The recursive properties associated with the data structure term \"list\" [271 are not easily adapted to multiple meanings.", "labels": [], "entities": []}, {"text": "Hence, representing linguistic data for computation is ah opwr an d fundamental researrh problem.", "labels": [], "entities": []}, {"text": "Nevertheless, the programs which de~uce facts from language do so withnut a clear best technique for computer representation.", "labels": [], "entities": [{"text": "computer representation", "start_pos": 101, "end_pos": 124, "type": "TASK", "confidence": 0.6948529332876205}]}, {"text": "To do this, restrictions on the language implicit in the input domain are used, and repeated processing by level (lexical, syntactic, semantic) is used in the absence of an efficient representation language.", "labels": [], "entities": []}, {"text": "Data structures that facilitate following the language structure are needed Existing programs provide special solutions to the problems of deductive processing in narrow language domains While these programs are not a general breaktht-ough in reure-senting language data for computation, they demonstrate that current programming t.echniques enable a us.eful \"understanding\" capability Furthermore, tbere is a reql potential for use ot the \"understanding\" in an interactive node to facilitate use of computers by nonspecialists and to tap fhe more sophisticated human understanding capabilities 5 INTERACT I ON Research and computer program development desrgned to store multitudes of facts so that they can be accessed [ 2 9 ] qx combined [301 and \"unders,tood (see pp. 3-10 in [301') in linguistic form (see pp.", "labels": [], "entities": [{"text": "INTERACT", "start_pos": 597, "end_pos": 605, "type": "METRIC", "confidence": 0.9859326481819153}]}, {"text": "11-17 of [30]) is highly relevant to recent research programs in text and speech understanding.", "labels": [], "entities": [{"text": "text and speech understanding", "start_pos": 65, "end_pos": 94, "type": "TASK", "confidence": 0.6873400658369064}]}, {"text": "When such a system is used a user might fa i l to get a factor relataonship because the natural-language subset chosen to represent his question was too righ-i.e., it includes a complex set of logical relationships not in the computer.", "labels": [], "entities": []}, {"text": "Thos a block could result in a human-computer dialogue if the program has no logical connection between \"garage\" and \"car\" but only between \"garage\" and \"house\" (the program replies \"OK\" or \"??'!I1 to user input sentences)", "labels": [], "entities": []}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}