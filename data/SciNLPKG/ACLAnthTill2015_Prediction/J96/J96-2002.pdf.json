{"title": [{"text": "DATR: A Language for Lexical Knowledge Representation", "labels": [], "entities": [{"text": "Lexical Knowledge Representation", "start_pos": 21, "end_pos": 53, "type": "TASK", "confidence": 0.7483196059862772}]}], "abstractContent": [{"text": "Much recent research on the design of natural language lexicons has made use of nonmonotonic inheritance networks as originally developed for general knowledge representation purposes in Artificial Intelligence.", "labels": [], "entities": []}, {"text": "DATR is a simple, spartan language for defining nonmonotonic inheritance networks with path~value equations, one that has been designed specifically for lexical knowledge representation.", "labels": [], "entities": [{"text": "DATR", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.7785630822181702}, {"text": "lexical knowledge representation", "start_pos": 153, "end_pos": 185, "type": "TASK", "confidence": 0.6477869550387064}]}, {"text": "In keeping with its intendedly minimalist character, it lacks many of the constructs embodied either in general-purpose knowledge representation languages or in contemporary grammar formalisms.", "labels": [], "entities": []}, {"text": "The present paper shows that the language is nonetheless sufficiently expressive to represent concisely the structure of lexical information at a variety of levels of linguistic analysis.", "labels": [], "entities": []}, {"text": "The paper provides an informal example-based introduction to DATR and to techniques for its use, including finite-state transduction, the encoding of DA Gs and lexical rules, and the representation of ambiguity and alternation.", "labels": [], "entities": []}, {"text": "Sample analyses of phenomena such as inflectional syncretism and verbal subcategorization are given that show how the language can be used to squeeze out redundancy from lexical descriptions.", "labels": [], "entities": []}], "introductionContent": [{"text": "Irregular lexemes are standardly regular in some respect.", "labels": [], "entities": []}, {"text": "Most are just like regular lexemes except that they deviate in one or two characteristics.", "labels": [], "entities": []}, {"text": "What is needed is a natural way of saying \"this lexeme is regular except for this property.\"", "labels": [], "entities": []}, {"text": "One obvious approach is to use nonmonotonicity and inheritance machinery to capture such lexical irregularity (and subregularity), and much recent research into the design of representation languages for natural language lexicons has thus made use of nonmonotonic inheritance networks (or \"semantic nets\") as originally developed for more general representation purposes in Artificial Intelligence.", "labels": [], "entities": []}, {"text": "provide a rationale for, and an introduction to, this body of research and we will not rehearse the content of that paper here, nor review the work cited there.", "labels": [], "entities": []}, {"text": "1 DATR is a rather spartan nonmonotonic language for defining inheritance networks with path/value equations.", "labels": [], "entities": []}, {"text": "In keeping with its intendedly minimalist character, it lacks many of the constructs embodied either in general-purpose knowledge representation languages or in contemporary grammar formalisms.", "labels": [], "entities": []}, {"text": "But the present paper seeks to show that the language is nonetheless sufficiently expressive to represent concisely the structure of lexical information at a variety of levels of language description.", "labels": [], "entities": []}, {"text": "The development of DATR has been guided by a number of concerns, which we summarize here.", "labels": [], "entities": [{"text": "DATR", "start_pos": 19, "end_pos": 23, "type": "TASK", "confidence": 0.8058546781539917}]}, {"text": "Our objective has been a language that (i) has an explicit theory of inference, (ii) has an explicit declarative semantics, (iii) can be readily and efficiently implemented, (iv) has the necessary expressive power to encode the lexical entries presupposed by work in the unification grammar tradition, and (v) can express all the evident generalizations and subgeneralizations about such entries.", "labels": [], "entities": []}, {"text": "Our first publications on DATR) provided a formal theory of inference (i) and a formal semantics (ii) for DATR and we will not recapitulate that material here.", "labels": [], "entities": []}, {"text": "2 With respect to (iii), the core inference engine for DATR can be coded in a page of Prolog (see, e.g.,.", "labels": [], "entities": [{"text": "Prolog", "start_pos": 86, "end_pos": 92, "type": "DATASET", "confidence": 0.972345769405365}]}, {"text": "At the time of writing, we know of a dozen different implementations of the language, some of which have been used with large DATR lexicons in the context of big NLP systems (e.g.,.", "labels": [], "entities": []}, {"text": "We will comment further on implementation matters in Section 5, below.", "labels": [], "entities": []}, {"text": "However, the main purpose of the present paper is to exhibit the use of DATR for lexical description (iv) and the way it makes it relatively easy to capture lexical generalizations and subregularities at a variety of analytic levels (v).", "labels": [], "entities": [{"text": "lexical description", "start_pos": 81, "end_pos": 100, "type": "TASK", "confidence": 0.6559125632047653}]}, {"text": "We will pursue (iv) and (v) in the context of an informal example-based introduction to the language and to techniques for its use, and we will make frequent reference to the DATR-based lexical work that has been done since 1989.", "labels": [], "entities": []}, {"text": "The paper is organized as follows: Section 2 uses an analysis of English verbal morphology to provide an informal introduction to DATR.", "labels": [], "entities": [{"text": "DATR", "start_pos": 130, "end_pos": 134, "type": "TASK", "confidence": 0.5633249878883362}]}, {"text": "Section 3 describes the language more precisely: its syntax, inferential and default mechanisms, and the use of abbreviatory variables.", "labels": [], "entities": []}, {"text": "Section 4 describes a wide variety of DATR techniques, including case constructs and parameters, Boolean logic, finite-state transduction, lists and DAGs, lexical rules, and ways to encode ambiguity and alternation.", "labels": [], "entities": []}, {"text": "Section 5 explores more technical issues relating to the language, including functionality and consistency, multiple-inheritance, modes of use, and existing implementations.", "labels": [], "entities": []}, {"text": "Section 6 makes some closing observations.", "labels": [], "entities": []}, {"text": "Finally, an appendix to the paper replies to the points made in the critical literature on DATR.", "labels": [], "entities": [{"text": "DATR", "start_pos": 91, "end_pos": 95, "type": "TASK", "confidence": 0.7098054885864258}]}], "datasetContent": [], "tableCaptions": []}