{"title": [{"text": "Bilingual Hebrew-English Generation of Possessives and Partitives: Raising the Input Abstraction Level", "labels": [], "entities": [{"text": "Bilingual Hebrew-English Generation of Possessives and Partitives", "start_pos": 0, "end_pos": 65, "type": "TASK", "confidence": 0.5796713062695095}, {"text": "Abstraction", "start_pos": 85, "end_pos": 96, "type": "METRIC", "confidence": 0.6264073848724365}]}], "abstractContent": [{"text": "Syntactic realization grammars have traditionally attempted to accept inputs with the highest possible level of abstraction, in order to facilitate the work of the components (sentence planner) preparing the input.", "labels": [], "entities": [{"text": "Syntactic realization grammars", "start_pos": 0, "end_pos": 30, "type": "TASK", "confidence": 0.8392958442370096}]}, {"text": "Recently, the search for higher abstraction has been, however, challenged (E1-hadad and Robin, 1996)(Lavoie and Ram-bow, 1997)(Busemann and Horacek, 1998).", "labels": [], "entities": [{"text": "E1-hadad and Robin, 1996)(Lavoie and Ram-bow, 1997)(Busemann and Horacek, 1998)", "start_pos": 75, "end_pos": 154, "type": "DATASET", "confidence": 0.6757395019133886}]}, {"text": "In this paper, we contribute to the issue of selecting the \"ideal\" abstraction level in the input to syntactic realization grammar by considering the case of partitives and pos-sessives in a bilingual Hebrew-English generation grammar.", "labels": [], "entities": [{"text": "syntactic realization grammar", "start_pos": 101, "end_pos": 130, "type": "TASK", "confidence": 0.7831916014353434}]}, {"text": "In the case of bilingual generation, the ultimate goal is to provide a single input structure, where only the open-class lexical entries are specific to the language.", "labels": [], "entities": [{"text": "bilingual generation", "start_pos": 15, "end_pos": 35, "type": "TASK", "confidence": 0.721492737531662}]}, {"text": "In that case, the minimal abstraction required must cover the different syntactic constraints of the two languages.", "labels": [], "entities": []}, {"text": "We present a contrastive analysis of the syntactic realizations of possessives and par-titives in Hebrew and English and conclude by presenting an input specification for complex NPs which is slightly more abstract than the one used in SURGE.", "labels": [], "entities": []}, {"text": "We define two main features-possessor and rejLset, and \u2022 discuss how the grammar handles complex syntactic co-occurrence phenomena based on this input.", "labels": [], "entities": []}, {"text": "We conclude by evaluating how the resulting input specification language is appropriate for both languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "One of the first issues to address when selecting a syntactic realization component is whether its input specification language fits the desired application.", "labels": [], "entities": []}, {"text": "Traditionally, syntactic realization components have attempted to raise the abstraction level of input specifications for two reasons: (1) to preserve the possibility of paraphrasing and to make it easy for the sentence planner to map from semantic data to syntactic input As new applications appear, that cannot start generation from a semantic input because such an input is not available (for example re-generation of sentences from syntactic fragments to produce summaries () or generation of complex NPs in a hybrid template system for business letters), this motivation has lost some of its strength.", "labels": [], "entities": [{"text": "syntactic realization", "start_pos": 15, "end_pos": 36, "type": "TASK", "confidence": 0.7506236732006073}]}, {"text": "Consequently, \"shallow surface generators\" have recently appeared) () that require an input considerably less abstract than those required by more traditional realization components such as SURGE or KPML.", "labels": [], "entities": [{"text": "KPML", "start_pos": 199, "end_pos": 203, "type": "DATASET", "confidence": 0.716198205947876}]}, {"text": "In this paper, we contribute to the debate on selecting an appropriate level of abstraction by considering the case of bilingual generation.", "labels": [], "entities": []}, {"text": "We present results obtained while developing the HUGG syntactic realization component for Hebrew).", "labels": [], "entities": [{"text": "HUGG syntactic realization", "start_pos": 49, "end_pos": 75, "type": "TASK", "confidence": 0.5494678815205892}]}, {"text": "One of the goals of this system is to design a generator with an input specification language as similar as possible to that of an English generator, SURGE in our case.", "labels": [], "entities": []}, {"text": "The ideal scenario for bilingual generation is illustrated in.", "labels": [], "entities": [{"text": "bilingual generation", "start_pos": 23, "end_pos": 43, "type": "TASK", "confidence": 0.7657947540283203}]}, {"text": "It consists of the 'Mary' gender feminine cat common ] lex 'book/sefer' 3.", "labels": [], "entities": []}, {"text": "Generate with any grammar In the example, the same input structure is used and the generator can produce sentences in both languages if only the lexical items are translated.", "labels": [], "entities": []}, {"text": "Consider the following paraphrase in English for the same input: John gave Mary a book.", "labels": [], "entities": []}, {"text": "The Hebrew grammar does not produce such a paraphrase, as there is no equivalent in Hebrew to the dative move alternation.", "labels": [], "entities": []}, {"text": "In this case, we conclude that the input abstraction level is appropriate.", "labels": [], "entities": []}, {"text": "In contrast, if the input had specified a structure such as indirect-object(prep=to/le, np--Mary), then it would not have been abstract enough to serve as a bilingual input structure.", "labels": [], "entities": []}, {"text": "Similarly, the English possessive marker is very close to the Hebrew \"construct state\" (smixut): The King's palace Armon ha-melex Palace-cs the-king The following input structure seems, therefore, appropriate for both languages: lex possessor common 1 \"palace\" / \"armon\" [leXdefinite yes\"king\"/\"melex\"] There are, however, divergences between the use of smixut in Hebrew and of the possessive marker in English: Our goal, therefore, is to design an input structure that is abstract enough to let the grammar decide whether to use a possessive marker vs. an of-construct in English or a Sel-construct vs. a smixut-construction in Hebrew.", "labels": [], "entities": []}, {"text": "A similar approach has been adopted in generation, and in machine translation most notably in.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 58, "end_pos": 77, "type": "TASK", "confidence": 0.7880343496799469}]}, {"text": "Dorr focuses on divergences at the clause level as illustrated by the following example:", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}