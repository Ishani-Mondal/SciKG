{"title": [{"text": "Packing of Feature Structures for Efficient Unification of Disjunctive Feature Structures", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper proposes a method for packing feature structures, which automatically collapses equivalent parts of lexical/phrasal feature structures of HPSG into a single packed feature structure.", "labels": [], "entities": []}, {"text": "This method avoids redundant repetition of unification of those parts.", "labels": [], "entities": []}, {"text": "Preliminary experiments show that this method can significantly improve a unification speed in parsing.", "labels": [], "entities": [{"text": "parsing", "start_pos": 95, "end_pos": 102, "type": "TASK", "confidence": 0.9698494672775269}]}], "introductionContent": [{"text": "Efficient treatment of syntactic/semantic ambiguity is a key to making efficient parsers for wide-coverage grammars.", "labels": [], "entities": []}, {"text": "In feature-structurebased grammars 1, such as HPSG (, ambiguity is expressed not only by manually-tailored disjunctive feature structures, but also by enumerating non-disjunctive feature structures.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 46, "end_pos": 50, "type": "DATASET", "confidence": 0.9568101167678833}]}, {"text": "In addition, there is ambiguity caused by non-determinism when applying lexical/grammar rules.", "labels": [], "entities": []}, {"text": "As a result, a large number of lexical/phrasal feature structures are required to express ambiguous syntactic/semantic structures.", "labels": [], "entities": []}, {"text": "Without efficient processing of these feature structures, a sufficient parsing speed is unattainable.", "labels": [], "entities": [{"text": "parsing", "start_pos": 71, "end_pos": 78, "type": "TASK", "confidence": 0.9641993045806885}]}, {"text": "This paper proposes a method for packing feature structures, which is an automatic optimization method for parsers based on feature structure unification.", "labels": [], "entities": [{"text": "packing feature structures", "start_pos": 33, "end_pos": 59, "type": "TASK", "confidence": 0.8651789029439291}, {"text": "feature structure unification", "start_pos": 124, "end_pos": 153, "type": "TASK", "confidence": 0.7232847611109415}]}, {"text": "This method automatically extracts equivalent parts of feature structures and collapses them into a single packed feature structure.", "labels": [], "entities": []}, {"text": "A packed feature structure can be processed more efficiently because we can avoid redundant repetition of unification of the equivalent parts of original feature structures.", "labels": [], "entities": []}, {"text": "There have been many studies on efficient 1In this paper we consider typed feature structures described in).", "labels": [], "entities": []}, {"text": "unification of disjunctive feature structures).", "labels": [], "entities": []}, {"text": "All of them suppose that disjunctive feature structures should be given by grammar writers or lexicographers.", "labels": [], "entities": []}, {"text": "However, it is not practical to specify all ambiguity using only manually-tailored disjunctive feature structures in grammar development.", "labels": [], "entities": []}, {"text": "Where disjunctive feature structures cannot be given explicitly those algorithms lose their advantages.", "labels": [], "entities": []}, {"text": "Hence, an automatic conversion method, such as the packing method described hereafter, is required for further optimization of those systems.", "labels": [], "entities": []}, {"text": "In addition, this packing method converts general feature structures to a suitable form fora simple and efficient unification algorithm which is also described in this paper.) points out the same problem and proposes a compilation method for feature structures called modularization.", "labels": [], "entities": []}, {"text": "However, modularization is very time-consuming, and is not suitable for optimizing feature structures produced during parsing.", "labels": [], "entities": []}, {"text": "An earlier paper of myself ( ) also discusses the same problem and proposes another packing method.", "labels": [], "entities": []}, {"text": "However, that method can pack only pre-specified parts of input feature structures, and this characteristic limits the overall efficient gain.", "labels": [], "entities": []}, {"text": "The new method in this paper can pack any kind of feature structures as far as possible, and is more general than the previous method.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Execution time for unification. Test data shows the word used for the experiment. # of LEs  shows the number of lexical entries assigned to the word. Naive shows the time for unification with a naive  method. PFS shows the time for unification of packed feature structures (PFS). Improvement shows the  ratio ( gaive)/( PFS).", "labels": [], "entities": [{"text": "Improvement", "start_pos": 290, "end_pos": 301, "type": "METRIC", "confidence": 0.9589332342147827}]}, {"text": " Table 2: The number of calling each part of the unification routines. Naive shows the number of node  unification operations in the naive unification algorithm (corresponds to NODE_UNIFY of my algorithm).  NODE_UNIFY and SEGMENT_UNIFY are specified in", "labels": [], "entities": []}]}