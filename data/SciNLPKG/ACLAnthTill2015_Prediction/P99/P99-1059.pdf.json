{"title": [{"text": "Efficient Parsing for Bilexical Context-Free Grammars and Head Automaton Grammars*", "labels": [], "entities": []}], "abstractContent": [{"text": "Several recent stochastic parsers use bilexical grammars, where each word type idiosyncrat-ically prefers particular complements with particular head words.", "labels": [], "entities": []}, {"text": "We present O(n 4) parsing algorithms for two bilexical formalisms, improving the prior upper bounds of O(n5).", "labels": [], "entities": []}, {"text": "For a common special case that was known to allow O(n 3) parsing (Eisner, 1997), we present an O(n 3) algorithm with an improved grammar constant.", "labels": [], "entities": [{"text": "O(n 3) parsing", "start_pos": 50, "end_pos": 64, "type": "TASK", "confidence": 0.49136802057425183}]}], "introductionContent": [{"text": "Lexicalized grammar formalisms are of both theoretical and practical interest to the computational linguistics community.", "labels": [], "entities": [{"text": "Lexicalized grammar formalisms", "start_pos": 0, "end_pos": 30, "type": "TASK", "confidence": 0.7781733473141988}]}, {"text": "Such formalisms specify syntactic facts about each word of the language--in particular, the type of arguments that the word can or must take.", "labels": [], "entities": []}, {"text": "Early mechanisms of this sort included categorial grammar) and subcategorization frames.", "labels": [], "entities": []}, {"text": "Other lexicalized formalisms include (.", "labels": [], "entities": []}, {"text": "Besides the possible arguments of a word, a natural-language grammar does well to specify possible head words for those arguments.", "labels": [], "entities": []}, {"text": "\"Convene\" requires an NP object, but some NPs are more semantically or lexically appropriate here than others, and the appropriateness depends largely on the NP's head (e.g., \"meeting\").", "labels": [], "entities": []}, {"text": "We use the general term bilexical fora grammar that records such facts.", "labels": [], "entities": []}, {"text": "A bilexical grammar makes many stipulations about the compatibility of particular pairs of words in particular roles.", "labels": [], "entities": []}, {"text": "The acceptability of \"Nora convened the \" The authors were supported respectively under ARPA Grant N6600194-C-6043 \"Human Language Technology\" and Ministero dell'Universitk e della Ricerca Scientifica e Tecnologica project \"Methodologies and Tools of High Performance Systems for Multimedia Applications.\" party\" then depends on the grammar writer's assessment of whether parties can be convened.", "labels": [], "entities": [{"text": "ARPA Grant N6600194-C-6043", "start_pos": 88, "end_pos": 114, "type": "DATASET", "confidence": 0.7868399222691854}]}, {"text": "Several recent real-world parsers have improved state-of-the-art parsing accuracy by relying on probabilistic or weighted versions of bilexical grammars).", "labels": [], "entities": [{"text": "accuracy", "start_pos": 73, "end_pos": 81, "type": "METRIC", "confidence": 0.9289599657058716}]}, {"text": "The rationale is that soft selectional restrictions play a crucial role in disambiguation, i The chart parsing algorithms used by most of the above authors run in time O(nS), because bilexical grammars are enormous (the part of the grammar relevant to a length-n input has size O(n 2) in practice).", "labels": [], "entities": [{"text": "chart parsing", "start_pos": 97, "end_pos": 110, "type": "TASK", "confidence": 0.757851243019104}, {"text": "O", "start_pos": 168, "end_pos": 169, "type": "METRIC", "confidence": 0.9438686370849609}]}, {"text": "Heavy probabilistic pruning is therefore needed to get acceptable runtimes.", "labels": [], "entities": []}, {"text": "But in this paper we show that the complexity is not so bad after all: \u2022 For bilexicalized context-free grammars, O(n 4) is possible.", "labels": [], "entities": [{"text": "O", "start_pos": 114, "end_pos": 115, "type": "METRIC", "confidence": 0.9587106704711914}]}, {"text": "\u2022 The O(n 4) result also holds for head automaton grammars.", "labels": [], "entities": [{"text": "O", "start_pos": 6, "end_pos": 7, "type": "METRIC", "confidence": 0.906827986240387}]}, {"text": "\u2022 For a very common special case of these grammars where an O(n 3) algorithm was previously known, the grammar constant can be reduced without harming the O(n 3) property.", "labels": [], "entities": []}, {"text": "Our algorithmic technique throughout is to propose new kinds of subderivations that are not constituents.", "labels": [], "entities": []}, {"text": "We use dynamic programming to assemble such subderivations into a full parse.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}