{"title": [{"text": "Incremental Construction of Minimal Acyclic Finite-State Automata", "labels": [], "entities": []}], "abstractContent": [{"text": "In this paper, we describe anew method for constructing minimal, deterministic, acyclic finite-state automata from a set of strings.", "labels": [], "entities": []}, {"text": "Traditional methods consist of two phases: the first to construct a trie, the second one to minimize it.", "labels": [], "entities": []}, {"text": "Our approach is to construct a minimal automaton in a single phase by adding new strings one by one and minimizing the resulting automaton on-the-fly.", "labels": [], "entities": []}, {"text": "We present a general algorithm as well as a specialization that relies upon the lexicographical ordering of the input strings.", "labels": [], "entities": []}, {"text": "Our method is fast and significantly lowers memory requirements in comparison to other methods.", "labels": [], "entities": []}], "introductionContent": [{"text": "Finite-state automata are used in a variety of applications, including aspects of natural language processing (NLP).", "labels": [], "entities": [{"text": "natural language processing (NLP)", "start_pos": 82, "end_pos": 115, "type": "TASK", "confidence": 0.7846983273824056}]}, {"text": "They may store sets of words, with or without annotations such as the corresponding pronunciation, base form, or morphological categories.", "labels": [], "entities": []}, {"text": "The main reasons for using finite-state automata in the NLP domain are that their representation of the set of words is compact, and that looking up a string in a dictionary represented by a finite-state automaton is very fast--proportional to the length of the string.", "labels": [], "entities": []}, {"text": "Of particular interest to the NLP community are deterministic, acyclic, finitestate automata, which we call dictionaries.", "labels": [], "entities": []}, {"text": "Dictionaries can be constructed in various ways--see fora taxonomy of (general) finite-state automata construction algorithms.", "labels": [], "entities": []}, {"text": "A word is simply a finite sequence of symbols over some alphabet and we do not associate it with a meaning in this paper.", "labels": [], "entities": []}, {"text": "A necessary and sufficient condition for any deterministic automaton to be acyclic is that it recognizes a finite set of words.", "labels": [], "entities": []}, {"text": "The algorithms described here construct automata from such finite sets.", "labels": [], "entities": []}, {"text": "The Myhill-Nerode theorem (see Hopcroft and Ullman) states that among the many deterministic automata that accept a given language, there is a unique automaton (excluding isomorphisms) that has a minimal number of states.", "labels": [], "entities": []}, {"text": "This is called the minimal deterministic automaton of the language.", "labels": [], "entities": []}, {"text": "The generalized algorithm presented in this paper has been independently developed by Jan Daciuk of the Technical University of Gdafisk, and by Richard Watson", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}