{"title": [{"text": "Compiling Boostexter Rules into a Finite-state Transducer", "labels": [], "entities": []}], "abstractContent": [{"text": "A number of NLP tasks have been effectively mod-eled as classification tasks using a variety of classification techniques.", "labels": [], "entities": []}, {"text": "Most of these tasks have been pursued in isolation with the classifier assuming un-ambiguous input.", "labels": [], "entities": []}, {"text": "In order for these techniques to be more broadly applicable, they need to be extended to apply on weighted packed representations of ambiguous input.", "labels": [], "entities": []}, {"text": "One approach for achieving this is to represent the classification model as a weighted finite-state transducer (WFST).", "labels": [], "entities": []}, {"text": "In this paper, we present a compilation procedure to convert the rules resulting from an AdaBoost classifier into an WFST.", "labels": [], "entities": [{"text": "WFST", "start_pos": 117, "end_pos": 121, "type": "DATASET", "confidence": 0.8958814144134521}]}, {"text": "We validate the compilation technique by applying the resulting WFST on a call-routing application.", "labels": [], "entities": [{"text": "WFST", "start_pos": 64, "end_pos": 68, "type": "DATASET", "confidence": 0.7719761729240417}]}], "introductionContent": [{"text": "Many problems in Natural Language Processing (NLP) can be modeled as classification tasks either at the word or at the sentence level.", "labels": [], "entities": [{"text": "Natural Language Processing (NLP)", "start_pos": 17, "end_pos": 50, "type": "TASK", "confidence": 0.7644545535246531}]}, {"text": "For example, part-of-speech tagging, named-entity identification supertagging 1 , word sense disambiguation are tasks that have been modeled as classification problems at the word level.", "labels": [], "entities": [{"text": "part-of-speech tagging", "start_pos": 13, "end_pos": 35, "type": "TASK", "confidence": 0.740306168794632}, {"text": "named-entity identification supertagging", "start_pos": 37, "end_pos": 77, "type": "TASK", "confidence": 0.7944248418013254}, {"text": "word sense disambiguation", "start_pos": 82, "end_pos": 107, "type": "TASK", "confidence": 0.7194279829661051}]}, {"text": "In addition, there are problems that classify the entire sentence or document into one of a set of categories.", "labels": [], "entities": []}, {"text": "These problems are loosely characterized as semantic classification and have been used in many practical applications including call routing and text classification.", "labels": [], "entities": [{"text": "semantic classification", "start_pos": 44, "end_pos": 67, "type": "TASK", "confidence": 0.7437010705471039}, {"text": "call routing", "start_pos": 128, "end_pos": 140, "type": "TASK", "confidence": 0.8901342153549194}, {"text": "text classification", "start_pos": 145, "end_pos": 164, "type": "TASK", "confidence": 0.8044000566005707}]}, {"text": "Most of these problems have been addressed in isolation assuming unambiguous (one-best) input.", "labels": [], "entities": []}, {"text": "Typically, however, in NLP applications these modules are chained together with each module introducing some amount of error.", "labels": [], "entities": []}, {"text": "In order to alleviate the errors introduced by a module, it is typical fora module to provide multiple weighted solutions (ideally as a packed representation) that serve as input to the next module.", "labels": [], "entities": []}, {"text": "For example, a speech recognizer provides a lattice of possible recognition outputs that is to be annotated with part-of-speech and named-entities.", "labels": [], "entities": [{"text": "speech recognizer", "start_pos": 15, "end_pos": 32, "type": "TASK", "confidence": 0.6912431865930557}]}, {"text": "Thus classification approaches need to be extended to be applicable on weighted packed representations of ambiguous input represented as a weighted lattice.", "labels": [], "entities": []}, {"text": "The research direction we adopt here is to compile the model of a classifier into a weighted finite-state transducer (WFST) so that it can compose with the input lattice.", "labels": [], "entities": []}, {"text": "Finite state models have been extensively applied to many aspects of language processing including, speech recognition, phonology, morphology, chunking), parsing) and machine translation).", "labels": [], "entities": [{"text": "speech recognition", "start_pos": 100, "end_pos": 118, "type": "TASK", "confidence": 0.7446983754634857}, {"text": "machine translation", "start_pos": 167, "end_pos": 186, "type": "TASK", "confidence": 0.7709567546844482}]}, {"text": "Finitestate models are attractive mechanisms for language processing since they (a) provide an efficient data structure for representing weighted ambiguous hypotheses (b) generally effective for decoding (c) associated with a calculus for composing models which allows for straightforward integration of constraints from various levels of speech and language processing.", "labels": [], "entities": [{"text": "language processing", "start_pos": 49, "end_pos": 68, "type": "TASK", "confidence": 0.7291380912065506}]}, {"text": "In this paper, we describe the compilation process fora particular classifier model into an WFST and validate the accuracy of the compilation process on a one-best input in a call-routing task.", "labels": [], "entities": [{"text": "WFST", "start_pos": 92, "end_pos": 96, "type": "DATASET", "confidence": 0.853646993637085}, {"text": "accuracy", "start_pos": 114, "end_pos": 122, "type": "METRIC", "confidence": 0.998903751373291}]}, {"text": "We view this as a first step toward using a classification model on a lattice input.", "labels": [], "entities": []}, {"text": "The outline of the paper is as follows.", "labels": [], "entities": []}, {"text": "In Section 2, we review the classification approach to resolving ambiguity in NLP tasks and in Section 3 we discuss the boosting approach to classification.", "labels": [], "entities": []}, {"text": "In Section 4 we describe the compilation of the boosting model into an WFST and validate the result of this compilation using a callrouting task.", "labels": [], "entities": [{"text": "WFST", "start_pos": 71, "end_pos": 75, "type": "DATASET", "confidence": 0.8799031972885132}]}], "datasetContent": [], "tableCaptions": []}