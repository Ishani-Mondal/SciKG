{"title": [{"text": "Towards Modular Development of Typed Unification Grammars", "labels": [], "entities": []}], "abstractContent": [{"text": "Development of large-scale grammars for natural languages is a complicated endeavor: Grammars are developed collaboratively by teams of linguists, computational linguists, and computer scientists, in a process very similar to the development of large-scale software.", "labels": [], "entities": []}, {"text": "Grammars are written in grammatical formalisms that resemble very-high-level programming languages, and are thus very similar to computer programs.", "labels": [], "entities": []}, {"text": "Yet grammar engineering is still in its infancy: Few grammar development environments support sophisticated modularized grammar development, in the form of distribution of the grammar development effort, combination of sub-grammars, separate compilation and automatic linkage, information encapsulation, and so forth.", "labels": [], "entities": [{"text": "grammar engineering", "start_pos": 4, "end_pos": 23, "type": "TASK", "confidence": 0.8063883781433105}]}, {"text": "This work provides preliminary foundations for modular construction of (typed) unification grammars for natural languages.", "labels": [], "entities": [{"text": "modular construction of (typed) unification grammars", "start_pos": 47, "end_pos": 99, "type": "TASK", "confidence": 0.6539681367576122}]}, {"text": "Much of the information in such formalisms is encoded by the type signature, and we subsequently address the problem through the distribution of the signature among the different modules.", "labels": [], "entities": []}, {"text": "We define signature modules and provide operators of module combination.", "labels": [], "entities": []}, {"text": "Modules may specify only partial information about the components of the signature and may communicate through parameters, similarly to function calls in programming languages.", "labels": [], "entities": []}, {"text": "Our definitions are inspired by methods and techniques of programming language theory and software engineering and are motivated by the actual needs of grammar developers, obtained through a careful examination of existing grammars.", "labels": [], "entities": []}, {"text": "We show that our definitions meet these needs by conforming to a detailed set of desiderata.", "labels": [], "entities": []}, {"text": "We demonstrate the utility of our definitions by providing a modular design of the HPSG grammar of Pollard and Sag.", "labels": [], "entities": [{"text": "HPSG grammar of Pollard and Sag", "start_pos": 83, "end_pos": 114, "type": "DATASET", "confidence": 0.8737718562285105}]}], "introductionContent": [{"text": "Development of large-scale grammars for natural languages is an active area of research inhuman language technology.", "labels": [], "entities": []}, {"text": "Such grammars are developed not only for purposes of theoretical linguistic research, but also for natural language applications such as machine translation, speech generation, and soon.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 137, "end_pos": 156, "type": "TASK", "confidence": 0.797999233007431}, {"text": "speech generation", "start_pos": 158, "end_pos": 175, "type": "TASK", "confidence": 0.7136918753385544}]}, {"text": "Wide-coverage grammars are being developed for various languages) in several theoretical frameworks, including TAG (Joshi,,, HPSG, and XDG.", "labels": [], "entities": [{"text": "HPSG", "start_pos": 125, "end_pos": 129, "type": "DATASET", "confidence": 0.937105655670166}, {"text": "XDG", "start_pos": 135, "end_pos": 138, "type": "DATASET", "confidence": 0.9007073044776917}]}, {"text": "Grammar development is a complex enterprise: It is not unusual fora single grammar to be developed by a team including several linguists, computational linguists, and computer scientists.", "labels": [], "entities": [{"text": "Grammar development", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8025916218757629}]}, {"text": "The scale of grammars is overwhelming-large-scale grammars can be made up by tens of thousands of line of code) and may include thousands of types.", "labels": [], "entities": []}, {"text": "Modern grammars are written in grammatical formalisms that are often reminiscent of very-high-level, declarative (mostly logical) programming languages, and are thus very similar to computer programs.", "labels": [], "entities": []}, {"text": "This raises problems similar to those encountered in large-scale software development (.", "labels": [], "entities": []}, {"text": "Although whereas software engineering provides adequate solutions for the programmer, grammar engineering is still in its infancy.", "labels": [], "entities": [{"text": "grammar engineering", "start_pos": 86, "end_pos": 105, "type": "TASK", "confidence": 0.8914929330348969}]}, {"text": "In this work we focus on typed unification grammars (TUG), and their implementation in grammar-development platforms such as LKB, ALE, TRALE, or.", "labels": [], "entities": [{"text": "typed unification grammars (TUG)", "start_pos": 25, "end_pos": 57, "type": "TASK", "confidence": 0.8344322144985199}]}, {"text": "Such platforms conceptually view the grammar as a single entity (even when it is distributed over several files), and provide few provisions for modular grammar development, such as mechanisms for defining modules that can interact with each other through well-defined interfaces, combination of sub-grammars, separate compilation and automatic linkage of grammars, information encapsulation, and so forth.", "labels": [], "entities": []}, {"text": "This is the main issue that we address in this work.", "labels": [], "entities": []}, {"text": "We provide a preliminary yet thorough and well-founded solution to the problem of grammar modularization.", "labels": [], "entities": [{"text": "grammar modularization", "start_pos": 82, "end_pos": 104, "type": "TASK", "confidence": 0.7316769063472748}]}, {"text": "We first specify a set of desiderata fora beneficial solution in Section 1.1, and then survey related work, emphasizing the shortcomings of existing approaches with respect to these desiderata.", "labels": [], "entities": []}, {"text": "Much of the information in typed unification grammars is encoded in the signature, and hence the key is facilitating a modularized development of type signatures.", "labels": [], "entities": [{"text": "typed unification grammars", "start_pos": 27, "end_pos": 53, "type": "TASK", "confidence": 0.7521911263465881}]}, {"text": "In Section 2 we introduce a definition of signature modules, and show how two signature modules combine and how the resulting signature module can be extended to a stand-alone type signature.", "labels": [], "entities": []}, {"text": "We lift our definitions from signatures to full grammar modules in Section 3.", "labels": [], "entities": []}, {"text": "In Section 4 we use signature modules and their combination operators to workout a modular design of the HPSG grammar of, demonstrating the utility of signature modules for the development of linguistically motivated grammars.", "labels": [], "entities": []}, {"text": "We then outline MODALE, an implementation of our solutions which supports modular development of type signatures in the context of both ALE and TRALE (Section 5).", "labels": [], "entities": [{"text": "TRALE", "start_pos": 144, "end_pos": 149, "type": "METRIC", "confidence": 0.6734360456466675}]}, {"text": "We show in Section 6 how our solution complies with the desiderata of Section 1.1, and conclude with directions for future research.", "labels": [], "entities": [{"text": "Section 1.1", "start_pos": 70, "end_pos": 81, "type": "DATASET", "confidence": 0.8357795476913452}]}], "datasetContent": [], "tableCaptions": []}