{"title": [{"text": "Between Platform and APIs: Kachako API for Developers", "labels": [], "entities": []}], "abstractContent": [{"text": "Different types of users require different functions in NLP software.", "labels": [], "entities": []}, {"text": "It is difficult fora single platform to coverall types of users.", "labels": [], "entities": []}, {"text": "When a framework aims to provide more interoperability, users are required to learn more concepts; users' application designs are restricted to be compliant with the framework.", "labels": [], "entities": []}, {"text": "While an interoperability framework is useful in certain cases, some types of users will not select the framework due to the learning cost and design restrictions.", "labels": [], "entities": []}, {"text": "We suggest a rather simple framework for the interoperability aiming at developers.", "labels": [], "entities": []}, {"text": "Reusing an existing NLP platform Kachako, we created an API oriented NLP system.", "labels": [], "entities": []}, {"text": "This system loosely couples rich high-end functions, including annotation visualizations, statistical evaluations, annotation searching, etc.", "labels": [], "entities": [{"text": "annotation searching", "start_pos": 115, "end_pos": 135, "type": "TASK", "confidence": 0.7110489010810852}]}, {"text": "This API do not require users much learning cost, providing customiza-tion ability for power users while also allowing easy users to employ many GUI functions.", "labels": [], "entities": []}], "introductionContent": [{"text": "A platform type of NLP software tends to provide rich GUI functions for easy users to help avoiding burdensome tasks that are not essential for their purposes.", "labels": [], "entities": []}, {"text": "However, power users require customization ability in an API oriented way.", "labels": [], "entities": []}, {"text": "There has been many efforts to create interoperable NLP systems, including GATE), Taverna (),,), Heart of Gold (), PANACEA, etc.", "labels": [], "entities": [{"text": "GATE", "start_pos": 75, "end_pos": 79, "type": "DATASET", "confidence": 0.6275240778923035}, {"text": "Taverna", "start_pos": 82, "end_pos": 89, "type": "DATASET", "confidence": 0.928027868270874}, {"text": "Heart of Gold", "start_pos": 97, "end_pos": 110, "type": "DATASET", "confidence": 0.824381411075592}, {"text": "PANACEA", "start_pos": 115, "end_pos": 122, "type": "METRIC", "confidence": 0.7144890427589417}]}, {"text": "UIMA (Unstructured Information Management Architecture) is an interoperability framework originally developed by IBM (, currently an open source project in Apache UIMA 2 . Most of UIMA related works are UIMA component implementations, including OpenNLP, JulieLab (, CCP BioNLP, U-Compare (), UIMA-fr (,), cTAKES (, etc.", "labels": [], "entities": [{"text": "OpenNLP", "start_pos": 245, "end_pos": 252, "type": "DATASET", "confidence": 0.9201027154922485}]}, {"text": "Among the UIMA based systems, Kachako (Kano, 2012b) provides many generic features useful for developers to analyze and improve their applications.", "labels": [], "entities": [{"text": "Kachako (Kano, 2012b)", "start_pos": 30, "end_pos": 51, "type": "DATASET", "confidence": 0.6843756337960561}]}, {"text": "Unfortunately, these features are parts of a large integrated system which are not easy for the developers to partially reuse.", "labels": [], "entities": []}, {"text": "Furthermore, certain number of developers avoid learning UIMA due to UIMA's rich but complex higher interoperability concepts.", "labels": [], "entities": []}, {"text": "We suggest a simplified interface that just requires the so-called stand-off annotation style data structure.", "labels": [], "entities": []}, {"text": "In order for developers to more easily reuse Kachako's features, we built an API oriented NLP system based on Kachako, changing to the simplified interface discarding its UIMA compliancy.", "labels": [], "entities": []}, {"text": "We describe points of the UIMA framework (Section 2), the features of the Kachako platform (Section 3), and our suggested simple framework with actual API oriented system (Section 4), finally concluding this paper (Section 5).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}