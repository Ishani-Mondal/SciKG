{"title": [{"text": "A Vector Model for Type-Theoretical Semantics", "labels": [], "entities": []}], "abstractContent": [{"text": "Vector models of distributional semantics can be viewed as a geometric interpretation of a fragment of dependent type theory.", "labels": [], "entities": []}, {"text": "By extending to a bigger fragment to include the dependent product we achieve a significant increase inexpressive power of vector models, which allows for an implementation of contextual adaptation of word meanings in the compositional setting .", "labels": [], "entities": []}], "introductionContent": [{"text": "In this paper we discuss a possibility of reconciling two distinct threads of research in computational lexical semantics, namely distributional semantics) and formal semantics based on dependent type theory.", "labels": [], "entities": []}, {"text": "Although both approaches focus on related problems of lexical semantics and composition, it is hard to combine them in a unified framework because of differences in computational techniques they employ.", "labels": [], "entities": []}, {"text": "However, their theoretical foundations are compatible and it is possible to incorporate vector space models into a computational framework based on dependent type theory.", "labels": [], "entities": []}, {"text": "The extensions of existing vector representations required for this task are motivated by the geometric interpretation of type theory.", "labels": [], "entities": []}, {"text": "The reason why such extensions are necessary is the limitations of the function application model of compositionality.", "labels": [], "entities": []}, {"text": "In formal semantics compositionality is traditionally modeled as an application of one logical form to another, technically realized as a reduction of concatenated logical forms expressed in a variant of typed lambda calculus.", "labels": [], "entities": [{"text": "formal semantics compositionality", "start_pos": 3, "end_pos": 36, "type": "TASK", "confidence": 0.7181929349899292}]}, {"text": "In distributional semantics this approach is retained, although lambda terms are substituted with vectors and tensors of various ranks (.", "labels": [], "entities": []}, {"text": "This model of compositionality has difficulties with the compositional treatment of certain common types of natural language expressions, that require contextdependence of terms and a non-trivial machanism of meaning adaptation.", "labels": [], "entities": [{"text": "meaning adaptation", "start_pos": 209, "end_pos": 227, "type": "TASK", "confidence": 0.7347549498081207}]}, {"text": "Paradigmatic examples of such linguistic phenomena are logical polysemy and co-predication, which received formal treatment in the works of and are among the central problems of type-theoretical semantics).", "labels": [], "entities": []}, {"text": "The problems related to logical polysemy include cases where an intended aspect of meaning of an argument requires an adaptation of a predicate which is applied to it and vice versa.", "labels": [], "entities": []}, {"text": "Consider the case of an adjective applied to a noun in red apple, red watermelon and red crystal.", "labels": [], "entities": []}, {"text": "In these examples a notion of \"redness\" is different for each of the arguments.", "labels": [], "entities": []}, {"text": "A red apple is red when most of its surface is red, a watermelon is red inside, a crystal is red entirely.", "labels": [], "entities": []}, {"text": "It is possible to characterize a watermelon as being ripe by saying that it is red, which is not the case fora crystal.", "labels": [], "entities": []}, {"text": "As a result, an adaptation of a predicate is needed to properly account for the meaning variations in all these cases.", "labels": [], "entities": []}, {"text": "Similarly, an argument can have multiple aspects of meaning selected by various predicates.", "labels": [], "entities": []}, {"text": "In heavy book and boring book a book is treated as either a physical objector an information content.", "labels": [], "entities": []}, {"text": "Both aspects clearly correspond to different sets of properties, which are taken into account by the predicates and reflect in the systemic organization of the lexicon, e. g. hypernym relations between synsets or relations between word classes.", "labels": [], "entities": []}, {"text": "Words both in argument and predicate positions can demonstrate capability of contextual meaning adaptation, sometimes even simultaneously, like in red book.", "labels": [], "entities": [{"text": "contextual meaning adaptation", "start_pos": 77, "end_pos": 106, "type": "TASK", "confidence": 0.6828417181968689}]}, {"text": "Such cases violate the direction of application of a predicate and are problematic for the function application model of composition.", "labels": [], "entities": []}, {"text": "Another violation occurs in cases of copredication, which takes place when two or more predicates make use of conflicting meaning aspects of an argument, leading to the necessity to assign at least two incompatible meaning representations (e. g. types) to a single word.", "labels": [], "entities": []}, {"text": "The \"lunch sentence\" proposed by is a classic example: A lunch was delicious but took forever.", "labels": [], "entities": []}, {"text": "Notwithstanding these obstacles, we find that the function application model of composition can in fact be made compatible with contextdependent meaning alternations.", "labels": [], "entities": []}, {"text": "An extension required for this task follows naturally from an identification of basic operations of composition in vector models and computation rules in type theory.", "labels": [], "entities": []}, {"text": "The resulting model can in turn be given an intuitive geometric interpretation, that greatly clarifies the options for its computational implementation.", "labels": [], "entities": []}, {"text": "Recent developments in type theory made clear a tight connection between computation and geometry.", "labels": [], "entities": [{"text": "type theory", "start_pos": 23, "end_pos": 34, "type": "TASK", "confidence": 0.9843433797359467}]}, {"text": "In the following sections we give a sketch of a method of incorporating semantic vector spaces within a type-theoretical framework of Luo by interpreting primitive types as vector spaces, dependent types as fibers of a vector bundle and so forth.", "labels": [], "entities": []}, {"text": "Currently we limit ourselves to the dependent product type, leaving an analysis of the dependent sum and dot types for later.", "labels": [], "entities": []}, {"text": "However, we give some general remarks as to how these important constructs might be implemented in our setting.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}