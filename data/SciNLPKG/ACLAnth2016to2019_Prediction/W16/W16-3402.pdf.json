{"title": [{"text": "Graphonological Levenshtein Edit Distance: Application for Automated Cognate Identification", "labels": [], "entities": [{"text": "Graphonological Levenshtein Edit Distance", "start_pos": 0, "end_pos": 41, "type": "TASK", "confidence": 0.505378469824791}, {"text": "Automated Cognate Identification", "start_pos": 59, "end_pos": 91, "type": "TASK", "confidence": 0.6579360763231913}]}], "abstractContent": [{"text": "This paper presents a methodology for calculating a modified Levenshtein edit distance between character strings, and applies it to the task of automated cognate identification from non-parallel (comparable) corpora.", "labels": [], "entities": [{"text": "automated cognate identification", "start_pos": 144, "end_pos": 176, "type": "TASK", "confidence": 0.6613386372725168}]}, {"text": "This task is an important stage in developing MT systems and bilingual dictionaries beyond the coverage of traditionally used aligned parallel corpora, which can be used for finding translation equivalents for the 'long tail' in Zipfian distribution: low-frequency and usually unambiguous lexical items in closely-related languages (many of those often under-resourced).", "labels": [], "entities": [{"text": "MT", "start_pos": 46, "end_pos": 48, "type": "TASK", "confidence": 0.9894877672195435}]}, {"text": "Graphonological Levenshtein edit distance relies on editing hierarchical representations of phonological features for graphemes (graphonological representations) and improves on phonological edit distance proposed for measuring dialectological variation.", "labels": [], "entities": []}, {"text": "Graphonological edit distance works directly with character strings and does not require an intermediate stage of phonological transcription, exploiting the advantages of historical and morphological principles of orthography, which are obscured if only phonetic principle is applied.", "labels": [], "entities": [{"text": "Graphonological edit distance", "start_pos": 0, "end_pos": 29, "type": "TASK", "confidence": 0.7831247846285502}]}, {"text": "Difficulties associated with plain feature representations (unstructured feature sets or vectors) are addressed by using linguistically-motivated feature hierarchy that restricts matching of lower-level graphonological features when higher-level features are not matched.", "labels": [], "entities": []}, {"text": "The paper presents an evaluation of the graphonological edit distance in comparison with the traditional Levenshtein edit distance from the perspective of its usefulness for the task of automated cognate identification.", "labels": [], "entities": [{"text": "automated cognate identification", "start_pos": 186, "end_pos": 218, "type": "TASK", "confidence": 0.6148565709590912}]}, {"text": "It discusses the advantages of the proposed method, which can be used for morphology induction, for robust transliteration across different alphabets (Latin, Cyrillic, Arabic, etc.) and robust identification of words with non-standard or distorted spelling, e.g., in user-generated content on the web such as posts on social media, blogs and comments.", "labels": [], "entities": [{"text": "morphology induction", "start_pos": 74, "end_pos": 94, "type": "TASK", "confidence": 0.9038525521755219}]}, {"text": "Software for calculating the modified feature-based Levenshtein distance, and the corresponding graphonological feature representations (vectors and the hierarchies of graphemes' features) are released on the author's webpage: http://corpus.leeds.ac.uk/bogdan/phonologylevenshtein/.", "labels": [], "entities": []}, {"text": "Features are currently available for Latin and Cyrillic alphabets and will be extended to other alphabets and languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "Levenshtein edit distance proposed in) is an algorithm that calculates the cost (normally -the number of operations such as deletions, insertions and substitutions) needed to transfer a string of symbols (characters or words) into another string.", "labels": [], "entities": []}, {"text": "This algorithm is used in many computational linguistic applications that require some form of the fuzzy string matching, examples include fast creation of morphological and syntactic taggers exploiting similarities between closely related languages (), statistical learning of preferred edits for detecting regular orthographic correspondences in closely related languages ().", "labels": [], "entities": []}, {"text": "Applications of Levenshtein's metric for the translation technologies and specifically for Machine Translation include automated identification of cognates for the tasks of creating bilingual resources such as electronic dictionaries (e.g.,, improving document alignment by using cognate translation equivalents as a seed lexicon, automated MT evaluation (e.g.,.", "labels": [], "entities": [{"text": "Machine Translation", "start_pos": 91, "end_pos": 110, "type": "TASK", "confidence": 0.8061862885951996}, {"text": "document alignment", "start_pos": 252, "end_pos": 270, "type": "TASK", "confidence": 0.7146256119012833}, {"text": "MT evaluation", "start_pos": 341, "end_pos": 354, "type": "TASK", "confidence": 0.968799352645874}]}, {"text": "Levenshtein distance metrics has been modified and extended for applications in different areas; certain ideas have yet not been tested in MT context, but have a clear potential for benefiting MT-related tasks.", "labels": [], "entities": [{"text": "MT context", "start_pos": 139, "end_pos": 149, "type": "TASK", "confidence": 0.9195811152458191}, {"text": "MT-related tasks", "start_pos": 193, "end_pos": 209, "type": "TASK", "confidence": 0.9384937286376953}]}, {"text": "This paper develops and evaluates one of such ideas fora linguistic extension of the metric proposed in the area of computational modelling of dialectological variation and measuring 'cognate' lexical distance between languages, dialects and different historical periods in development of languages, e.g., using cognates from the slow-changing part of the lexicon -the Swadesh list.", "labels": [], "entities": []}, {"text": "In this paper the suggestion is explored of calculating the so called Levenshtein's 'phonological edit distance' between phonemic transcriptions of cognates, rather than the traditional string edit distance.", "labels": [], "entities": []}, {"text": "This idea is based on the earlier linguistic paradigm of describing phonemes as systems of their phonological features, formulated in its modern form by Roman Jacobson -see for the development of the theory; later it was introduced into generative and computational linguistic paradigms by.", "labels": [], "entities": []}, {"text": "The idea is that each phoneme in a transcription of a cognate is represented as a structure of phonological distinctive features, such as: [a] = [+vowel, +back; +open; -labialised]", "labels": [], "entities": []}], "datasetContent": [{"text": "Evaluation is performed for the baseline Levenshtein metric and the proposed featurebased metric with two settings: one using flat feature vectors for graphonological representations, and the other -using hierarchically organised features.", "labels": [], "entities": []}, {"text": "Evaluation was done on a sample of 300 Ukrainian words selected from 6 frequency bands in the frequency dictionary of lemmas (ranks 1-50,, Russian cognates were searched in the full-length frequency dictionary of 16,000 entries automatically derived from the Russian corpus (as described in Section 2.1).", "labels": [], "entities": []}, {"text": "For 274 out of the 300 Ukrainian words either the baseline Levenshtein metric, or the experimental feature metric returned Russian candidate cognates (with the threshold of \u00ed \u00b5\u00ed\u00b0\u00bf\u00ed \u00b5\u00ed\u00b1\u0092\u00ed \u00b5\u00ed\u00b1\u00a3\u00ed \u00b5\u00ed\u00b0\u00b7\u00ed \u00b5\u00ed\u00b1\u0096\u00ed \u00b5\u00ed\u00b1 \u00ed \u00b5\u00ed\u00b1\u00a1 max (\u00ed \u00b5\u00ed\u00b1\u0099\u00ed \u00b5\u00ed\u00b1\u0092\u00ed \u00b5\u00ed\u00b1\u009b(\u00ed \u00b5\u00ed\u00b1\u008a1), \u00ed \u00b5\u00ed\u00b1\u0099\u00ed \u00b5\u00ed\u00b1\u0092\u00ed \u00b5\u00ed\u00b1\u009b(\u00ed \u00b5\u00ed\u00b1\u008a2)) \u2264 0.36 applied across all the metrics, as mentioned in Section 2.1.", "labels": [], "entities": []}, {"text": "Different settings for modifications of Levenshtein edit distance can be systematically evaluated in this scenario by using human annotation of the candidate cognate lists.", "labels": [], "entities": []}, {"text": "The 274 lists of cognate candidates provided by each metric were then labelled according to the following annotation scheme:  Counts of annotation labels for each of the categories are shown in and.", "labels": [], "entities": []}, {"text": "Comparative performance of distance measures for the task of ranking cognates It can be seen from the tables that while the baseline Levenshtein metric, column Lev) outperforms the feature-based metric that uses feature vector graphonological representations (column GPFeat Vectors), but the feature-based metric outperforms the baseline when hierarchical graphonological feature representations are used (column GPFeat Hierarchy).", "labels": [], "entities": []}, {"text": "The improvement is about 4% (or nearly 5%, if trivial examples of absolute cognates are discounted).", "labels": [], "entities": []}, {"text": "There is no improvement in ranking of found equivalents, which maybe due to the noise related to a relatively higher cost of insertions, deletions and reordering of characters.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 4. Labels used for candidate cognate annotation", "labels": [], "entities": []}, {"text": " Table 5. Parameters of evaluation sample", "labels": [], "entities": [{"text": "Parameters", "start_pos": 10, "end_pos": 20, "type": "METRIC", "confidence": 0.987899124622345}]}, {"text": " Table 6. Comparative performance of distance measures for the task of ranking cognates", "labels": [], "entities": []}]}