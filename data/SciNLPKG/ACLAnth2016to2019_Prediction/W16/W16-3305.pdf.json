{"title": [{"text": "Argument linking in LTAG: A constraint-based implementation with XMG", "labels": [], "entities": [{"text": "Argument linking", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.8189703226089478}, {"text": "XMG", "start_pos": 65, "end_pos": 68, "type": "DATASET", "confidence": 0.5652444958686829}]}], "abstractContent": [{"text": "This paper develops a first systematic approach to argument linking in LTAG, building on typologically oriented work in Van Valin (2005).", "labels": [], "entities": [{"text": "argument linking", "start_pos": 51, "end_pos": 67, "type": "TASK", "confidence": 0.8473664820194244}]}, {"text": "While Van Valin's argument linking mechanism is procedurally defined, we propose a constraint-based implementation.", "labels": [], "entities": [{"text": "argument linking", "start_pos": 18, "end_pos": 34, "type": "TASK", "confidence": 0.7144887447357178}]}, {"text": "The advantage is that we can separate between the linguistic generalizations to be captured and algorith-mic considerations.", "labels": [], "entities": []}, {"text": "The implementation is couched into the metagrammar framework eXtensible MetaGrammar (XMG).", "labels": [], "entities": []}], "introductionContent": [{"text": "The syntax-semantics interface of Lexicalized Tree Adjoining Grammar (LTAG) builds on the assumptions that (i) the elementary tree of a predicate contains slots for the arguments of the predicate, (ii) this elementary tree is paired with a semantic representation with semantic arguments, (iii) there is a linking between syntactic argument slots and semantic arguments that makes sure that the filling of an argument node in the syntax triggers the insertion of a corresponding semantic representation into the linked semantic argument position.", "labels": [], "entities": [{"text": "Lexicalized Tree Adjoining Grammar (LTAG)", "start_pos": 34, "end_pos": 75, "type": "TASK", "confidence": 0.7868539861270359}]}, {"text": "This holds for the unification-based approach from, Gardent and  and using predicate logic, for the approach based on synchronous TAG and also for the frame-based approach of.", "labels": [], "entities": []}, {"text": "However, none of these approaches has implemented a theory which explains why only certain patterns of argument linking are allowed.", "labels": [], "entities": [{"text": "argument linking", "start_pos": 103, "end_pos": 119, "type": "TASK", "confidence": 0.7320813834667206}]}, {"text": "In, for instance, the elementary tree for ate is paired with the upper frame while the lower frame is not grammatical in combination with this tree because of the incorrect linking.", "labels": [], "entities": []}, {"text": "The AGENT has to be contributed by the subject while the THEME slot is filled via the object substitution node.", "labels": [], "entities": [{"text": "AGENT", "start_pos": 4, "end_pos": 9, "type": "METRIC", "confidence": 0.985470175743103}, {"text": "THEME", "start_pos": 57, "end_pos": 62, "type": "METRIC", "confidence": 0.8342687487602234}]}, {"text": "The principles and constraints underlying linking have been extensively investigated (., for instance, introduces proto-AGENT and proto-PATIENT as intermediate roles linking syntax to semantics.", "labels": [], "entities": []}, {"text": "Van Valin (2005) presents an elaborated linking algorithm based on the macroroles ACTOR and UNDERGOER and on the actorundergoer-hierarchy.", "labels": [], "entities": [{"text": "ACTOR", "start_pos": 82, "end_pos": 87, "type": "METRIC", "confidence": 0.8808354139328003}, {"text": "UNDERGOER", "start_pos": 92, "end_pos": 101, "type": "METRIC", "confidence": 0.9590386152267456}]}, {"text": "This algorithm is not fully formalized, however, and it is formulated in a procedural way that mixes constraints which express linguistic generalizations with algorithmic aspects.", "labels": [], "entities": []}, {"text": "The latter point is problematic insofar as Van Valin's linking system is intended to be used both for language understanding and language generation.", "labels": [], "entities": [{"text": "language understanding", "start_pos": 102, "end_pos": 124, "type": "TASK", "confidence": 0.7633697390556335}, {"text": "language generation", "start_pos": 129, "end_pos": 148, "type": "TASK", "confidence": 0.7506222724914551}]}, {"text": "It is thus desirable fora formalization and implementation of the system to keep the principles and constraints separate from aspects of processing order.", "labels": [], "entities": []}, {"text": "Based on Van Valin's proposal, this paper provides a constraint-based implementation of linking principles that captures the systematic relation between syntactic arguments and semantic roles.", "labels": [], "entities": []}, {"text": "These constraints restrict the set of possible ele-mentary pairs of tree and semantic representation.", "labels": [], "entities": []}, {"text": "In other words, they act on the level of elementary structures in the grammar and are therefore part of the metagrammar, together with syntactic tree fragments and fragments of semantic representations.", "labels": [], "entities": []}, {"text": "This is the part of the grammar that provides a systematic constraint-based definition of the set of elementary trees along with the semantic representations they can be paired with).", "labels": [], "entities": []}, {"text": "We will use the metagrammar compiler XMG) with frames as semantic representations.", "labels": [], "entities": []}, {"text": "Since argument linking is independent from the choice of the semantic representation, our analysis could also be applied to an LTAG syntax-semantics interface using one of the other frameworks mentioned above.", "labels": [], "entities": [{"text": "argument linking", "start_pos": 6, "end_pos": 22, "type": "TASK", "confidence": 0.7307429909706116}]}], "datasetContent": [], "tableCaptions": []}