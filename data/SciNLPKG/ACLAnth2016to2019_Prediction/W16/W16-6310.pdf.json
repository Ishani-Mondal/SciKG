{"title": [], "abstractContent": [{"text": "In the paper we try to show that a lazy functional language such as Haskell is a convenient framework not only for implementing dependency parsers but also for expressing dependency grammars directly in the programming language in a compact , readable and mathematically clean way.", "labels": [], "entities": []}, {"text": "The parser core, supplying necessary types and functions, is presented together with two examples of grammars: one trivial and one more elaborate, allowing to express a range of complex grammatical constraints such as long distance agreement.", "labels": [], "entities": []}, {"text": "The complete Haskell code of the parser core as well the grammar examples is included.", "labels": [], "entities": []}], "introductionContent": [{"text": "Functional programming is nowadays probably the most rapidly developing subfield in the domain of theory and implementation of programming languages.", "labels": [], "entities": [{"text": "Functional programming", "start_pos": 0, "end_pos": 22, "type": "TASK", "confidence": 0.9008597731590271}]}, {"text": "Functional languages, with Haskell as their flagship, are continuously evolving, mostly by absorbing more and more mathematics (abstract algebra, category theory).", "labels": [], "entities": []}, {"text": "This translates into their increasing expressiveness, which is directly usable by programmers.", "labels": [], "entities": []}, {"text": "The combination of keywords functional programming and parsing usually brings to mind the monadic parsing technique) developed as an attractive functional offer for parser builders.", "labels": [], "entities": []}, {"text": "This technology is dedicated mostly to artificial languages.", "labels": [], "entities": []}, {"text": "Much less work has been done in functional programming paradigm regarding natural language parsing technologies.", "labels": [], "entities": [{"text": "natural language parsing", "start_pos": 74, "end_pos": 98, "type": "TASK", "confidence": 0.7107392946879069}]}, {"text": "The outstanding exception is the Grammatical Framework environment.", "labels": [], "entities": []}, {"text": "Written in Haskell with extensive use of higherorder abstraction and laziness property, it offers impressive capabilities of making generalizations in all conceivable dimensions in a large and highly multilingual language model including morphological, syntactic and semantic layers.", "labels": [], "entities": []}, {"text": "Some other works, which maybe mentioned here, are due to,,.", "labels": [], "entities": []}, {"text": "As far as dependency-based parsing and language description is concerned (, the author is not aware of any attempts to apply functional programming techniques.", "labels": [], "entities": [{"text": "dependency-based parsing", "start_pos": 10, "end_pos": 34, "type": "TASK", "confidence": 0.7178886234760284}, {"text": "language description", "start_pos": 39, "end_pos": 59, "type": "TASK", "confidence": 0.6902325451374054}]}, {"text": "Below we try to show that a lazy functional language such as Haskell is a convenient framework not only for implementing dependency parsers but also for expressing dependency grammars directly as Haskell code in a compact, readable, and mathematically clean way.", "labels": [], "entities": []}, {"text": "A question may arise: why the ability to write a grammar directly in a programming language should be considered desirable.", "labels": [], "entities": []}, {"text": "There are already plenty of grammatical formalisms to choose from.", "labels": [], "entities": []}, {"text": "And what makes Haskell more interesting target language then others, e.g. Python.", "labels": [], "entities": []}, {"text": "The answer to the first questions is: (1) the grammar writer is free in choosing the way the lexical and grammatical description is formulated; (2) full strength of the language maybe used according to the needs.", "labels": [], "entities": []}, {"text": "DCG grammars) area good example here.", "labels": [], "entities": [{"text": "DCG grammars", "start_pos": 0, "end_pos": 12, "type": "DATASET", "confidence": 0.9360255300998688}]}], "datasetContent": [], "tableCaptions": []}