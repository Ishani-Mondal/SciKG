{"title": [{"text": "Transition-based dependency parsing as latent-variable constituent parsing", "labels": [], "entities": [{"text": "Transition-based dependency parsing", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.6069850921630859}, {"text": "latent-variable constituent parsing", "start_pos": 39, "end_pos": 74, "type": "TASK", "confidence": 0.7350608905156454}]}], "abstractContent": [{"text": "We provide a theoretical argument that a common form of projective transition-based dependency parsing is less powerful than constituent parsing using latent variables.", "labels": [], "entities": [{"text": "projective transition-based dependency parsing", "start_pos": 56, "end_pos": 102, "type": "TASK", "confidence": 0.6344577744603157}, {"text": "constituent parsing", "start_pos": 125, "end_pos": 144, "type": "TASK", "confidence": 0.7414896488189697}]}, {"text": "The argument is a proof that, under reasonable assumptions, a transition-based dependency parser can be converted to a latent-variable context-free grammar producing equivalent structures.", "labels": [], "entities": []}], "introductionContent": [{"text": "Over the last decade, transition-based dependency parsers have received much attention, to a large extent due to Nivre (2003),,  and following publications.", "labels": [], "entities": [{"text": "transition-based dependency parsers", "start_pos": 22, "end_pos": 57, "type": "TASK", "confidence": 0.6413921316464742}]}, {"text": "The theory represented in these publications seems to differ significantly from traditional automata theory, on which the theory of constituent parsing is based.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 132, "end_pos": 151, "type": "TASK", "confidence": 0.7273080050945282}]}, {"text": "Differences lie in notation, in terminology and in the overall conceptual framework.", "labels": [], "entities": []}, {"text": "An explanation for this cannot immediately be found by contrasting the foundations of dependency parsing and constituent parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 86, "end_pos": 104, "type": "TASK", "confidence": 0.7569398283958435}, {"text": "constituent parsing", "start_pos": 109, "end_pos": 128, "type": "TASK", "confidence": 0.7023156583309174}]}, {"text": "Some of the earliest literature on dependency parsing discusses the two kinds of parsing on an equal footing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 35, "end_pos": 53, "type": "TASK", "confidence": 0.8598326146602631}]}, {"text": "Also more recent literature) discusses dependency parsing as closely related to constituent parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 39, "end_pos": 57, "type": "TASK", "confidence": 0.865487664937973}, {"text": "constituent parsing", "start_pos": 80, "end_pos": 99, "type": "TASK", "confidence": 0.6860651820898056}]}, {"text": "The concept of bilexical context-free grammars) establishes further explicit connections between phrase-structure grammar and dependency grammar.", "labels": [], "entities": []}, {"text": "See also Rambow (2010) fora discussion about the relation between constituent and dependency structures.", "labels": [], "entities": []}, {"text": "One advantage of dependency grammar is the ease with which the definition of parse structures can be generalized from the projective case to the non-projective case, but also this cannot explain the divergence from the theory of constituent parsing, as much the same style is used for describing projective dependency parsing and for non-projective dependency parsing; cf. for the latter.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 229, "end_pos": 248, "type": "TASK", "confidence": 0.7732119262218475}, {"text": "projective dependency parsing", "start_pos": 296, "end_pos": 325, "type": "TASK", "confidence": 0.738935132821401}]}, {"text": "Furthermore, discontinuity has also been explored for constituent parsing).", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 54, "end_pos": 73, "type": "TASK", "confidence": 0.6392173171043396}]}, {"text": "Close links between discontinuous constituent parsing and non-projective dependency parsing follow from the work of, among others, and.", "labels": [], "entities": [{"text": "discontinuous constituent parsing", "start_pos": 20, "end_pos": 53, "type": "TASK", "confidence": 0.583446075518926}]}, {"text": "Recent literature on dependency parsing has a strong emphasis on parsing speed.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 21, "end_pos": 39, "type": "TASK", "confidence": 0.809775173664093}, {"text": "parsing", "start_pos": 65, "end_pos": 72, "type": "TASK", "confidence": 0.9745732545852661}]}, {"text": "Often, parsing algorithms are close to linear-time, or close to quadratic-time in the worst case.", "labels": [], "entities": [{"text": "parsing", "start_pos": 7, "end_pos": 14, "type": "TASK", "confidence": 0.9765857458114624}]}, {"text": "However, there is also a considerable body of literature on speeding up constituent parsing).", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 72, "end_pos": 91, "type": "TASK", "confidence": 0.6486901044845581}]}, {"text": "Deterministic parsing algorithms for constituent parsing were proposed by e.g.,, and, while the parser of is close to linear time; for deterministic chunk parsing, see.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 37, "end_pos": 56, "type": "TASK", "confidence": 0.7341993153095245}, {"text": "deterministic chunk parsing", "start_pos": 135, "end_pos": 162, "type": "TASK", "confidence": 0.6498848895231882}]}, {"text": "suggests that deterministic constituent parsing was more or less the norm at the end of the 1980s.", "labels": [], "entities": [{"text": "deterministic constituent parsing", "start_pos": 14, "end_pos": 47, "type": "TASK", "confidence": 0.5976021885871887}]}, {"text": "Conversely, transition-based dependency parsing has been generalized to non-deterministic parsing (.", "labels": [], "entities": [{"text": "transition-based dependency parsing", "start_pos": 12, "end_pos": 47, "type": "TASK", "confidence": 0.6083806455135345}]}, {"text": "An empirical connection between constituent parsing and dependency parsing has been established by several investigations of conversion between constituent structures and dependency structures.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 32, "end_pos": 51, "type": "TASK", "confidence": 0.6513193398714066}, {"text": "dependency parsing", "start_pos": 56, "end_pos": 74, "type": "TASK", "confidence": 0.7871080636978149}]}, {"text": "Transformation from constituent structures to dependency structures is addressed by,, and.", "labels": [], "entities": []}, {"text": "Dependency parsers have been used to perform constituent parsing (.", "labels": [], "entities": [{"text": "Dependency parsers", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.734976515173912}, {"text": "constituent parsing", "start_pos": 45, "end_pos": 64, "type": "TASK", "confidence": 0.790766566991806}]}, {"text": "Transformations from unlabeled dependency structures to constituent structures were discussed by, and transformations from labeled dependency structures were discussed by.", "labels": [], "entities": []}, {"text": "It has been observed that constituent parsers used to perform dependency parsing can beat least as accurate as dedicated dependency parsers, although they are generally slower).", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 62, "end_pos": 80, "type": "TASK", "confidence": 0.8446637392044067}]}, {"text": "The present article aims to elucidate part of the relation between the theory of transition-based dependency parsing and the theory of constituent parsing.", "labels": [], "entities": [{"text": "transition-based dependency parsing", "start_pos": 81, "end_pos": 116, "type": "TASK", "confidence": 0.6500476400057474}, {"text": "constituent parsing", "start_pos": 135, "end_pos": 154, "type": "TASK", "confidence": 0.7218267917633057}]}, {"text": "We will focus on a particular form of constituent parsing that is based on latent-variable probabilistic context-free grammars, which currently offers state-of-the-art accuracy.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 38, "end_pos": 57, "type": "TASK", "confidence": 0.6964296400547028}, {"text": "accuracy", "start_pos": 168, "end_pos": 176, "type": "METRIC", "confidence": 0.996266782283783}]}, {"text": "One apparent complication is that there are competing ways of obtaining such grammars, roughly divided into forms of EM training () or of spectral learning (.", "labels": [], "entities": []}, {"text": "We circumvent this complication by looking at the general class of non-probabilistic latent-variable contextfree grammars, and show that these have sufficient formal power to subsume deterministic transition-based dependency parsing.", "labels": [], "entities": [{"text": "subsume deterministic transition-based dependency parsing", "start_pos": 175, "end_pos": 232, "type": "TASK", "confidence": 0.59452583193779}]}, {"text": "The implication is that latent-variable probabilistic contextfree grammars, obtained through EM training, spectral learning, or any other method still to be developed, have the potential to beat least as accurate as deterministic transition-based dependency parsing.", "labels": [], "entities": [{"text": "deterministic transition-based dependency parsing", "start_pos": 216, "end_pos": 265, "type": "TASK", "confidence": 0.6360615640878677}]}, {"text": "This paper intentionally limits the scope to projective parsing.", "labels": [], "entities": [{"text": "projective parsing", "start_pos": 45, "end_pos": 63, "type": "TASK", "confidence": 0.62467360496521}]}, {"text": "The reason is that the literature on non-projectivity (discontinuity) has not yet converged, and new approaches are discovered with some regularity.", "labels": [], "entities": []}, {"text": "This makes it hard to offer formal evidence that non-projective dependency parsing can generally be realized via discontinuous constituent parsing.", "labels": [], "entities": [{"text": "non-projective dependency parsing", "start_pos": 49, "end_pos": 82, "type": "TASK", "confidence": 0.7337347467740377}]}, {"text": "At best, one can highlight one or two typical implementations of dependency parsing and constituent parsing and argue that the mechanisms for dealing with non-projectivity are comparable in nature, awaiting precise arguments relating their formal power.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 65, "end_pos": 83, "type": "TASK", "confidence": 0.7680859565734863}, {"text": "constituent parsing", "start_pos": 88, "end_pos": 107, "type": "TASK", "confidence": 0.7208864539861679}]}, {"text": "One well-established approach to dealing with non-projective dependency structure is commonly referred to as pseudo-projectivity ().", "labels": [], "entities": []}, {"text": "The idea is that a first phase of projective parsing is followed by a lifting operation that rearranges edges to make them cross one another.", "labels": [], "entities": []}, {"text": "A related idea for discontinuous constituent parsing is the reversible splitting conversion of.", "labels": [], "entities": [{"text": "discontinuous constituent parsing", "start_pos": 19, "end_pos": 52, "type": "TASK", "confidence": 0.6444722314675649}]}, {"text": "A related but different approach is due to Nivre.", "labels": [], "entities": []}, {"text": "Here, the usual one-way input tape is replaced by a buffer.", "labels": [], "entities": []}, {"text": "A non-topmost element from the parsing stack, which holds a word previously read from the input sentence, can be transferred back to the buffer, and thereby input positions can be effectively swapped, and non-projective structures result.", "labels": [], "entities": []}, {"text": "We see no reason why the same idea would not equally well apply to constituent parsing.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 67, "end_pos": 86, "type": "TASK", "confidence": 0.734865814447403}]}, {"text": "This paper has the following structure.", "labels": [], "entities": []}, {"text": "After fixing notation in Section 2, we present a formal model of deterministic parsing in Section 3, in terms of oracle automata.", "labels": [], "entities": [{"text": "deterministic parsing", "start_pos": 65, "end_pos": 86, "type": "TASK", "confidence": 0.666069746017456}]}, {"text": "These automata appear at first sight to be biased towards constituent parsing, but Section 4 shows that they allow a clean formalization of arc-standard and arc-eager transition-based dependency parsing.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 58, "end_pos": 77, "type": "TASK", "confidence": 0.7073761820793152}, {"text": "arc-eager transition-based dependency parsing", "start_pos": 157, "end_pos": 202, "type": "TASK", "confidence": 0.6619153916835785}]}, {"text": "It is shown in Section 5 that oracle automata can, under reasonable assumptions, be transformed into latentvariable context-free grammars.", "labels": [], "entities": []}, {"text": "Section 6 further explores these assumptions as relating to common implementations of transition-based dependency parsing.", "labels": [], "entities": [{"text": "transition-based dependency parsing", "start_pos": 86, "end_pos": 121, "type": "TASK", "confidence": 0.5896015564600626}]}, {"text": "As shown in Section 7, the results carryover to probabilistic automata and grammars.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}