{"title": [{"text": "Hyperedge Replacement and Nonprojective Dependency Structures", "labels": [], "entities": [{"text": "Hyperedge Replacement", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.7655764222145081}]}], "abstractContent": [{"text": "Synchronous Hyperedge Replacement Graph Grammars (SHRG) can be used to translate between strings and graphs.", "labels": [], "entities": [{"text": "Synchronous Hyperedge Replacement Graph Grammars (SHRG)", "start_pos": 0, "end_pos": 55, "type": "TASK", "confidence": 0.7467237859964371}]}, {"text": "In this paper, we study the capacity of these grammars to create non-projective dependency graphs.", "labels": [], "entities": []}, {"text": "As an example, we use languages that contain cross serial dependencies.", "labels": [], "entities": []}, {"text": "Lexicalized hyperedge replacement grammars can derive string languages (as path graphs) that contain an arbitrary number of these dependencies so that their derivation trees reflect the correct dependency graphs.", "labels": [], "entities": [{"text": "Lexicalized hyperedge replacement grammars", "start_pos": 0, "end_pos": 42, "type": "TASK", "confidence": 0.8015556186437607}]}, {"text": "We find that, in contrast, string-to-graph SHRG that derive dependency structures on the graph side are limited to derivations permitted by the string side.", "labels": [], "entities": []}, {"text": "We show that, as a result , string-to-graph SHRG cannot capture languages with an unlimited degree of crossing dependencies.", "labels": [], "entities": []}, {"text": "This observation has practical implications for the use of SHRG in semantic parsing.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 67, "end_pos": 83, "type": "TASK", "confidence": 0.8149017095565796}]}], "introductionContent": [{"text": "Hyperedge Replacement Grammars (HRG) area type of context free graph grammar.", "labels": [], "entities": [{"text": "Hyperedge Replacement Grammars (HRG", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.8050995290279388}]}, {"text": "Their derived objects are hypergraphs instead of strings.", "labels": [], "entities": []}, {"text": "A synchronous extension, Synchronous Hyperedge Replacement Grammars (SHRG) can be used to translate between strings and graphs.", "labels": [], "entities": [{"text": "Synchronous Hyperedge Replacement Grammars (SHRG)", "start_pos": 25, "end_pos": 74, "type": "TASK", "confidence": 0.7223671674728394}]}, {"text": "To construct a graph fora sentence, one simply parses the input using the string side of the grammar and then interprets the derivations with the graph side to assemble a derived graph.", "labels": [], "entities": []}, {"text": "SHRG has recently drawn attention in Natural Language Processing as a tool for semantic construction.", "labels": [], "entities": [{"text": "semantic construction", "start_pos": 79, "end_pos": 100, "type": "TASK", "confidence": 0.830030232667923}]}, {"text": "For example, propose to use SHRG for semantics based machine translation, and describe an approach to learning SHRG rules that translate sentences into Abstract Meaning Representation (.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 53, "end_pos": 72, "type": "TASK", "confidence": 0.7141705751419067}]}, {"text": "Not much work has been done, however, on understanding the limits of syntactic and semantic structures that can be modeled using HRG and SHRG.", "labels": [], "entities": []}, {"text": "In this paper, we examine syntactic dependency structures generated by these formalisms, specifially whether they can create correct dependency trees for non-projective phenomena.", "labels": [], "entities": []}, {"text": "We focus on non-projectivity caused by copy language like constructions, specifically cross-serial dependencies in Dutch.", "labels": [], "entities": []}, {"text": "shows a (classical) example sentence containing such dependencies and a dependency graph.", "labels": [], "entities": []}, {"text": "This paper looks at dependency structures from two perspectives.", "labels": [], "entities": []}, {"text": "We first review HRGs that derive string languages as path graphs.", "labels": [], "entities": []}, {"text": "The set of these languages is known to be the same as the languages generated by linear context free rewriting systems.", "labels": [], "entities": []}, {"text": "We consider HRG grammars of this type that are lexicalized (each rule contains exactly one terminal edge), so we can view their derivation trees as dependency structures.", "labels": [], "entities": []}, {"text": "We provide an example string-generating HRG that can analyze the sentence in with the correct dependency structure and can generate strings with an unlimited number of crossing dependencies of the same type.", "labels": [], "entities": []}, {"text": "Under the second perspective, we view the derived graphs of synchronous string-to-HRG grammars as dependency structures.", "labels": [], "entities": []}, {"text": "These grammars can generate labeled dependency graphs in a more flexible way, including labeled dependency edges, local reordering of dependencies (allowing a more semantically oriented analysis of prepositional phrases and conjunctions), structures with arbitrary node degree, and reentrancies.: Example sentence illustrating cross-serial dependencies in Dutch.", "labels": [], "entities": []}, {"text": "English translation: \"because Wim saw Jan help Marie teach the children to swim.\" ure 1, that derives the correct labeled dependency structure, but whose derivation does not resemble syntactic dependencies.", "labels": [], "entities": [{"text": "ure", "start_pos": 82, "end_pos": 85, "type": "METRIC", "confidence": 0.9502711892127991}]}, {"text": "Using this example, we observe an important limitation of string-to-graph SHRG: With nonterminal hyperedges of bounded type (number of incident vertices), we cannot analyze cross-serial dependencies with an unlimited number of crossing edges.", "labels": [], "entities": []}, {"text": "Specifically, fora given dependency edge covering a span of words, the number of nodes outside the span that can have a dependent or parent inside the span is limited.", "labels": [], "entities": []}, {"text": "This is because, on the input side, the grammar is a plain string CFG.", "labels": [], "entities": [{"text": "CFG", "start_pos": 66, "end_pos": 69, "type": "DATASET", "confidence": 0.9053521156311035}]}, {"text": "Ina string CFG derivation, each node must correspond to a connected subspan of the input.", "labels": [], "entities": []}, {"text": "Because of this constraint on the derivation, the dependency subgraphs constructed by the HRG must maintain a reference to all words that have along distance dependent elsewhere in the string.", "labels": [], "entities": []}, {"text": "These references are passed on through the derivation in the external nodes of each graph rhs of the SHRG rules.", "labels": [], "entities": []}, {"text": "External nodes are special vertices at which graph fragments are connected to the surrounding graph.", "labels": [], "entities": []}, {"text": "To avoid this problem, instead of a plain string CFG one can use other formalisms that produce context free derivation trees, such as the stringgenerating HRGs we discuss in this paper or LTAG.", "labels": [], "entities": [{"text": "LTAG", "start_pos": 188, "end_pos": 192, "type": "DATASET", "confidence": 0.9101276397705078}]}, {"text": "Semantic representations, such as Abstract Meaning Representation, resemble dependency structures.", "labels": [], "entities": [{"text": "Abstract Meaning Representation", "start_pos": 34, "end_pos": 65, "type": "TASK", "confidence": 0.7466346621513367}]}, {"text": "Therefore, while we do not discuss semantic graphs to skirt the issue of reentrancy, non-projective linguistic phenomena that appear in syntactic dependency structure are also relevant when translating strings into semantic representations.", "labels": [], "entities": []}, {"text": "We believe that our observations are not only of theoretical interest, but affect practical applications of SHRG in semantic parsing.", "labels": [], "entities": [{"text": "semantic parsing", "start_pos": 116, "end_pos": 132, "type": "TASK", "confidence": 0.8146021962165833}]}, {"text": "The paper proceeds as follows: Section 2 provides a formalization of Hyperedge Replacement Grammars and introduces necessary terminology.", "labels": [], "entities": [{"text": "Hyperedge Replacement Grammars", "start_pos": 69, "end_pos": 99, "type": "TASK", "confidence": 0.8350072503089905}]}, {"text": "In section 3, we discuss string generating HRGs and illustrate how they can be used to correctly analyze cross-serial dependencies in an example.", "labels": [], "entities": []}, {"text": "Section 4 examines string-to-graph SHRGs and observes their limitations in generating crossserial dependencies.", "labels": [], "entities": []}, {"text": "In section 5, we analyze this limitation in more detail, demonstrating a relationship between the order of a grammar (the maximum hyperedge type) and the maximum number of edges crossing another edge.", "labels": [], "entities": []}, {"text": "Section 6 provides an overview of related work.", "labels": [], "entities": []}, {"text": "Finally, we conclude and summarize our findings in section 7.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}