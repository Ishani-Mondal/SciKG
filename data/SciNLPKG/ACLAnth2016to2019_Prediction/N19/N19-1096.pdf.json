{"title": [{"text": "The Problem with Probabilistic DAG Automata for Semantic Graphs", "labels": [], "entities": []}], "abstractContent": [{"text": "Semantic representations in the form of directed acyclic graphs (DAGs) have been introduced in recent years, and to model them, we need probabilistic models of DAGs.", "labels": [], "entities": []}, {"text": "One model that has attracted some attention is the DAG automaton, but it has not been studied as a probabilistic model.", "labels": [], "entities": []}, {"text": "We show that some DAG automata cannot be made into useful probabilistic models by the nearly universal strategy of assigning weights to transitions.", "labels": [], "entities": []}, {"text": "The problem affects single-rooted, multi-rooted, and unbounded-degree variants of DAG automata, and appears to be pervasive.", "labels": [], "entities": []}, {"text": "It does not affect planar variants, but these are problematic for other reasons.", "labels": [], "entities": []}], "introductionContent": [{"text": "Abstract Meaning Representation (AMR;) has prompted a flurry of interest in probabilistic models for semantic parsing.", "labels": [], "entities": [{"text": "Abstract Meaning Representation (AMR", "start_pos": 0, "end_pos": 36, "type": "TASK", "confidence": 0.8319968938827514}, {"text": "semantic parsing", "start_pos": 101, "end_pos": 117, "type": "TASK", "confidence": 0.8303840160369873}]}, {"text": "AMR annotations are directed acyclic graphs (DAGs), but most probabilistic models view them as strings (e.g. van or trees (e.g., removing their ability to represent coreference-one of the very aspects of meaning that motivates AMR.", "labels": [], "entities": []}, {"text": "Could we we instead use probabilistic models of DAGs?", "labels": [], "entities": []}, {"text": "To answer this question, we must define probability distributions over sets of DAGs.", "labels": [], "entities": []}, {"text": "For inspiration, consider probability distributions over sets of strings or trees, which can be defined by weighted finite automata (e.g.): a finite automaton generates a set of strings or trees-called a language-and if we assume that probabilities factor over its transitions, then any finite automaton can be weighted to define a probability distribution over this language.", "labels": [], "entities": []}, {"text": "This assumption underlies powerful dy-namic programming algorithms like the Viterbi, forward-backward, and inside-outside algorithms.", "labels": [], "entities": []}, {"text": "What is the equivalent of weighted finite automata for DAGs?", "labels": [], "entities": []}, {"text": "There are several candidates (), but one appealing contender is the DAG automaton which generalises finite tree automata to DAGs explicitly for modeling semantic graphs.", "labels": [], "entities": []}, {"text": "These DAG automata generalise an older formalism called planar DAG automata by adding weights and removing the planarity constraint, and have attracted further study, in particular by, who generalised classic dynamic programming algorithms to DAG automata.", "labels": [], "entities": []}, {"text": "But while clearly intend for their weights to define probabilities, they stop short of claiming that they do, instead ending their paper with an open problem: \"Investigate a reasonable probabilistic model.\"", "labels": [], "entities": []}, {"text": "We investigate probabilistic DAG automata and prove a surprising result: For some DAG automata, it is impossible to assign weights that define non-trivial probability distributions.", "labels": [], "entities": []}, {"text": "We exhibit a very simple DAG automaton that generates an infinite language of graphs, and for which the only valid probability distribution that can be defined by weighting transitions is one in which the support is a single DAG, with all other graphs receiving a probability of zero.", "labels": [], "entities": []}, {"text": "Our proof relies on the fact that a non-planar DAG automaton generates DAGs so prolifically that their number grows factorially in their size, rather than exponentially as in other automata.", "labels": [], "entities": []}, {"text": "It holds for DAG automata that allow multiple roots or nodes of unbounded degree.", "labels": [], "entities": []}, {"text": "But it breaks down when applied to the planar DAGs of, which are nevertheless too restrictive to model semantic graphs.", "labels": [], "entities": []}, {"text": "Our result does not mean that it is impossible to define a probability distribution for the language that a DAG automaton generates.", "labels": [], "entities": []}, {"text": "But it does mean that this distribution does not factor over the automaton's transitions, so crucial dynamic programming algorithms do not generalise to DAG automata that are expressive enough to model semantic graphs.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}