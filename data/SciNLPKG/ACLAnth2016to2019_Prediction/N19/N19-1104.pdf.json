{"title": [{"text": "Graph Pattern Entity Ranking Model for Knowledge Graph Completion", "labels": [], "entities": [{"text": "Graph Pattern Entity", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.7424614826838175}, {"text": "Knowledge Graph Completion", "start_pos": 39, "end_pos": 65, "type": "TASK", "confidence": 0.6417794227600098}]}], "abstractContent": [{"text": "Knowledge graphs have evolved rapidly in recent years and their usefulness has been demonstrated in many artificial intelligence tasks.", "labels": [], "entities": []}, {"text": "However, knowledge graphs often have lots of missing facts.", "labels": [], "entities": []}, {"text": "To solve this problem , many knowledge graph embedding models have been developed to populate knowledge graphs and these have shown outstanding performance.", "labels": [], "entities": []}, {"text": "However, knowledge graph embedding models are so-called black boxes, and the user does not know how the information in a knowledge graph is processed and the models can be difficult to interpret.", "labels": [], "entities": []}, {"text": "In this paper , we utilize graph patterns in a knowledge graph to overcome such problems.", "labels": [], "entities": []}, {"text": "Our proposed model, the graph pattern entity ranking model (GRank), constructs an entity ranking system for each graph pattern and evaluates them using a ranking measure.", "labels": [], "entities": []}, {"text": "By doing so, we can find graph patterns which are useful for predicting facts.", "labels": [], "entities": [{"text": "predicting facts", "start_pos": 61, "end_pos": 77, "type": "TASK", "confidence": 0.8850900828838348}]}, {"text": "Then, we perform link prediction tasks on standard datasets to evaluate our GRank method.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 17, "end_pos": 32, "type": "TASK", "confidence": 0.7940059900283813}]}, {"text": "We show that our approach outperforms other state-of-the-art approaches such as ComplEx and TorusE for standard metrics such as HITS@n and MRR.", "labels": [], "entities": [{"text": "MRR", "start_pos": 139, "end_pos": 142, "type": "DATASET", "confidence": 0.6527956128120422}]}, {"text": "Moreover, our model is easily interpretable because the output facts are described by graph patterns.", "labels": [], "entities": []}], "introductionContent": [{"text": "Knowledge graphs can be used to describe realworld relations as facts in a form that a computer can easily process and has been used for many artificial intelligence tasks ().", "labels": [], "entities": []}, {"text": "Ina knowledge graph, a fact is represented by a labeled and directed edge, called a triple (h, r, t), where hand tare entity nodes and r is a relation label of an edge from h tot.", "labels": [], "entities": []}, {"text": "Knowledge graphs such as YAGO (),, and Freebase () have developed rapidly in recent years and are used for many artificial intelligence tasks such as question answering, content tagging, fact-checking, and knowledge inference.", "labels": [], "entities": [{"text": "Freebase", "start_pos": 39, "end_pos": 47, "type": "DATASET", "confidence": 0.936627984046936}, {"text": "question answering", "start_pos": 150, "end_pos": 168, "type": "TASK", "confidence": 0.8530562520027161}, {"text": "content tagging", "start_pos": 170, "end_pos": 185, "type": "TASK", "confidence": 0.7159160375595093}, {"text": "knowledge inference", "start_pos": 206, "end_pos": 225, "type": "TASK", "confidence": 0.7923961579799652}]}, {"text": "Although some knowledge graphs already contain millions of entities and billions of facts, they might still be incomplete and some facts maybe missing.", "labels": [], "entities": []}, {"text": "Hence, we need to develop a system that can predict missing facts to complete knowledge graphs automatically.", "labels": [], "entities": []}, {"text": "Many kinds of models for link prediction have been developed to estimate unknown facts.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 25, "end_pos": 40, "type": "TASK", "confidence": 0.8748345077037811}]}, {"text": "Knowledge graph embedding models, which are the most widely used approach in this field, map entities and relations in a knowledge graph onto a vector space and obtain the latent underlying features.", "labels": [], "entities": []}, {"text": "However, these models are generally difficult to interpret, as we do not know how information is processed in the models and the predicted facts are output without explanation.", "labels": [], "entities": []}, {"text": "In this paper, we construct statistical models based on graph pattern matching.", "labels": [], "entities": [{"text": "graph pattern matching", "start_pos": 56, "end_pos": 78, "type": "TASK", "confidence": 0.7222290635108948}]}, {"text": "These models are not only easy to interpret compared to knowledge graph embedding models but also outperform state-of-the-art models for link prediction.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 137, "end_pos": 152, "type": "TASK", "confidence": 0.7950774133205414}]}, {"text": "Our main contributions in this paper are as follows: \u2022 Defining graph pattern association rules (GPARs) fora knowledge graph.", "labels": [], "entities": [{"text": "Defining graph pattern association", "start_pos": 55, "end_pos": 89, "type": "TASK", "confidence": 0.7750924676656723}]}, {"text": "\u2022 Introducing a graph pattern probability model (GPro) and discussing its flaws.", "labels": [], "entities": []}, {"text": "\u2022 Proposing a novel model, the graph pattern entity ranking model (GRank), which uses graph patterns to rank entities.", "labels": [], "entities": []}, {"text": "\u2022 Proposing distributed rankings to address the problem arising from having the same score for multiple entities.", "labels": [], "entities": []}, {"text": "\u2022 Evaluating the proposed models through link prediction tasks for standard datasets: It is shown that our model outperforms most state-of-the-art knowledge graph embedding models for the HITS@n and MRR metrics.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 41, "end_pos": 56, "type": "TASK", "confidence": 0.7108465284109116}]}, {"text": "The remainder of this paper is organized as follows.", "labels": [], "entities": []}, {"text": "In Section 2, we discuss related work on link prediction.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 41, "end_pos": 56, "type": "TASK", "confidence": 0.876297265291214}]}, {"text": "In Section 3, we define the terms and notation used in this paper.", "labels": [], "entities": []}, {"text": "In Section 4, we define standard confidences for GPARs and discuss their problems.", "labels": [], "entities": [{"text": "GPARs", "start_pos": 49, "end_pos": 54, "type": "DATASET", "confidence": 0.7865599393844604}]}, {"text": "In Section 5, we propose the GRank model to deal with these problems.", "labels": [], "entities": []}, {"text": "In Section 6, we present an experimental study in which we compare our models with baseline results for benchmark datasets.", "labels": [], "entities": []}, {"text": "In Section 7, we conclude this paper.", "labels": [], "entities": []}], "datasetContent": [{"text": "As well as considering a GPAR as a binary classifier, we consider it as an entity ranking system.", "labels": [], "entities": []}, {"text": "Entities are ranked according to a score, based on their number of matching functions.", "labels": [], "entities": []}, {"text": "Moreover, we introduce the distributed rankings for entities, which are proposed to deal with situations where multiple entities have the same score.", "labels": [], "entities": []}, {"text": "Then, we define the evaluation metrics for the distributed rankings to evaluate GPARs for link prediction.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 90, "end_pos": 105, "type": "TASK", "confidence": 0.8063818216323853}]}, {"text": "These approaches overcome the problems shown in Section 4.2.", "labels": [], "entities": []}, {"text": "We use a GPAR to obtain distributed entity rankings as shown in Section 5.1.", "labels": [], "entities": []}, {"text": "In this section, we define a metric to evaluate distributed rankings of entities by generalizing the average precision to evaluate a GPAR.", "labels": [], "entities": [{"text": "precision", "start_pos": 109, "end_pos": 118, "type": "METRIC", "confidence": 0.7772302031517029}]}, {"text": "For a pattern GP (x,y) and a training query (h, r, ?), the distributed precision at k, dPre k , of dRANK(GP , (h, r, ?)) is defined as follows: where t j is an entity represented by j and drank i, j is an element of dRANK(GP , (h, r, ?)).", "labels": [], "entities": [{"text": "precision", "start_pos": 71, "end_pos": 80, "type": "METRIC", "confidence": 0.7417914271354675}]}, {"text": "The elements related with correct entities ranked higher or equal to k are summed up as the traditional precision at k.", "labels": [], "entities": [{"text": "precision", "start_pos": 104, "end_pos": 113, "type": "METRIC", "confidence": 0.9953746199607849}]}, {"text": "Then, the distributed average precision, dAP, is defined fora pattern GP (x,y) and a training query (h, r, ?) as follows: where t j is an entity represented by j, drank i, j is an element of dRANK(GP (x,y) , (h, r, ?)), and n is the number of entities.", "labels": [], "entities": [{"text": "distributed average precision", "start_pos": 10, "end_pos": 39, "type": "METRIC", "confidence": 0.5020281275113424}]}, {"text": "The numerator of the average precision for traditional rankings is the summation of the precision at k for relevant entities.", "labels": [], "entities": [{"text": "precision", "start_pos": 29, "end_pos": 38, "type": "METRIC", "confidence": 0.7025577425956726}, {"text": "precision", "start_pos": 88, "end_pos": 97, "type": "METRIC", "confidence": 0.992199718952179}]}, {"text": "However, a relevant entity represented by j is distributed over multiple ranks in dRANK so that the precision at k multiplied by drank k, j is summed over k where a relevant entity j is distributed.", "labels": [], "entities": [{"text": "precision", "start_pos": 100, "end_pos": 109, "type": "METRIC", "confidence": 0.9983722567558289}]}, {"text": "dAP(GP (x,y) , (?, r, t)) fora training query with a missing head can be defined in the same way.", "labels": [], "entities": []}, {"text": "The distributed mean average precision fora GPAR GP (x,y) \u21d2 r (x,y) is defined as follows: We also define dMAP with for the \"filtered\" (Bordes et al., 2013) rankings which are obtained from original rankings by eliminating entities whose corresponding triples (except the target triple) were included in the training dataset.", "labels": [], "entities": [{"text": "distributed mean average precision", "start_pos": 4, "end_pos": 38, "type": "METRIC", "confidence": 0.6364172697067261}, {"text": "GPAR GP", "start_pos": 44, "end_pos": 51, "type": "DATASET", "confidence": 0.8518326878547668}]}, {"text": "\"Filtered\" dMAP (fdMAP) is the mean of the dAP of \"filtered\" rankings for each answer of queries.", "labels": [], "entities": []}, {"text": "We refer to GPARs considered as entity ranking systems with these dMAPs or fdMAPs as the graph pattern entity ranking model (GRank).", "labels": [], "entities": []}, {"text": "By using a graph pattern to rank entities, GRank is able to properly estimate GPARs where the number of matches is important as WN18 FB15k WN18RR: Mean Reciprocal Rank (MRR) and HITS@n scores obtained for the link prediction tasks on the WN18, FB15k, WN18RR, and FB15k-237 datasets.", "labels": [], "entities": [{"text": "WN18 FB15k WN18RR", "start_pos": 128, "end_pos": 145, "type": "DATASET", "confidence": 0.695611854394277}, {"text": "Mean Reciprocal Rank (MRR)", "start_pos": 147, "end_pos": 173, "type": "METRIC", "confidence": 0.9312018354733785}, {"text": "HITS@n scores", "start_pos": 178, "end_pos": 191, "type": "METRIC", "confidence": 0.9525067210197449}, {"text": "link prediction", "start_pos": 209, "end_pos": 224, "type": "TASK", "confidence": 0.7567457854747772}, {"text": "WN18", "start_pos": 238, "end_pos": 242, "type": "DATASET", "confidence": 0.9324231147766113}, {"text": "FB15k", "start_pos": 244, "end_pos": 249, "type": "DATASET", "confidence": 0.8082819581031799}, {"text": "FB15k-237 datasets", "start_pos": 263, "end_pos": 281, "type": "DATASET", "confidence": 0.9907495975494385}]}, {"text": "The highest result for each column is shown in bold.", "labels": [], "entities": []}, {"text": "The results of TransE and TorusE were reported by, the results of RESCAL were reported by, the results of DistMult and ComplEx were reported by, the results of R-GCN and ConvE were reported by, the results of PRA were reported by, and the results of Node+LinkFeat were reported by shown in Section 4.2, unlike GPro.", "labels": [], "entities": [{"text": "RESCAL", "start_pos": 66, "end_pos": 72, "type": "METRIC", "confidence": 0.9132705330848694}]}, {"text": "For example, dMAP tail (AR 1,(x,y) ) = 1, is the maximum value, while dMAP tail (AR 2,(x,y) ) = 1/2 in.", "labels": [], "entities": []}, {"text": "Hence, GRank can answer the query (Team C, located in, ?) by applying AR 1,(x,y) .  Our proposed models, GPro (Section 4.2) and GRank (Section 5), are evaluated through link prediction tasks and compared with other state-ofthe-art link prediction models.", "labels": [], "entities": [{"text": "AR 1", "start_pos": 70, "end_pos": 74, "type": "METRIC", "confidence": 0.9647765755653381}, {"text": "GPro", "start_pos": 105, "end_pos": 109, "type": "DATASET", "confidence": 0.8784475326538086}, {"text": "GRank", "start_pos": 128, "end_pos": 133, "type": "DATASET", "confidence": 0.8159033060073853}, {"text": "link prediction", "start_pos": 169, "end_pos": 184, "type": "TASK", "confidence": 0.7720954418182373}]}, {"text": "Experiments were conducted on four benchmark datasets: WN18, FB15k (), WN18RR) (details of these datasets are provided in).", "labels": [], "entities": [{"text": "WN18", "start_pos": 55, "end_pos": 59, "type": "DATASET", "confidence": 0.9493330717086792}, {"text": "FB15k", "start_pos": 61, "end_pos": 66, "type": "METRIC", "confidence": 0.6823937296867371}, {"text": "WN18RR", "start_pos": 71, "end_pos": 77, "type": "DATASET", "confidence": 0.9274260997772217}]}, {"text": "These datasets have been widely used in previous studies for evaluating model performance in link prediction tasks.", "labels": [], "entities": [{"text": "link prediction tasks", "start_pos": 93, "end_pos": 114, "type": "TASK", "confidence": 0.846528947353363}]}, {"text": "WN18 and FB15k were extracted from the real knowledge graphs WordNet and, respectively.", "labels": [], "entities": [{"text": "WN18", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9340121746063232}, {"text": "FB15k", "start_pos": 9, "end_pos": 14, "type": "METRIC", "confidence": 0.48747503757476807}, {"text": "WordNet", "start_pos": 61, "end_pos": 68, "type": "DATASET", "confidence": 0.9729507565498352}]}, {"text": "WordNet is a well-known human-curated lexical database, and hence, WN18 is an easy benchmark of link prediction because it is well constructed and there are few missing or wrong facts.", "labels": [], "entities": [{"text": "WordNet", "start_pos": 0, "end_pos": 7, "type": "DATASET", "confidence": 0.9780452251434326}, {"text": "WN18", "start_pos": 67, "end_pos": 71, "type": "DATASET", "confidence": 0.783000648021698}, {"text": "link prediction", "start_pos": 96, "end_pos": 111, "type": "TASK", "confidence": 0.7452328503131866}]}, {"text": "Therefore, link prediction models should perform well on WN18.", "labels": [], "entities": [{"text": "link prediction", "start_pos": 11, "end_pos": 26, "type": "TASK", "confidence": 0.8731958270072937}, {"text": "WN18", "start_pos": 57, "end_pos": 61, "type": "DATASET", "confidence": 0.9647955894470215}]}, {"text": "Freebase is a huge knowledge graph of general facts and there are many missing facts.", "labels": [], "entities": [{"text": "Freebase", "start_pos": 0, "end_pos": 8, "type": "DATASET", "confidence": 0.96345454454422}]}, {"text": "It is known that WN18 and FB15k have redundancy in the form of reverse relations.", "labels": [], "entities": [{"text": "WN18", "start_pos": 17, "end_pos": 21, "type": "DATASET", "confidence": 0.8728862404823303}, {"text": "FB15k", "start_pos": 26, "end_pos": 31, "type": "DATASET", "confidence": 0.6934028267860413}]}, {"text": "For this reason, when WN18RR and FB15k-237 are extracted from WN18 and FB15k, the inverse relations of other relations are removed.", "labels": [], "entities": [{"text": "WN18RR", "start_pos": 22, "end_pos": 28, "type": "DATASET", "confidence": 0.9696667194366455}, {"text": "FB15k-237", "start_pos": 33, "end_pos": 42, "type": "DATASET", "confidence": 0.9357175827026367}, {"text": "WN18", "start_pos": 62, "end_pos": 66, "type": "DATASET", "confidence": 0.9805834293365479}, {"text": "FB15k", "start_pos": 71, "end_pos": 76, "type": "DATASET", "confidence": 0.8544884324073792}]}, {"text": "an Intel Xeon Gold 6154 (3.00 GHz, 18 cores).", "labels": [], "entities": []}, {"text": "We now explain how we obtained the rankings for queries with missing heads.", "labels": [], "entities": []}, {"text": "For each relation r, we chose the top 1,000 GPARs in descending order of the standard confidence, the dMAP, or the fdMAP to predict the heads.", "labels": [], "entities": [{"text": "standard confidence", "start_pos": 77, "end_pos": 96, "type": "METRIC", "confidence": 0.9413192868232727}]}, {"text": "Let GP i,(x,y) \u21d2 r (x,y) be the obtained GPAR, where i denotes the rank.", "labels": [], "entities": [{"text": "GPAR", "start_pos": 41, "end_pos": 45, "type": "DATASET", "confidence": 0.576422929763794}]}, {"text": "We defined the ordering for two entities for query (?, rt , t t ) as follows: for entities e 1 and e 2 , we define e 1 > e 2 if there exists i \u2032 for which score , (e 1 , t t )) = score(GP i,(x,y) , (e 2 , t t )) for i > i \u2032 and score(GP i \u2032 ,(x,y) , (e 1 , t t )) > score(GP i \u2032 ,(x,y) , (e 2 , t t )).", "labels": [], "entities": []}, {"text": "We obtained the entity rankings with this ordering for each query.", "labels": [], "entities": []}, {"text": "Rankings for queries with missing tails were obtained in the same way.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Statistics of benchmark datasets. The numbers  of entities, relations, training triples, validation triples,  and test triples are shown.", "labels": [], "entities": []}, {"text": " Table 2: Mean Reciprocal Rank (MRR) and HITS@n scores obtained for the link prediction tasks on the WN18,  FB15k, WN18RR, and FB15k-237 datasets. The highest result for each column is shown in bold. The results of  TransE and TorusE were reported by", "labels": [], "entities": [{"text": "Mean Reciprocal Rank (MRR)", "start_pos": 10, "end_pos": 36, "type": "METRIC", "confidence": 0.9627697765827179}, {"text": "HITS@n", "start_pos": 41, "end_pos": 47, "type": "METRIC", "confidence": 0.9582236011823019}, {"text": "link prediction tasks", "start_pos": 72, "end_pos": 93, "type": "TASK", "confidence": 0.7901792327562968}, {"text": "WN18", "start_pos": 101, "end_pos": 105, "type": "DATASET", "confidence": 0.9785205125808716}, {"text": "FB15k", "start_pos": 108, "end_pos": 113, "type": "DATASET", "confidence": 0.743486762046814}, {"text": "WN18RR", "start_pos": 115, "end_pos": 121, "type": "DATASET", "confidence": 0.8467673063278198}, {"text": "FB15k-237 datasets", "start_pos": 127, "end_pos": 145, "type": "DATASET", "confidence": 0.9913298785686493}, {"text": "TransE", "start_pos": 216, "end_pos": 222, "type": "DATASET", "confidence": 0.8770180344581604}]}]}