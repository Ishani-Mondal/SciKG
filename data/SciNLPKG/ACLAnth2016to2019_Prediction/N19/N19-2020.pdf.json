{"title": [{"text": "Train One Get One Free: Partially Supervised Neural Network for Bug Report Duplicate Detection and Clustering", "labels": [], "entities": [{"text": "Bug Report Duplicate Detection", "start_pos": 64, "end_pos": 94, "type": "TASK", "confidence": 0.7806462347507477}]}], "abstractContent": [{"text": "Tracking user reported bugs requires considerable engineering effort in going through many repetitive reports and assigning them to the correct teams.", "labels": [], "entities": [{"text": "Tracking user reported bugs", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.8650209903717041}]}, {"text": "This paper proposes a neural architecture that can jointly (1) detect if two bug reports are duplicates, and (2) aggregate them into latent topics.", "labels": [], "entities": []}, {"text": "Leveraging the assumption that learning the topic of a bug is a sub-task for detecting duplicates, we design a loss function that can jointly perform both tasks but needs supervision for only duplicate classification, achieving topic clustering in an unsupervised fashion.", "labels": [], "entities": []}, {"text": "We use a two-step attention module that uses self-attention for topic clustering and conditional attention for duplicate detection.", "labels": [], "entities": [{"text": "topic clustering", "start_pos": 64, "end_pos": 80, "type": "TASK", "confidence": 0.7053466290235519}, {"text": "duplicate detection", "start_pos": 111, "end_pos": 130, "type": "TASK", "confidence": 0.7841781079769135}]}, {"text": "We study the characteristics of two types of real world datasets that have been marked for duplicate bugs by engineers and by non-technical annotators.", "labels": [], "entities": []}, {"text": "The results demonstrate that our model not only can outperform state-of-the-art methods for duplicate classification on both cases, but can also learn meaningful latent clusters without additional supervision.", "labels": [], "entities": [{"text": "duplicate classification", "start_pos": 92, "end_pos": 116, "type": "TASK", "confidence": 0.7736724317073822}]}], "introductionContent": [{"text": "User feedback is a key part of the development and improvement of software products.", "labels": [], "entities": []}, {"text": "Each piece of feedback needs to be manually reviewed and assigned to the correct engineer responsible for maintaining the feature mentioned in the report.", "labels": [], "entities": []}, {"text": "On online platforms with millions of users, different users tend to report the same issue, yielding a large number of duplicate reports.", "labels": [], "entities": []}, {"text": "Sorting through these massive volumes of bug reports incur a significant amount of engineering time and cost.", "labels": [], "entities": []}, {"text": "Additionally, these services are constantly releasing new product features.", "labels": [], "entities": []}, {"text": "Therefore, we cannot rely on static annotated data for product feature classification because they rapidly become outdated.", "labels": [], "entities": [{"text": "product feature classification", "start_pos": 55, "end_pos": 85, "type": "TASK", "confidence": 0.6233928104241689}]}, {"text": "This motivates us to develop a framework that can automatically identify duplicate bug reports and cluster them without requiring additional labels.", "labels": [], "entities": []}, {"text": "Previous research in the software engineering domain has addressed duplicates detection and product feature identification as two separate problems framed as independent fully-supervised classification tasks.", "labels": [], "entities": [{"text": "duplicates detection", "start_pos": 67, "end_pos": 87, "type": "TASK", "confidence": 0.927625834941864}, {"text": "product feature identification", "start_pos": 92, "end_pos": 122, "type": "TASK", "confidence": 0.6342679560184479}]}, {"text": "However, we observe that users generally report issues when accessing certain features of a product, e.g.,app crashed when opening camera', 'chat won't load' and soon (here, camera and chat are the product features, respectively).", "labels": [], "entities": []}, {"text": "Hence, two reports should at least discuss the same feature to be considered as duplicates.", "labels": [], "entities": []}, {"text": "Therefore, we hypothesize that determining the feature discussed in a report is a sub-task of detecting whether or not a report is a duplicate to another one.", "labels": [], "entities": []}, {"text": "Inspired by the effectiveness of Siamese architectures for modeling pairs of texts (, we use a shared Recurrent Neural Network (RNN) to encode the two reports.", "labels": [], "entities": []}, {"text": "We note that the latent vectors, learned by an RNN fora sequence of words, encode a multitude of semantic information; all of which may not be necessary to understand the topic of the report.", "labels": [], "entities": []}, {"text": "We decompose the latent semantic vectors in order to distill only the topical information in a few designated dimensions.", "labels": [], "entities": []}, {"text": "This allows us to perform the sub-task of feature-based clustering using only a subset of dimensions, and use the complete vector for the duplicate classification task.", "labels": [], "entities": [{"text": "duplicate classification", "start_pos": 138, "end_pos": 162, "type": "TASK", "confidence": 0.6245504468679428}]}, {"text": "We propose a partially supervised learning framework that uses the label for duplicity through a similarity loss on the designated topic dimensions of the latent representation to learn topic clusters.", "labels": [], "entities": []}, {"text": "We use a two-step attention module, since the same words are often not crucial for both tasks.", "labels": [], "entities": []}, {"text": "We first learn a self-attention for topic similarity modeling and learn a conditional attention using a memory vector for duplicate classification.", "labels": [], "entities": [{"text": "topic similarity modeling", "start_pos": 36, "end_pos": 61, "type": "TASK", "confidence": 0.8355391025543213}, {"text": "duplicate classification", "start_pos": 122, "end_pos": 146, "type": "TASK", "confidence": 0.5859488844871521}]}, {"text": "To summarize, we present a systematic study of a classic problem in the software industry.", "labels": [], "entities": []}, {"text": "The work has three major contributions.", "labels": [], "entities": []}, {"text": "\u2022 We propose a neural model for multi-task learning that requires supervision for only one of the tasks.", "labels": [], "entities": []}, {"text": "\u2022 The model uses semantic space decomposition and a hierarchical-conditional attention module to perform the tasks of duplicate detection and topic based clustering.", "labels": [], "entities": [{"text": "semantic space decomposition", "start_pos": 17, "end_pos": 45, "type": "TASK", "confidence": 0.6400370796521505}, {"text": "duplicate detection", "start_pos": 118, "end_pos": 137, "type": "TASK", "confidence": 0.8183957040309906}]}, {"text": "\u2022 We present the challenges we faced during our experience obtaining labels from nontechnical annotators, and conduct extensive experiments on both engineer labeled and non-technical labeled datasets.", "labels": [], "entities": []}], "datasetContent": [{"text": "We experiment on four real-world datasets.", "labels": [], "entities": []}, {"text": "(1) Snap S2R : Composed of bugs reported through an in-app tool.", "labels": [], "entities": [{"text": "Snap S2R", "start_pos": 4, "end_pos": 12, "type": "TASK", "confidence": 0.8772963583469391}]}, {"text": "The data was labeled as duplicate or not by non-technical annotators (described in section 3).", "labels": [], "entities": []}, {"text": "Open Source Projects 1 : Repository of bugs submitted for the open-source projects of Eclipse Platform, Mozilla Firefox and Eclipse JDT.", "labels": [], "entities": []}, {"text": "Each report consists of a short title and a longer description which often describes the steps to reproduce the issue.", "labels": [], "entities": []}, {"text": "We only consider the title of the report in our experiments.", "labels": [], "entities": []}, {"text": "The reported bugs have been marked for duplicates by engineers while resolving them.", "labels": [], "entities": []}, {"text": "We augment the S2R data with randomly sampled negative pairs to resemble a positive to negative ratio that is estimated in production.", "labels": [], "entities": []}, {"text": "For the Eclipse and Firefox datasets, we randomly sample negative pairs, keeping the positive to negative ratio close to what was previously mentioned).", "labels": [], "entities": [{"text": "Firefox datasets", "start_pos": 20, "end_pos": 36, "type": "DATASET", "confidence": 0.8948733508586884}]}, {"text": "shows the statistics of the four datasets.", "labels": [], "entities": []}, {"text": "These datasets were selected to capture different training sizes and variations of vocabulary used.", "labels": [], "entities": []}, {"text": "We initialize the words using pre-trained Glove embeddings (  intrinsic features of the specific task and dataset at hand.", "labels": [], "entities": []}, {"text": "For the GRU layers we use 150 dimensions and the first 20 dimensions of them are used for topic representation.", "labels": [], "entities": [{"text": "topic representation", "start_pos": 90, "end_pos": 110, "type": "TASK", "confidence": 0.8440144062042236}]}, {"text": "For the MLP in duplicate classification we use 2 layers of fully connected layers of 100 hidden neurons each, with relu activation and 20% dropout rate.", "labels": [], "entities": [{"text": "MLP", "start_pos": 8, "end_pos": 11, "type": "TASK", "confidence": 0.8854333758354187}, {"text": "duplicate classification", "start_pos": 15, "end_pos": 39, "type": "TASK", "confidence": 0.8011495769023895}, {"text": "relu activation", "start_pos": 115, "end_pos": 130, "type": "METRIC", "confidence": 0.8531480133533478}]}, {"text": "For fair comparison we use the same number of parameters in all baselines.", "labels": [], "entities": []}, {"text": "The learning rate is set to 0.003 and a batch size of 128 samples is used while training all the models.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Statistics of the datasets used", "labels": [], "entities": []}, {"text": " Table 2: Comparison of different methods for duplicate classification task on multiple datasets. * denotes statistical  significance with the runner up for p-value \u0103 0.01", "labels": [], "entities": [{"text": "duplicate classification", "start_pos": 46, "end_pos": 70, "type": "TASK", "confidence": 0.8556281626224518}, {"text": "statistical  significance", "start_pos": 108, "end_pos": 133, "type": "METRIC", "confidence": 0.8247239887714386}]}]}