{"title": [{"text": "Parsing with Traces: An O(n 4 ) Algorithm and a Structural Representation", "labels": [], "entities": []}], "abstractContent": [{"text": "General treebank analyses are graph struc-tured, but parsers are typically restricted to tree structures for efficiency and modeling reasons.", "labels": [], "entities": []}, {"text": "We propose anew representation and algorithm fora class of graph structures that is flexible enough to cover almost all treebank structures, while still admitting efficient learning and inference.", "labels": [], "entities": []}, {"text": "In particular, we consider directed, acyclic, one-endpoint-crossing graph structures, which cover most long-distance dislocation, shared argumentation, and similar tree-violating linguistic phenomena.", "labels": [], "entities": []}, {"text": "We describe how to convert phrase structure parses, including traces, to our new representation in a reversible manner.", "labels": [], "entities": [{"text": "phrase structure parses", "start_pos": 27, "end_pos": 50, "type": "TASK", "confidence": 0.6639265219370524}]}, {"text": "Our dynamic program uniquely decomposes structures, is sound and complete, and covers 97.3% of the Penn En-glish Treebank.", "labels": [], "entities": [{"text": "Penn En-glish Treebank", "start_pos": 99, "end_pos": 121, "type": "DATASET", "confidence": 0.9555455644925436}]}, {"text": "We also implement a proof-of-concept parser that recovers a range of null elements and trace types.", "labels": [], "entities": []}], "introductionContent": [{"text": "Many syntactic representations use graphs and/or discontinuous structures, such as traces in Government and Binding theory and f-structure in.", "labels": [], "entities": [{"text": "Government and Binding theory", "start_pos": 93, "end_pos": 122, "type": "TASK", "confidence": 0.6385219469666481}]}, {"text": "Sentences in the Penn Treebank (PTB,) have a core projective tree structure and trace edges that represent control structures, wh-movement and more.", "labels": [], "entities": [{"text": "Penn Treebank (PTB", "start_pos": 17, "end_pos": 35, "type": "DATASET", "confidence": 0.9710581451654434}]}, {"text": "However, most parsers and the standard evaluation metric ignore these edges and all null elements.", "labels": [], "entities": []}, {"text": "By leaving out parts of the structure, they fail to provide key relations to downstream tasks such as question answering.", "labels": [], "entities": [{"text": "question answering", "start_pos": 102, "end_pos": 120, "type": "TASK", "confidence": 0.8851551115512848}]}, {"text": "While there has been work on capturing some parts of this extra structure, it has generally either been through post-processing on trees) or has only captured a limited set of phenomena via grammar augmentation).", "labels": [], "entities": []}, {"text": "We propose anew general-purpose parsing algorithm that can efficiently search over a wide range of syntactic phenomena.", "labels": [], "entities": []}, {"text": "Our algorithm extends a non-projective tree parsing algorithm () to graph structures, with improvements to avoid derivational ambiguity while maintaining an O(n 4 ) runtime.", "labels": [], "entities": []}, {"text": "Our algorithm also includes an optional extension to ensure parses contain a directed projective tree of non-trace edges.", "labels": [], "entities": []}, {"text": "Our algorithm cannot apply directly to constituency parses-it requires lexicalized structures similar to dependency parses.", "labels": [], "entities": [{"text": "constituency parses-it", "start_pos": 39, "end_pos": 61, "type": "TASK", "confidence": 0.7161201536655426}]}, {"text": "We extend and improve previous work on lexicalized constituent representations ( to handle traces.", "labels": [], "entities": []}, {"text": "In this form, traces can create problematic structures such as directed cycles, but we show how careful choice of head rules can minimize such issues.", "labels": [], "entities": []}, {"text": "We implement a proof-of-concept parser, scoring 88.1 on trees in section 23 and 70.6 on traces.", "labels": [], "entities": []}, {"text": "Together, our representation and algorithm cover 97.3% of sentences, far above the coverage of projective tree parsers (43.9%).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Training set coverage for different representa- tions. One-EC graphs uses our representation, but with  the head rules from Carreras et al. (2008). For the edge  results, we only exclude edges necessary to make each  parse representable (e.g. excluding only one edge in a cy- cle and counting the rest).", "labels": [], "entities": []}, {"text": " Table 2: Accuracy on section 23 using Johnson's metric.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 10, "end_pos": 18, "type": "METRIC", "confidence": 0.9932855367660522}]}]}