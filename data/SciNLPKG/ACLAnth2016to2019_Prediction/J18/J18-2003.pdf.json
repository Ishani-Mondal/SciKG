{"title": [], "abstractContent": [{"text": "Spurious ambiguity is the phenomenon whereby distinct derivations in grammar may assign the same structural reading, resulting in redundancy in the parse search space and inefficiency in parsing.", "labels": [], "entities": []}, {"text": "Understanding the problem depends on identifying the essential mathematical structure of derivations.", "labels": [], "entities": []}, {"text": "This is trivial in the case of context free grammar, where the parse structures are ordered trees; in the case of type logical categorial grammar, the parse structures are proof nets.", "labels": [], "entities": []}, {"text": "However, with respect to multiplicatives, intrinsic proof nets have not yet been given for displacement calculus, and proof nets for additives, which have applications to polymorphism, are not easy to characterize.", "labels": [], "entities": [{"text": "displacement calculus", "start_pos": 91, "end_pos": 112, "type": "TASK", "confidence": 0.8969753980636597}]}, {"text": "In this context we approach here multiplicative-additive spurious ambiguity by means of the proof-theoretic technique of focalization.", "labels": [], "entities": []}], "introductionContent": [{"text": "In context free grammar (CFG), sequential rewriting derivations exhibit spurious ambiguity: Distinct rewriting derivations may correspond to the same parse structure (tree) and the same structural reading.", "labels": [], "entities": [{"text": "context free grammar (CFG)", "start_pos": 3, "end_pos": 29, "type": "TASK", "confidence": 0.7450323204199473}]}, {"text": "In this case, it is transparent to develop parsing algorithms avoiding spurious ambiguity by reference to parse trees.", "labels": [], "entities": []}, {"text": "In categorial grammar (CG), the problem is more subtle.", "labels": [], "entities": [{"text": "categorial grammar (CG)", "start_pos": 3, "end_pos": 26, "type": "TASK", "confidence": 0.8590188264846802}]}, {"text": "The Cut-free Lambek sequent proof search space is finite, but involves a combinatorial explosion of spuriously ambiguous sequential proofs.", "labels": [], "entities": []}, {"text": "This spurious ambiguity in CG can be understood, analogously to CFG, as involving inessential rule reorderings, which we parallelize in underlying geometric parse structures that are (planar) proof nets.", "labels": [], "entities": [{"text": "CFG", "start_pos": 64, "end_pos": 67, "type": "DATASET", "confidence": 0.8728615641593933}]}, {"text": "The planarity of Lambek proof nets reflects that the formalism is continuous or concatenative.", "labels": [], "entities": []}, {"text": "But the challenge of natural grammar is discontinuity or apparent displacement, whereby there is syntactic/semantic mismatch, or elements appearing out of place.", "labels": [], "entities": []}, {"text": "Hence the subsumption of Lambek calculus by displacement calculus D, including intercalation as well as concatenation.", "labels": [], "entities": []}, {"text": "Proof nets for D must be partially non-planar; steps towards intrinsic correctness criteria for displacement proof nets are made in and.", "labels": [], "entities": []}, {"text": "Additive proof nets are considered in Hughes and van and.", "labels": [], "entities": []}, {"text": "However, even in the case of Lambek calculus, it is not clear that in practice parsing by reference to intrinsic criteria is more efficient than parsing by reference to extrinsic criteria of uniform sequent calculus ().", "labels": [], "entities": [{"text": "parsing", "start_pos": 79, "end_pos": 86, "type": "TASK", "confidence": 0.9688844084739685}]}, {"text": "In its turn, on the other hand, uniform proof does not extend to product left rules and product unit left rules, nor to additives.", "labels": [], "entities": []}, {"text": "The focalization of is a methodology midway between proof nets and uniform proof.", "labels": [], "entities": []}, {"text": "Here, we apply the focusing discipline to the parsing as deduction of D with additives.", "labels": [], "entities": [{"text": "parsing", "start_pos": 46, "end_pos": 53, "type": "TASK", "confidence": 0.9724752902984619}]}, {"text": "In, multifocusing is defined for unit-free multiplicative-additive linear logic, providing canonical sequent proofs; an eventual goal would be to formulate multifocusing for multiplicative-additive categorial logic and for categorial logic generally.", "labels": [], "entities": []}, {"text": "In this respect the present article represents an intermediate step (and includes units, which have linguistic use).", "labels": [], "entities": []}, {"text": "Note that Simmons (2012) develops focusing for Lambek calculus with additives, but not for displacement logic, for which we show completeness of focusing here.", "labels": [], "entities": [{"text": "displacement logic", "start_pos": 91, "end_pos": 109, "type": "TASK", "confidence": 0.9179435670375824}]}, {"text": "The article is structured as follows.", "labels": [], "entities": []}, {"text": "In Sections 1.1 and 1.2 we describe spurious ambiguity in context-free grammar and Lambek calculus.", "labels": [], "entities": []}, {"text": "In Section 2 we recall the displacement calculus with additives.", "labels": [], "entities": []}, {"text": "In Section 3 we contextualize the problem of spurious ambiguity in computational linguistics.", "labels": [], "entities": []}, {"text": "In Section 4 we discuss focalization.", "labels": [], "entities": [{"text": "focalization", "start_pos": 24, "end_pos": 36, "type": "TASK", "confidence": 0.9768720269203186}]}, {"text": "In Section 5 we present focalization for the displacement calculus with additives.", "labels": [], "entities": []}, {"text": "In Section 6 we prove the completeness of focalization for displacement calculus with additives.", "labels": [], "entities": [{"text": "displacement calculus", "start_pos": 59, "end_pos": 80, "type": "TASK", "confidence": 0.8919712603092194}]}, {"text": "In Section 7 we exemplify focalization and evaluate it compared with uniform proof.", "labels": [], "entities": [{"text": "focalization", "start_pos": 26, "end_pos": 38, "type": "TASK", "confidence": 0.9597135186195374}]}, {"text": "We conclude in Section 8.", "labels": [], "entities": []}, {"text": "In Appendix A we prove the auxiliary technical result of Cut-elimination for weak focalization.", "labels": [], "entities": []}], "datasetContent": [{"text": "CatLog version f1.2, CatLog1 (Morrill 2012), is a parser/theorem-prover using uniform proof and count-invariance for multiplicatives.", "labels": [], "entities": [{"text": "CatLog version f1.2", "start_pos": 0, "end_pos": 19, "type": "DATASET", "confidence": 0.9238724509874979}, {"text": "CatLog1 (Morrill 2012)", "start_pos": 21, "end_pos": 43, "type": "DATASET", "confidence": 0.889691424369812}]}, {"text": "CatLog version k2, CatLog3 (Morrill 2017), is a parser/theorem-prover using focusing, as expounded here, and count-invariance for multiplicatives, additives, brackets, and exponentials.", "labels": [], "entities": [{"text": "CatLog version k2", "start_pos": 0, "end_pos": 17, "type": "DATASET", "confidence": 0.916459838549296}, {"text": "CatLog3 (Morrill 2017)", "start_pos": 19, "end_pos": 41, "type": "DATASET", "confidence": 0.8761073350906372}]}, {"text": "To evaluate the performance of uniform proof and focusing, we created a system version clock3f1.2 made by substituting the theoremproving engine of CatLog1 into the theorem-proving environment of CatLog3 so that count-invariance and other factors were kept constant while the uniform and focusing theorem-proving engines were compared.", "labels": [], "entities": []}, {"text": "We performed the Montague test (Morrill and Valent\u00edn 2016) on the two systems, that is, the task of providing a computational grammar of the Montague fragment.", "labels": [], "entities": [{"text": "Montague fragment", "start_pos": 141, "end_pos": 158, "type": "DATASET", "confidence": 0.9238691926002502}]}, {"text": "In particular, we ran exhaustive parsing of the minicorpus given in.", "labels": [], "entities": []}, {"text": "The str(dwp('(7-7)'), [b(), walks], s(f)).", "labels": [], "entities": []}, {"text": "str(dwp('(7-16)'), [b(), talks], s(f)).", "labels": [], "entities": []}], "tableCaptions": []}