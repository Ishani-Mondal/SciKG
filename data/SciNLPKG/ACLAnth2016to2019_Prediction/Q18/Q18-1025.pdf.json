{"title": [{"text": "From Characters to Time Intervals: New Paradigms for Evaluation and Neural Parsing of Time Normalizations", "labels": [], "entities": [{"text": "Neural Parsing of Time Normalizations", "start_pos": 68, "end_pos": 105, "type": "TASK", "confidence": 0.7345129787921906}]}], "abstractContent": [{"text": "This paper presents the first model for time normalization trained on the SCATE corpus.", "labels": [], "entities": [{"text": "time normalization", "start_pos": 40, "end_pos": 58, "type": "TASK", "confidence": 0.6296579241752625}, {"text": "SCATE corpus", "start_pos": 74, "end_pos": 86, "type": "DATASET", "confidence": 0.7466127276420593}]}, {"text": "In the SCATE schema, time expressions are annotated as a semantic composition of time entities.", "labels": [], "entities": []}, {"text": "This novel schema favors machine learning approaches, as it can be viewed as a semantic parsing task.", "labels": [], "entities": [{"text": "semantic parsing task", "start_pos": 79, "end_pos": 100, "type": "TASK", "confidence": 0.7946049372355143}]}, {"text": "In this work, we propose a character level multi-output neural network that outperforms previous state-of-the-art built on the TimeML schema.", "labels": [], "entities": [{"text": "TimeML schema", "start_pos": 127, "end_pos": 140, "type": "DATASET", "confidence": 0.9523863196372986}]}, {"text": "To compare predictions of systems that follow both SCATE and TimeML, we present anew scoring metric for time intervals.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 61, "end_pos": 67, "type": "DATASET", "confidence": 0.9237476587295532}]}, {"text": "We also apply this new metric to carryout a comparative analysis of the annotations of both schemes in the same corpus.", "labels": [], "entities": []}], "introductionContent": [{"text": "Time normalization is the task of translating natural language expressions of time to computer-readable forms.", "labels": [], "entities": [{"text": "Time normalization", "start_pos": 0, "end_pos": 18, "type": "TASK", "confidence": 0.6738457530736923}]}, {"text": "For example, the expression three days ago could be normalized to the formal representation 2017-08-28 in the ISO-8601 standard.", "labels": [], "entities": []}, {"text": "As time normalization allows entities and events to be placed along a timeline, it is a crucial step for many information extraction tasks.", "labels": [], "entities": [{"text": "information extraction", "start_pos": 110, "end_pos": 132, "type": "TASK", "confidence": 0.8115644454956055}]}, {"text": "Since the first shared tasks on time normalization, interest in the problem and the variety of applications have been growing.", "labels": [], "entities": [{"text": "time normalization", "start_pos": 32, "end_pos": 50, "type": "TASK", "confidence": 0.6860299557447433}]}, {"text": "For example, use normalized timestamps from electronic medical records to contribute to patient monitoring and detect potential causes of disease.", "labels": [], "entities": []}, {"text": "identify multilingual occurrences of the same events in the news * These two authors contributed equally. by, among other steps, normalizing time-expressions in different languages with the same ISO standard.", "labels": [], "entities": []}, {"text": "extract and normalize time-expressions from a large corpus of German fiction as the starting point of a deep study on trends and patterns of the use of dates in literature.", "labels": [], "entities": []}, {"text": "A key consideration for time normalization systems is what formal representation the time expressions should be normalized to.", "labels": [], "entities": []}, {"text": "The most popular scheme for annotating normalized time expressions is ISO-TimeML (), but it is unable to represent several important types of time expressions (e.g., a bounded set of intervals, like Saturdays since March 6) and it is not easily amenable to machine learning (the rule-based HeidelTime) still yields state-of-the-art performance).", "labels": [], "entities": [{"text": "ISO-TimeML", "start_pos": 70, "end_pos": 80, "type": "DATASET", "confidence": 0.8237794041633606}]}, {"text": "proposed an alternate scheme, Semantically Compositional Annotation of Time, in which times are annotated as compositional time entities, and suggested that this should be more amenable to machine learning.", "labels": [], "entities": []}, {"text": "However, while they constructed an annotated corpus, they did not train any automatic models on it.", "labels": [], "entities": []}, {"text": "We present the first machine-learning models trained on the SCATE corpus of time normalizations.", "labels": [], "entities": [{"text": "SCATE corpus", "start_pos": 60, "end_pos": 72, "type": "DATASET", "confidence": 0.7249692380428314}]}, {"text": "We make several contributions in the process: \u2022 We introduce anew evaluation metric for time normalization that can compare normalized times from different annotation schemes by measuring overlap of intervals on the timeline.", "labels": [], "entities": []}, {"text": "\u2022 We use the new metric to compare SCATE and TimeML annotations on the same corpus, and confirm that SCATE covers a wider variety of time expressions.", "labels": [], "entities": []}, {"text": "\u2022 We develop a recurrent neural network for learning SCATE-style time normalization, and show that our model outperforms the state-of-the-art HeidelTime).", "labels": [], "entities": [{"text": "SCATE-style time normalization", "start_pos": 53, "end_pos": 83, "type": "TASK", "confidence": 0.7033561666806539}]}, {"text": "\u2022 We show that our character-based multi-output neural network architecture outperforms both word-based and single-output models.", "labels": [], "entities": []}], "datasetContent": [{"text": "Before attempting to construct machine-learned models from the SCATE corpus, we were interested in evaluating's claim that the SCATE schema is able to represent a wider variety of time expressions than TimeML.", "labels": [], "entities": []}, {"text": "To do so, we propose anew evaluation metric to compare time normalizations annotated in both the ISO 8601 format of TimeML and the time entity format of SCATE.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 116, "end_pos": 122, "type": "DATASET", "confidence": 0.6107946038246155}]}, {"text": "This new evaluation interprets normalized annotations as intervals along the timeline and measures the overlap of the intervals.", "labels": [], "entities": [{"text": "overlap", "start_pos": 103, "end_pos": 110, "type": "METRIC", "confidence": 0.9666711688041687}]}, {"text": "TimeML TIMEX3 (time expression) annotations are converted to intervals following ISO 8601 semantics of their VALUE attribute.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.7681083679199219}, {"text": "TIMEX3", "start_pos": 7, "end_pos": 13, "type": "METRIC", "confidence": 0.3821462392807007}, {"text": "VALUE", "start_pos": 109, "end_pos": 114, "type": "METRIC", "confidence": 0.7931495308876038}]}, {"text": "So, for example, 1989-03-05 is converted to the interval [1989-03-05T00:00:00, 1989-03-06T00:00:00), that is, the 24-hour period starting at the first second of the day on 1989-03-05 and ending just before the first second of the day on 1989-03-06.", "labels": [], "entities": []}, {"text": "SCATE annotations are converted to intervals following the formal semantics of each entity, using the library provided by.", "labels": [], "entities": []}, {"text": "So, for example,, SimplePeriod(YEARS, 3)), the 3 years following 1985, is converted to-01-01T00:00).", "labels": [], "entities": [{"text": "SimplePeriod(YEARS, 3", "start_pos": 18, "end_pos": 39, "type": "DATASET", "confidence": 0.7325947403907775}]}, {"text": "Note that there maybe more than one interval associated with a single annotation, as in the Saturdays since March 6 example.", "labels": [], "entities": [{"text": "Saturdays since March 6", "start_pos": 92, "end_pos": 115, "type": "DATASET", "confidence": 0.6671166345477104}]}, {"text": "Once all annotations have been converted into intervals along the timeline, we can measure how much the intervals of different annotations overlap.", "labels": [], "entities": []}, {"text": "Given two sets of intervals, we define the interval precision, P int , as the total length of the intervals in common between the two sets, divided by the total length of the intervals in the first set.", "labels": [], "entities": [{"text": "precision", "start_pos": 52, "end_pos": 61, "type": "METRIC", "confidence": 0.5888227224349976}]}, {"text": "Interval recall, R int is defined as the total length of the intervals in common between the two sets, divided by the total length of the intervals in the second set.", "labels": [], "entities": [{"text": "Interval recall", "start_pos": 0, "end_pos": 15, "type": "METRIC", "confidence": 0.7516915202140808}]}, {"text": "Formally: where I Sand I H are sets of intervals, i \u2229 j is possibly the empty interval in common between the intervals i and j, |i| is the length of the interval i, and COMPACT takes a set of intervals and merges any overlapping intervals.", "labels": [], "entities": []}, {"text": "Given two sets of annotations (e.g., one each from two time normalization systems), we define the overall precision, P , as the average of interval precisions where each annotation from the first set is paired with all annotations that textually overlap it in the second set.", "labels": [], "entities": [{"text": "precision", "start_pos": 106, "end_pos": 115, "type": "METRIC", "confidence": 0.996134877204895}]}, {"text": "Overall recall is defined as the average of interval recalls where each annotation from the second set is paired with all annotations that textually overlap it in the first set.", "labels": [], "entities": [{"text": "recall", "start_pos": 8, "end_pos": 14, "type": "METRIC", "confidence": 0.9989635944366455}]}, {"text": "Formally: where Sand H are sets of annotations, gives the time intervals associated with the annotation x, and OVERLAPS(a, b) decide whether the annotations a and b share at least one character of text in common.", "labels": [], "entities": [{"text": "OVERLAPS", "start_pos": 111, "end_pos": 119, "type": "METRIC", "confidence": 0.998214602470398}]}, {"text": "It is important to note that these metrics can be applied only to time expressions that yield bounded intervals.", "labels": [], "entities": []}, {"text": "Time expressions that refer to intervals with undefined boundaries are out of the scope, like in \"it takes just a minute\" or \"I work every Saturday\".", "labels": [], "entities": []}, {"text": ") of which 580 yield bounded intervals, i.e. intervals with a specified start and ending (last Monday is bounded, while every month is not).", "labels": [], "entities": []}, {"text": "We apply the interval-based evaluation metric introduced in Section 3 to the AQUAINT and TimeBank datasets, treating the TimeML annotations as the system (S) annotator and the SCATE annotations as the human (H) annotator.", "labels": [], "entities": [{"text": "AQUAINT", "start_pos": 77, "end_pos": 84, "type": "DATASET", "confidence": 0.9237157106399536}, {"text": "TimeBank datasets", "start_pos": 89, "end_pos": 106, "type": "DATASET", "confidence": 0.8390564620494843}]}, {"text": "shows that the SCATE annotations cover different time intervals than the TimeML annotations.", "labels": [], "entities": [{"text": "TimeML annotations", "start_pos": 73, "end_pos": 91, "type": "DATASET", "confidence": 0.9361964762210846}]}, {"text": "In the first row, we see that TimeML has a recall of only 92% of the time intervals identified by SCATE in the AQUAINT corpus and of only 83% in the TimeBank corpus.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 30, "end_pos": 36, "type": "DATASET", "confidence": 0.868280827999115}, {"text": "recall", "start_pos": 43, "end_pos": 49, "type": "METRIC", "confidence": 0.9991750121116638}, {"text": "AQUAINT corpus", "start_pos": 111, "end_pos": 125, "type": "DATASET", "confidence": 0.9177302122116089}, {"text": "TimeBank corpus", "start_pos": 149, "end_pos": 164, "type": "DATASET", "confidence": 0.9774257838726044}]}, {"text": "We manually analyzed all places where TimeML and SCATE annotations differed and found that the SCATE interpretation was always the correct one.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 38, "end_pos": 44, "type": "DATASET", "confidence": 0.9224802255630493}]}, {"text": "For example, a common case where TimeML and SCATE annotations overlap, but are not identical, is time expressions preceded by a preposition like \"since\".", "labels": [], "entities": [{"text": "TimeML", "start_pos": 33, "end_pos": 39, "type": "DATASET", "confidence": 0.8850123286247253}]}, {"text": "The TimeML annotation for \"Since 1985\" (with a DCT of 1998-03-01T14:11) only covers the year, \"1985\", resulting in the time interval 01-01T00:00,1986-01-01T00:00).", "labels": [], "entities": []}, {"text": "The SCATE annotation represents the full expression and, consequently, produces the correct time interval01-01T00:00,1998-03-01T14:11).", "labels": [], "entities": [{"text": "time interval01-01T00:00,1998-03-01T14:11", "start_pos": 92, "end_pos": 133, "type": "METRIC", "confidence": 0.8542348146438599}]}, {"text": "Another common case of disagreement is where TimeML failed to compose all pieces of a complex expression.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 45, "end_pos": 51, "type": "DATASET", "confidence": 0.8569742441177368}]}, {"text": "The TimeML annotation for \"10:35 a.m.", "labels": [], "entities": []}, {"text": "(0735 GMT) Friday\" annotates two separate intervals, the time and the day (and ignores \"0735 GMT\" entirely).", "labels": [], "entities": []}, {"text": "The SCATE annotation recognizes this as a description of a single time interval,.", "labels": [], "entities": []}, {"text": "TimeML and SCATE annotations also differ in how references to particular past periods are interpreted.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 0, "end_pos": 6, "type": "DATASET", "confidence": 0.9086417555809021}]}, {"text": "For example, TimeML assumes that \"last year\" and \"a year ago\" have identical semantics, referring to the most recent calendar year, e.g., if the DCT is 1998-03-04, then they both refer to the interval [1997-01-01T00:00,1998-01-01T00:00).", "labels": [], "entities": []}, {"text": "SCATE has the same semantics for \"last year\", but recognizes that \"a year ago\" has different semantics: a period centered atone year prior to the DCT.", "labels": [], "entities": [{"text": "SCATE", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.8064587116241455}]}, {"text": "Under SCATE, \"a year ago\" refers to the interval [1996-09-03T00:00,1997-09-03T00:00).", "labels": [], "entities": [{"text": "SCATE", "start_pos": 6, "end_pos": 11, "type": "DATASET", "confidence": 0.5952917337417603}]}, {"text": "Beyond these differences in interpretation, we also observed that, while the SCATE corpus annotates time expressions anywhere in the document (including in metadata), the TimeBank TIMEX3 annotations are restricted to the main text of the documents.", "labels": [], "entities": [{"text": "SCATE corpus", "start_pos": 77, "end_pos": 89, "type": "DATASET", "confidence": 0.7480292618274689}]}, {"text": "The second row of shows the evaluation when comparing overall text in the document, not just the body text.", "labels": [], "entities": []}, {"text": "Unsurprisingly, TimeML has a lower recall of the time intervals from the SCATE annotations under this evaluation.", "labels": [], "entities": [{"text": "TimeML", "start_pos": 16, "end_pos": 22, "type": "DATASET", "confidence": 0.9126961827278137}, {"text": "recall", "start_pos": 35, "end_pos": 41, "type": "METRIC", "confidence": 0.9991995692253113}]}, {"text": "We train and evaluate our models on the SCATE corpus described in Section 4.", "labels": [], "entities": [{"text": "SCATE corpus", "start_pos": 40, "end_pos": 52, "type": "DATASET", "confidence": 0.8087045848369598}]}, {"text": "As a development dataset, 14 documents are taken as a random stratified sample from the TempEval 2013 (TimeBank + AQUAINT) portion shown in, including broadcast news documents (1 ABC, 1 CNN, 1 PRI, 1 VOA), and newswire documents (5 AP, 1 NYT, 4 WSJ).", "labels": [], "entities": [{"text": "TempEval 2013 (TimeBank + AQUAINT) portion", "start_pos": 88, "end_pos": 130, "type": "DATASET", "confidence": 0.8240520283579826}, {"text": "NYT", "start_pos": 238, "end_pos": 241, "type": "DATASET", "confidence": 0.8988056778907776}]}, {"text": "We use the interval-based evaluation metric described in Section 3, but also report more traditional information extraction metrics (precision, recall, and F 1 ) for the time entity identification and composition steps.", "labels": [], "entities": [{"text": "precision", "start_pos": 133, "end_pos": 142, "type": "METRIC", "confidence": 0.9986431002616882}, {"text": "recall", "start_pos": 144, "end_pos": 150, "type": "METRIC", "confidence": 0.9952450394630432}, {"text": "F 1", "start_pos": 156, "end_pos": 159, "type": "METRIC", "confidence": 0.9957016408443451}, {"text": "time entity identification", "start_pos": 170, "end_pos": 196, "type": "TASK", "confidence": 0.6409507294495901}]}, {"text": "Let S be the set of items predicted by the system and H is the set of items produced by the humans, precision (P ), recall (R), and F 1 are defined as: We use the common formats available in office suites, specifically, LibreOffice.", "labels": [], "entities": [{"text": "precision (P )", "start_pos": 100, "end_pos": 114, "type": "METRIC", "confidence": 0.9408834427595139}, {"text": "recall (R)", "start_pos": 116, "end_pos": 126, "type": "METRIC", "confidence": 0.9553601741790771}, {"text": "F 1", "start_pos": 132, "end_pos": 135, "type": "METRIC", "confidence": 0.9949457943439484}]}, {"text": "For these calculations, each item is an annotation, and one annotation is considered equal to another if it has the same character span (offsets), type, and properties (with the definition applying recursively for properties that point to other annotations).", "labels": [], "entities": []}, {"text": "To make the experiments with different neural architectures comparable, we tuned the parameters of all models to achieve the best performance on the development data.", "labels": [], "entities": []}, {"text": "Due to space constraints, we only list here the hyper-parameters for our best Char 3-Softmax: the embedding size of the character-level text, word-level text, POS tag, and unicode character category features are 128, 300, 32 and 64, respectively.", "labels": [], "entities": []}, {"text": "To avoid overfitting, we used dropout with probabilities 0.25, 0.15 and 0.15 for the 3 features, respectively; the sizes of the first and second layer GRU units are set as 256 and 150.", "labels": [], "entities": []}, {"text": "We trained the model with RMSProp optimization on mini-batches of size 120, and followed standard recommendations to leave the optimizer hyperparameter settings at their default values.", "labels": [], "entities": []}, {"text": "Each model is trained for at most 800 epochs, the longest training time for Char 3-Softmax model is around 22 hours using 2x NVIDIA Kepler K20X GPU.", "labels": [], "entities": []}, {"text": "We evaluate both Char 3-Softmax and Char 3-Softmax extra on the test set for identification and We used a paired bootstrap resampling significance test.", "labels": [], "entities": [{"text": "identification", "start_pos": 77, "end_pos": 91, "type": "TASK", "confidence": 0.966962456703186}]}], "tableCaptions": [{"text": " Table 1: Number of documents, TimeML TIMEX3 an- notations and SCATE annotations for the subset of the  TempEval 2013 corpus annotated with both schemas.", "labels": [], "entities": [{"text": "TimeML TIMEX3 an- notations", "start_pos": 31, "end_pos": 58, "type": "METRIC", "confidence": 0.5877170443534852}, {"text": "TempEval 2013 corpus", "start_pos": 104, "end_pos": 124, "type": "DATASET", "confidence": 0.8883764147758484}]}, {"text": " Table 2: Comparison of TimeML and SCATE annotations.", "labels": [], "entities": []}, {"text": " Table 4: Precision (P ), recall (R), and F 1 for the different  neural network architectures on Time entity identification  on the development data.", "labels": [], "entities": [{"text": "Precision (P )", "start_pos": 10, "end_pos": 24, "type": "METRIC", "confidence": 0.9510648548603058}, {"text": "recall (R)", "start_pos": 26, "end_pos": 36, "type": "METRIC", "confidence": 0.9561348408460617}, {"text": "F 1", "start_pos": 42, "end_pos": 45, "type": "METRIC", "confidence": 0.9950272738933563}, {"text": "Time entity identification", "start_pos": 97, "end_pos": 123, "type": "TASK", "confidence": 0.6416479150454203}]}, {"text": " Table 5: Results on the test set for Time entity identifi- cation (Ident) and Time entity composition (Comp) steps.  For the former we report the performances for each entity  set: non-operators (Non-Op), explicit operators (Exp-Op)  and implicit operators (Imp-Op).", "labels": [], "entities": []}, {"text": " Table 6: Precision (P ), recall (R), and F 1 of our models  on the test data producing bounded time intervals. For  comparison, we include the results obtained by Heidel- Time.", "labels": [], "entities": [{"text": "Precision (P )", "start_pos": 10, "end_pos": 24, "type": "METRIC", "confidence": 0.9302940368652344}, {"text": "recall (R)", "start_pos": 26, "end_pos": 36, "type": "METRIC", "confidence": 0.9529711604118347}, {"text": "F 1", "start_pos": 42, "end_pos": 45, "type": "METRIC", "confidence": 0.9883678555488586}]}, {"text": " Table 7: Precision (P ), recall (R), and F 1 on bounded  intervals on the TimeML/SCATE perfect overlapping test  data.", "labels": [], "entities": [{"text": "Precision (P )", "start_pos": 10, "end_pos": 24, "type": "METRIC", "confidence": 0.9472014158964157}, {"text": "recall (R)", "start_pos": 26, "end_pos": 36, "type": "METRIC", "confidence": 0.9580559432506561}, {"text": "F 1", "start_pos": 42, "end_pos": 45, "type": "METRIC", "confidence": 0.9934726059436798}, {"text": "TimeML/SCATE perfect overlapping test  data", "start_pos": 75, "end_pos": 118, "type": "DATASET", "confidence": 0.8548041156360081}]}, {"text": " Table 8: Precision (P ), recall (R), and F 1 for character- based and word-based models in predicting TimeML  TIMEX3 annotations on the TempEval 2013 test set.  TIMEX3-Digits is the subset of annotations that contain  digits.", "labels": [], "entities": [{"text": "Precision (P )", "start_pos": 10, "end_pos": 24, "type": "METRIC", "confidence": 0.9322480857372284}, {"text": "recall (R)", "start_pos": 26, "end_pos": 36, "type": "METRIC", "confidence": 0.9453977942466736}, {"text": "F 1", "start_pos": 42, "end_pos": 45, "type": "METRIC", "confidence": 0.9933361113071442}, {"text": "TempEval 2013 test set", "start_pos": 137, "end_pos": 159, "type": "DATASET", "confidence": 0.9413537681102753}]}]}