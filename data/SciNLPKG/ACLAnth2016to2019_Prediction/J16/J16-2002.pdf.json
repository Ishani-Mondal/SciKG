{"title": [{"text": "Synchronous Context-Free Grammars and Optimal Parsing Strategies", "labels": [], "entities": [{"text": "Synchronous Context-Free Grammars", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.8064259092013041}]}], "abstractContent": [{"text": "The complexity of parsing with synchronous context-free grammars is polynomial in the sentence length fora fixed grammar, but the degree of the polynomial depends on the grammar.", "labels": [], "entities": []}, {"text": "Specifically , the degree depends on the length of rules, the permutations represented by the rules, and the parsing strategy adopted to decompose the recognition of a rule into smaller steps.", "labels": [], "entities": [{"text": "degree", "start_pos": 19, "end_pos": 25, "type": "METRIC", "confidence": 0.9547927975654602}]}, {"text": "We address the problem of finding the best parsing strategy fora rule, in terms of space and time complexity.", "labels": [], "entities": []}, {"text": "We show that it is NP-hard to find the binary strategy with the lowest space complexity.", "labels": [], "entities": []}, {"text": "We also show that any algorithm for finding the strategy with the lowest time complexity would imply improved approximation algorithms for finding the treewidth of general graphs.", "labels": [], "entities": []}], "introductionContent": [{"text": "Synchronous context-free grammars (SCFGs) generalize context-free grammars (CFGs) to generate two strings simultaneously.", "labels": [], "entities": []}, {"text": "The formalism dates from the early days of automata theory; it was developed under the name syntax-direct translation schemata to model compilers for programming languages (.", "labels": [], "entities": [{"text": "automata theory", "start_pos": 43, "end_pos": 58, "type": "TASK", "confidence": 0.7630361020565033}]}, {"text": "SCFGs are widely used today to model the patterns of re-ordering between natural languages, and they form the basis of many state-of-the-art statistical machine translation systems.", "labels": [], "entities": [{"text": "statistical machine translation", "start_pos": 141, "end_pos": 172, "type": "TASK", "confidence": 0.6179941991964976}]}, {"text": "Despite the fact that SCFGs area very natural extension of CFGs, and that the parsing problem for CFGs is rather well understood nowadays, our knowledge of the parsing problem for SCFGs is quite limited, with many questions still left unanswered.", "labels": [], "entities": [{"text": "parsing", "start_pos": 78, "end_pos": 85, "type": "TASK", "confidence": 0.9754263162612915}, {"text": "parsing", "start_pos": 160, "end_pos": 167, "type": "TASK", "confidence": 0.965111255645752}]}, {"text": "In this article we tackle one of these open problems.", "labels": [], "entities": []}, {"text": "Unlike CFGs, SCFGs do not admit any canonical form in which rules are bounded in length (, as for instance in the well-known Chomsky normal form for CFGs.", "labels": [], "entities": []}, {"text": "A consequence of this fact is that the computational complexity of parsing with SCFG depends on the grammar.", "labels": [], "entities": []}, {"text": "More precisely, fora fixed SCFG, parsing is polynomial in the length of the string.", "labels": [], "entities": [{"text": "parsing", "start_pos": 33, "end_pos": 40, "type": "TASK", "confidence": 0.9618198275566101}]}, {"text": "The degree of the polynomial depends on the length of the grammar's rules, the re-ordering patterns represented by these rules, as well as the strategy used to parse each rule.", "labels": [], "entities": []}, {"text": "The complexity of finding the best parsing strategy fora fixed SCFG rule has remained open.", "labels": [], "entities": [{"text": "parsing", "start_pos": 35, "end_pos": 42, "type": "TASK", "confidence": 0.9622467160224915}]}, {"text": "This article shows that it is NP-hard to find the binary parsing strategy having the lowest space complexity.", "labels": [], "entities": []}, {"text": "We also consider the problem of finding the parsing strategy with the lowest time complexity, and we show that it would require progress on long-standing open problems in graph theory either to find a polynomial algorithm or to show NP-hardness.", "labels": [], "entities": []}, {"text": "The parsing complexity of SCFG rules increases with the increase of the number of nonterminals in the rule itself.", "labels": [], "entities": [{"text": "parsing", "start_pos": 4, "end_pos": 11, "type": "TASK", "confidence": 0.9616970419883728}]}, {"text": "Practical machine translation systems usually confine themselves to binary rules, that is, rules having no more than two right-hand side nonterminals, because of the complexity issues and because binary rules seem to be adequate empirically ().", "labels": [], "entities": [{"text": "machine translation", "start_pos": 10, "end_pos": 29, "type": "TASK", "confidence": 0.7095011919736862}]}, {"text": "Longer rules are of theoretical interest because of the naturalness and generality of the SCFG formalism.", "labels": [], "entities": []}, {"text": "Longer rules may also be of practical interest as machine translation systems improve.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 50, "end_pos": 69, "type": "TASK", "confidence": 0.755750447511673}]}, {"text": "For a fixed SCFG, complexity can be reduced by factoring the parsing of a grammar rule into a sequence of smaller steps, which we refer to as a parsing strategy.", "labels": [], "entities": []}, {"text": "Each step of a parsing strategy collects nonterminals from the right-hand side of an SCFG rule into a subset, indicating that a portion of the SCFG rule has been matched to a subsequence of the two input strings, as we explain precisely in Section 2.", "labels": [], "entities": []}, {"text": "A parsing strategy is binary if it combines two subsets of nonterminals at each step to create anew subset.", "labels": [], "entities": []}, {"text": "We consider the two problems of finding the binary parsing strategy with optimal time and space complexity.", "labels": [], "entities": []}, {"text": "For time complexity, there is no benefit to considering parsing strategies that combine more than two subsets at a time.", "labels": [], "entities": [{"text": "parsing", "start_pos": 56, "end_pos": 63, "type": "TASK", "confidence": 0.9641927480697632}]}, {"text": "For space complexity, the lowest complexity can be achieved with no factorization whatsoever; however, considering binary parsing strategies can provide an important trade-off between time and space complexity.", "labels": [], "entities": []}, {"text": "Our results generalize those of, who show NPcompleteness for decision problems related to both time and space complexity for linear parsing strategies, which are defined to be strategies that add one nonterminal at a time.", "labels": [], "entities": []}, {"text": "Our approach constructs a graph from the permutation of nonterminals in a given SCFG rule, and relates the parsing problem to properties of the graph.", "labels": [], "entities": []}, {"text": "Our results for space complexity are based on the graph theoretic concept of carving width, whose decision problem is NP-complete for general graphs.", "labels": [], "entities": []}, {"text": "Section 3 relates the space complexity of the SCFG parsing problem to the carving width of a graph constructed from the SCFG rule.", "labels": [], "entities": [{"text": "SCFG parsing problem", "start_pos": 46, "end_pos": 66, "type": "TASK", "confidence": 0.9201164046923319}]}, {"text": "In Section 4, we show that any polynomial time algorithm for optimizing the space complexity of binary SCFG parsing strategies would imply a polynomial time algorithm for carving width of general graphs.", "labels": [], "entities": [{"text": "SCFG parsing", "start_pos": 103, "end_pos": 115, "type": "TASK", "confidence": 0.7361111044883728}]}, {"text": "Our results for time complexity are based on the graph theoretic concept of treewidth.", "labels": [], "entities": []}, {"text": "In Section 5, we show that any polynomial time algorithm for the decision problem of the time complexity of binary SCFG strategies would imply a polynomial time constant-factor approximation algorithm for the treewidth of general graphs.", "labels": [], "entities": []}, {"text": "In the other direction, NP-completeness of the decision problem of the time complexity for SCFG would imply the NP-completeness of treewidth of general graphs of degree six.", "labels": [], "entities": []}, {"text": "These are both long-standing open problems in graph theory.", "labels": [], "entities": [{"text": "graph theory", "start_pos": 46, "end_pos": 58, "type": "TASK", "confidence": 0.7324754595756531}]}], "datasetContent": [], "tableCaptions": []}