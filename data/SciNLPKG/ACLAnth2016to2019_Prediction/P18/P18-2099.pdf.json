{"title": [{"text": "Generalized chart constraints for efficient PCFG and TAG parsing", "labels": [], "entities": [{"text": "TAG parsing", "start_pos": 53, "end_pos": 64, "type": "TASK", "confidence": 0.7420216798782349}]}], "abstractContent": [{"text": "Chart constraints, which specify at which string positions a constituent may begin or end, have been shown to speedup chart parsers for PCFGs.", "labels": [], "entities": []}, {"text": "We generalize chart constraints to more expressive grammar formalisms and describe a neural tagger which predicts chart constraints at very high precision.", "labels": [], "entities": [{"text": "precision", "start_pos": 145, "end_pos": 154, "type": "METRIC", "confidence": 0.957190752029419}]}, {"text": "Our constraints accelerate both PCFG and TAG parsing, and combine effectively with other pruning techniques (coarse-to-fine and supertagging) for an overall speedup of two orders of magnitude , while improving accuracy.", "labels": [], "entities": [{"text": "PCFG", "start_pos": 32, "end_pos": 36, "type": "DATASET", "confidence": 0.7818822264671326}, {"text": "TAG parsing", "start_pos": 41, "end_pos": 52, "type": "TASK", "confidence": 0.7391684949398041}, {"text": "accuracy", "start_pos": 210, "end_pos": 218, "type": "METRIC", "confidence": 0.9981655478477478}]}], "introductionContent": [{"text": "Effective and high-precision pruning is essential for making statistical parsers fast and accurate.", "labels": [], "entities": [{"text": "statistical parsers", "start_pos": 61, "end_pos": 80, "type": "TASK", "confidence": 0.7230670154094696}]}, {"text": "Existing pruning techniques differ in the source of parsing complexity they tackle.", "labels": [], "entities": [{"text": "parsing", "start_pos": 52, "end_pos": 59, "type": "TASK", "confidence": 0.969439685344696}]}, {"text": "Beam search bounds the number of entries in each cell of the parse chart; supertagging ( bounds the number of lexicon entries for each input token; and coarse-to-fine parsing) blocks chart cells that were not useful when parsing with a coarser-grained grammar.", "labels": [], "entities": []}, {"text": "One very direct method for limiting the chart cells the parser considers is through chart constraints (): a tagger first identifies string positions at which constituents may begin or end, and the chart parser may then only fill cells which respect these constraints.", "labels": [], "entities": []}, {"text": "found that begin and end chart constraints accelerated PCFG parsing by up to 8x.", "labels": [], "entities": [{"text": "PCFG parsing", "start_pos": 55, "end_pos": 67, "type": "TASK", "confidence": 0.7391990721225739}]}, {"text": "However, in their original form, chart constraints are limited to PCFGs and cannot be directly applied to more expressive formalisms, such as tree-adjoining grammar (TAG,).", "labels": [], "entities": []}, {"text": "Chart constraints prune the ways in which smaller structures can be combined into bigger ones.", "labels": [], "entities": []}, {"text": "Intuitively, they are complementary to supertagging, which constrains lexical ambiguity in lexicalized grammar formalisms such as TAG and CCG, and has been shown to drastically improve efficiency and accuracy for these ().", "labels": [], "entities": [{"text": "accuracy", "start_pos": 200, "end_pos": 208, "type": "METRIC", "confidence": 0.997744083404541}]}, {"text": "For CCG specifically, showed that supertagging combines favorably with chart constraints.", "labels": [], "entities": []}, {"text": "To our knowledge, similar results for other grammar formalisms are not available.", "labels": [], "entities": []}, {"text": "In this paper, we make two contributions.", "labels": [], "entities": []}, {"text": "First, we generalize chart constraints to more expressive grammar formalisms by casting them in terms of allowable parse items that should be considered by the parser.", "labels": [], "entities": []}, {"text": "The Roark chart constraints are the special case for PCFGs and CKY; our view applies to any grammar formalism for which a parser can be specified in terms of parsing schemata.", "labels": [], "entities": []}, {"text": "Second, we present a neural tagger which predicts begin and end constraints with an accuracy around 98%.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 84, "end_pos": 92, "type": "METRIC", "confidence": 0.9993290901184082}]}, {"text": "We show that these chart constraints speedup a PCFG parser by 18x and a TAG chart parser by 4x.", "labels": [], "entities": [{"text": "TAG chart parser", "start_pos": 72, "end_pos": 88, "type": "TASK", "confidence": 0.5052914520104727}]}, {"text": "Furthermore, chart constraints can be combined effectively with coarse-to-fine parsing for PCFGs (for an overall speedup of 70x) and supertagging for TAG (overall speedup of 124x), all while improving the accuracy over those of the baseline parsers.", "labels": [], "entities": [{"text": "TAG", "start_pos": 150, "end_pos": 153, "type": "METRIC", "confidence": 0.9014759659767151}, {"text": "accuracy", "start_pos": 205, "end_pos": 213, "type": "METRIC", "confidence": 0.9992690682411194}]}, {"text": "Our code is part of the Alto parser (), available at http://bitbucket.org/ tclup/alto.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluated the efficacy of chart-constraint pruning for PCFG and TAG parsing.", "labels": [], "entities": [{"text": "TAG parsing", "start_pos": 67, "end_pos": 78, "type": "TASK", "confidence": 0.7240121066570282}]}, {"text": "All runtimes are on an AMD Opteron 6380 CPU at 2.5 GHz, using Oracle Java version 8.", "labels": [], "entities": []}, {"text": "See the Supplementary Materials for details on the setup.", "labels": [], "entities": [{"text": "Supplementary Materials", "start_pos": 8, "end_pos": 31, "type": "DATASET", "confidence": 0.6919761598110199}]}], "tableCaptions": []}