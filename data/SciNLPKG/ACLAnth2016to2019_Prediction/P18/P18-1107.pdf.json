{"title": [{"text": "Prefix Lexicalization of Synchronous CFGs using Synchronous TAG", "labels": [], "entities": [{"text": "Prefix Lexicalization", "start_pos": 0, "end_pos": 21, "type": "TASK", "confidence": 0.7322439253330231}]}], "abstractContent": [{"text": "We show that an \u03b5-free, chain-free synchronous context-free grammar (SCFG) can be converted into a weakly equivalent synchronous tree-adjoining grammar (STAG) which is prefix lexicalized.", "labels": [], "entities": []}, {"text": "This transformation at most doubles the gram-mar's rank and cubes its size, but we show that in practice the size increase is only quadratic.", "labels": [], "entities": [{"text": "size increase", "start_pos": 109, "end_pos": 122, "type": "METRIC", "confidence": 0.920663982629776}]}, {"text": "Our results extend Greibach normal form from CFGs to SCFGs and prove new formal properties about SCFG, a formalism with many applications in natural language processing.", "labels": [], "entities": []}], "introductionContent": [{"text": "Greibach normal form (GNF; is an important construction informal language theory which allows every context-free grammar (CFG) to be rewritten so that the first character of each rule is a terminal symbol.", "labels": [], "entities": []}, {"text": "A grammar in GNF is said to be prefix lexicalized, because the prefix of every production is a lexical item.", "labels": [], "entities": []}, {"text": "GNF has a variety of theoretical and practical applications, including for example the proofs of the famous theorems due to).", "labels": [], "entities": []}, {"text": "Other applications of prefix lexicalization include proving coverage of parsing algorithms () and decidability of equivalence problems.", "labels": [], "entities": [{"text": "proving coverage of parsing algorithms", "start_pos": 52, "end_pos": 90, "type": "TASK", "confidence": 0.6673234403133392}]}, {"text": "By using prefix lexicalized synchronous context-free grammars (SCFGs), and obtain asymptotic and empirical speed improvements on a machine translation task.", "labels": [], "entities": [{"text": "machine translation task", "start_pos": 131, "end_pos": 155, "type": "TASK", "confidence": 0.7634592851003011}]}, {"text": "Using a prefix lexicalized grammar ensures that target sentences can be generated from left to right, which allows the use of beam search to constrain their decoder's search space as it performs a left-to-right traversal of translation hypotheses.", "labels": [], "entities": []}, {"text": "To achieve these results, new grammars had to be heuristically constrained to include only prefix lexicalized productions, as there is at present noway to automatically convert an existing SCFG to a prefix lexicalized form.", "labels": [], "entities": []}, {"text": "This work investigates the formal properties of prefix lexicalized synchronous grammars as employed by and, which have received little theoretical attention compared to non-synchronous prefix lexicalized grammars.", "labels": [], "entities": []}, {"text": "To this end, we first prove that SCFG is not closed under prefix lexicalization.", "labels": [], "entities": []}, {"text": "Our main result is that there is a method for prefix lexicalizing an SCFG by converting it to an equivalent grammar in a different formalism, namely synchronous tree-adjoining grammar (STAG) in regular form.", "labels": [], "entities": [{"text": "prefix lexicalizing an SCFG", "start_pos": 46, "end_pos": 73, "type": "TASK", "confidence": 0.8990105837583542}]}, {"text": "Like the GNF transformation for CFGs, our method at most cubes the grammar size, but we show empirically that the size increase is only quadratic for grammars used in existing NLP tasks.", "labels": [], "entities": []}, {"text": "The rank is at most doubled, and we maintain O(n 3k ) parsing complexity for grammars of rank k.", "labels": [], "entities": [{"text": "O(n 3k ) parsing complexity", "start_pos": 45, "end_pos": 72, "type": "METRIC", "confidence": 0.7548122704029083}]}, {"text": "We conclude that although SCFG does not have a prefix lexicalized normal form like GNF, our conversion to prefix lexicalized STAG offers a practical alternative.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}