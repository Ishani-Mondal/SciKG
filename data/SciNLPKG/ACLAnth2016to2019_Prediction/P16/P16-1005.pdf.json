{"title": [{"text": "Unsupervised Person Slot Filling based on Graph Mining", "labels": [], "entities": [{"text": "Person Slot Filling", "start_pos": 13, "end_pos": 32, "type": "TASK", "confidence": 0.6294761002063751}]}], "abstractContent": [{"text": "Slot filling aims to extract the values (slot fillers) of specific attributes (slots types) fora given entity (query) from a large-scale corpus.", "labels": [], "entities": [{"text": "Slot filling", "start_pos": 0, "end_pos": 12, "type": "TASK", "confidence": 0.9299939870834351}]}, {"text": "Slot filling remains very challenging over the past seven years.", "labels": [], "entities": [{"text": "Slot filling", "start_pos": 0, "end_pos": 12, "type": "TASK", "confidence": 0.9798929393291473}]}, {"text": "We propose a simple yet effective unsuper-vised approach to extract slot fillers based on the following two observations: (1) a trigger is usually a salient node relative to the query and filler nodes in the dependency graph of a context sentence; (2) a relation is likely to exist if the query and candidate filler nodes are strongly connected by a relation-specific trigger.", "labels": [], "entities": []}, {"text": "Thus we design a graph-based algorithm to automatically identify triggers based on per-sonalized PageRank and Affinity Propagation fora given (query, filler) pair and then label the slot type based on the identified triggers.", "labels": [], "entities": []}, {"text": "Our approach achieves 11.6%-25% higher F-score over state-of-the-art English slot filling methods.", "labels": [], "entities": [{"text": "F-score", "start_pos": 39, "end_pos": 46, "type": "METRIC", "confidence": 0.9995332956314087}, {"text": "slot filling", "start_pos": 77, "end_pos": 89, "type": "TASK", "confidence": 0.8054467141628265}]}, {"text": "Our experiments also demonstrate that as long as a few trigger seeds, name tagging and dependency parsing capabilities exist, this approach can be quickly adapted to any language and new slot types.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 87, "end_pos": 105, "type": "TASK", "confidence": 0.7035873383283615}]}, {"text": "Our promising results on Chinese slot filling can serve as anew benchmark.", "labels": [], "entities": [{"text": "Chinese slot filling", "start_pos": 25, "end_pos": 45, "type": "TASK", "confidence": 0.5954892436663309}]}], "introductionContent": [{"text": "The goal of the Text Analysis Conference Knowledge Base Population (TAC-KBP) Slot Filling (SF) task) is to extract the values (fillers) of specific attributes (slot types) fora given entity (query) from a largescale corpus and provide justification sentences to support these slot fillers.", "labels": [], "entities": [{"text": "Text Analysis Conference Knowledge Base Population (TAC-KBP) Slot Filling (SF) task", "start_pos": 16, "end_pos": 99, "type": "TASK", "confidence": 0.7570723315080007}]}, {"text": "KBP defines 25 slot types for persons (e.g., spouse) and 16 slots for organizations (e.g., founder).", "labels": [], "entities": [{"text": "KBP", "start_pos": 0, "end_pos": 3, "type": "DATASET", "confidence": 0.9509738683700562}]}, {"text": "For example, given a person query \"Dominich Dunne\" and slot type spouse, a SF system may extract a slot filler \"Ellen Griffin\" and its justification sentence E1 as shown in.", "labels": [], "entities": [{"text": "Dominich Dunne", "start_pos": 35, "end_pos": 49, "type": "DATASET", "confidence": 0.7508518397808075}]}, {"text": "Slot filling remains a very challenging task.", "labels": [], "entities": [{"text": "Slot filling", "start_pos": 0, "end_pos": 12, "type": "TASK", "confidence": 0.9915058314800262}]}, {"text": "The two most successful state-of-the-art techniques are as follows.", "labels": [], "entities": []}, {"text": "(1) Supervised classification.", "labels": [], "entities": [{"text": "Supervised classification", "start_pos": 4, "end_pos": 29, "type": "TASK", "confidence": 0.8866662979125977}]}, {"text": "Considering any pair of query and candidate slot filler as an instance, these approaches train a classifier from manually labeled data through active learning () or noisy labeled data through distant supervision ( to predict the existence of a specific relation between them.", "labels": [], "entities": []}, {"text": "(2) Pattern matching.", "labels": [], "entities": [{"text": "Pattern matching", "start_pos": 4, "end_pos": 20, "type": "TASK", "confidence": 0.9686389565467834}]}, {"text": "These approaches extract and generalize lexical and syntactic patterns automatically or semi-automatically).", "labels": [], "entities": []}, {"text": "They usually suffer from low recall due to numerous different ways to express a certain relation type ().", "labels": [], "entities": [{"text": "recall", "start_pos": 29, "end_pos": 35, "type": "METRIC", "confidence": 0.999467670917511}]}, {"text": "For example, none of the top-ranked patterns () based on dependency paths in can capture the spouse slot in E1.: Dependency patterns for slot spouse.", "labels": [], "entities": []}, {"text": "Both of the previous methods have poor portability to anew language or anew slot type.", "labels": [], "entities": []}, {"text": "Furthermore, both methods focus on the flat relation representation between the query and the candidate slot filler, while ignoring the global graph structure among them and other facts in the context.", "labels": [], "entities": []}, {"text": "When multiple facts about a person entity are presented in a sentence, the author (e.g., a news reporter or a discussion forum poster) often uses explicit trigger words or phrases to indicate their relations with the entity.", "labels": [], "entities": []}, {"text": "As a result, these interdependent facts and query entities are strongly connected via syntactic or semantic relations.", "labels": [], "entities": []}, {"text": "Many slot types, especially when the queries are person entities, are indicated by such triggers.", "labels": [], "entities": []}, {"text": "We call these slots trigger-driven slots.", "labels": [], "entities": []}, {"text": "In this paper, we define a trigger as the smallest extent of a text which most clearly indicates a slot type.", "labels": [], "entities": []}, {"text": "For example, in E1, \"divorced\" is a trigger for spouse while \"died\" is a trigger for death-related slots.", "labels": [], "entities": []}, {"text": "Considering the limitations of previous flat representations for the relations between a query (Q) and a candidate slot filler (F ), we focus on analyzing the whole dependency tree structure that connects Q, F and other semantically related words or phrases in each context sentence.", "labels": [], "entities": []}, {"text": "Our main observation is that there often exists a trigger word (T ) which plays an important role in connecting Q and F in the dependency tree for trigger-driven slots.", "labels": [], "entities": []}, {"text": "From the extended dependency tree shown in, we can clearly see that \"divorced\" is most strongly connected to the query mention (\"he\") and the slot filler (\"Ellen Griffin Dunne\").", "labels": [], "entities": []}, {"text": "Therefore we can consider it as a trigger word which explicitly indicates a particular slot type.", "labels": [], "entities": []}, {"text": "Based on these observations, we propose a novel and effective unsupervised graph mining approach for person slot filling by deeply exploring the structures of dependency trees.", "labels": [], "entities": [{"text": "graph mining", "start_pos": 75, "end_pos": 87, "type": "TASK", "confidence": 0.7967996001243591}, {"text": "person slot filling", "start_pos": 101, "end_pos": 120, "type": "TASK", "confidence": 0.740084707736969}]}, {"text": "It consists of the following three steps: \u2022 Step 1 -Candidate Relation Identification: Construct an extended dependency tree for each sentence including any mention referring to the query entity.", "labels": [], "entities": [{"text": "Candidate Relation Identification", "start_pos": 52, "end_pos": 85, "type": "TASK", "confidence": 0.7535649339358012}]}, {"text": "Identify candidate slot fillers based on slot type constraints (e.g., the spouse fillers are limited to person entities) (Section 2).", "labels": [], "entities": []}, {"text": "\u2022 Step 2 -Trigger Identification: Measure the importance of each node in the extended dependency tree relative to Q and F , rank them and select the most important ones as the trigger set (Section 3).", "labels": [], "entities": [{"text": "Trigger Identification", "start_pos": 10, "end_pos": 32, "type": "TASK", "confidence": 0.9452625811100006}]}, {"text": "\u2022 Step 3 -Slot Typing: For any given new slot type, automatically expand a few trigger seeds using the Paraphrase Database ().", "labels": [], "entities": [{"text": "Slot Typing", "start_pos": 10, "end_pos": 21, "type": "TASK", "confidence": 0.8590329885482788}]}, {"text": "Then we use the expanded trigger set to label the slot types of identified triggers (Section 4).", "labels": [], "entities": []}, {"text": "This framework only requires name tagging and dependency parsing as pre-processing, and a few trigger seeds as input, and thus it can be easily adapted to anew language or anew slot type.", "labels": [], "entities": [{"text": "name tagging", "start_pos": 29, "end_pos": 41, "type": "TASK", "confidence": 0.7976313233375549}, {"text": "dependency parsing", "start_pos": 46, "end_pos": 64, "type": "TASK", "confidence": 0.7076168656349182}]}, {"text": "Experiments on English and Chinese demonstrate that our approach dramatically advances state-ofthe-art results for both pre-defined KBP slot types and new slot types.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 3: English Slot Filling F 1 (%) (KBP2013 SF  data set).", "labels": [], "entities": [{"text": "English Slot Filling F 1", "start_pos": 10, "end_pos": 34, "type": "TASK", "confidence": 0.6572725772857666}, {"text": "KBP2013 SF  data set", "start_pos": 40, "end_pos": 60, "type": "DATASET", "confidence": 0.8783687949180603}]}, {"text": " Table 4: English Cold Start Slot Filling F 1 (%)  (KBP2015 CSSF data set).", "labels": [], "entities": [{"text": "English", "start_pos": 10, "end_pos": 17, "type": "DATASET", "confidence": 0.6951940059661865}, {"text": "Cold Start Slot Filling F 1", "start_pos": 18, "end_pos": 45, "type": "METRIC", "confidence": 0.6644623478253683}, {"text": "KBP2015 CSSF data set", "start_pos": 52, "end_pos": 73, "type": "DATASET", "confidence": 0.9467522352933884}]}, {"text": " Table 6: The effect of trigger gazetteers on ESF  (size: the number of triggers).", "labels": [], "entities": [{"text": "ESF", "start_pos": 46, "end_pos": 49, "type": "METRIC", "confidence": 0.5893205404281616}]}, {"text": " Table 7: Chinese Slot Filling F 1 (%) (KBP2015  CSF data set).", "labels": [], "entities": [{"text": "Chinese Slot Filling F 1", "start_pos": 10, "end_pos": 34, "type": "METRIC", "confidence": 0.6690416693687439}, {"text": "KBP2015  CSF data set", "start_pos": 40, "end_pos": 61, "type": "DATASET", "confidence": 0.9693838059902191}]}]}