{"title": [{"text": "Jigg: A Framework for an Easy Natural Language Processing Pipeline", "labels": [], "entities": []}], "abstractContent": [{"text": "We present Jigg, a Scala (or JVM-based) NLP annotation pipeline framework , which is easy to use and is exten-sible.", "labels": [], "entities": []}, {"text": "Jigg supports a very simple interface similar to Stanford CoreNLP, the most successful NLP pipeline toolkit, but has more flexibility to adapt to new types of annotation.", "labels": [], "entities": [{"text": "Jigg", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.8831806778907776}, {"text": "Stanford CoreNLP", "start_pos": 49, "end_pos": 65, "type": "DATASET", "confidence": 0.8836342990398407}]}, {"text": "On this framework, system developers can easily integrate their downstream system into a NLP pipeline from a raw text by just preparing a wrapper of it.", "labels": [], "entities": []}], "introductionContent": [{"text": "A common natural language processing system works as a component in a pipeline.", "labels": [], "entities": []}, {"text": "For example, a syntactic parser typically requires that an input sentence is correctly tokenized or assigned partof-speech (POS) tags.", "labels": [], "entities": []}, {"text": "The syntactic trees given by the parser maybe required in further downstream tasks such as coreference resolution and semantic role labelling.", "labels": [], "entities": [{"text": "coreference resolution", "start_pos": 91, "end_pos": 113, "type": "TASK", "confidence": 0.9451978802680969}, {"text": "semantic role labelling", "start_pos": 118, "end_pos": 141, "type": "TASK", "confidence": 0.6457388003667196}]}, {"text": "While this pipeline-based approach has been quite successful due to its modularity, it suffers from several drawbacks from a viewpoint of software use and development: \u2022 For a user, building a pipeline connecting existing tools and aggregating the outputs are painful, since often each system outputs the results in a different format; \u2022 For researchers or tool developers of downstream tasks, supporting the full pipeline from an input text in their software is boring and time consuming.", "labels": [], "entities": []}, {"text": "For example, two famous dependency parsing systems,) and MSTParser (), both assume that an input sentence is already tokenized and assigned POS tags, and encoded in a specific format, such as the CoNLL format.: Ina pipeline, annotations are performed on a Scala XML object.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 24, "end_pos": 42, "type": "TASK", "confidence": 0.7184088081121445}, {"text": "MSTParser", "start_pos": 57, "end_pos": 66, "type": "DATASET", "confidence": 0.8227397799491882}]}, {"text": "A pipeline is built by choosing annotator tools at each step, e.g., the bold or dotted lines in the figure.", "labels": [], "entities": []}, {"text": "Each component is implemented as a wrapper, which manipulates the XML object.", "labels": [], "entities": []}, {"text": "If we prepare anew wrapper of some component, one can integrate it in a pipeline (e.g., the POS tagger in the dotted lines).", "labels": [], "entities": []}, {"text": "In this paper, we present Jigg, which aims to make it easy to incorporate an existing or new tool (component) in an NLP pipeline.", "labels": [], "entities": []}, {"text": "Using Jigg, a user can easily construct a pipeline by choosing a tool at each step on a command-line interface.", "labels": [], "entities": []}, {"text": "Jigg is written in Scala, and can easily be extended with JVM languages including Java.", "labels": [], "entities": []}, {"text": "A new tool can be incorporated into this framework by writing a wrapper of that to follow the common API of Jigg (Scala XML object), which requires typically several dozes of lines of code.", "labels": [], "entities": []}, {"text": "The software design of Jigg is highly inspired by the success of Stanford CoreNLP (, which is now the most widely used NLP toolkit supporting pipeline processing from raw texts.", "labels": [], "entities": [{"text": "Stanford CoreNLP", "start_pos": 65, "end_pos": 81, "type": "DATASET", "confidence": 0.8253063261508942}]}, {"text": "One characteristic of Stanford CoreNLP is Stanford CoreNLP is basically a collection of NLP tools developed by the Stanford NLP group, e.g., Stanford POS tagger ( and Stanford parser.", "labels": [], "entities": [{"text": "Stanford CoreNLP", "start_pos": 42, "end_pos": 58, "type": "DATASET", "confidence": 0.8918069303035736}]}, {"text": "Jigg, on the other hand, is an integration framework of various NLP tools developed by various groups.", "labels": [], "entities": [{"text": "Jigg", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.9459253549575806}]}, {"text": "This means that adding anew component in Jigg is easier than Stanford CoreNLP.", "labels": [], "entities": [{"text": "Stanford CoreNLP", "start_pos": 61, "end_pos": 77, "type": "DATASET", "confidence": 0.9022490978240967}]}, {"text": "Also as indicated in, Jigg provides a wrapper to Stanford CoreNLP itself, so a user can enjoy combination of Stanford CoreNLP and other tools, e.g., Berkeley parser (see Section 2).", "labels": [], "entities": [{"text": "Stanford CoreNLP", "start_pos": 49, "end_pos": 65, "type": "DATASET", "confidence": 0.9297772943973541}, {"text": "Stanford CoreNLP", "start_pos": 109, "end_pos": 125, "type": "DATASET", "confidence": 0.8763737976551056}]}, {"text": "This difference essentially comes from the underlying object annotated on each step, which is CoreMap object in Stanford CoreNLP, and Scala XML object in Jigg, which gives more flexibility as we describe later (Section 5).", "labels": [], "entities": [{"text": "Stanford CoreNLP", "start_pos": 112, "end_pos": 128, "type": "DATASET", "confidence": 0.8009463548660278}]}, {"text": "Before that, in the following, we first describes the concrete usage (Section 2), the core software design (Section 3), and away to add anew component (Section 4).", "labels": [], "entities": []}, {"text": "The code is open-source under the Apache License Version 2.0.", "labels": [], "entities": []}, {"text": "Followings are the pointers to the related websites: \u2022 Github: https://github.com/mynlp/jigg \u2022 Maven: Jigg is also available from Maven, so it can easily be incorporated into another JVM project.", "labels": [], "entities": []}, {"text": "See REAME on the project Github for this usage.", "labels": [], "entities": [{"text": "REAME", "start_pos": 4, "end_pos": 9, "type": "METRIC", "confidence": 0.8795545101165771}]}], "datasetContent": [], "tableCaptions": []}