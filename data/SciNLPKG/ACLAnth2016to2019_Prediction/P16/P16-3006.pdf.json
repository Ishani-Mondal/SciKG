{"title": [{"text": "Significance of an Accurate Sandhi-Splitter in Shallow Parsing of Dravidian Languages", "labels": [], "entities": []}], "abstractContent": [{"text": "This paper evaluates the challenges involved in shallow parsing of Dravidian languages which are highly agglutinative and morphologically rich.", "labels": [], "entities": []}, {"text": "Text processing tasks in these languages are not trivial because multiple words concatenate to form a single string with morpho-phonemic changes at the point of concatenation.", "labels": [], "entities": [{"text": "Text processing", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.777640700340271}]}, {"text": "This phenomenon known as Sandhi, in turn complicates the individual word identification.", "labels": [], "entities": [{"text": "individual word identification", "start_pos": 57, "end_pos": 87, "type": "TASK", "confidence": 0.655301958322525}]}, {"text": "Shallow parsing is the task of identification of correlated group of words given a raw sentence.", "labels": [], "entities": [{"text": "Shallow parsing", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.6719269752502441}]}, {"text": "The current work is an attempt to study the effect of Sandhi in building shallow parsers for Dravidian languages by evaluating its effect on Malay-alam, one of the main languages from Dra-vidian family.", "labels": [], "entities": []}, {"text": "We provide an in-depth analysis of effect of Sandhi in developing a robust shallow parser pipeline with experimental results emphasizing on how sensitive the individual components of shallow parser are, towards the accuracy of a sandhi splitter.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 215, "end_pos": 223, "type": "METRIC", "confidence": 0.9991980195045471}, {"text": "sandhi splitter", "start_pos": 229, "end_pos": 244, "type": "TASK", "confidence": 0.6992401331663132}]}, {"text": "Our work can serve as a guiding light for building robust text processing systems in Dravidian languages.", "labels": [], "entities": []}], "introductionContent": [{"text": "Identification of individual words is crucial for the computational processing of a text.", "labels": [], "entities": [{"text": "Identification of individual words", "start_pos": 0, "end_pos": 34, "type": "TASK", "confidence": 0.8981735557317734}]}, {"text": "In Dravidian languages, word identification becomes complex because of Sandhi.", "labels": [], "entities": [{"text": "word identification", "start_pos": 24, "end_pos": 43, "type": "TASK", "confidence": 0.7300507426261902}]}, {"text": "Sandhi is a phenomenon of concatenation of multiple words or characters to form a single complex string, with morphophonemic changes at the points of concatenation).", "labels": [], "entities": []}, {"text": "The morphological units that can be concatenated in a Sandhi operation can belong to any linguistic class: a noun joins with a verb or a postposition or particle, a verb joins with other verbs, auxiliaries, connectives, adverbs combining with verbs and soon.", "labels": [], "entities": []}, {"text": "The phenomenon is different from a noun compound multi-word expression in that the noun-compound concatenations are semantics-driven.", "labels": [], "entities": []}, {"text": "Whereas Sandhi is not semantically driven but phonologically driven.", "labels": [], "entities": []}, {"text": "This leads to misclassification of classes of words by pos-tagger which eventually affects parsing.", "labels": [], "entities": []}, {"text": "Hence making shallow parsers for Dravidian languages is a challenging task.", "labels": [], "entities": []}, {"text": "Shallow parsing) is a task of automatic identification of correlated group of words (chunks) which reduces the computational effort at the level of full parsing by assigning partial structure to a sentence.", "labels": [], "entities": [{"text": "Shallow parsing)", "start_pos": 0, "end_pos": 16, "type": "TASK", "confidence": 0.7654067476590475}, {"text": "automatic identification of correlated group of words (chunks)", "start_pos": 30, "end_pos": 92, "type": "TASK", "confidence": 0.7723664402961731}]}, {"text": "To be precise, chunks are correlated group of words which contain only the head or content word and its modifiers.", "labels": [], "entities": []}, {"text": "Shallow parser is not a single module but is a set of modules () with tokeniser, parts-of-speech tagger (pos-tagger) and chunker put in a pipeline.", "labels": [], "entities": []}, {"text": "It has been experimentally proved that shallow parsers are useful in both text, and speech processing domains.", "labels": [], "entities": []}, {"text": "The current work aims to give an in-depth analysis on the effect of Sandhi in shallow parsing of Dravidian languages with a focus on Malayalam, the most agglutinative language () in the Dravidian family.", "labels": [], "entities": []}, {"text": "For the purpose of analysis, we chose to create our own pos-tagger and chunker trained on anew 70k words annotated corpus with word internal features of morpho-phonological nature particularly because Sandhi evolved out of morphophonological reasons.", "labels": [], "entities": []}, {"text": "In this paper, for the first time in the literature, we evaluate the impact of Sandhi and the resultant error propagation in shallow parser for Dravidian languages.", "labels": [], "entities": []}, {"text": "In this work, we compare the performances of pos-tagger, and chunker on a gold standard sandhi-split test data and how the error of a sandhi-splitting tool propagates to other components of shallow parsing pipeline.", "labels": [], "entities": []}, {"text": "We have released the 70k annotated data and the trained models of pos-agger, chunker and shallow parser described in this paper 1 .", "labels": [], "entities": []}], "datasetContent": [{"text": "Two types of experiments have been conducted to evaluate the error propagation of the Malayalam shallow parser pipeline.", "labels": [], "entities": [{"text": "Malayalam shallow parser pipeline", "start_pos": 86, "end_pos": 119, "type": "DATASET", "confidence": 0.8517517894506454}]}, {"text": "In the first type of experiments, individual modules in the pipeline are considered as independent of the output of previous modules.", "labels": [], "entities": []}, {"text": "In the second type of experiment individual modules are considered as dependent on the output of previous modules.", "labels": [], "entities": []}, {"text": "In this experiment, input to each module will not be affected by the performance of its previous modules.", "labels": [], "entities": []}, {"text": "This experiment evaluates the performance of all the individual modules with respect to the current train and test data.: Results of Experiment Type-1 : Results of individual modules where each module will not be affected by the performance of its previous modules.", "labels": [], "entities": []}, {"text": "Here, 'P' refers to Precision, 'R' to Recall, 'F-1' to F-Measure and 'A' to Accuracy  In these experiments, output of one module will be given as input to the next module, hence the performance of the previous module affects the next module.", "labels": [], "entities": [{"text": "Precision", "start_pos": 20, "end_pos": 29, "type": "METRIC", "confidence": 0.990403413772583}, {"text": "Recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.9347038269042969}, {"text": "Accuracy", "start_pos": 76, "end_pos": 84, "type": "METRIC", "confidence": 0.9438210725784302}]}, {"text": "These experiments are to evaluate the error propagation from each module which eventually affects the final output.", "labels": [], "entities": []}, {"text": "Here the evaluation of the pos-tagger is done based on the number of words which got correctly identified by the sandhisplitter and then got the correct pos-tags by the pos-tagger.", "labels": [], "entities": []}, {"text": "A chunk can be a word or a group of words.", "labels": [], "entities": []}, {"text": "Hence a chunk is considered as correct only when there are exact number of words in the chunk where all the words in it should meet the criteria for the evaluation of pos-tagger.", "labels": [], "entities": []}, {"text": "Shallow Parser pipeline evaluation scores are given in: Results of Experiment Type-2: Pipeline accuracies where the performance of previous modules affect the subsequent modules.", "labels": [], "entities": []}, {"text": "Here 'S' refers to sandhi splitter, 'P' to pos-tagger and 'C' to chunker.", "labels": [], "entities": [{"text": "sandhi splitter", "start_pos": 19, "end_pos": 34, "type": "TASK", "confidence": 0.8149227201938629}]}, {"text": "\"+\" indicates that the output of the previous module is given as the input to the next module.", "labels": [], "entities": []}, {"text": "Error propagation due to the performance of sandhi-splitter is very high when compared to other modules.", "labels": [], "entities": [{"text": "Error", "start_pos": 0, "end_pos": 5, "type": "METRIC", "confidence": 0.9679009914398193}]}, {"text": "Accuracy of the pos-tagger, came down to 79% from 90% due to the errors caused by sandhi-splitter and further this brought down the accuracy of chunker to 71% from 92%.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 0, "end_pos": 8, "type": "METRIC", "confidence": 0.9963961243629456}, {"text": "accuracy", "start_pos": 132, "end_pos": 140, "type": "METRIC", "confidence": 0.9996578693389893}]}], "tableCaptions": [{"text": " Table 3: Results of Experiment Type-1 : Re- sults of individual modules where each module  will not be affected by the performance of its pre- vious modules. Here, 'P' refers to Precision, 'R'  to Recall, 'F-1' to F-Measure and 'A' to Accuracy", "labels": [], "entities": [{"text": "Precision", "start_pos": 179, "end_pos": 188, "type": "METRIC", "confidence": 0.9473412036895752}, {"text": "Recall", "start_pos": 198, "end_pos": 204, "type": "METRIC", "confidence": 0.8810989856719971}, {"text": "Accuracy", "start_pos": 236, "end_pos": 244, "type": "METRIC", "confidence": 0.7928970456123352}]}, {"text": " Table 4: Results of Experiment Type-2: Pipeline  accuracies where the performance of previous  modules affect the subsequent modules. Here 'S'  refers to sandhi splitter, 'P' to pos-tagger and 'C'  to chunker. \"+\" indicates that the output of the  previous module is given as the input to the next  module.", "labels": [], "entities": [{"text": "sandhi splitter", "start_pos": 155, "end_pos": 170, "type": "TASK", "confidence": 0.6891823559999466}]}]}