{"title": [{"text": "Transition-Based Left-Corner Parsing for Identifying PTB-Style Nonlocal Dependencies", "labels": [], "entities": [{"text": "Transition-Based Left-Corner Parsing", "start_pos": 0, "end_pos": 36, "type": "TASK", "confidence": 0.5671189725399017}, {"text": "Identifying PTB-Style Nonlocal Dependencies", "start_pos": 41, "end_pos": 84, "type": "TASK", "confidence": 0.7132005840539932}]}], "abstractContent": [{"text": "This paper proposes a left-corner parser which can identify nonlocal dependencies.", "labels": [], "entities": []}, {"text": "Our parser integrates nonlocal dependency identification into a transition-based system.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 22, "end_pos": 56, "type": "TASK", "confidence": 0.6781445145606995}]}, {"text": "We use a structured perceptron which enables our parser to utilize global features captured by nonlocal dependencies.", "labels": [], "entities": []}, {"text": "An experimental result demonstrates that our parser achieves a good balance between constituent parsing and nonlocal dependency identification.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 84, "end_pos": 103, "type": "TASK", "confidence": 0.6532147526741028}, {"text": "nonlocal dependency identification", "start_pos": 108, "end_pos": 142, "type": "TASK", "confidence": 0.757856289545695}]}], "introductionContent": [{"text": "Many constituent parsers based on the Penn Treebank () are available, but most of them do not deal with nonlocal dependencies.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 38, "end_pos": 51, "type": "DATASET", "confidence": 0.9942110478878021}]}, {"text": "Nonlocal dependencies represent syntactic phenomenon such as wh-movement, A-movement in passives, topicalization, raising, control, right node raising and soon.", "labels": [], "entities": []}, {"text": "Nonlocal dependencies play an important role on semantic interpretation.", "labels": [], "entities": [{"text": "semantic interpretation", "start_pos": 48, "end_pos": 71, "type": "TASK", "confidence": 0.8282735347747803}]}, {"text": "In the Penn Treebank, a nonlocal dependency is represented as a pair of an empty element and a filler.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 7, "end_pos": 20, "type": "DATASET", "confidence": 0.9953531324863434}]}, {"text": "Several methods of identifying nonlocal dependencies have been proposed so far.", "labels": [], "entities": []}, {"text": "These methods can be divided into three approaches: pre-processing approach, in-processing approach and post-processing approach.", "labels": [], "entities": []}, {"text": "In preprocessing approach, a tagger called \"trace tagger\" detects empty elements.", "labels": [], "entities": []}, {"text": "The trace tagger uses only surface word information.", "labels": [], "entities": [{"text": "trace tagger", "start_pos": 4, "end_pos": 16, "type": "TASK", "confidence": 0.6907616555690765}]}, {"text": "In-processing approach integrates nonlocal dependency identification into a parser.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 34, "end_pos": 68, "type": "TASK", "confidence": 0.6868654688199362}]}, {"text": "The parser uses a probabilistic context-free grammar to rank candidate parse trees.", "labels": [], "entities": []}, {"text": "Post-processing approach recovers nonlocal dependencies from a parser output which does not include nonlocal dependencies.", "labels": [], "entities": []}, {"text": "The parsing models of the previous methods cannot use global features captured by nonlocal dependencies.", "labels": [], "entities": [{"text": "parsing", "start_pos": 4, "end_pos": 11, "type": "TASK", "confidence": 0.9667420387268066}]}, {"text": "Pre-or in-processing approach uses a probabilistic context-free grammar, which makes it difficult to use global features.", "labels": [], "entities": []}, {"text": "Postprocessing approach performs constituent parsing and nonlocal dependency identification separately.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 33, "end_pos": 52, "type": "TASK", "confidence": 0.7145039439201355}, {"text": "nonlocal dependency identification", "start_pos": 57, "end_pos": 91, "type": "TASK", "confidence": 0.7048314611117045}]}, {"text": "This means that the constituent parser cannot use any kind of information about nonlocal dependencies.", "labels": [], "entities": []}, {"text": "This paper proposes a parser which integrates nonlocal dependency identification into constituent parsing.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 46, "end_pos": 80, "type": "TASK", "confidence": 0.7004252870877584}]}, {"text": "Our method adopts an inprocessing approach, but does not use a probabilistic context-free grammar.", "labels": [], "entities": []}, {"text": "Our parser is based on a transition system with structured perceptron), which can easily introduce global features to its parsing model.", "labels": [], "entities": []}, {"text": "We adopt a left-corner strategy in order to use the syntactic relation c-command, which plays an important role on nonlocal dependency identification.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 115, "end_pos": 149, "type": "TASK", "confidence": 0.6384193400541941}]}, {"text": "Previous work on transition-based constituent parsing adopts a shift-reduce strategy with a tree binarization (;), or convert constituent trees to \"spinal trees\", which are similar to dependency trees ().", "labels": [], "entities": [{"text": "transition-based constituent parsing", "start_pos": 17, "end_pos": 53, "type": "TASK", "confidence": 0.6139094332853953}]}, {"text": "These conversions make it difficult for their parsers to capture c-command relations in the parsing process.", "labels": [], "entities": []}, {"text": "On the other hand, our parser does not require such kind of conversion.", "labels": [], "entities": []}, {"text": "Our contribution can be summarized as follows: 1.", "labels": [], "entities": []}, {"text": "We introduce empty element detection into transition-based left-corner constituent parsing.", "labels": [], "entities": [{"text": "empty element detection", "start_pos": 13, "end_pos": 36, "type": "TASK", "confidence": 0.6329757471879324}, {"text": "transition-based left-corner constituent parsing", "start_pos": 42, "end_pos": 90, "type": "TASK", "confidence": 0.6193988546729088}]}, {"text": "2. We extend c-command relation to deal with nodes in parse tree stack in the transition system, and develop heuristic rules which coindex empty elements with their fillers on the basis of the extended version of c-command.", "labels": [], "entities": []}, {"text": "3. We introduce new features about nonlocal dependency to our parsing model.", "labels": [], "entities": []}, {"text": "This paper is organized as follows: Section 2 explains how to represent nonlocal dependencies in the Penn Treebank.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 101, "end_pos": 114, "type": "DATASET", "confidence": 0.995431512594223}]}, {"text": "Section 3 describes our transition-based left-corner parser.", "labels": [], "entities": []}, {"text": "Section 4 introduces nonlocal dependency identification into our parser.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 21, "end_pos": 55, "type": "TASK", "confidence": 0.6648939649264017}]}, {"text": "Section 5 describes structured perceptron and features.", "labels": [], "entities": []}, {"text": "Section 6 reports an experimental result, which demonstrated that our parser achieved a good balance between constituent parsing and nonlocal dependency identification.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 109, "end_pos": 128, "type": "TASK", "confidence": 0.6476317048072815}, {"text": "nonlocal dependency identification", "start_pos": 133, "end_pos": 167, "type": "TASK", "confidence": 0.7242799599965414}]}, {"text": "Section 7 concludes this paper.", "labels": [], "entities": []}], "datasetContent": [{"text": "We conducted an experiment to evaluate the performance of our parser using the Penn Treebank.", "labels": [], "entities": [{"text": "Penn Treebank", "start_pos": 79, "end_pos": 92, "type": "DATASET", "confidence": 0.9967484474182129}]}, {"text": "We used a standard setting, that is, section 02-21 is for the training data, section 22 is for the development data and section 23 is for the test data.", "labels": [], "entities": []}, {"text": "In training, we set the beam size k to 16 to achieve a good efficiency.", "labels": [], "entities": []}, {"text": "We determined the optimal iteration number of perceptron training, and the beam size (k was set to 16, 32 and 64) for decoding on the development data.", "labels": [], "entities": []}, {"text": "The maximum  length of action sequences (= N ) was set to 7n, where n is the length of input sentence.", "labels": [], "entities": []}, {"text": "This maximum length was determined to deal with the sentences in the training data.", "labels": [], "entities": [{"text": "length", "start_pos": 13, "end_pos": 19, "type": "METRIC", "confidence": 0.9398283362388611}]}, {"text": "presents the constituent parsing performances of our system and previous systems.", "labels": [], "entities": []}, {"text": "We used the labeled bracketing metric PARSEVAL (.", "labels": [], "entities": [{"text": "PARSEVAL", "start_pos": 38, "end_pos": 46, "type": "METRIC", "confidence": 0.926576554775238}]}, {"text": "Here, \"CF\" is the parser which was learned from the training data where nonlocal dependencies are removed.", "labels": [], "entities": [{"text": "CF", "start_pos": 7, "end_pos": 9, "type": "METRIC", "confidence": 0.8515042066574097}]}, {"text": "This result demonstrates that our nonlocal dependency identification does not have a bad influence on constituent parsing.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 102, "end_pos": 121, "type": "TASK", "confidence": 0.7009295523166656}]}, {"text": "From the viewpoint of transitionbased constituent parsing, our left-corner parser is somewhat inferior to other perceptron-based shiftreduce parsers.", "labels": [], "entities": [{"text": "transitionbased constituent parsing", "start_pos": 22, "end_pos": 57, "type": "TASK", "confidence": 0.6493594845136007}]}, {"text": "On the other hand, our parser outperforms the parsers which identify nonlocal dependency based on in-processing approach.", "labels": [], "entities": []}, {"text": "We use the metric proposed by Johnson (2002) to evaluate the accuracy of nonlocal dependency identification.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 61, "end_pos": 69, "type": "METRIC", "confidence": 0.9989616870880127}, {"text": "nonlocal dependency identification", "start_pos": 73, "end_pos": 107, "type": "TASK", "confidence": 0.6141029795010885}]}, {"text": "Johnson's metric represents a nonlocal dependency as a tuple which consists of the type of the empty element, the category of the empty element, the position of the empty element, the category of the filler and the position of the filler.", "labels": [], "entities": []}, {"text": "For example, the nonlocal dependency of the type * T * in is represented as ( * T * , NP,, WHNP,).", "labels": [], "entities": [{"text": "WHNP", "start_pos": 91, "end_pos": 95, "type": "METRIC", "confidence": 0.8508138060569763}]}, {"text": "The precision and the recall are measured using these tuples.", "labels": [], "entities": [{"text": "precision", "start_pos": 4, "end_pos": 13, "type": "METRIC", "confidence": 0.9996988773345947}, {"text": "recall", "start_pos": 22, "end_pos": 28, "type": "METRIC", "confidence": 0.9996918439865112}]}, {"text": "For more details, see.", "labels": [], "entities": []}, {"text": "shows the nonlocal dependency identification performances of our method and previous methods.", "labels": [], "entities": []}, {"text": "Previous in-processing approach: Comparison for nonlocal dependency identification.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 48, "end_pos": 82, "type": "TASK", "confidence": 0.6610705951849619}]}, {"text": "achieved the state-of-the-art performance of nonlocal dependency identification, while it was inferior in terms of constituent parsing accuracy.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 45, "end_pos": 79, "type": "TASK", "confidence": 0.6309053202470144}, {"text": "constituent parsing", "start_pos": 115, "end_pos": 134, "type": "TASK", "confidence": 0.5360154360532761}, {"text": "accuracy", "start_pos": 135, "end_pos": 143, "type": "METRIC", "confidence": 0.8035407662391663}]}, {"text": "Our nonlocal dependency identification is competitive with previous in-processing approach, and its accuracy of constituent parsing is higher than previous in-processing approach.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 4, "end_pos": 38, "type": "TASK", "confidence": 0.6269671122233073}, {"text": "accuracy", "start_pos": 100, "end_pos": 108, "type": "METRIC", "confidence": 0.9993976354598999}, {"text": "constituent parsing", "start_pos": 112, "end_pos": 131, "type": "TASK", "confidence": 0.5696700215339661}]}, {"text": "As a whole, our parser achieves a good balance between constituent parsing and nonlocal dependency identification.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 79, "end_pos": 113, "type": "TASK", "confidence": 0.736543873945872}]}, {"text": "summarizes the accuracy of nonlocal dependency identification for each type of nonlocal dependency.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 15, "end_pos": 23, "type": "METRIC", "confidence": 0.9994994401931763}, {"text": "nonlocal dependency identification", "start_pos": 27, "end_pos": 61, "type": "TASK", "confidence": 0.6044192016124725}]}], "tableCaptions": [{"text": " Table 5: Comparison for constituent parsing.", "labels": [], "entities": [{"text": "constituent parsing", "start_pos": 25, "end_pos": 44, "type": "TASK", "confidence": 0.7236797213554382}]}, {"text": " Table 6: Comparison for nonlocal dependency identification.", "labels": [], "entities": [{"text": "nonlocal dependency identification", "start_pos": 25, "end_pos": 59, "type": "TASK", "confidence": 0.5875264505545298}]}, {"text": " Table 7: Accuracy of nonlocal dependency identi- fication for all types of nonlocal dependency that  occurred more than 5 times in section 23 of the  Penn Treebank. F , E and T give the category of  its filler, the category of its empty element and the  type of nonlocal dependency, respectively.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 10, "end_pos": 18, "type": "METRIC", "confidence": 0.986106276512146}, {"text": "Penn Treebank", "start_pos": 151, "end_pos": 164, "type": "DATASET", "confidence": 0.9940731227397919}]}]}