{"title": [{"text": "Cogent: A Generic Dialogue System Shell Based on a Collaborative Problem Solving Model", "labels": [], "entities": []}], "abstractContent": [{"text": "The bulk of current research in dialogue systems is focused on fairly simple task models, primarily state-based.", "labels": [], "entities": []}, {"text": "Progress on developing dialogue systems for more complex tasks has been limited by the lack generic toolkits to build from.", "labels": [], "entities": []}, {"text": "In this paper we report on our development from the ground up of anew dialogue model based on collaborative problem solving.", "labels": [], "entities": []}, {"text": "We implemented the model in a dialogue system shell (Cogent) that allows developers to plugin problem-solving agents to create dialogue systems in new domains.", "labels": [], "entities": []}, {"text": "The Cogent shell has now been used by several independent teams of researchers to develop dialogue systems in different domains, with varied lexicons and interaction style, each with their own problem-solving back-end.", "labels": [], "entities": []}, {"text": "We believe this to be the first practical demonstration of the feasibility of a CPS-based dialogue system shell.", "labels": [], "entities": [{"text": "CPS-based dialogue system shell", "start_pos": 80, "end_pos": 111, "type": "TASK", "confidence": 0.7349086254835129}]}], "introductionContent": [{"text": "Many areas of natural language processing have benefited from the existence of tools and frameworks that can be customized to develop specific applications.", "labels": [], "entities": [{"text": "natural language processing", "start_pos": 14, "end_pos": 41, "type": "TASK", "confidence": 0.6930910150210062}]}, {"text": "In the area of dialogue systems, there are few such tools and frameworks and they mostly remain focused on simple tasks that can be encoded in a state-based dialogue model (see, e.g., and the Dialogue State Tracking Challenge 1 ).", "labels": [], "entities": [{"text": "Dialogue State Tracking Challenge", "start_pos": 192, "end_pos": 225, "type": "TASK", "confidence": 0.7030265629291534}]}, {"text": "In this category some of the more expressive approaches to dialogue modeling are based on the information state; notable toolkits include TrindiKit) and its open-source successor trindikit.py, and OpenDial (.", "labels": [], "entities": [{"text": "dialogue modeling", "start_pos": 59, "end_pos": 76, "type": "TASK", "confidence": 0.9196208119392395}, {"text": "OpenDial", "start_pos": 197, "end_pos": 205, "type": "DATASET", "confidence": 0.9090113639831543}]}, {"text": "Unfortunately, there is a dearth of tools for developing mixed-initiative dialogue systems that involve complex back-end reasoning systems.", "labels": [], "entities": []}, {"text": "Early theoretical work of SharedPlans () and planbased dialogue systems (e.g., laid good foundations.", "labels": [], "entities": []}, {"text": "The Collaborative Problem Solving (CPS) model) seemed to promise a solution but that model has never been implemented in a truly domain-independent way.", "labels": [], "entities": [{"text": "Problem Solving (CPS)", "start_pos": 18, "end_pos": 39, "type": "TASK", "confidence": 0.8294648110866547}]}, {"text": "Ravenclaw) is a plan-based dialog management framework that has been used to develop a number of dialogue systems.", "labels": [], "entities": [{"text": "Ravenclaw", "start_pos": 0, "end_pos": 9, "type": "DATASET", "confidence": 0.9589617252349854}]}, {"text": "Its dialogue engine is task-independent and includes a number of generic conversational skills; however, its behavior is driven by task-specific dialogue trees, which have to be implemented anew for every application.", "labels": [], "entities": []}, {"text": "Dialogue management involves understanding the intention of the user's contributions to the dialogue, and deciding what to door say next.", "labels": [], "entities": [{"text": "Dialogue management", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8365901410579681}]}, {"text": "It is the core component of a dialogue system, and typically requires significant development effort for every new application domain.", "labels": [], "entities": []}, {"text": "We believe that dialogue managers based on models of the collaborative problem solving process offer the highest potential for flexibility and portability.", "labels": [], "entities": []}, {"text": "Flexibility refers to the ability to cover the full range of natural dialogues users may want to engage in, and portability refers to how easy it is to customize or modify a system to work in new domains.", "labels": [], "entities": [{"text": "Flexibility", "start_pos": 0, "end_pos": 11, "type": "METRIC", "confidence": 0.939339280128479}]}, {"text": "In this paper we describe anew, domainindependent dialogue manager based on the CPS model, and its implementation in an open-source dialog system shell (Cogent 2 ).", "labels": [], "entities": []}, {"text": "To demonstrate its flexibility, we also describe briefly a few dialogue systems for different domains.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}