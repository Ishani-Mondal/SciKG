{"title": [{"text": "Guessing lexicon entries using finite-state methods", "labels": [], "entities": [{"text": "Guessing lexicon entries", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.943365752696991}]}], "abstractContent": [{"text": "A practical method for interactive guessing of LEXC lexicon entries is presented.", "labels": [], "entities": [{"text": "interactive guessing of LEXC lexicon entries", "start_pos": 23, "end_pos": 67, "type": "TASK", "confidence": 0.6941769023736318}]}, {"text": "The method is based on describing groups of similarly inflected words using regular expressions.", "labels": [], "entities": []}, {"text": "The patterns are compiled into a finite-state transducer (FST) which maps any word form into the possible LEXC lexicon entries which could generate it.", "labels": [], "entities": []}, {"text": "The same FST can be used (1) for converting conventional headword lists into LEXC entries, (2) for interactive guessing of entries, (3) for corpus-assisted interactive guessing and (4) guessing entries from corpora.", "labels": [], "entities": [{"text": "FST", "start_pos": 9, "end_pos": 12, "type": "METRIC", "confidence": 0.4202113151550293}, {"text": "corpus-assisted interactive guessing", "start_pos": 140, "end_pos": 176, "type": "TASK", "confidence": 0.6524485349655151}]}, {"text": "A method of representing affixes as a table is presented as well how the tables can be converted into LEXC format for several different purposes including morphological analysis and entry guessing.", "labels": [], "entities": [{"text": "morphological analysis", "start_pos": 155, "end_pos": 177, "type": "TASK", "confidence": 0.7080314606428146}, {"text": "entry guessing", "start_pos": 182, "end_pos": 196, "type": "TASK", "confidence": 0.9376425743103027}]}, {"text": "The method has been implemented using the HFST finite-state transducer tools and its Python embedding plus a number of small Python scripts for conversions.", "labels": [], "entities": [{"text": "HFST", "start_pos": 42, "end_pos": 46, "type": "DATASET", "confidence": 0.9050925970077515}]}, {"text": "The method is tested with a near complete implementation of Finnish verbs.", "labels": [], "entities": []}, {"text": "An experiment of generating Finnish verb entries out of corpus data is also described as well as a creation of a full-scale an-alyzer for Finnish verbs using the conversion patterns.", "labels": [], "entities": []}, {"text": "Tiivistelm\u00e4 Artikkelissa esitell\u00e4\u00e4n menetelm\u00e4, jonka avulla k\u00e4ytt\u00e4j\u00e4 voi m\u00e4\u00e4ritt\u00e4\u00e4 LEXC-leksikkoon sopivia uusia hakusanoja.", "labels": [], "entities": []}, {"text": "Menetelm\u00e4ss\u00e4 kuvataan kukin taivutus-luokka s\u00e4\u00e4nn\u00f6llisten lausekkeiden avulla.", "labels": [], "entities": []}, {"text": "Samoja lausekkeita voidaan k\u00e4ytt\u00e4\u00e4 toi-saalta tavanomaisen sanakirjan sanaluettelon konversioon ja toisaalta yksitt\u00e4is-ten hakusanojen m\u00e4\u00e4ritt\u00e4miseen siten, ett\u00e4 k\u00e4ytt\u00e4j\u00e4 antaa haluamansa hakusanan eri muotoja, kunnes hakusana on yksiselitteisesti m\u00e4\u00e4r\u00e4tty.", "labels": [], "entities": []}, {"text": "Arvaaminen voidaan suorittaa my\u00f6s korpuksista ker\u00e4ttyjen tietojen avulla, jolloin oikea hakusana l\u00f6y-tyy nopeammin.", "labels": [], "entities": [{"text": "Arvaaminen", "start_pos": 0, "end_pos": 10, "type": "METRIC", "confidence": 0.9199331402778625}]}, {"text": "My\u00f6s pelk\u00e4n sanalistan perusteella voidaan arvata hakusanoja.", "labels": [], "entities": []}, {"text": "Menetelm\u00e4 on toteutettu k\u00e4ytt\u00e4en HFST:n \u00e4\u00e4rellistilaisten transduktorien ty\u00f6ka-luja ja erityisesti k\u00e4ytt\u00e4en niit\u00e4 Python-ohjelmointikielest\u00e4 k\u00e4sin.", "labels": [], "entities": []}, {"text": "Lis\u00e4ksi on teh-ty muutamia lyhyit\u00e4 Python-skriptej\u00e4, joilla tietoja muunnetaan eri muodoista toisiinsa.", "labels": [], "entities": []}, {"text": "Menetelm\u00e4\u00e4 on testattu soveltamalla sit\u00e4 l\u00e4hes kattavaan suomen kie-len verbien taivutusmalliin.", "labels": [], "entities": []}, {"text": "Menetelmi\u00e4 on kokeiltu alustavasti toisaalta hakusa-nojen automaattiseksi muodostamiseksi tekstikorpuksen sanalistasta ja toisaalta t\u00e4ysimittaisen suomen kielen verbien morfologisen j\u00e4sentimen muodossa.", "labels": [], "entities": []}], "introductionContent": [{"text": "Creating lexical entries is an important and time consuming task for any language.", "labels": [], "entities": []}, {"text": "For lesser resourced languages with a rich morphology the task is particularly relevant.", "labels": [], "entities": []}, {"text": "Building a lexicon requires often not only plenty of time and labour but also specific training.", "labels": [], "entities": []}, {"text": "Thus, there is an obvious need for automating this task.", "labels": [], "entities": []}, {"text": "This paper describes the process of generating entries for computational morphological analysis in the framework of finite-state morphology and it uses the concepts of the Xerox/HFST LEXC lexicons, for more information see.", "labels": [], "entities": [{"text": "computational morphological analysis", "start_pos": 59, "end_pos": 95, "type": "TASK", "confidence": 0.6525829633076986}, {"text": "Xerox/HFST LEXC lexicons", "start_pos": 172, "end_pos": 196, "type": "DATASET", "confidence": 0.6933006227016449}]}, {"text": "Inflection classes (the declinations and conjugations) refer to traditional dictionaries, where the inflection of lexemes is characterized by model words and numbers or other identifiers referring to those model words.", "labels": [], "entities": []}, {"text": "Dictionaries often list many more inflection classes than there are different types of LEXC entries.", "labels": [], "entities": []}, {"text": "LEXC can generalize the entries by relying on TWOLC or XFST rules which take care of the regular differences in the shapes of stems.", "labels": [], "entities": []}, {"text": "Several topics are discussed in this paper, including: \u2022 How to describe inflection classes with regular expression patterns, i.e. how to formalize what kinds of syllable structures and phonological alternations are characteristic to each inflection class.", "labels": [], "entities": []}, {"text": "\u2022 How the regular expressions can be used for converting dictionary word lists with inflection class codes into lexical entries of a LEXC lexicon.", "labels": [], "entities": []}, {"text": "\u2022 How to reuse the same regular expressions for guessing all possible LEXC entries fora given single inflected word form.", "labels": [], "entities": []}, {"text": "\u2022 How to use such a mapping for selecting the correct LEXC lexicon entry by prompting the user for further forms of the same lexeme.", "labels": [], "entities": []}, {"text": "\u2022 How the same data for affixes and their sequencing can be reused for building ordinary morphological analyzers, lexicon converters and entry guessing.", "labels": [], "entities": [{"text": "entry guessing", "start_pos": 137, "end_pos": 151, "type": "TASK", "confidence": 0.9219275414943695}]}, {"text": "\u2022 How to use the mapping for guessing in order to automatically deduce entries out of a corpus.", "labels": [], "entities": []}, {"text": "The idea here is to build a finite-state model of inflecting unknown lexemes roughly as was proposed by.", "labels": [], "entities": []}, {"text": "For Finnish, their model could produce the following two results fora Finnish word form puramme ('we unpack', 'we disassemble'): The first result would be the correct analysis and the second analysis proposes a nonexistent lexeme.", "labels": [], "entities": []}, {"text": "But actually both results are ambiguous because neither of them tells how the lexemes are inflected.", "labels": [], "entities": []}, {"text": "The final a of the stem has two possibilities in both results: either it alternates with o or it disappears in past tense.", "labels": [], "entities": []}, {"text": "Thus there are four possible entries behind the analysis.", "labels": [], "entities": []}, {"text": "One of the hidden entries is what we want.", "labels": [], "entities": []}, {"text": "For the purposes of lexicon entry guessing, we need an equally general method which is prepared to accept almost any surface word but would output lexical entries instead of the base forms and morphosyntactic features.", "labels": [], "entities": [{"text": "lexicon entry guessing", "start_pos": 20, "end_pos": 42, "type": "TASK", "confidence": 0.796326736609141}]}, {"text": "A lexical entry consist of a lexical representation and a name of a continuation sub-lexicon.", "labels": [], "entities": []}, {"text": "The lexical representation consist of phonemes and morphophonemes (here we always use braces for morphophonemes, e.g. {aoe}).", "labels": [], "entities": []}, {"text": "The name of a continuation sub-lexicon (e.g. /v) determines the set of possible endins and possible less regular pieces of the stems.", "labels": [], "entities": []}, {"text": "The mapping we are building could map e.g.: The program would then prompt the user for further inflected forms of the same lexeme.", "labels": [], "entities": []}, {"text": "In this way the user can soon narrow down the possibilities to the desired single lexicon entry without any detailed knowledge of the codes or conventions of the lexicon.", "labels": [], "entities": []}, {"text": "The work is done in the finite-state two-level framework in the spirit of the original version and in particular the so called simplified two-level model as presented in.", "labels": [], "entities": []}, {"text": "Helsinki Finite-State Transducer Tools (HFST) were used for the implementations of the finite-state transducers (FST) described in this paper, for more information on HFST see) and various sites in the net, e.g. http://hfst.github.io.", "labels": [], "entities": []}], "datasetContent": [{"text": "The examples presented in the preceding sections were taken from an experiment with Finnish verb morphology.", "labels": [], "entities": [{"text": "Finnish verb morphology", "start_pos": 84, "end_pos": 107, "type": "TASK", "confidence": 0.6198200881481171}]}, {"text": "There was along term interest to deal with older Finnish texts and therefore the Reverse Dictionary of Modern Standard Finnish (RDMSF) which reflects the language in the first half of the 20th century was taken as the basis rather than Kielitoimiston sanakirja (KS) which reflects the present day use.", "labels": [], "entities": [{"text": "Reverse Dictionary of Modern Standard Finnish (RDMSF)", "start_pos": 81, "end_pos": 134, "type": "DATASET", "confidence": 0.745142251253128}]}, {"text": "RDMSF allows more liberal use of ending allomorphs and stem variants than the KS.", "labels": [], "entities": [{"text": "RDMSF", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.8059548139572144}]}, {"text": "The extra forms are readily understood even by present day speakers but seldom used anymore although they are quite commonly found in earlier texts.", "labels": [], "entities": []}, {"text": "The examples in the preceding sections were made using a the RDMSF conjugation tables and example words of the dictionary and two-level rules and a lexicon with verbal ending which had been prepared earlier for other purposes.", "labels": [], "entities": [{"text": "RDMSF", "start_pos": 61, "end_pos": 66, "type": "DATASET", "confidence": 0.7272636890411377}]}, {"text": "A couple days were spent in establishing 78 regular expression patterns for the 45 conjugations used in RDMSF.", "labels": [], "entities": [{"text": "RDMSF", "start_pos": 104, "end_pos": 109, "type": "TASK", "confidence": 0.5298851132392883}]}, {"text": "A Unix makefile was prepared to control the use of a number of small command line and Python scripts.", "labels": [], "entities": []}, {"text": "In this way, it was convenient to rebuild the FSTs for conversion, analysis and guessing.", "labels": [], "entities": [{"text": "FSTs", "start_pos": 46, "end_pos": 50, "type": "DATASET", "confidence": 0.7467311024665833}, {"text": "conversion", "start_pos": 55, "end_pos": 65, "type": "TASK", "confidence": 0.9822227954864502}, {"text": "guessing", "start_pos": 80, "end_pos": 88, "type": "TASK", "confidence": 0.7470863461494446}]}, {"text": "The test set of selected entries was converted using the conversion FST.", "labels": [], "entities": [{"text": "FST", "start_pos": 68, "end_pos": 71, "type": "DATASET", "confidence": 0.764474093914032}]}, {"text": "The resulting entries were then combined with verbal affixes and compose-intersected with the rule FSTs.", "labels": [], "entities": [{"text": "FSTs", "start_pos": 99, "end_pos": 103, "type": "DATASET", "confidence": 0.5978841781616211}]}, {"text": "The string pairs represented by this FST was produced in a human readable form.", "labels": [], "entities": [{"text": "FST", "start_pos": 37, "end_pos": 40, "type": "TASK", "confidence": 0.5926415920257568}]}, {"text": "The list consisted of pairs of base form plus features and and the corresponding surface form: ...", "labels": [], "entities": []}, {"text": "i\u00e4t\u00e4+V+INF1+NOM:i\u00e4t\u00e4 i\u00e4t\u00e4+V+INF2+ACT+INE:i\u00e4tess\u00e4 i\u00e4t\u00e4+V+INF2+ACT+MAN:i\u00e4ten i\u00e4t\u00e4+V+INF2+PSS+INE:i\u00e4tt\u00e4ess\u00e4 i\u00e4t\u00e4+V+PAST+ACT+1PL:ik\u00e4simme i\u00e4t\u00e4+V+PAST+ACT+1SG:ik\u00e4sin i\u00e4t\u00e4+V+PAST+ACT+2PL:ik\u00e4sitte ...", "labels": [], "entities": [{"text": "ACT", "start_pos": 33, "end_pos": 36, "type": "METRIC", "confidence": 0.8820129036903381}, {"text": "INE", "start_pos": 37, "end_pos": 40, "type": "METRIC", "confidence": 0.765100359916687}]}, {"text": "The list was checked manually and some errors were detected in the affix tables and one in the rules.", "labels": [], "entities": []}, {"text": "After modifications, the test data appeared to be clean of errors.", "labels": [], "entities": []}, {"text": "The conversion was tested against the full list of 16,000 verb entries in the dictionary.", "labels": [], "entities": []}, {"text": "The test revealed some points where the patterns had to be made more general in order to accept less typical verb entries in some conjugations.", "labels": [], "entities": []}, {"text": "The analysis was tested superficially by entering word forms randomly picked up from Nykysuomen sanakirja and verifying that the results were correct.", "labels": [], "entities": []}, {"text": "The same kind of testing was done with the guesser.", "labels": [], "entities": []}], "tableCaptions": []}