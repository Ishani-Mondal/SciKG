{"title": [{"text": "An Arabic Morphological Analyzer and Generator with Copious Features", "labels": [], "entities": []}], "abstractContent": [{"text": "We introduce CALIMA Star , a very rich Ara-bic morphological analyzer and generator that provides functional and form-based morphological features as well as built-in tokeniza-tion, phonological representation, lexical ra-tionality and much more.", "labels": [], "entities": []}, {"text": "This tool includes a fast engine that can be easily integrated into other systems, as well as an easy-to-use API and a web interface.", "labels": [], "entities": []}, {"text": "CALIMA Star also supports morphological reinflection.", "labels": [], "entities": [{"text": "CALIMA Star", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.8786396384239197}, {"text": "morphological reinflection", "start_pos": 26, "end_pos": 52, "type": "TASK", "confidence": 0.7770891785621643}]}, {"text": "We evaluate CALIMA Star against four commonly used an-alyzers for Arabic in terms of speed and morphological content.", "labels": [], "entities": [{"text": "CALIMA Star", "start_pos": 12, "end_pos": 23, "type": "DATASET", "confidence": 0.6533235311508179}, {"text": "speed", "start_pos": 85, "end_pos": 90, "type": "METRIC", "confidence": 0.9972286820411682}]}], "introductionContent": [{"text": "Work on Modern Standard Arabic (MSA) morphological modeling has been ongoing for the past thirty years resulting in many resources with high degrees of accuracy for analysis, generation, and tokenization ().", "labels": [], "entities": [{"text": "Modern Standard Arabic (MSA) morphological modeling", "start_pos": 8, "end_pos": 59, "type": "TASK", "confidence": 0.72304567694664}, {"text": "accuracy", "start_pos": 152, "end_pos": 160, "type": "METRIC", "confidence": 0.9967048764228821}, {"text": "tokenization", "start_pos": 191, "end_pos": 203, "type": "TASK", "confidence": 0.9543296098709106}]}, {"text": "These previous efforts addressed many of the important challenges of Arabic morphology such as its high degree of ambiguity resulting from optional diacritization and templatic morphemes.", "labels": [], "entities": []}, {"text": "However, while there are several commonly used systems for Arabic morphology, we observe that there are still some unresolved challenges.", "labels": [], "entities": [{"text": "Arabic morphology", "start_pos": 59, "end_pos": 76, "type": "TASK", "confidence": 0.6492252945899963}]}, {"text": "First, some aspects of Arabic's rich morphology are not fully or consistently modeled.", "labels": [], "entities": []}, {"text": "Examples include the discrepancy between form and function (in gender, number, case and state) as well as the rationality feature.", "labels": [], "entities": []}, {"text": "The commonly used Penn Arabic Treebank (PATB) () and Buckwalter Arabic Morphological Analyzer (BAMA)) do not model nominal functional features or rationality.", "labels": [], "entities": [{"text": "Penn Arabic Treebank (PATB)", "start_pos": 18, "end_pos": 45, "type": "DATASET", "confidence": 0.9643203318119049}, {"text": "Buckwalter Arabic Morphological Analyzer (BAMA))", "start_pos": 53, "end_pos": 101, "type": "DATASET", "confidence": 0.8035023893628802}]}, {"text": "Some previous attempts did not coverall these phenomena or focused on limited data sets.", "labels": [], "entities": []}, {"text": "Second, the different existing tools do not all provide the same kind of information, which often led researchers to improvise extensions to accommodate their downstream task needs.", "labels": [], "entities": []}, {"text": "One example is the phonological representation mappings that devised on top of the MADA disambiguation system ( ) instead of using Elixir-FM, which already included phonology.", "labels": [], "entities": []}, {"text": "This is partially because Elixir-FM was not connected to a disambiguation system.", "labels": [], "entities": [{"text": "Elixir-FM", "start_pos": 26, "end_pos": 35, "type": "DATASET", "confidence": 0.9224562048912048}]}, {"text": "Another example is the work by  to provide generation capability on top of the BAMA) algorithm and databases because BAMA, which was used to annotate the PATB, was analysis focused, unlike the finite-state solutions to Arabic morphology.", "labels": [], "entities": [{"text": "BAMA", "start_pos": 117, "end_pos": 121, "type": "METRIC", "confidence": 0.6165519952774048}]}, {"text": "Third, many of the existing tools have different use requirements (operating system, programming language, etc.), and some have no easy-touse APIs.", "labels": [], "entities": []}, {"text": "In this paper, we introduce CALIMA Star , 1 a very rich Arabic morphological analyzer and generator that includes functional features, builtin tokenization, phonological representation, and numerous other features.", "labels": [], "entities": []}, {"text": "CALIMA Star comes with a fast engine that can be easily integrated into other systems, and an easy-to-use web interface.", "labels": [], "entities": [{"text": "CALIMA Star", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.7562942206859589}]}, {"text": "CALIMA Star also supports morphological reinflection.", "labels": [], "entities": [{"text": "CALIMA Star", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.8786396682262421}, {"text": "morphological reinflection", "start_pos": 26, "end_pos": 52, "type": "TASK", "confidence": 0.7770891785621643}]}, {"text": "While in this paper we focus on MSA only for the database discussion, the engine itself is independent of the variant choice.", "labels": [], "entities": []}, {"text": "CALIMA Star will be made publicly available as part of a large suite of tools to support research on Arabic natural language processing (NLP).", "labels": [], "entities": [{"text": "CALIMA Star", "start_pos": 0, "end_pos": 11, "type": "DATASET", "confidence": 0.7397777438163757}, {"text": "Arabic natural language processing (NLP)", "start_pos": 101, "end_pos": 141, "type": "TASK", "confidence": 0.7521797674042838}]}], "datasetContent": [{"text": "In this section we validate our system and evaluate it against other systems in terms of speed and coverage.", "labels": [], "entities": [{"text": "speed", "start_pos": 89, "end_pos": 94, "type": "METRIC", "confidence": 0.9971362352371216}, {"text": "coverage", "start_pos": 99, "end_pos": 107, "type": "METRIC", "confidence": 0.9891629219055176}]}], "tableCaptions": [{"text": " Table 1: A comparison of the different features in a number of morphological tools. A denotes a feature  that is present in the system, while an denotes a feature that is not. ElixirFM uses different terminology  to denote the analysis, generation, and reinflection functionalities.", "labels": [], "entities": []}, {"text": " Table 2: A comparison of five systems, AraMorph, SAMA, ALMOR, MADAMIRA and CALIMA Star ,  in terms of coverage (OOV and analyses per word) and speed (word, analyses, features per second).", "labels": [], "entities": [{"text": "AraMorph", "start_pos": 40, "end_pos": 48, "type": "DATASET", "confidence": 0.8943799734115601}, {"text": "ALMOR", "start_pos": 56, "end_pos": 61, "type": "METRIC", "confidence": 0.8787083625793457}, {"text": "MADAMIRA", "start_pos": 63, "end_pos": 71, "type": "METRIC", "confidence": 0.8369736671447754}, {"text": "coverage", "start_pos": 103, "end_pos": 111, "type": "METRIC", "confidence": 0.9729115962982178}, {"text": "OOV", "start_pos": 113, "end_pos": 116, "type": "METRIC", "confidence": 0.9439327716827393}, {"text": "speed", "start_pos": 144, "end_pos": 149, "type": "METRIC", "confidence": 0.9956700801849365}]}]}