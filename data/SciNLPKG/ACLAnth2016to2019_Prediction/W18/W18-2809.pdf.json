{"title": [{"text": "A Sound and Complete Left-Corner Parsing for Minimalist Grammars", "labels": [], "entities": [{"text": "Minimalist Grammars", "start_pos": 45, "end_pos": 64, "type": "TASK", "confidence": 0.7144699394702911}]}], "abstractContent": [{"text": "This paper presents a left-corner parser for minimalist grammars.", "labels": [], "entities": []}, {"text": "The relation between the parser and the grammar is transparent in the sense that there is a very simple 1-1 correspondence between derivations and parses.", "labels": [], "entities": []}, {"text": "Like left-corner context-free parsers, left-corner minimalist parsers can be non-terminating when the grammar has empty left corners, so an easily computed left-corner oracle is defined to restrict the search.", "labels": [], "entities": []}], "introductionContent": [{"text": "Minimalist grammars (MGs) were inspired by proposals in Chomskian syntax.", "labels": [], "entities": [{"text": "Minimalist grammars (MGs)", "start_pos": 0, "end_pos": 25, "type": "TASK", "confidence": 0.864119577407837}]}, {"text": "MGs are strictly more expressive than context free grammars (CFGs) and weakly equivalent to multiple context free grammars (MCFGs).", "labels": [], "entities": []}, {"text": "The literature presents bottom-up and topdown parsers for MGs, which differ in the order in which derivations are constructed, and consequently they may differ in their memory demands at each point in the parse.", "labels": [], "entities": []}, {"text": "But partly because of those memory demands, parsers that mix top-down and bottom-up steps are often regarded as psycholinguistically more plausible.", "labels": [], "entities": []}, {"text": "Among mixed strategies, left-corner parsing (LC) is perhaps the best known.", "labels": [], "entities": [{"text": "left-corner parsing (LC)", "start_pos": 24, "end_pos": 48, "type": "TASK", "confidence": 0.8251396536827087}]}, {"text": "A left-corner parser does not begin by guessing what's in the string, as a top-down parser does.", "labels": [], "entities": []}, {"text": "But it also does not just reduce elements of the input, as a bottomup parser does.", "labels": [], "entities": []}, {"text": "A left-corner parser looks first at what is in the string (completing the left-most constituent, bottom-up) and then predicting the sisters of that element (top-down), if any.", "labels": [], "entities": []}, {"text": "The following CFG trees have nodes numbered in the order they would be constructed by bottom-up, left-corner and top-down strategies: LC parsing is bottom-up on the leftmost leaf, but then proposes a completed parent of that node on condition that its predicted sister is found.", "labels": [], "entities": [{"text": "CFG trees", "start_pos": 14, "end_pos": 23, "type": "DATASET", "confidence": 0.8751721680164337}, {"text": "LC parsing", "start_pos": 134, "end_pos": 144, "type": "TASK", "confidence": 0.6507251262664795}]}, {"text": "For CFGs, LC parsing is well understood (.", "labels": [], "entities": [{"text": "LC parsing", "start_pos": 10, "end_pos": 20, "type": "TASK", "confidence": 0.7802740335464478}]}, {"text": "Ina CF rule A \u2192 BC, the left corner is of course always B. generalize from CFGs to unification-based grammars and show how to allow some selected categories to be parsed left-corner while others are parsed top-down.", "labels": [], "entities": []}, {"text": "Extending these ideas to MGs, we must deal with movements, with rules that sometimes have their first daughter on the left and sometimes on the right, and with categories that are sometimes empty and sometimes not.", "labels": [], "entities": []}, {"text": "Left corner parsers were developed for some other discontinuous formalisms with similar properties) but in all cases these parsers fall in the category of the arc-standard left corner parsing.", "labels": [], "entities": [{"text": "Left corner parsers", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.5894525746504465}, {"text": "arc-standard left corner parsing", "start_pos": 159, "end_pos": 191, "type": "TASK", "confidence": 0.645482987165451}]}, {"text": "Here we present a left corner parser that is of arc-eager type which is argued to be more cognitively plausible due to its higher degree of incrementality (.", "labels": [], "entities": []}, {"text": "A first approach to left-corner MG parsing, designed to involve a kind of psycholinguistically motivated search, has been presented, but that proposal does not handle all MGs.", "labels": [], "entities": [{"text": "MG parsing", "start_pos": 32, "end_pos": 42, "type": "TASK", "confidence": 0.9341823160648346}]}, {"text": "In particular, remnant movement presents the main challenge to Hunter's parser.", "labels": [], "entities": []}, {"text": "The parser proposed here handles all MGs, and it is easily shown to be sound and complete via a simple 1-1 correspon-dence between derivations and parses.", "labels": [], "entities": []}, {"text": "(However, as mentioned in the conclusion, the present proposal does not yet address the psycholinguistic issues raised by Hunter.)", "labels": [], "entities": []}, {"text": "Following similar work on CFGs (Pereira and Shieber, 1987, \u00a76.3.1), we show how to compute a left-corner oracle that can improve efficiency.", "labels": [], "entities": []}, {"text": "And probabilities can be used in a LC beam-parser to pursue the most probable parses at each step).", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}