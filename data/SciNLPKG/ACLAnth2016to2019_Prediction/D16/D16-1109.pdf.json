{"title": [{"text": "Joint Transition-based Dependency Parsing and Disfluency Detection for Automatic Speech Recognition Texts", "labels": [], "entities": [{"text": "Joint Transition-based Dependency Parsing and Disfluency Detection", "start_pos": 0, "end_pos": 66, "type": "TASK", "confidence": 0.5856669885771615}, {"text": "Automatic Speech Recognition Texts", "start_pos": 71, "end_pos": 105, "type": "TASK", "confidence": 0.6771073639392853}]}], "abstractContent": [{"text": "Joint dependency parsing with disfluency detection is an important task in speech language processing.", "labels": [], "entities": [{"text": "Joint dependency parsing", "start_pos": 0, "end_pos": 24, "type": "TASK", "confidence": 0.7760905623435974}, {"text": "disfluency detection", "start_pos": 30, "end_pos": 50, "type": "TASK", "confidence": 0.7463210225105286}, {"text": "speech language processing", "start_pos": 75, "end_pos": 101, "type": "TASK", "confidence": 0.6984171867370605}]}, {"text": "Recent methods show high performance for this task, although most authors make the unrealistic assumption that input texts are transcribed by human annota-tors.", "labels": [], "entities": []}, {"text": "In real-world applications, the input text is typically the output of an automatic speech recognition (ASR) system, which implies that the text contains not only disfluency noises but also recognition errors from the ASR system.", "labels": [], "entities": [{"text": "automatic speech recognition (ASR)", "start_pos": 73, "end_pos": 107, "type": "TASK", "confidence": 0.7953643500804901}]}, {"text": "In this work, we propose a parsing method that handles both disfluency and ASR errors using an incremental shift-reduce algorithm with several novel features suited to ASR output texts.", "labels": [], "entities": [{"text": "parsing", "start_pos": 27, "end_pos": 34, "type": "TASK", "confidence": 0.9692784547805786}, {"text": "ASR", "start_pos": 75, "end_pos": 78, "type": "TASK", "confidence": 0.9528698921203613}, {"text": "ASR output texts", "start_pos": 168, "end_pos": 184, "type": "TASK", "confidence": 0.9153860012690226}]}, {"text": "Because the gold dependency information is usually annotated only on transcribed texts, we also introduce an alignment-based method for transferring the gold dependency annotation to the ASR output texts to construct training data for our parser.", "labels": [], "entities": []}, {"text": "We conducted an experiment on the Switchboard corpus and show that our method outperforms conventional methods in terms of dependency parsing and disfluency detection.", "labels": [], "entities": [{"text": "Switchboard corpus", "start_pos": 34, "end_pos": 52, "type": "DATASET", "confidence": 0.8702934086322784}, {"text": "dependency parsing", "start_pos": 123, "end_pos": 141, "type": "TASK", "confidence": 0.7727547585964203}, {"text": "disfluency detection", "start_pos": 146, "end_pos": 166, "type": "TASK", "confidence": 0.6995891183614731}]}], "introductionContent": [{"text": "Spontaneous speech is different from written text in many ways, one of which is that it contains disfluencies, that is, parts of the utterance that are corrected by the speaker during the utterance.", "labels": [], "entities": []}, {"text": "NLP system performance is reported to deteriorate when there are disfluencies, for example, with SMT ().", "labels": [], "entities": [{"text": "SMT", "start_pos": 97, "end_pos": 100, "type": "TASK", "confidence": 0.9584696888923645}]}, {"text": "Therefore, it is desirable to preprocess the speech before passing it to other NLP tasks.", "labels": [], "entities": []}, {"text": "There area number of studies that address the problem of detecting disfluencies.", "labels": [], "entities": [{"text": "detecting disfluencies", "start_pos": 57, "end_pos": 79, "type": "TASK", "confidence": 0.8978527784347534}]}, {"text": "Some of these studies include dependency parsing, whereas others are dedicated systems ().", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 30, "end_pos": 48, "type": "TASK", "confidence": 0.9078293144702911}]}, {"text": "Among these studies, and address this problem by adding anew action to transition-based dependency parsing that removes the disfluent parts of the input sentence from the stack.", "labels": [], "entities": [{"text": "transition-based dependency parsing", "start_pos": 71, "end_pos": 106, "type": "TASK", "confidence": 0.6419134438037872}]}, {"text": "Using this approach, they achieved high performance in terms of both dependency parsing and disfluency detection on the Switchboard corpus.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 69, "end_pos": 87, "type": "TASK", "confidence": 0.7591628134250641}, {"text": "disfluency detection", "start_pos": 92, "end_pos": 112, "type": "TASK", "confidence": 0.6495766639709473}, {"text": "Switchboard corpus", "start_pos": 120, "end_pos": 138, "type": "DATASET", "confidence": 0.8811341524124146}]}, {"text": "However, the authors assume that the input texts to parse are transcribed by human annotators, which, in practice, is unrealistic.", "labels": [], "entities": []}, {"text": "In real-world applications, in addition to disfluencies, the input texts contain ASR errors; these issues might degrade the parsing performance.", "labels": [], "entities": [{"text": "ASR", "start_pos": 81, "end_pos": 84, "type": "TASK", "confidence": 0.8522185683250427}]}, {"text": "For example, proper nouns that are not contained in the ASR system vocabulary may breakup into smaller pieces, yielding a difficult problem for the parsing unit (: REF: what can we get at Litanfeeth HYP: what can we get it leaks on feet In this work, we propose a method for joint dependency parsing and disfluency detection that can robustly parse ASR output texts.", "labels": [], "entities": [{"text": "ASR system vocabulary", "start_pos": 56, "end_pos": 77, "type": "TASK", "confidence": 0.8224896788597107}, {"text": "REF", "start_pos": 164, "end_pos": 167, "type": "METRIC", "confidence": 0.9871910810470581}, {"text": "joint dependency parsing", "start_pos": 275, "end_pos": 299, "type": "TASK", "confidence": 0.6623148918151855}, {"text": "disfluency detection", "start_pos": 304, "end_pos": 324, "type": "TASK", "confidence": 0.7338787764310837}, {"text": "parse ASR output texts", "start_pos": 343, "end_pos": 365, "type": "TASK", "confidence": 0.7690734714269638}]}, {"text": "Our parser handles both disfluencies and ASR errors using an incremental shift-reduce algorithm, with novel features that consider recognition errors of the ASR system.", "labels": [], "entities": [{"text": "ASR", "start_pos": 41, "end_pos": 44, "type": "TASK", "confidence": 0.9297475218772888}, {"text": "ASR", "start_pos": 157, "end_pos": 160, "type": "TASK", "confidence": 0.9675340056419373}]}, {"text": "Furthermore, to evaluate dependency parsing per-they may flip flop when they get to be uh N N older they made slipped flop when they get to be uh old way older: Examples of three problematic cases.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 25, "end_pos": 43, "type": "TASK", "confidence": 0.846650630235672}]}, {"text": "Above shows the gold transcription and its tree, below shows the aligned ASR output and its newly transferred tree, where the dotted edges are ASR error edges.", "labels": [], "entities": [{"text": "ASR", "start_pos": 73, "end_pos": 76, "type": "TASK", "confidence": 0.6928746104240417}]}, {"text": "formance on real human utterances, we create a treeannotated corpus that contains ASR errors.", "labels": [], "entities": [{"text": "ASR", "start_pos": 82, "end_pos": 85, "type": "TASK", "confidence": 0.8773440718650818}]}], "datasetContent": [{"text": "We conducted experiments using both the proposed parsing method and the tree-annotated corpus based on the ASR output texts.", "labels": [], "entities": [{"text": "parsing", "start_pos": 49, "end_pos": 56, "type": "TASK", "confidence": 0.9623116254806519}, {"text": "ASR output texts", "start_pos": 107, "end_pos": 123, "type": "DATASET", "confidence": 0.744395911693573}]}, {"text": "Our experiments were performed using the Switchboard corpus.", "labels": [], "entities": [{"text": "Switchboard corpus", "start_pos": 41, "end_pos": 59, "type": "DATASET", "confidence": 0.9272642731666565}]}, {"text": "This corpus consists of speech data and its transcription texts, and subset of which is annotated with POS tags, syntactic trees and disfluency information (repair, discourse marker and interjection) based on.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Dependency parsing and disfluency detection results", "labels": [], "entities": [{"text": "Dependency parsing", "start_pos": 10, "end_pos": 28, "type": "TASK", "confidence": 0.9010390341281891}, {"text": "disfluency detection", "start_pos": 33, "end_pos": 53, "type": "TASK", "confidence": 0.7995660305023193}]}, {"text": " Table 2: Parsing result on different train-test settings. T rans", "labels": [], "entities": [{"text": "T rans", "start_pos": 59, "end_pos": 65, "type": "METRIC", "confidence": 0.9428679943084717}]}]}