{"title": [{"text": "Flexible Non-Terminals for Dependency Tree-to-Tree Reordering", "labels": [], "entities": [{"text": "Dependency Tree-to-Tree Reordering", "start_pos": 27, "end_pos": 61, "type": "TASK", "confidence": 0.606802354256312}]}], "abstractContent": [{"text": "A major benefit of tree-to-tree over tree-to-string translation is that we can use target-side syntax to improve reordering.", "labels": [], "entities": [{"text": "tree-to-string translation", "start_pos": 37, "end_pos": 63, "type": "TASK", "confidence": 0.7629751265048981}]}, {"text": "While this is relatively simple for binarized constituency parses, the reordering problem is considerably harder for dependency parses, in which words can have arbitrarily many children.", "labels": [], "entities": [{"text": "binarized constituency parses", "start_pos": 36, "end_pos": 65, "type": "TASK", "confidence": 0.5891420741875967}, {"text": "dependency parses", "start_pos": 117, "end_pos": 134, "type": "TASK", "confidence": 0.8369710743427277}]}, {"text": "Previous approaches have tackled this problem by restricting grammar rules, reducing the expressive power of the translation model.", "labels": [], "entities": []}, {"text": "In this paper we propose a general model for dependency tree-to-tree reordering based on flexible non-terminals that can compactly encode multiple insertion positions.", "labels": [], "entities": [{"text": "dependency tree-to-tree reordering", "start_pos": 45, "end_pos": 79, "type": "TASK", "confidence": 0.6755558252334595}]}, {"text": "We explore how insertion positions can be selected even in cases where rules do not entirely cover the children of input sentence words.", "labels": [], "entities": []}, {"text": "The proposed method greatly improves the flexibility of translation rules at the cost of only a 30% increase in decoding time, and we demonstrate a 1.2-1.9 BLEU improvement over a strong tree-to-tree baseline.", "labels": [], "entities": [{"text": "BLEU", "start_pos": 156, "end_pos": 160, "type": "METRIC", "confidence": 0.999190628528595}]}], "introductionContent": [{"text": "Translation is most commonly performed by splitting an input sentence into manageable parts, translating these segments, then arranging them in an appropriate order.", "labels": [], "entities": [{"text": "Translation", "start_pos": 0, "end_pos": 11, "type": "TASK", "confidence": 0.9582393169403076}]}, {"text": "The first two steps have roughly the same difficulty for close and distant language pairs, however the reordering step is considerably more challenging for language pairs with dissimilar syntax.", "labels": [], "entities": []}, {"text": "We need to be able to make linguistic generalizations, such as learning to translate between SVO and SOV clauses and converting post-modifying prepositional and pre-modifying postpositional phrases).", "labels": [], "entities": []}, {"text": "Such generalizations often require syntactically motivated long-distance reordering.", "labels": [], "entities": []}, {"text": "The first approaches to reordering were based on linear distortion (, which models the probability of swapping pairs of phrases over some given distance.", "labels": [], "entities": [{"text": "reordering", "start_pos": 24, "end_pos": 34, "type": "TASK", "confidence": 0.9725146293640137}, {"text": "linear distortion", "start_pos": 49, "end_pos": 66, "type": "METRIC", "confidence": 0.7930981516838074}]}, {"text": "The linear distance is the only parameter, ignoring any contextual information, however this model has been shown to work well for string-to-string translation.", "labels": [], "entities": [{"text": "string-to-string translation", "start_pos": 131, "end_pos": 159, "type": "TASK", "confidence": 0.6877524107694626}]}, {"text": "Linear reordering was improved with lexical distortion, which characterizes reordering in terms of type (monotone, swap, or discontinuous) as opposed to distance.", "labels": [], "entities": []}, {"text": "This approach however is prone to sparsity problems, in particular for distant language pairs.", "labels": [], "entities": []}, {"text": "In order to improve upon linear string-based approaches, syntax-based approaches have also been proposed.", "labels": [], "entities": []}, {"text": "Tree-to-string translation has been the most popular syntax-based paradigm in recent years, which is reflected by a number of reordering approaches considering source-only syntax (.", "labels": [], "entities": [{"text": "Tree-to-string translation", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.6878525167703629}]}, {"text": "One particularly interesting approach is to project source dependency parses to the target side and then learn a probability model for reordering children using features such as source and target head words).", "labels": [], "entities": []}, {"text": "While tree-to-tree translation (Graehl and  ing non-terminal substitution and multiple possible insertion positions fora non-matching input phrase ('\u6628\u65e5'). has been somewhat less popular than treeto-string translation, we believe there are many benefits of considering target-side syntax.", "labels": [], "entities": [{"text": "tree-to-tree translation", "start_pos": 6, "end_pos": 30, "type": "TASK", "confidence": 0.7352519631385803}, {"text": "treeto-string translation", "start_pos": 191, "end_pos": 216, "type": "TASK", "confidence": 0.7393368780612946}]}, {"text": "In particular, reordering can be defined naturally with non-terminals in the target-side grammar.", "labels": [], "entities": []}, {"text": "This is relatively simple when the target structure of rules is restricted to 'well-formed' dependencies, however in this paper we consider more general rules with flexible non-terminal insertion positions.", "labels": [], "entities": []}], "datasetContent": [{"text": "As our baseline ('Baseline'), we used the default tree-to-tree settings and features of KyotoEBMT, allowing only fixed-position nonterminals.", "labels": [], "entities": [{"text": "KyotoEBMT", "start_pos": 88, "end_pos": 97, "type": "DATASET", "confidence": 0.9655530452728271}]}, {"text": "We dealt with floating children not covered by any other rules by adding glue rules similar to those in hierarchical SMT, joining floating children to the rightmost slots in the target-side parent.", "labels": [], "entities": [{"text": "SMT", "start_pos": 117, "end_pos": 120, "type": "TASK", "confidence": 0.85077965259552}]}, {"text": "For reference, we also show results using Moses () with default settings and distortion limit set to 20 ('Moses').", "labels": [], "entities": []}, {"text": "The proposed system ('Flexible') adds flexible non-terminals with multiple insertion positions, however we do not yet add the insertion choice features.", "labels": [], "entities": []}, {"text": "This means that the insertion positions are in practice chosen by the language model.", "labels": [], "entities": []}, {"text": "Note that we do not get a substantial hit in performance by adding the flexible non-terminals because of their compact lattice representation.", "labels": [], "entities": []}, {"text": "The systems '+Pref', '+Pref+Ins' and '+Pref+Ins+Rel' show the results of adding insertion choice position features (left/right preference, insertion position choice, relative position choice).", "labels": [], "entities": [{"text": "Rel", "start_pos": 48, "end_pos": 51, "type": "METRIC", "confidence": 0.8379888534545898}]}, {"text": "We give translation scores measured in BLEU () and RIBES (, which is designed to reflect quality of translation word order more effectively than BLEU.", "labels": [], "entities": [{"text": "BLEU", "start_pos": 39, "end_pos": 43, "type": "METRIC", "confidence": 0.9977756142616272}, {"text": "RIBES", "start_pos": 51, "end_pos": 56, "type": "METRIC", "confidence": 0.9952824711799622}, {"text": "BLEU", "start_pos": 145, "end_pos": 149, "type": "METRIC", "confidence": 0.9733686447143555}]}, {"text": "The translation evaluation is shown in.", "labels": [], "entities": [{"text": "translation", "start_pos": 4, "end_pos": 15, "type": "TASK", "confidence": 0.9748080372810364}]}], "tableCaptions": [{"text": " Table 1: Translation experiment data (number of sen-", "labels": [], "entities": [{"text": "Translation", "start_pos": 10, "end_pos": 21, "type": "TASK", "confidence": 0.9823238849639893}]}, {"text": " Table 2: Automatic evaluation of translation quality (BLEU and RIBES). Results marked with  \u2020 are significantly", "labels": [], "entities": [{"text": "translation", "start_pos": 34, "end_pos": 45, "type": "TASK", "confidence": 0.9410045742988586}, {"text": "BLEU", "start_pos": 55, "end_pos": 59, "type": "METRIC", "confidence": 0.9932764768600464}, {"text": "RIBES", "start_pos": 64, "end_pos": 69, "type": "METRIC", "confidence": 0.9585282802581787}]}]}