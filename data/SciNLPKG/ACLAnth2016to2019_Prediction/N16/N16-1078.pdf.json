{"title": [{"text": "Towards Unsupervised and Language-independent Compound Splitting using Inflectional Morphological Transformations", "labels": [], "entities": [{"text": "Language-independent Compound Splitting", "start_pos": 25, "end_pos": 64, "type": "TASK", "confidence": 0.6204283734162649}]}], "abstractContent": [{"text": "In this paper, we address the task of language-independent, knowledge-lean and unsuper-vised compound splitting, which is an essential component for many natural language processing tasks such as machine translation.", "labels": [], "entities": [{"text": "compound splitting", "start_pos": 93, "end_pos": 111, "type": "TASK", "confidence": 0.7626928091049194}, {"text": "machine translation", "start_pos": 196, "end_pos": 215, "type": "TASK", "confidence": 0.8135904669761658}]}, {"text": "Previous methods on statistical compound splitting either include language-specific knowledge (e.g., linking elements) or rely on parallel data, which results in limited applicability.", "labels": [], "entities": [{"text": "statistical compound splitting", "start_pos": 20, "end_pos": 50, "type": "TASK", "confidence": 0.7038220564524332}]}, {"text": "We aim to overcome these limitations by learning compounding morphology from inflectional information derived from lemmatized mono-lingual corpora.", "labels": [], "entities": []}, {"text": "In experiments for Germanic languages, we show that our approach significantly outperforms language-dependent state-of-the-art methods in finding the correct split point and that word inflection is a good approximation for compounding morphology.", "labels": [], "entities": [{"text": "compounding morphology", "start_pos": 223, "end_pos": 245, "type": "TASK", "confidence": 0.9329315721988678}]}], "introductionContent": [{"text": "Compounding represents one of the most productive word formation types in many languages.", "labels": [], "entities": [{"text": "word formation", "start_pos": 50, "end_pos": 64, "type": "TASK", "confidence": 0.7634560763835907}]}, {"text": "In particular, Germanic languages (e.g., German or Dutch) show high productivity in closed compounding, i.e., in creating one-word compounds such as the German Armutsbek\u00e4mpfungsprogramm 'poverty elimination program'.", "labels": [], "entities": [{"text": "Armutsbek\u00e4mpfungsprogramm 'poverty elimination", "start_pos": 160, "end_pos": 206, "type": "TASK", "confidence": 0.5539660155773163}]}, {"text": "Previous studies on German corpora reveal that almost half of the corpus types are compounds, whereas individual compounds are very infrequent ().", "labels": [], "entities": []}, {"text": "Therefore, an automatic compound analysis is indispensable and represents an essential component in many natural language processing (NLP) tasks such as machine translation (MT) or information retrieval (IR).", "labels": [], "entities": [{"text": "compound analysis", "start_pos": 24, "end_pos": 41, "type": "TASK", "confidence": 0.6946336776018143}, {"text": "machine translation (MT)", "start_pos": 153, "end_pos": 177, "type": "TASK", "confidence": 0.8462103128433227}, {"text": "information retrieval (IR)", "start_pos": 181, "end_pos": 207, "type": "TASK", "confidence": 0.8282096087932587}]}, {"text": "Besides determining the concatenated constituent forms, i.e., the correct split points (e.g., Armuts | bek\u00e4mpfungs | programm), a compound splitter needs to normalize each part (e.g., Armut + Bek\u00e4mpfung + Programm), because down-stream applications such as MT systems expect lemmatized words as input.", "labels": [], "entities": [{"text": "MT", "start_pos": 257, "end_pos": 259, "type": "TASK", "confidence": 0.955410361289978}]}, {"text": "However, normalization of constituent forms is non-trivial and usually requires language-specific knowledge (e.g., linking elements).", "labels": [], "entities": []}, {"text": "State-of-the-art lemmatizers, designed for regular word inflection, would fail, because constituent forms often contain linking elements leading to a non-paradigmatic word form of the corresponding lexeme (e.g., Armuts 'poverty + s' never occurs as an isolated token in German corpora, since the s-suffix, often used for genitive or pluralization, is not used with Armut).", "labels": [], "entities": []}, {"text": "Moreover, morphological operations during compounding vary a lot across languages and lexemes: we find cases that start from the lemma and have additions (e.g., linking elements), truncations (e.g., reductions to a verbal stem), word-internal operations (e.g., Umlautung) and combinations thereof (e.g., the first constituent of the German Weihnachts|baum 'Christmas tree', Weihnachten, undergoes both the en-truncation and the s-suffixation).", "labels": [], "entities": []}, {"text": "In this paper, we present a language-independent, unsupervised compound splitter that normalizes constituent forms by tolerantly retrieving candidate lemmas using an N gram index and weighting string differences with inflectional information derived from lemmatized corpora.", "labels": [], "entities": [{"text": "compound splitter", "start_pos": 63, "end_pos": 80, "type": "TASK", "confidence": 0.7873942255973816}]}, {"text": "Most previous work on compound splitting includes language-specific knowledge such as large lexicons and morphological analyzers or hand-crafted lists of linking elements and rules for modeling morphological transitions (, which makes the approaches language-dependent. were the first to overcome this limitation by learning morphological compounding operations automatically by retrieving compounds and their constituents from parallel corpora including English as support language.", "labels": [], "entities": [{"text": "compound splitting", "start_pos": 22, "end_pos": 40, "type": "TASK", "confidence": 0.8018539547920227}]}, {"text": "We would like to take this one step further by avoiding the usage of parallel data, which are known to be sparse and frequently domain-specific, while showed that compounding morphology varies between different domains.", "labels": [], "entities": []}, {"text": "Instead, we exploit lemmatized corpora and use word inflection as an approximation to compounding morphology.", "labels": [], "entities": []}, {"text": "This way, we are able to process compounds of any type of domain.", "labels": [], "entities": []}, {"text": "Our contributions are as follows.", "labels": [], "entities": []}, {"text": "Firstly, we develop a language-independent and unsupervised compound splitter that does not rely on parallel data.", "labels": [], "entities": [{"text": "compound splitter", "start_pos": 60, "end_pos": 77, "type": "TASK", "confidence": 0.7517033219337463}]}, {"text": "As we will show, our system significantly outperforms language-dependent, knowledge-rich stateof-the-art methods in predicting the best split point.", "labels": [], "entities": []}, {"text": "Secondly, in a controlled experiment, we show that compound splitting based on inflectional morphology performs similarly to splitting based on an extensive hand-crafted set of rules for compounding morphology.", "labels": [], "entities": [{"text": "compound splitting", "start_pos": 51, "end_pos": 69, "type": "TASK", "confidence": 0.811971515417099}]}, {"text": "Thirdly, we perform a comprehensive, intrinsic evaluation of compound splitting, which is often missing in previous work that focuses on taskbased evaluation (e.g., MT), and thus evaluates performance only indirectly.", "labels": [], "entities": [{"text": "compound splitting", "start_pos": 61, "end_pos": 79, "type": "TASK", "confidence": 0.6983379870653152}, {"text": "MT)", "start_pos": 165, "end_pos": 168, "type": "TASK", "confidence": 0.9087302684783936}]}, {"text": "We compare splitting performance for several languages for two disciplines: (1) prediction of the correct split points and (2) normalization of the constituent forms.", "labels": [], "entities": []}, {"text": "To the best of our knowledge, we are the first to evaluate these disciplines separately.", "labels": [], "entities": []}, {"text": "The paper is structured as follows.", "labels": [], "entities": []}, {"text": "Section 2 outlines previous work on compound splitting.", "labels": [], "entities": [{"text": "compound splitting", "start_pos": 36, "end_pos": 54, "type": "TASK", "confidence": 0.7924477159976959}]}, {"text": "Section 3 discusses some theoretical assumptions on which we base our splitting method.", "labels": [], "entities": [{"text": "splitting", "start_pos": 70, "end_pos": 79, "type": "TASK", "confidence": 0.9665214419364929}]}, {"text": "Section 4 shows two efficient and flexible data structures used for our statistical compound splitter, which is described in Section 5.", "labels": [], "entities": [{"text": "statistical compound splitter", "start_pos": 72, "end_pos": 101, "type": "TASK", "confidence": 0.7070121765136719}]}, {"text": "Section 6 presents some splitting experiments performed on German, Dutch and Afrikaans.", "labels": [], "entities": []}, {"text": "Finally, Section 7 concludes and points to future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "In our experiments, we focus on German, Dutch and Afrikaans, but expect to see similar performance for other Germanic languages.", "labels": [], "entities": []}, {"text": "We evaluate the splitting quality with respect to two disciplines: (1) determination of the correct split points and (2) normalization of the resulting modifier constituents . For both disciplines, we use the accuracy measure as described in.", "labels": [], "entities": [{"text": "accuracy measure", "start_pos": 209, "end_pos": 225, "type": "METRIC", "confidence": 0.9796075522899628}]}, {"text": "The split point accuracy (SPAcc) refers to the correctness of the split points (on word level) and the normalization accuracy (NormAcc) measures the amount of both correct split points and modifier lemmas.", "labels": [], "entities": [{"text": "split point accuracy (SPAcc)", "start_pos": 4, "end_pos": 32, "type": "METRIC", "confidence": 0.6925433824459711}, {"text": "normalization accuracy (NormAcc)", "start_pos": 103, "end_pos": 135, "type": "METRIC", "confidence": 0.853713047504425}]}, {"text": "All systems presented in this paper provide a ranked list of splits.", "labels": [], "entities": []}, {"text": "This allows fora more fine-grained ranking evaluation of the binary splitting decisions with respect to the first n positions.", "labels": [], "entities": []}, {"text": "Accuracy@n refers to the amount of correct splits among the top n splits.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 0, "end_pos": 8, "type": "METRIC", "confidence": 0.993158757686615}]}, {"text": "We stop at n = 3, because we do not expect to see a crucial difference in the performance gap for higher values of n.", "labels": [], "entities": []}, {"text": "8 sfs.uni-tuebingen.de/GermaNet We consider hyphenated compounds as trivial cases of splitting that can be disregarded for our purpose.", "labels": [], "entities": [{"text": "GermaNet", "start_pos": 23, "end_pos": 31, "type": "DATASET", "confidence": 0.885578453540802}]}, {"text": "Since for Germanic languages compounding morphology is exclusively found on the modifier, we disregard the head.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: Average constituent length difference in characters", "labels": [], "entities": [{"text": "Average constituent length difference", "start_pos": 10, "end_pos": 47, "type": "METRIC", "confidence": 0.788818933069706}]}, {"text": " Table 5: German results for binary compound splitting, scores \u03b4 \u03a6 outperform the system \u03a6 significantly", "labels": [], "entities": [{"text": "binary compound splitting", "start_pos": 29, "end_pos": 54, "type": "TASK", "confidence": 0.6425615052382151}]}]}