{"title": [{"text": "Toward an NLG System for Bantu languages: first steps with Runyankore (demo)", "labels": [], "entities": [{"text": "Runyankore", "start_pos": 59, "end_pos": 69, "type": "DATASET", "confidence": 0.964028000831604}]}], "abstractContent": [{"text": "There are many domain-specific and language-specific NLG systems, which are possibly adaptable across related domains and languages.", "labels": [], "entities": []}, {"text": "The languages in the Bantu language family have their own set of features distinct from other major groups, which therefore severely limits the options to bootstrap an NLG system from existing ones.", "labels": [], "entities": []}, {"text": "We present here our first proof-of-concept application for knowledge-to-text NLG as a plugin to the Prot\u00e9g\u00e9 5.x ontology development system, tailored to Runyankore, a Bantu language indigenous to Uganda.", "labels": [], "entities": []}, {"text": "It comprises a basic annotation model for linguistic information such as noun class, an implementation of existing verbalisation rules and a CFG for verbs, and a basic interface for data entry.", "labels": [], "entities": []}], "introductionContent": [{"text": "Natural Language Generation systems require content planning and format for the selected subject domain as input and specifics about the natural language in order to generate text, of which the latter tend to be bootstrappable for related languages).", "labels": [], "entities": [{"text": "Natural Language Generation", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6644630829493204}]}, {"text": "Our NLG system uses ontologies to represent domain knowledge.", "labels": [], "entities": []}, {"text": "As for language, we are interested in Runyankore, a Bantu language indigenous to southwestern Uganda.", "labels": [], "entities": []}, {"text": "The highly agglutinative structure and complex verbal morphology of Runyankore make existing NLG systems based on templates inapplicable (.", "labels": [], "entities": [{"text": "Runyankore", "start_pos": 68, "end_pos": 78, "type": "DATASET", "confidence": 0.9618317484855652}]}, {"text": "There have been efforts undertaken to apply the grammar engine technique instead (), which resulted in theoretical advances in verbalization rules for ontologies, pluralization of nouns, and verb conjugation that address the text generation needs for Runyankore.", "labels": [], "entities": [{"text": "text generation", "start_pos": 225, "end_pos": 240, "type": "TASK", "confidence": 0.7359710335731506}, {"text": "Runyankore", "start_pos": 251, "end_pos": 261, "type": "DATASET", "confidence": 0.9591139554977417}]}, {"text": "We present our implementation of these algorithms and required linguistic annotations as a Prot\u00e9g\u00e9 5.x plugin.", "labels": [], "entities": []}, {"text": "also ensures no typographical errors are made in the XML file.", "labels": [], "entities": []}, {"text": "These annotation fields are mandatory, and we allowed for the use of 0 as the NC for the POS which is not a noun.", "labels": [], "entities": []}, {"text": "These restrictions to input were achieved using document filters.", "labels": [], "entities": []}, {"text": "The XML file is queried during the verbalization process so as to obtain the required annotations that are needed for the algorithms.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}