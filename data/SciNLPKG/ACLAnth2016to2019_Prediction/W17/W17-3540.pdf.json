{"title": [{"text": "Referential Success of Set Referring Expressions with Fuzzy Properties", "labels": [], "entities": []}], "abstractContent": [{"text": "We introduce the properties to be satisfied by measures of referential success of set referring expressions with fuzzy properties.", "labels": [], "entities": []}, {"text": "We define families of measures on the basis of k-specificity measures and we illustrate some of them with a toy example.", "labels": [], "entities": []}], "introductionContent": [{"text": "The classical referring expression generation (REG) problem intends to determine a noun phrase which univocally identify an object in a collection.", "labels": [], "entities": [{"text": "referring expression generation (REG)", "start_pos": 14, "end_pos": 51, "type": "TASK", "confidence": 0.7889927377303442}]}, {"text": "From a knowledge representation perspective, the problem is to determine (if possible) a collection of object properties that can be employed in the noun phrase for the abovementioned purpose.", "labels": [], "entities": []}, {"text": "The most usual version of the REG problem can be formalized as follows: given a context formed by a collection of objects O and a set of properties P of objects in O, determine a subset re \u2286 P such that where is the set of objects that satisfy pi . This formalization assumes that properties in re are combined conjunctively; other logical combinations are possible.", "labels": [], "entities": [{"text": "REG problem", "start_pos": 30, "end_pos": 41, "type": "TASK", "confidence": 0.9298985004425049}]}, {"text": "There are many different extensions of the classical REG problem.", "labels": [], "entities": [{"text": "REG problem", "start_pos": 53, "end_pos": 64, "type": "TASK", "confidence": 0.9365537166595459}]}, {"text": "One such extension is that of referring to sets, where the objective is to generate a referring expression able to identify an distinguish a subset of objects O i \u2282 O, that is, to determine a subset re \u2286 P such that Note that the classical problem is a particular case of set referring where O i is a singleton.", "labels": [], "entities": []}, {"text": "Another extension considers that properties in P maybe vague or uncertain in several respects.", "labels": [], "entities": []}, {"text": "When the fulfilment of properties in P is gradual in nature, they maybe modelled by means of fuzzy sets (.", "labels": [], "entities": []}, {"text": "Fuzzy properties are modelled by means of fuzzy sets, corresponding to membership functions of the form pi : O \u2192 [0, 1] \u2200p i \u2208 P, where 0 means \"no fulfilment\" and 1 means \"total fulfilment\", allowing intermediate degrees.", "labels": [], "entities": []}, {"text": "Note that classical crisp properties are particular cases of fuzzy ones in which no intermediate degrees are allowed, and hence the classical REG problem is again a particular case of the REG problem with fuzzy properties.", "labels": [], "entities": []}, {"text": "In the aforementioned crisp versions of the problem, when Eq.", "labels": [], "entities": []}, {"text": "(1) (resp. Eq.) holds, it is said that re has referential success for o (resp. O i ).", "labels": [], "entities": []}, {"text": "One problem that arises in REG with fuzzy properties is that, as the fulfilment of properties by objects is a matter of degree, so it is the referential success.", "labels": [], "entities": [{"text": "REG", "start_pos": 27, "end_pos": 30, "type": "TASK", "confidence": 0.9533613324165344}]}, {"text": "Several proposals for determining the degree of referential success have been provided in the literature (), some of them based on the notion of specificity introduced by R. Yager).", "labels": [], "entities": []}, {"text": "In this paper we show a preliminary proposal for extending referential success measures to the case of set referring expressions with fuzzy properties.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Membership degrees of properties by objects in", "labels": [], "entities": []}]}