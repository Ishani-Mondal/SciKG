{"title": [{"text": "Template-Free Construction of Poems with Thematic Cohesion and Enjambment", "labels": [], "entities": [{"text": "Template-Free Construction of Poems", "start_pos": 0, "end_pos": 35, "type": "TASK", "confidence": 0.8508630692958832}]}], "abstractContent": [{"text": "Existing poetry generation systems usually focus on particular features of poetry (such as rhythm, rhyme, metaphor) and specific techniques to achieve them.", "labels": [], "entities": []}, {"text": "They often resort to template-base solutions, in which it is not always clear how many of the alleged features of the outputs were already present in the template employed.", "labels": [], "entities": []}, {"text": "The present paper considers two specific features-thematic consistency, and enjambment-and presents an ngram based construction method that achieves these features without the use of templates.", "labels": [], "entities": []}, {"text": "The construction procedure is not intended to produce poetry of high quality, only to achieve the features considered specifically in its design.", "labels": [], "entities": []}, {"text": "A set of metrics is defined to capture these features in quantitative terms, and the metrics are applied to system outputs and to samples of both human and computer generated poetry.", "labels": [], "entities": []}, {"text": "The results of these tests are discussed in terms of the danger of to ignoring certain features when designing construction procedures but valuing them during evaluation even if they arise from hard-wiring in the resources or serendipitous emergence, and the fundamental need for poets to develop a personal voice-fundamental for human poets and inconsistent with the application of Tur-ing tests.", "labels": [], "entities": []}], "introductionContent": [{"text": "Computer poetry generation has existed for some years now.", "labels": [], "entities": [{"text": "Computer poetry generation", "start_pos": 0, "end_pos": 26, "type": "TASK", "confidence": 0.7786900301774343}]}, {"text": "Yet existing work in this field has very rarely applied existing techniques from natural language generation such as content planning, referring expression generation, lexical choice or surface realization.", "labels": [], "entities": [{"text": "content planning", "start_pos": 117, "end_pos": 133, "type": "TASK", "confidence": 0.7132357656955719}, {"text": "referring expression generation", "start_pos": 135, "end_pos": 166, "type": "TASK", "confidence": 0.7231262723604838}, {"text": "surface realization", "start_pos": 186, "end_pos": 205, "type": "TASK", "confidence": 0.7755797505378723}]}, {"text": "With the sole exception of Manurung's pioneering work, attempts at computational poetry generation in the past have resorted to more generic artificial intelligence techniques, such as case-based reasoning, evolutionary programming or statistical language modelling rather than traditional natural language generation methods.", "labels": [], "entities": [{"text": "computational poetry generation", "start_pos": 67, "end_pos": 98, "type": "TASK", "confidence": 0.6811760067939758}, {"text": "statistical language modelling", "start_pos": 235, "end_pos": 265, "type": "TASK", "confidence": 0.692607561747233}]}, {"text": "At a lower level of granularity, these attempts operate more in terms of string manipulation than linguistic representation, and most of the solutions can be seen as template based generation.", "labels": [], "entities": []}, {"text": "This is partly due to the properties of poetry, which, in contrast with prose, allows for evocative use of language that need not build complete sentences, but rather can getaway with simple phrases concatenated into verse.", "labels": [], "entities": []}, {"text": "Whereas this sort of tolerance is acceptable in the early stages of exploration of the field -when a poetry generator that could string simple phrases into verse was better than nothing -, at some point researchers interested in computer poetry generation need to consider the possibility of advancing beyond this.", "labels": [], "entities": [{"text": "computer poetry generation", "start_pos": 229, "end_pos": 255, "type": "TASK", "confidence": 0.7264995376269022}]}, {"text": "The present paper considers a subset of the desired features of poetry as a text -thematic consistency, and enjambment -that area (maybe optional) characteristic of human generated poetry but are often overlooked by computer generated poetry.", "labels": [], "entities": []}, {"text": "A set of metrics is defined to capture these features in quantitative terms, and these metrics are tested on samples of both human and computer generated poetry.", "labels": [], "entities": []}, {"text": "The results of these tests are discussed in terms of whether the features are indeed optional or whether they can help to distinguish instances of simpler poetry from more elaborate examples.", "labels": [], "entities": []}, {"text": "A new poetry generation system is proposed that specifically addresses some of the new proposed features and produces poems that score reasonably well on the proposed metrics.", "labels": [], "entities": [{"text": "poetry generation", "start_pos": 6, "end_pos": 23, "type": "TASK", "confidence": 0.7520931959152222}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Results for samples of human (16C and 20C) and com-", "labels": [], "entities": []}]}