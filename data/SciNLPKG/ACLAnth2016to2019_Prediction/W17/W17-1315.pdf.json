{"title": [{"text": "Robust Dictionary Lookup in Multiple Noisy Orthographies", "labels": [], "entities": [{"text": "Robust Dictionary Lookup", "start_pos": 0, "end_pos": 24, "type": "DATASET", "confidence": 0.7868191599845886}]}], "abstractContent": [{"text": "We present the MultiScript Phonetic Search algorithm to address the problem of language learners looking up unfamiliar words that they heard.", "labels": [], "entities": [{"text": "MultiScript Phonetic Search", "start_pos": 15, "end_pos": 42, "type": "TASK", "confidence": 0.7519453962643942}]}, {"text": "We apply it to Arabic dictionary lookup with noisy queries done using both the Arabic and Roman scripts.", "labels": [], "entities": []}, {"text": "Our algorithm is based on a computational phonetic distance metric that can be optionally machine learned.", "labels": [], "entities": []}, {"text": "To benchmark our performance, we created the ArabScribe dataset, containing 10,000 noisy transcriptions of random Arabic dictionary words.", "labels": [], "entities": [{"text": "ArabScribe dataset", "start_pos": 45, "end_pos": 63, "type": "DATASET", "confidence": 0.9791772067546844}]}, {"text": "Our algorithm outperforms Google Translate's \"did you mean\" feature , as well as the Yamli smart Arabic keyboard.", "labels": [], "entities": []}], "introductionContent": [{"text": "The research effort reported here was motivated by the experience of second-language learners of Arabic who, upon hearing an unfamiliar word, would repeatedly guess different spelling variations until they either give up or find a word that made sense in the context.", "labels": [], "entities": []}, {"text": "In the data we collected, subjects were only able to spell an Arabic word correctly 35% of the time.", "labels": [], "entities": []}, {"text": "This difficulty arises because many Arabic phones are distinguished from each other only by phonetic features that often do not exist in the learner's native language, such as pharyngealization.", "labels": [], "entities": []}, {"text": "Furthermore, fora variety of reasons, both learners and native speakers often write Arabic words imprecisely using a variety of Roman-script conventions, such as Arabizi, and this presents a difficult problem for disambiguating the intended word.", "labels": [], "entities": []}, {"text": "We address this problem with a novel algorithm MultiScript Search for phonetic searching across Target word: (tDxym) (Tbxyn) (TbHym) (tbxym) (tbxyn) thabheem Tat7iim tohpriim tawbheem ta'95eem topk'chim takreem tabheem: Example of the Arabic dictionary lookup task for both Arabic and Roman script.", "labels": [], "entities": []}, {"text": "multiple orthographies, and apply it to performing dictionary lookup of Arabic words from noisy user inputs in both the Arabic and Roman scripts.", "labels": [], "entities": []}, {"text": "The task of dictionary lookup here is defined as a user hearing a single word and typing their best guess of how it sounds in a system that will look the word up in a dictionary.", "labels": [], "entities": []}, {"text": "An example of how users searched for the word (tDxym) 1 'magnification' is given in.", "labels": [], "entities": []}, {"text": "Our phonetic search algorithm can be generally applied to any language-script pair and does not require training data.", "labels": [], "entities": []}, {"text": "But, we also present a machine learning method to boost the performance of our algorithm if training data is available.", "labels": [], "entities": []}, {"text": "The algorithm first performs mapping from user input to phones, and then it searches in the dictionary for words that have a low phonetic distance from the query.", "labels": [], "entities": []}, {"text": "We investigate a number of algorithms for both the grapheme-to-phoneme mapping, and also for calculating phonetic distance.", "labels": [], "entities": [{"text": "calculating phonetic distance", "start_pos": 93, "end_pos": 122, "type": "TASK", "confidence": 0.6710016926129659}]}, {"text": "To benchmark our lookup accuracy, we created the ArabScribe dataset, which is comprised of almost 10,000 transcriptions from 103 participants with different degrees of knowledge of Arabic.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 24, "end_pos": 32, "type": "METRIC", "confidence": 0.9841163754463196}, {"text": "ArabScribe dataset", "start_pos": 49, "end_pos": 67, "type": "DATASET", "confidence": 0.987162172794342}]}, {"text": "The participants heard random Arabic dictionary words and transcribed them using either the English or Arabic keyboards (i.e., in Roman script or in Arabic script).", "labels": [], "entities": []}, {"text": "We benchmarked our system against two widely used tools to lookup unfamiliar Arabic words, Google Translate and the Yamli Smart Arabic Keyboard.", "labels": [], "entities": []}, {"text": "We show that we exceed the performance of both tools.", "labels": [], "entities": []}, {"text": "The paper will proceed as follows.", "labels": [], "entities": []}, {"text": "In Section 2 we discuss the related literature in transliteration, spell correction and phonetic distance mapping.", "labels": [], "entities": [{"text": "spell correction", "start_pos": 67, "end_pos": 83, "type": "TASK", "confidence": 0.8618552386760712}, {"text": "phonetic distance mapping", "start_pos": 88, "end_pos": 113, "type": "TASK", "confidence": 0.7355190813541412}]}, {"text": "In Section 3 we describe our high level algorithm and the variations we tested.", "labels": [], "entities": []}, {"text": "In Section 4 we describe the ArabScribe dataset.", "labels": [], "entities": [{"text": "ArabScribe dataset", "start_pos": 29, "end_pos": 47, "type": "DATASET", "confidence": 0.9859901070594788}]}, {"text": "Section 5 presents our search recall results and our benchmark against the Google and Yamli systems.", "labels": [], "entities": [{"text": "recall", "start_pos": 30, "end_pos": 36, "type": "METRIC", "confidence": 0.9767333269119263}]}, {"text": "In Section 6, we summarize our findings and present a discussion on potential future work.", "labels": [], "entities": []}], "datasetContent": [{"text": "In order to benchmark the performance of our algorithms, and to provide training data for the bidirectional LSTM and trained weight vectors, we created the ArabScribe dataset of Arabic transcriptions.", "labels": [], "entities": [{"text": "ArabScribe dataset of Arabic transcriptions", "start_pos": 156, "end_pos": 199, "type": "DATASET", "confidence": 0.9250678539276123}]}, {"text": "This dataset is freely available for research purposes.", "labels": [], "entities": []}, {"text": "We randomly selected 500 MSA lemmas (the words) from the list of lemmas in our dictionary, the Buckwalter Arabic Morphological Analyzer (BAMA): ArabScribe transcription types participant was assigned either the \"English keyboard\" (with digits and common punctuation) or sometimes the \"Arabic keyboard\" (without diacritics) if they reported that they could type Arabic.", "labels": [], "entities": [{"text": "Buckwalter Arabic Morphological Analyzer (BAMA)", "start_pos": 95, "end_pos": 142, "type": "DATASET", "confidence": 0.871259731905801}]}, {"text": "They were required to transcribe each word they heard in away that was most natural to them.", "labels": [], "entities": []}, {"text": "We collected 3,234 transcriptions with the Arabic keyboard (Arabic script) and 6,699 transcriptions with the English keyboard (Roman Script).", "labels": [], "entities": []}, {"text": "We collected native language and Arabic skill level of each participant were also collected.", "labels": [], "entities": []}, {"text": "The skill levels are: We tried to balance the dataset for having all words transcribed by an equal number of participants at all skill levels with both the Arabic and English keyboards.", "labels": [], "entities": []}, {"text": "The transcriptions were also divided into a 20% testing set comprised of 100 words, and a 80% training set comprised of the other 400 words.", "labels": [], "entities": []}, {"text": "gives the the breakdown of the range of Arabic skill levels of the participants in our experiment; and  To benchmark our phonetic search algorithm, we search against each transcription from our test set against the Arabic dictionary of all terms from BAMA.", "labels": [], "entities": [{"text": "BAMA", "start_pos": 251, "end_pos": 255, "type": "DATASET", "confidence": 0.923912763595581}]}, {"text": "We then look for the correct word in the top 1 and top 10 results returned.", "labels": [], "entities": []}, {"text": "We varied the grapheme-to-phone technique and distance metric, and performed the test on both the Roman and Arabic script data.", "labels": [], "entities": []}, {"text": "For grapheme-to-phone techniques, we used the finite state transducers (FST) for Arabic and Roman scripts.", "labels": [], "entities": []}, {"text": "We also trained a BiLSTM for Roman script only on either the English dictionary (EngLSTM) or a mix of the English dictionary and the ArabScribe training set (HybridLSTM).", "labels": [], "entities": [{"text": "English dictionary (EngLSTM)", "start_pos": 61, "end_pos": 89, "type": "DATASET", "confidence": 0.8636404871940613}, {"text": "English dictionary", "start_pos": 106, "end_pos": 124, "type": "DATASET", "confidence": 0.8465432226657867}, {"text": "ArabScribe training set (HybridLSTM)", "start_pos": 133, "end_pos": 169, "type": "DATASET", "confidence": 0.9173254470030466}]}, {"text": "For the distance metrics, we used the Levenshtein distance metric, and the untrained and trained varieties of the MultiScript algorithm.", "labels": [], "entities": []}, {"text": "The full results are listed in.", "labels": [], "entities": []}, {"text": "Our Baseline techniques are exact matching for Arabic Script and searching using the FST with a Levenshtein edit distance for Roman Script.", "labels": [], "entities": [{"text": "FST", "start_pos": 85, "end_pos": 88, "type": "DATASET", "confidence": 0.8805248737335205}]}, {"text": "In general the LSTM based techniques performed poorly compared to the FST techniques.", "labels": [], "entities": []}, {"text": "MultiScript without training was similar in performance to the Levenshtein distance metric.", "labels": [], "entities": [{"text": "Levenshtein distance metric", "start_pos": 63, "end_pos": 90, "type": "DATASET", "confidence": 0.8167285124460856}]}, {"text": "However, using a FST with trained MultiScript Search was the best performer for both Roman and Arabic Script.", "labels": [], "entities": [{"text": "FST", "start_pos": 17, "end_pos": 20, "type": "DATASET", "confidence": 0.7189093828201294}]}, {"text": "The top performing algorithms identified the target word within the top 10 results for 69.0% of cases with Arabic script, and 60.7% of cases with Roman script.", "labels": [], "entities": []}, {"text": "FSTs likely outperformed BiLSTMs because the English LSTM is not capable of producing any phones in the Arabic phone set, and it also cannot recognize Arabizi special symbols such as punctuation and digits.", "labels": [], "entities": []}, {"text": "Training with some samples from ArabScribe slightly boosted the LSTM performance, but we hypothesize that the very small size of this training set made it ineffective.", "labels": [], "entities": [{"text": "ArabScribe", "start_pos": 32, "end_pos": 42, "type": "DATASET", "confidence": 0.9755575656890869}, {"text": "LSTM", "start_pos": 64, "end_pos": 68, "type": "TASK", "confidence": 0.8826413750648499}]}, {"text": "However, a disadvantage of the FST approach, is that it was tailored for the English-Arabic mapping, and would not generalize well to searching against other language pairs.", "labels": [], "entities": [{"text": "FST", "start_pos": 31, "end_pos": 34, "type": "TASK", "confidence": 0.8655308485031128}]}, {"text": "We found that for both Arabic and Roman script inputs, the accuracy of the algorithm is much higher for participants with more experience.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 59, "end_pos": 67, "type": "METRIC", "confidence": 0.9996803998947144}]}, {"text": "This is likely because they can hear the sounds more accurately and also because they recognize more of the words in the test set.", "labels": [], "entities": []}, {"text": "Our recall rate for advanced learners (2+ years of Arabic education) was 87% for Arabic script input and 78.5% for Roman script input.", "labels": [], "entities": [{"text": "recall rate", "start_pos": 4, "end_pos": 15, "type": "METRIC", "confidence": 0.983947366476059}]}, {"text": "This search accuracy is in fact slightly higher than what native speakers scored which was 85.4% and 77.8% for Arabic and Roman script, respectively.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 12, "end_pos": 20, "type": "METRIC", "confidence": 0.991479218006134}]}, {"text": "Users with Arabic experience found their desired word in the top 10 significantly more often than beginner learners (0-1 years experience), whose recall rates were only 56.1% for Arabic script and 55.7% for Roman script.", "labels": [], "entities": [{"text": "recall", "start_pos": 146, "end_pos": 152, "type": "METRIC", "confidence": 0.9986729621887207}]}, {"text": "The full recall rates of FST+MultiScript search can be found in.", "labels": [], "entities": [{"text": "recall", "start_pos": 9, "end_pos": 15, "type": "METRIC", "confidence": 0.9990554451942444}, {"text": "FST+MultiScript search", "start_pos": 25, "end_pos": 47, "type": "TASK", "confidence": 0.6270238161087036}]}, {"text": "The instances in which MultiScript failed to match were often because the user thoroughly misheard the sound, or that there were too many real Arabic words similar to the target word which all were matched with low phonetic distance scores.", "labels": [], "entities": []}, {"text": "Some errors also arose due to our FST not being complex enough to account for all the different ways people write the sounds they hear.", "labels": [], "entities": [{"text": "FST", "start_pos": 34, "end_pos": 37, "type": "DATASET", "confidence": 0.5129981637001038}]}], "tableCaptions": [{"text": " Table 2: ArabScribe participant skill levels", "labels": [], "entities": [{"text": "ArabScribe", "start_pos": 10, "end_pos": 20, "type": "DATASET", "confidence": 0.9186132550239563}]}, {"text": " Table 3: ArabScribe transcription types", "labels": [], "entities": [{"text": "ArabScribe transcription", "start_pos": 10, "end_pos": 34, "type": "DATASET", "confidence": 0.912933737039566}]}, {"text": " Table 4: Recall rates for different methods in TopN dictionary lookup", "labels": [], "entities": [{"text": "Recall", "start_pos": 10, "end_pos": 16, "type": "METRIC", "confidence": 0.8264482617378235}]}, {"text": " Table 5: Top 10 recall rates at different skill levels  for FST + MultiScript trained search.", "labels": [], "entities": [{"text": "recall", "start_pos": 17, "end_pos": 23, "type": "METRIC", "confidence": 0.9988951086997986}, {"text": "FST + MultiScript trained search", "start_pos": 61, "end_pos": 93, "type": "TASK", "confidence": 0.7703135490417481}]}, {"text": " Table 6: Benchmarking against Google Translate  and Yamli on non-exact dictionary matches.", "labels": [], "entities": []}]}