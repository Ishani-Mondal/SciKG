{"title": [{"text": "Bounded-Depth High-Coverage Search Space for Noncrossing Parses", "labels": [], "entities": [{"text": "Parses", "start_pos": 57, "end_pos": 63, "type": "TASK", "confidence": 0.38932910561561584}]}], "abstractContent": [{"text": "A recently proposed encoding for non-crossing digraphs can be used to implement generic inference over families of these digraphs and to carryout first-order factored dependency parsing.", "labels": [], "entities": [{"text": "dependency parsing", "start_pos": 167, "end_pos": 185, "type": "TASK", "confidence": 0.6669343113899231}]}, {"text": "It is now shown that the recent proposal can be substantially streamlined without information loss.", "labels": [], "entities": []}, {"text": "The improved encoding is less dependent on hierarchical processing and it gives rise to a high-coverage bounded-depth approximation of the space of non-crossing digraphs.", "labels": [], "entities": []}, {"text": "This subset is presented elegantly by a finite-state machine that recognizes an infinite set of encoded graphs.", "labels": [], "entities": []}, {"text": "The set includes more than 99.99% of the 0.6 million noncrossing graphs obtained from the UDv2 treebanks through planari-sation.", "labels": [], "entities": [{"text": "UDv2 treebanks", "start_pos": 90, "end_pos": 104, "type": "DATASET", "confidence": 0.9553483426570892}]}, {"text": "Rather than taking the low probability of the residual as a flat rate, it can be modelled with a joint probability distribution that is factorised into two underlying stochastic processes-the sentence length distribution and the related conditional distribution for deep nesting.", "labels": [], "entities": [{"text": "deep nesting", "start_pos": 266, "end_pos": 278, "type": "TASK", "confidence": 0.7052086740732193}]}, {"text": "This model points out that deep nesting in the streamlined code requires extreme sentence lengths.", "labels": [], "entities": []}, {"text": "High depth is categorically out in common sentence lengths but emerges slowly at infrequent lengths that prompt further inquiry.", "labels": [], "entities": []}, {"text": "Syntactic and semantic dependency structures-rooted trees and more general digraphs-have tremendous importance in multilingual language analysis as demonstrated by the Universal Dependencies (UD) initiative 1 and many applications of dependency annotations.", "labels": [], "entities": [{"text": "multilingual language analysis", "start_pos": 114, "end_pos": 144, "type": "TASK", "confidence": 0.6826419432957967}]}, {"text": "The main approaches 1 http://universaldependencies.org/ to produce dependency structures include graph-based parsers (Eisner and Satta, 1999; McDonald et al., 2005) that build the structures in the bottom up fashion and transition-based parsers that produce structures while reading the input buffer (Nivre, 2008; Bohnet et al., 2016).", "labels": [], "entities": []}, {"text": "Recently, Yli-Jyr\u00e4 and G\u00f3mez-Rodr\u00edguez (2017) have explored a perspective that combines graph-based parsing with coding theory: instead of rewriting digraphs directly, they propose a linear encoding for noncrossing digraphs and then manipulate the code strings using string automata.", "labels": [], "entities": []}, {"text": "This method brings the two parsing approaches closer to each other as the graphical parsing reduces to a combination of state-driven processing of the underlying regular component and graphical processing of context-free component of the encoding.", "labels": [], "entities": []}, {"text": "Their main result is that some 50 natural families of dependency structures reduce to unambiguous context-free languages.", "labels": [], "entities": []}, {"text": "Generic parsing to noncrossing digraphs can thus be viewed as weighted context-free parsing.", "labels": [], "entities": [{"text": "Generic parsing", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.571421355009079}]}, {"text": "The parsing objective in the framework of Yli-Jyr\u00e4 and G\u00f3mez-Rodr\u00edguez (2017) is to maximize the total arc weight of the parse using an exact cubic-time inference procedure over the language associated with the input sentence.", "labels": [], "entities": [{"text": "parsing", "start_pos": 4, "end_pos": 11, "type": "TASK", "confidence": 0.9679008722305298}]}, {"text": "Polynomial time is often too expensive as such alternative methods as transition-based parsing with beam search may produce similar accuracy in linear time.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 132, "end_pos": 140, "type": "METRIC", "confidence": 0.9973058700561523}]}, {"text": "Since higher efficiency is welcome in many real-time data applications, one may ask whether the encoded search space could be optimized to allow efficient, linear-time inference over the most plausible candidate graphs.", "labels": [], "entities": []}, {"text": "In this paper, we present an improved representation for the search space.", "labels": [], "entities": []}, {"text": "First, the linear encoding of noncrossing graphs is streamlined by a technique called weak edge bracketing.", "labels": [], "entities": [{"text": "weak edge bracketing", "start_pos": 86, "end_pos": 106, "type": "TASK", "confidence": 0.744072953859965}]}, {"text": "Second, the context-free language of the streamlined en-30", "labels": [], "entities": [{"text": "en-30", "start_pos": 53, "end_pos": 58, "type": "DATASET", "confidence": 0.7893685698509216}]}], "introductionContent": [], "datasetContent": [], "tableCaptions": [{"text": " Table 1: The coverage of UD v.2 data with depth bounded weak edge bracketing", "labels": [], "entities": [{"text": "UD v.2 data", "start_pos": 26, "end_pos": 37, "type": "DATASET", "confidence": 0.7080383698145548}]}]}