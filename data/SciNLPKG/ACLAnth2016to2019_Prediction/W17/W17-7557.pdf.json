{"title": [{"text": "Open Set Text Classification using Convolutional Neural Networks", "labels": [], "entities": [{"text": "Open Set Text Classification", "start_pos": 0, "end_pos": 28, "type": "TASK", "confidence": 0.6097466871142387}]}], "abstractContent": [{"text": "Ina closed world setting, classifiers are trained on examples from a number of classes and tested with unseen examples belonging to the same set of classes.", "labels": [], "entities": []}, {"text": "However, inmost real-world scenarios, a trained classifier is likely to come across novel examples that do not belong to any of the known classes.", "labels": [], "entities": []}, {"text": "Such examples should ideally be categorized as belonging to an unknown class.", "labels": [], "entities": []}, {"text": "The goal of an open set classifier is to anticipate and be ready to handle test examples of classes unseen during training.", "labels": [], "entities": []}, {"text": "The classifier should be able to declare that a test example belongs to a class it does not know, and possibly , incorporate it into its knowledge as an example of anew class it has encountered.", "labels": [], "entities": []}, {"text": "There is some published research in open world image classification, but open set text classification remains mostly un-explored.", "labels": [], "entities": [{"text": "open world image classification", "start_pos": 36, "end_pos": 67, "type": "TASK", "confidence": 0.6811712235212326}, {"text": "open set text classification", "start_pos": 73, "end_pos": 101, "type": "TASK", "confidence": 0.5976358354091644}]}, {"text": "In this paper, we investigate the suitability of Convolutional Neural Networks (CNNs) for open set text classification.", "labels": [], "entities": [{"text": "open set text classification", "start_pos": 90, "end_pos": 118, "type": "TASK", "confidence": 0.6011223122477531}]}, {"text": "We find that CNNs are good feature extractors and hence perform better than existing state-of-the-art open set clas-sifiers in smaller domains, although their open set classification abilities in general still need to be investigated.", "labels": [], "entities": [{"text": "open set classification", "start_pos": 159, "end_pos": 182, "type": "TASK", "confidence": 0.6561566591262817}]}], "introductionContent": [{"text": "With increasing amounts of textual data being generated by various online sources like social networks, text classifiers are essential for the analysis and organization of data.", "labels": [], "entities": []}, {"text": "Text classification usually consists of training a classifier on a labeled text corpus where individual examples belong to one or more classes based on their content, and then using the trained classifier to place unseen examples in one of these classes.", "labels": [], "entities": [{"text": "Text classification", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.876892626285553}]}, {"text": "Popular text classification applications include spam filtering, sentiment analysis, movie genre classification, and document classification.", "labels": [], "entities": [{"text": "text classification", "start_pos": 8, "end_pos": 27, "type": "TASK", "confidence": 0.7268592268228531}, {"text": "spam filtering", "start_pos": 49, "end_pos": 63, "type": "TASK", "confidence": 0.9215533435344696}, {"text": "sentiment analysis", "start_pos": 65, "end_pos": 83, "type": "TASK", "confidence": 0.9635133147239685}, {"text": "movie genre classification", "start_pos": 85, "end_pos": 111, "type": "TASK", "confidence": 0.6443997224171957}, {"text": "document classification", "start_pos": 117, "end_pos": 140, "type": "TASK", "confidence": 0.7836350202560425}]}, {"text": "Traditional text classifiers assume a closed world approach.", "labels": [], "entities": []}, {"text": "In other words, the classifier is implicitly expected to be tested with examples from the same classes with which it was initially trained.", "labels": [], "entities": []}, {"text": "However, such classifiers fail to identify and adapt when examples of previously unseen classes are presented during testing.", "labels": [], "entities": []}, {"text": "In real-world scenarios, a robust trained classifier should be able to recognize examples of unknown classes and accordingly update its learned model.", "labels": [], "entities": []}, {"text": "This is known as the open world approach to classification.", "labels": [], "entities": []}, {"text": "Most research in open set classification has been in the computer vision domain, primarily in handwriting recognition ( ), face recognition (, object classification ( and computer forensics.", "labels": [], "entities": [{"text": "open set classification", "start_pos": 17, "end_pos": 40, "type": "TASK", "confidence": 0.669275293747584}, {"text": "handwriting recognition", "start_pos": 94, "end_pos": 117, "type": "TASK", "confidence": 0.8770992755889893}, {"text": "face recognition", "start_pos": 123, "end_pos": 139, "type": "TASK", "confidence": 0.8805589079856873}, {"text": "object classification", "start_pos": 143, "end_pos": 164, "type": "TASK", "confidence": 0.8478602766990662}]}, {"text": "Open set classification is important in computer vision since the number of classes to which a seen object can belong to is almost limitless and datasets are available with training samples belonging to thousands of classes.", "labels": [], "entities": [{"text": "Open set classification", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.6799466411272684}]}, {"text": "Nevertheless, open set classification is important in natural language processing as well.", "labels": [], "entities": [{"text": "open set classification", "start_pos": 14, "end_pos": 37, "type": "TASK", "confidence": 0.635194351275762}, {"text": "natural language processing", "start_pos": 54, "end_pos": 81, "type": "TASK", "confidence": 0.6709303458531698}]}, {"text": "An example of an open world text classification scenario is authorship attribution, where each author happens to be a class.", "labels": [], "entities": [{"text": "open world text classification", "start_pos": 17, "end_pos": 47, "type": "TASK", "confidence": 0.614379458129406}, {"text": "authorship attribution", "start_pos": 60, "end_pos": 82, "type": "TASK", "confidence": 0.7767452597618103}]}, {"text": "An open set text classifier must recognize the author of a document to be one of the known ones when appropriate.", "labels": [], "entities": []}, {"text": "Importantly, the classifier should also explicitly recognize when it fails to classify an unseen document as written by one of the known authors.", "labels": [], "entities": []}, {"text": "Whether it is for historical or fictional works from the past, or emails, social media posts or leaked political documents, open set classification maybe immensely helpful.", "labels": [], "entities": [{"text": "open set classification", "start_pos": 124, "end_pos": 147, "type": "TASK", "confidence": 0.6844750245412191}]}, {"text": "466 In the recent past, many-layered Artificial Neural Networks (ANN) or deep learning techniques () have become popular in Computer Vision and Natural Language Processing.", "labels": [], "entities": []}, {"text": "This is mainly attributed to the increase in performance compared to standard machine learning techniques.", "labels": [], "entities": []}, {"text": "As discussed later, current open set text classifiers do not rely on deep learning models.", "labels": [], "entities": [{"text": "open set text classifiers", "start_pos": 28, "end_pos": 53, "type": "TASK", "confidence": 0.5954914912581444}]}, {"text": "They employ either a clustering-based approach) or a modified Support Vector Machine (SVM).", "labels": [], "entities": []}, {"text": "To this end, we explore the possibility of using a CNN for open set text classification and compare it to existing techniques.", "labels": [], "entities": [{"text": "open set text classification", "start_pos": 59, "end_pos": 87, "type": "TASK", "confidence": 0.5972369313240051}]}], "datasetContent": [{"text": "For efficacious open world evaluation, we must choose a dataset with a large number of classes.", "labels": [], "entities": []}, {"text": "This allows us to hide classes during training.", "labels": [], "entities": []}, {"text": "These hidden classes can later be used during testing to gauge the open world accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 78, "end_pos": 86, "type": "METRIC", "confidence": 0.9912733435630798}]}, {"text": "We use the following two freely available datasets.", "labels": [], "entities": []}, {"text": "\u2022 20 Newsgroups () -Consists of 18,828 documents partitioned (nearly) evenly across 20 mutually exclusive classes.", "labels": [], "entities": []}, {"text": "\u2022 Amazon Product Reviews (Jindal and Liu, 2008) -Consists of 50 classes of products or domains, each with 1,000 review documents.", "labels": [], "entities": [{"text": "Amazon Product Reviews (Jindal and Liu, 2008)", "start_pos": 2, "end_pos": 47, "type": "DATASET", "confidence": 0.9178524792194367}]}, {"text": "Traditional evaluation (closed set) occurs when the classifier is assessed with data similar to what was learned during training.", "labels": [], "entities": []}, {"text": "The number of classes presented during testing is equal to the number 468 the model was trained on.", "labels": [], "entities": []}, {"text": "In open set evaluation, the classifier has incomplete knowledge during the training phase.", "labels": [], "entities": []}, {"text": "Examples of unknown classes can be submitted to the classifier during the testing phase.", "labels": [], "entities": []}, {"text": "During the training phase, we train the classifiers on a limited number of classes.", "labels": [], "entities": []}, {"text": "While testing, we then present the model with additional classes that were not learned during training.", "labels": [], "entities": []}, {"text": "We evaluate the performance of the classifier based on how well it identifies these new classes.", "labels": [], "entities": []}, {"text": "\"Openness\", proposed by ( where: CT = number of classes used for training C R = number of classes to be recognized C E = number of classes used during evaluation/testing As a special case, when CT = C R = C E , the value of openness is 0, i.e., it is the case of traditional classification when the numbers of classes trained on, tested on, and recognized are the same.", "labels": [], "entities": []}, {"text": "Accuracy, precision, recall, and F-score are used to measure the closed set performance of our model.", "labels": [], "entities": [{"text": "Accuracy", "start_pos": 0, "end_pos": 8, "type": "METRIC", "confidence": 0.9933736324310303}, {"text": "precision", "start_pos": 10, "end_pos": 19, "type": "METRIC", "confidence": 0.9996559619903564}, {"text": "recall", "start_pos": 21, "end_pos": 27, "type": "METRIC", "confidence": 0.9997238516807556}, {"text": "F-score", "start_pos": 33, "end_pos": 40, "type": "METRIC", "confidence": 0.9990641474723816}]}, {"text": "These metrics are expanded to the open set scenario by grouping all unknown classes into the same subset.", "labels": [], "entities": []}, {"text": "A True Positive is when an example of a known class is correctly classified and a True Negative is when an example of an unknown class is correctly predicted as unknown.", "labels": [], "entities": []}, {"text": "False Positives (an unknown class predicted as known) and False Negatives (a known class predicted as unknown) are the two types of incorrect class assignment.", "labels": [], "entities": [{"text": "False", "start_pos": 58, "end_pos": 63, "type": "METRIC", "confidence": 0.88210129737854}]}, {"text": "shows how openness varies with the number of training classes when there are 10 testing classes.", "labels": [], "entities": []}, {"text": "For all experiments, the CNN-static architecture proposed by) is used.", "labels": [], "entities": []}, {"text": "We use pretrained word2vec show the accuracies achieved on the 20 Newsgroups dataset while varying the L 2 norm constraint.", "labels": [], "entities": [{"text": "20 Newsgroups dataset", "start_pos": 63, "end_pos": 84, "type": "DATASET", "confidence": 0.7543420791625977}]}, {"text": "Increasing the L 2 norm constraint proved detrimental to the model accuracy.", "labels": [], "entities": [{"text": "L 2 norm constraint", "start_pos": 15, "end_pos": 34, "type": "METRIC", "confidence": 0.7339384108781815}, {"text": "accuracy", "start_pos": 67, "end_pos": 75, "type": "METRIC", "confidence": 0.9975478053092957}]}, {"text": "The configuration details of the CNN used in all our experiments are shown in. shows a depiction of the CNN architecture we implemented.", "labels": [], "entities": []}, {"text": "In our case, we use a single static channel instead of multiple channels.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 3: Experiments on 20 Newsgroups dataset (10, 20 domains)", "labels": [], "entities": [{"text": "Newsgroups dataset", "start_pos": 28, "end_pos": 46, "type": "DATASET", "confidence": 0.8684460520744324}]}, {"text": " Table 4: Open set results of Amazon Product Re- views Dataset in smaller domains (3, 4, 5)", "labels": [], "entities": [{"text": "Amazon Product Re- views Dataset", "start_pos": 30, "end_pos": 62, "type": "DATASET", "confidence": 0.884799579779307}]}]}