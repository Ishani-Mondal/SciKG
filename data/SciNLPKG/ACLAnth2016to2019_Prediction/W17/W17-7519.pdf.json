{"title": [{"text": "Natural Language Programming with Automatic Code Generation towards Solving Addition-Subtraction Word Problems", "labels": [], "entities": [{"text": "Automatic Code Generation", "start_pos": 34, "end_pos": 59, "type": "TASK", "confidence": 0.6996736923853556}]}], "abstractContent": [{"text": "Solving mathematical word problems by understanding natural language texts and by representing them in the form of equations to generate the final answers has been gaining importance in recent days.", "labels": [], "entities": []}, {"text": "At the same time, automatic code generation from natural language text input (nat-ural language programming) in the field of software engineering and natural language processing (NLP) is drawing the attention of researchers.", "labels": [], "entities": [{"text": "automatic code generation from natural language text input", "start_pos": 18, "end_pos": 76, "type": "TASK", "confidence": 0.7903056889772415}, {"text": "natural language processing (NLP)", "start_pos": 150, "end_pos": 183, "type": "TASK", "confidence": 0.7662825187047323}]}, {"text": "Representing natural language texts consisting of mathematical or logical information into such pro-grammable event driven scenario to find a conclusion has immense effect in automatic code generation in software engineering , e-learning education, financial report generation, etc.", "labels": [], "entities": [{"text": "automatic code generation", "start_pos": 175, "end_pos": 200, "type": "TASK", "confidence": 0.6637823979059855}, {"text": "financial report generation", "start_pos": 249, "end_pos": 276, "type": "TASK", "confidence": 0.6662186284859976}]}, {"text": "In this paper, we propose a model that extracts relevant information from mathematical word problem (MWP) texts, stores them in predefined templates, models them in object oriented paradigm, and finally map into an object oriented programming (OOP) 1 language (JAVA) automatically to create a complete executable code.", "labels": [], "entities": [{"text": "mathematical word problem (MWP) texts", "start_pos": 74, "end_pos": 111, "type": "TASK", "confidence": 0.7192409634590149}]}, {"text": "The codes are then executed automatically to output the final answer of the MWP.", "labels": [], "entities": []}, {"text": "The proposed system can solve addition-subtraction type MWPs and produced an accuracy of 90.48% on a subset of the standard AI2 arithmetic questions 2 dataset.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 77, "end_pos": 85, "type": "METRIC", "confidence": 0.9994456171989441}, {"text": "AI2 arithmetic questions 2 dataset", "start_pos": 124, "end_pos": 158, "type": "DATASET", "confidence": 0.7199838757514954}]}], "introductionContent": [{"text": "Solving MWPs is a very longstanding research problem; researchers in the field of Artificial Intel-ligence (AI), machine learning and NLP have proposed various methodologies for solving MWPs since 1960s.", "labels": [], "entities": [{"text": "Solving MWPs", "start_pos": 0, "end_pos": 12, "type": "TASK", "confidence": 0.9198446273803711}]}, {"text": "Word problems are formed using natural language text rather than in mathematical notations () and they can be of any type of numerical problems based on domains like mathematics, physics, geometry, etc.", "labels": [], "entities": []}, {"text": "(. Additionsubtraction type MWP is an integral part of basic understanding of mathematics and elementary school level curriculum.", "labels": [], "entities": []}, {"text": "The objective of the work presented here is primarily to generate computer programs automatically from natural language texts which when executed will produce the desired answer.", "labels": [], "entities": []}, {"text": "Comparison with existing MWP solvers are not appropriate to this kind of work as our end objective is not exactly to create the equation and solve the problem itself, but rather to generate a computer program to solve the problem and thus it adds anew dimension to research in solving MWPs.", "labels": [], "entities": [{"text": "MWP solvers", "start_pos": 25, "end_pos": 36, "type": "TASK", "confidence": 0.9571282863616943}, {"text": "solving MWPs", "start_pos": 277, "end_pos": 289, "type": "TASK", "confidence": 0.6593185365200043}]}, {"text": "For example, \"Dan has 64 violet marbles, he gave Mary 14 of the marbles.", "labels": [], "entities": []}, {"text": "How many violet marbles does he now have?\" is a word problem which is related to the subtraction or addition operation.", "labels": [], "entities": []}, {"text": "This particular problem can be solved manually by noticing the structure of the problem statement in which the first sentence indicates an 'assignment' operation and the second sentence indicates a 'subtraction' operation associated with the verb 'give' for Dan (primary owner) and 'addition' operation for Mary (secondary owner).", "labels": [], "entities": []}, {"text": "Final answer requirement is related to violet (attribute) marble (item) in the possession of Dan.", "labels": [], "entities": []}, {"text": "The answer to this problem is simply obtained by subtracting 14 from 64, i.e., 64-14=50.", "labels": [], "entities": []}, {"text": "In the OOP approach, we define 'classes' to represent real life entities and declare instances of those classes called 'objects'.", "labels": [], "entities": []}, {"text": "To solve such problems, a computer programmer basically defines a class -'Person' with the data fields like name, item name, item attribute and item quantity, anda method, e.g., evaluate result().", "labels": [], "entities": []}, {"text": "Then he declares objects 'obj1' and 'obj2' of this class.", "labels": [], "entities": []}, {"text": "Therefore, for the said example, obj1.name = Den, obj1.item name = marble, obj1.item attribute = violet and obj1.item quantity = 64 obj2.name = Mary, obj2.item name = marble, obj2.item attribute = violet and obj2.item quantity = x (not given).", "labels": [], "entities": []}, {"text": "The operation associated with the verb 'has' is '=' (assignment or observation) and can be coded as obj1.item quantity = 64.", "labels": [], "entities": [{"text": "obj1.item", "start_pos": 100, "end_pos": 109, "type": "METRIC", "confidence": 0.9617584347724915}]}, {"text": "The operations associated with the verb 'give' are both '-' and '+' i.e., subtraction and addition (negative transfer) and can be coded as obj1.item quantity = obj1.item quantity \u2212 14 and obj2.item quantity = obj2.item quantity +14.", "labels": [], "entities": [{"text": "obj1.item quantity = obj1.item quantity \u2212 14", "start_pos": 139, "end_pos": 183, "type": "METRIC", "confidence": 0.8200946152210236}]}, {"text": "The arithmetic operators are selected based on the verb categories (cf.) they belong to and the operations can be executed from within a method, e.g., 'evaluate result()'.", "labels": [], "entities": []}, {"text": "In the present work, the verb categorization is rule-based and is determined from the verb predicates (cf.).", "labels": [], "entities": []}, {"text": "The system first extracts and stores all the required information for the key entities -owners, items, attributes, quantities, and the arithmetic operations relevant to the verb semantics from the MWP text.", "labels": [], "entities": []}, {"text": "Then the system creates composite object entities resembling each unique owneritem-attribute combination in the MWP, finds their states and corresponding state transitions (if any) on the basis of the operations or activities (verbs they face) in that MWP, and generates the relevant computer codes.", "labels": [], "entities": []}, {"text": "However, automatic extraction of information from natural language text and computer code generation are not trivial.", "labels": [], "entities": [{"text": "computer code generation", "start_pos": 76, "end_pos": 100, "type": "TASK", "confidence": 0.6578209201494852}]}, {"text": "Moreover, solving MWPs requires natural language understanding and reasoning which are very difficult and most of the research in natural language processing (NLP) tend to do away with it.", "labels": [], "entities": [{"text": "solving MWPs", "start_pos": 10, "end_pos": 22, "type": "TASK", "confidence": 0.7649345695972443}, {"text": "natural language understanding", "start_pos": 32, "end_pos": 62, "type": "TASK", "confidence": 0.6905407309532166}, {"text": "natural language processing (NLP)", "start_pos": 130, "end_pos": 163, "type": "TASK", "confidence": 0.7643527785936991}]}, {"text": "Therefore, solving MWPs automatically has remained an open research challenge.", "labels": [], "entities": [{"text": "solving MWPs automatically", "start_pos": 11, "end_pos": 37, "type": "TASK", "confidence": 0.8357008298238119}]}, {"text": "However, presently our system is unique in three ways.", "labels": [], "entities": []}, {"text": "Firstly, our system tries to capture how a programmer can solve an MWP problem using a JAVA like language and it acts as abridge between unstructured natural language and structured formal language(s).", "labels": [], "entities": [{"text": "MWP problem", "start_pos": 67, "end_pos": 78, "type": "TASK", "confidence": 0.8279569745063782}]}, {"text": "This transformation from natural to formal language (executable program) throws immense challenges in the field of NLP and Information Extraction (IE).", "labels": [], "entities": [{"text": "Information Extraction (IE)", "start_pos": 123, "end_pos": 150, "type": "TASK", "confidence": 0.8246968269348145}]}, {"text": "Secondly, OOP paradigm is used to model real world data driven tasks and operations.", "labels": [], "entities": []}, {"text": "Word problems are apt to be modeled with OOP since it contains real world entities and their specific activities, which motivated us to use an object oriented approach for the present work.", "labels": [], "entities": []}, {"text": "The mathematical equation formation is not important here as all operations are represented with JAVA programming statements which determine the mathematical expressions.", "labels": [], "entities": [{"text": "mathematical equation formation", "start_pos": 4, "end_pos": 35, "type": "TASK", "confidence": 0.7134826183319092}, {"text": "JAVA", "start_pos": 97, "end_pos": 101, "type": "DATASET", "confidence": 0.8078820705413818}]}, {"text": "Once the desirable complete JAVA program (cf. The remainder of the paper is organized as follows.", "labels": [], "entities": [{"text": "JAVA", "start_pos": 28, "end_pos": 32, "type": "DATASET", "confidence": 0.65800541639328}]}, {"text": "Section 2 presents an overview of relevant related work.", "labels": [], "entities": []}, {"text": "Section 3 provides a detailed discussion on the system components.", "labels": [], "entities": []}, {"text": "Section 4 outlines the datasets, experiments and the corresponding results together with some analysis, followed by conclusions and avenues for further research in Section 5.", "labels": [], "entities": []}], "datasetContent": [{"text": "There is abroad sense of natural language programming available in literature, however, they do not exactly relate to our objective or methodology.", "labels": [], "entities": []}, {"text": "Though no standard datasets are available specifically for such work, we compiled a dataset containing 189 questions.", "labels": [], "entities": []}, {"text": "We selected word problems from the dateset available with the work of) which is the same as the 'AI2 Arithmetic Questions' dataset.", "labels": [], "entities": [{"text": "AI2 Arithmetic Questions' dataset", "start_pos": 97, "end_pos": 130, "type": "DATASET", "confidence": 0.7650018930435181}]}, {"text": "They compiled 395 addition-subtraction word problems with 3 subsets 152 -MA1, IXL, and MA2 with varying degree of complexity.", "labels": [], "entities": []}, {"text": "Our selection was based on the constraint that the sentences of each word problems must have links between them towards the forward movement of state transitions and each sentence in a MWP (i) must not have any \"missing information\" and (ii) must not bean \"irrelevant sentence\" with respect to answer generation.", "labels": [], "entities": [{"text": "answer generation", "start_pos": 294, "end_pos": 311, "type": "TASK", "confidence": 0.7982583343982697}]}, {"text": "For example, the problems \"Joan found 70 seashells on the beach.", "labels": [], "entities": []}, {"text": "She gave Sam some of her seashells.", "labels": [], "entities": []}, {"text": "How many seashells did she give to Sam?\" contains a sentence having the word 'some' which does not hold any definitive cardinal value, instead indicates a operation, are referred to as 'missing information'.", "labels": [], "entities": []}, {"text": "Another example from the dataset is \"Tom purchased a Batman game for $ 13.60 , and a Superman game for $ 5.06.", "labels": [], "entities": []}, {"text": "Tom already owns 2 games.", "labels": [], "entities": []}, {"text": "How much did Tom spend on video games?.", "labels": [], "entities": []}, {"text": "In this example, the sentence \"Tom already owns 2 games.\" does not have any actual relation with the desired result and this kind of sentences are referred to as 'irrelevant sentence'.", "labels": [], "entities": []}, {"text": "These cases were not included in the dataset since our system presently does not have the capabilities to handle them.", "labels": [], "entities": []}, {"text": "We selected in total 189 problems 10 from MA1 and MA2 (out of total 255 problems) based on the constraints.", "labels": [], "entities": [{"text": "MA1", "start_pos": 42, "end_pos": 45, "type": "DATASET", "confidence": 0.8482369780540466}]}, {"text": "We did not consider IXL since the corresponding problems involve more information gaps which call for complex reasoning (due to ambiguities in owners, items) that cannot be handled by the proposed approach and some problems of MA1 or MA2 do not fit with our objective.", "labels": [], "entities": [{"text": "IXL", "start_pos": 20, "end_pos": 23, "type": "TASK", "confidence": 0.8085709810256958}]}, {"text": "The system generated syntactically correct programs in all cases, however, in terms of correct answer generation (i.e., logically correct programs) it produced an accuracy of 90.48% (171 out of 189) on the test dataset.", "labels": [], "entities": [{"text": "answer generation", "start_pos": 95, "end_pos": 112, "type": "TASK", "confidence": 0.6900558918714523}, {"text": "accuracy", "start_pos": 163, "end_pos": 171, "type": "METRIC", "confidence": 0.9992086291313171}]}, {"text": "The system performed properly for texts containing CHANGE or COMBINE information.", "labels": [], "entities": []}, {"text": "Cases for which the system did not produce correct results are given below with some examples.", "labels": [], "entities": []}, {"text": "\u2022 No Link Among Owners, Participating Operation: E.g., Dan had 7 potatoes and 4 cantaloupes in the garden.", "labels": [], "entities": []}, {"text": "The rabbits ate 4 of the potatoes.", "labels": [], "entities": []}, {"text": "How many potatoes does Dan now have?", "labels": [], "entities": []}, {"text": "(8 problems/44.5%) \u2022 Wrong Program/ Answer Generation Due 10 dataset available at: https://sites.google.", "labels": [], "entities": [{"text": "Answer Generation", "start_pos": 36, "end_pos": 53, "type": "TASK", "confidence": 0.9125921428203583}]}, {"text": "com/site/autocodegeneration/ to Various Reasons like Program Logical Errors, Sentence Sequence, Wrong IE/ SRL etc.: E.g., There are 7 crayons in the drawer and 6 crayons on the desk . Sam placed 4 crayons and 8 scissors on the desk . How many crayons are now therein total ? (7 problems/38.9%) \u2022 Improper Reasoning of Question Sentence: E.g., A restaurant served 9 hot dogs during lunch and 2 during dinner today.", "labels": [], "entities": [{"text": "Wrong IE/ SRL", "start_pos": 96, "end_pos": 109, "type": "METRIC", "confidence": 0.8028594851493835}, {"text": "Improper Reasoning of Question Sentence", "start_pos": 296, "end_pos": 335, "type": "TASK", "confidence": 0.817110288143158}]}, {"text": "It served 5 of them yesterday.", "labels": [], "entities": []}, {"text": "How many hot dogs were served today?", "labels": [], "entities": []}, {"text": "(3 problems/16.6%)", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 1: A sample SRL output", "labels": [], "entities": [{"text": "SRL", "start_pos": 19, "end_pos": 22, "type": "TASK", "confidence": 0.958757221698761}]}]}