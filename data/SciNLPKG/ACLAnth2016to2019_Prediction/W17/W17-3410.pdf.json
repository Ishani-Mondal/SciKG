{"title": [{"text": "(Re)introducing Regular Graph Languages", "labels": [], "entities": []}], "abstractContent": [{"text": "Distributions over strings and trees can be represented by probabilistic regular languages , which characterise many models in natural language processing.", "labels": [], "entities": []}], "introductionContent": [{"text": "NLP systems for machine translation, summarisation, paraphrasing, and other problems often fail to preserve the compositional semantics of sentences and documents because they model language as bags of words, or at best syntactic trees.", "labels": [], "entities": [{"text": "machine translation", "start_pos": 16, "end_pos": 35, "type": "TASK", "confidence": 0.7745771408081055}, {"text": "summarisation", "start_pos": 37, "end_pos": 50, "type": "TASK", "confidence": 0.9677082300186157}]}, {"text": "To preserve semantics, they must model semantics.", "labels": [], "entities": []}, {"text": "In pursuit of this goal, several datasets have been produced which pair natural language with compositional semantic representations in the form of directed acyclic graphs (DAGs), including the Abstract Meaning Represenation Bank (AMR;), the Prague Czech-English Dependency), Deepbank (, and the Univer- Rappoport, 2013).", "labels": [], "entities": [{"text": "Deepbank", "start_pos": 276, "end_pos": 284, "type": "DATASET", "confidence": 0.9269487261772156}]}, {"text": "To make use of this data, we require probabilistic models of graphs.", "labels": [], "entities": []}, {"text": "Consider how we might use compositional semantic representations in machine translation ().", "labels": [], "entities": [{"text": "machine translation", "start_pos": 68, "end_pos": 87, "type": "TASK", "confidence": 0.7305350005626678}]}, {"text": "We first parse a source sentence to its semantic representation, and then generate a target sentence from this representation.", "labels": [], "entities": []}, {"text": "To do this practically, we must be able to compose a stringto-graph model with a graph-to-string model, and we must be able to compute the probability of this composition.", "labels": [], "entities": []}, {"text": "To compose the models, we need to be able to compute the intersection of the graph domains of each model.", "labels": [], "entities": []}, {"text": "Hence, we must be able to define probability distributions over the graph domains and efficiently compute their intersection.", "labels": [], "entities": []}, {"text": "For NLP problems in which data is in the form of strings and trees, such distributions can be represented by finite automata (), which are closed under intersection and can be made probabilistic.", "labels": [], "entities": []}, {"text": "It is therefore natural to ask whether there is a family of graph languages with similar properties to finite automata.", "labels": [], "entities": []}, {"text": "Recent work in NLP has focused primarily on two families of graph languages: hyperedge replacement languages (HRL;), a context-free graph rewriting formalism that has been studied in an NLP context by several researchers; and DAG automata languages, (DAGAL;, studied by. showed that the latter area subfamily of the monadic second order languages (MSOL), which are of special interest to us, since, when restricted to strings or trees, they exactly characterise the recognisable-or regular-languages of each.", "labels": [], "entities": []}, {"text": "The HRL and MSOL families are incomparable: that is, the context-free graph languages do not contain the recognisable graph languages, as is the casein languages of strings and trees).", "labels": [], "entities": []}, {"text": "So, while each formalism has appealing characteristics, neither appear adequate for the problem outlined above: HRLs can be made probabilistic, but they are not closed under intersection; and while DAGAL and MSOL are closed under intersection, it is unclear how to make them probabilistic.", "labels": [], "entities": []}, {"text": "This situation suggests that we might want a family of languages that is a subfamily of both HRL and MSOL.", "labels": [], "entities": [{"text": "HRL", "start_pos": 93, "end_pos": 96, "type": "DATASET", "confidence": 0.8749801516532898}, {"text": "MSOL", "start_pos": 101, "end_pos": 105, "type": "DATASET", "confidence": 0.8030770421028137}]}, {"text": "defines all such languages as the family of strongly contextfree languages (SCFL).", "labels": [], "entities": []}, {"text": "Unfortunately, SCFLs are defined non-constructively, but Courcelle (1991) exhibits a constructively-defined subfamily: Regular Graph Languages (RGL), defined as a restricted form of HRL, which Courcelle demonstrates is also in MSOL.", "labels": [], "entities": []}, {"text": "Recently, two new graph grammar formalisms have been defined which are also restricted forms of HRL: Tree-like Grammars (TLG;) and.", "labels": [], "entities": []}, {"text": "TLGs are claimed to be in SCFL, but the relationship of RDG to SCFL is unknown.", "labels": [], "entities": [{"text": "TLGs", "start_pos": 0, "end_pos": 4, "type": "DATASET", "confidence": 0.5364022850990295}]}, {"text": "The grammar restrictions of TLGs, RDGs and RGGs are incomparable, but they share important characteristics, which we discuss in \u00a75.", "labels": [], "entities": []}, {"text": "This paper provides an accessible proof that RGL area subfamily of MSOL, since only a sketch is provided in.", "labels": [], "entities": [{"text": "MSOL", "start_pos": 67, "end_pos": 71, "type": "DATASET", "confidence": 0.8795443177223206}]}, {"text": "Our aim in studying the proof is to gain insights into the re-1 Semiring-weighted MSOLs have been defined, where weights maybe in the tropical semiring).", "labels": [], "entities": [{"text": "Semiring-weighted MSOLs", "start_pos": 64, "end_pos": 87, "type": "TASK", "confidence": 0.388214573264122}]}, {"text": "However, for the weights to define a probability distribution, they must meet the stronger condition that the sum of multiplied weights overall definable objects is one.", "labels": [], "entities": []}, {"text": "This does not appear to have been demonstrated for DAGAL, which violate the sufficient conditions that give for probabilistic languages.", "labels": [], "entities": []}, {"text": "We suspect that there are DAGAL (hence MSOL) for which it is not possible.", "labels": [], "entities": [{"text": "DAGAL", "start_pos": 26, "end_pos": 31, "type": "METRIC", "confidence": 0.5301865935325623}, {"text": "MSOL", "start_pos": 39, "end_pos": 43, "type": "DATASET", "confidence": 0.6386010646820068}]}, {"text": "Courcelle's definition of strongly context-free is unrelated to use of this term in NLP.", "labels": [], "entities": []}, {"text": "The equality of SCFL and MSOL \u2229 HRL was recently proved by.: Containment relationships for families of regular and context-free string and tree languages, hyperedge replacement languages (HRL), monadic second order definable graph languages (MSOL), directed acyclic graph automata languages (DAGAL), and the regular graph languages (RGL).", "labels": [], "entities": []}, {"text": "* indicates that the family of languages is probabilistic and \u2020 indicates that the family of languages is intersectible.", "labels": [], "entities": []}, {"text": "lationship of RGL, TLG, and RDG, which might enable us to define more general classes of graph languages that are also within SCFL.", "labels": [], "entities": []}, {"text": "Our discussion emphasises points at which Courcelle's proof relies on particular restrictions of RGL, and is intended to highlight the places where relaxations of these restrictions maybe possible.", "labels": [], "entities": [{"text": "RGL", "start_pos": 97, "end_pos": 100, "type": "DATASET", "confidence": 0.7485523223876953}]}, {"text": "summarises the relationship of RGL to other formalisms and their properties.", "labels": [], "entities": []}, {"text": "The proof of each Lemma, Proposition and Theorem in this paper that does not appear here is provided in full in the supplementary materials.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Productions of a HRG. The labels p, q, r, s, t, and u  label the productions so that we can refer to them in the text.  Note that Y can be rewritten either via production r or s.", "labels": [], "entities": []}]}