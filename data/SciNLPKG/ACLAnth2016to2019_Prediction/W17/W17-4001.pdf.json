{"title": [{"text": "Failure Transducers and Applications in Knowledge-Based Text Processing", "labels": [], "entities": [{"text": "Failure Transducers", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8865155279636383}]}], "abstractContent": [{"text": "Finite-state devices encoding lexica and related knowledge bases often become very large.", "labels": [], "entities": []}, {"text": "A well-known technique for reducing the size of finite-state automata is the use of failure transitions.", "labels": [], "entities": []}, {"text": "Here we generalize the concept of failure transitions for finite-state automata to the case of subsequential transducers.", "labels": [], "entities": []}, {"text": "Failure transitions in the new sense do not have input but may produce output.", "labels": [], "entities": []}, {"text": "As an application field for failure transducers we consider text rewriting with large rewrite lexica under the leftmost-longest replacement strategy.", "labels": [], "entities": [{"text": "text rewriting", "start_pos": 60, "end_pos": 74, "type": "TASK", "confidence": 0.7652257680892944}]}, {"text": "It is shown that using failure transducers leads to a huge space reduction compared to the use of standard subsequential transducers.", "labels": [], "entities": []}, {"text": "As a concrete example we show how all Wikipedia concepts in an input text can be linked in an online manner with the Wikipedia pages of the concepts using failure transducers.", "labels": [], "entities": []}], "introductionContent": [{"text": "A wellknown technique for reducing the size of large finite-state automata is the use of failure transitions ().", "labels": [], "entities": []}, {"text": "While automata help to find strings in text, more advanced text processing tasks are often based on knowledge bases that provide information on characteristic portions of input texts (endings, words, phrases, etc.).", "labels": [], "entities": []}, {"text": "Using this information, given input texts are translated to anew output form.", "labels": [], "entities": []}, {"text": "Examples for this form of \"text rewriting\" include various forms of tagging, stemming, and (linguistic, semantic,..) annotation.", "labels": [], "entities": []}, {"text": "There area number of efficient techniques for representing a finite dictionary of string entries with their corresponding mappings as finite-state machines and transducers).", "labels": [], "entities": []}, {"text": "These techniques can produce a very compact representation of the dictionary.", "labels": [], "entities": []}, {"text": "But in order to perform text rewriting based on the dictionary one has to traverse the dictionary starting from each text position and in addition apply a conflict resolution strategy.", "labels": [], "entities": [{"text": "text rewriting", "start_pos": 24, "end_pos": 38, "type": "TASK", "confidence": 0.7737832367420197}, {"text": "conflict resolution", "start_pos": 155, "end_pos": 174, "type": "TASK", "confidence": 0.8048858344554901}]}, {"text": "Therefore the time complexity for text rewriting is given by the length of the text multiplied by the maximal length of a dictionary entry.", "labels": [], "entities": [{"text": "text rewriting", "start_pos": 34, "end_pos": 48, "type": "TASK", "confidence": 0.8145703077316284}]}, {"text": "Deterministic finite-state transducers offer an elegant framework to solve such a text processing task in a more efficient way.", "labels": [], "entities": []}, {"text": "In we considered \"rewriting dictionaries\", i.e. collections of strings where for each entry a replacement value (another string) is specified.", "labels": [], "entities": []}, {"text": "We showed how to translate a given rewriting dictionary into a subsequential finite-state transducer that maybe used to replace all occurrences of dictionary entries in a text by the replacements with only one traversal of the text by the transducer.", "labels": [], "entities": []}, {"text": "Using this solution, the time complexity for text rewriting is linear in the length of the text and does not depend on the dictionary.", "labels": [], "entities": [{"text": "text rewriting", "start_pos": 45, "end_pos": 59, "type": "TASK", "confidence": 0.7896428406238556}]}, {"text": "For resolving conflicts between overlapping entries the leftmostlargest rewriting strategy is used.", "labels": [], "entities": []}, {"text": "However, when using large rewriting dictionaries the size of the resulting subsequential transducer can become very large.", "labels": [], "entities": []}, {"text": "A similar technique is used by Schmitz in) for constructing subsequential transducers that represent part-of-speech rules.", "labels": [], "entities": []}, {"text": "In this paper we introduce f-transducers, anew kind of deterministic transducer with failure transitions.", "labels": [], "entities": []}, {"text": "A failure transition in our sense does not consume input, but it is essential that it may produce output.", "labels": [], "entities": []}, {"text": "We show how to translate a given rewriting dictionary into an f-transducer that has the same functionality as the subsequential finite-state transducer obtained in.", "labels": [], "entities": []}, {"text": "In this way, a huge space reduction is obtained for large rewriting dictionaries.", "labels": [], "entities": []}, {"text": "Since transitions in transducers come with output, saving transitions has even a larger benefit than in the automaton case.", "labels": [], "entities": []}, {"text": "As a concrete application we consider a rewriting dictionary with 8 million entries where each title of a page of the English Wikipedia obtains a link text with anchor on the corresponding page of the concept.", "labels": [], "entities": []}, {"text": "The f-transducer obtained from the translation runs over a text and replaces every mentioning of a Wikipedia concept by a link to the Wikipedia page.", "labels": [], "entities": []}, {"text": "In this way, texts can be linked to the Wikipedia in an online-manner.", "labels": [], "entities": []}, {"text": "We start with formal preliminaries in Section 2.", "labels": [], "entities": []}, {"text": "In Section 3 we introduce failure transducers.", "labels": [], "entities": []}, {"text": "Section 4 presents the construction of f-transducers for text rewriting.", "labels": [], "entities": [{"text": "text rewriting", "start_pos": 57, "end_pos": 71, "type": "TASK", "confidence": 0.807774156332016}]}, {"text": "The algorithm and complexity analysis of our construction is given in Section 5.", "labels": [], "entities": []}, {"text": "Section 6 describes the annotation of concept names with Wikipedia.", "labels": [], "entities": []}, {"text": "We finish with a short conclusion in Section 7.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}