{"title": [{"text": "Modelling Natural Language, Programs, and their Intersection", "labels": [], "entities": []}], "abstractContent": [{"text": "Description Just like natural language is a tool that humans use to communicate with each-other, programming languages are tools that humans use to communicate with computers.", "labels": [], "entities": []}, {"text": "Because of the increasing need for programs and programming in our working and everyday lives, there are now massive amounts of source code being produced everyday.", "labels": [], "entities": []}, {"text": "As a result, it is evermore important for an ever increasing segment of the populace to be able to understand and create programs to do what they would like to do.", "labels": [], "entities": []}, {"text": "However, programming is a specialized skill, IT education is hard-pressed to makeup for this demand.", "labels": [], "entities": []}, {"text": "One key insight that can help us tackle this problem is that source code is \u200b bimodal\u200b.", "labels": [], "entities": []}, {"text": "While one modality is targeted towards explicitly instructing the hardware on the actions to perform, the other is targeted towards the humans that need to read, understand, maintain and extend the code.", "labels": [], "entities": []}, {"text": "Given that it is humans that are producing the software, the human-oriented modality is very strong and often takes the form of natural language: from natural language identifiers, such as variable and method names, to code comments and natural language documentation.", "labels": [], "entities": []}, {"text": "As a result, there is recently a burgeoning interest in research that connects natural language with the programming language artifacts.", "labels": [], "entities": []}, {"text": "This research area has the potential to improve the efficiency and ease of programming by making connections to natural language, which is (in general) easier for humans to understand and communicate with, particularly humans who are not yet well-versed in programming.", "labels": [], "entities": []}, {"text": "Some examples of relevant tasks include: \u2022 Automatic explanation of programs in natural language (code-to-language): \u200b Highly connected with the task of grounded natural language generation in the NLP community, this is the task of generating natural language explanations for source code artifacts, which will allow them to be understood more easily.", "labels": [], "entities": [{"text": "Automatic explanation of programs in natural language (code-to-language)", "start_pos": 43, "end_pos": 115, "type": "TASK", "confidence": 0.8071908771991729}]}, {"text": "\u2022 Automatic generation of programs from natural language specifications (language-to-code):\u200b Highly connected with the task of semantic parsing in the NLP community, this is the task of translating natural language into code that allows for grounded executable representations of natural language.", "labels": [], "entities": [{"text": "Automatic generation of programs from natural language specifications (language-to-code):\u200b", "start_pos": 2, "end_pos": 92, "type": "TASK", "confidence": 0.7434239279140126}, {"text": "semantic parsing", "start_pos": 127, "end_pos": 143, "type": "TASK", "confidence": 0.7735701501369476}]}, {"text": "This also encompasses natural language code search, which retrieves relevant code snippets based on natural language queries.", "labels": [], "entities": [{"text": "natural language code search", "start_pos": 22, "end_pos": 50, "type": "TASK", "confidence": 0.6271683648228645}]}, {"text": "\u2022 Modelling the natural language elements of source code:\u200b As mentioned above, much of source code itself contains elements that are expressed in natural language (e.g. variable names and code comments), giving a form of grounded semantics to these aspects of code.", "labels": [], "entities": []}, {"text": "\u2022 Analysis of communication in collaborative software development communities:\u200b The process of developing software, particularly in multi-party projects, is a collaborative act, and as a result, provides a rich source of data for analysis of grounded communication in collaborative environments, which can then be used to improve productivity in these environments.", "labels": [], "entities": [{"text": "Analysis of communication in collaborative software development communities", "start_pos": 2, "end_pos": 77, "type": "TASK", "confidence": 0.8088608458638191}]}], "introductionContent": [], "datasetContent": [], "tableCaptions": []}