{"title": [{"text": "Directional Skip-Gram: Explicitly Distinguishing Left and Right Context for Word Embeddings", "labels": [], "entities": [{"text": "Explicitly Distinguishing Left and Right Context", "start_pos": 23, "end_pos": 71, "type": "TASK", "confidence": 0.6856824855009714}]}], "abstractContent": [{"text": "In this paper, we present directional skip-gram (DSG), a simple but effective enhancement of the skip-gram model by explicitly distinguishing left and right context in word prediction.", "labels": [], "entities": [{"text": "word prediction", "start_pos": 168, "end_pos": 183, "type": "TASK", "confidence": 0.7714635133743286}]}, {"text": "In doing so, a direction vector is introduced for each word, whose embedding is thus learned by not only word co-occurrence patterns in its context, but also the directions of its contextual words.", "labels": [], "entities": []}, {"text": "Theoretical and empirical studies on complexity illustrate that our model can be trained as efficient as the original skip-gram model, when compared to other extensions of the skip-gram model.", "labels": [], "entities": []}, {"text": "Experimental results show that our model outperforms others on different datasets in semantic (word similarity measurement) and syntactic (part-of-speech tagging) evaluations, respectively.", "labels": [], "entities": [{"text": "word similarity measurement) and syntactic (part-of-speech tagging) evaluations", "start_pos": 95, "end_pos": 174, "type": "TASK", "confidence": 0.6669047501954165}]}], "introductionContent": [{"text": "Word embedding and its related techniques have shown to be vital for natural language processing (NLP) (.", "labels": [], "entities": [{"text": "natural language processing (NLP)", "start_pos": 69, "end_pos": 102, "type": "TASK", "confidence": 0.8096558451652527}]}, {"text": "The skip-gram (SG) model with negative sampling (,c) is a popular choice for learning word embeddings and has had large impact in the community, for its efficient training and good performance in downstream applications.", "labels": [], "entities": []}, {"text": "Although widely used for multiple tasks, SG model relies on word co-occurrence within local context in word prediction but ignores further detailed information such as word orders, positions.", "labels": [], "entities": [{"text": "SG", "start_pos": 41, "end_pos": 43, "type": "TASK", "confidence": 0.9788485765457153}, {"text": "word prediction", "start_pos": 103, "end_pos": 118, "type": "TASK", "confidence": 0.7621303200721741}]}, {"text": "To improve original word embedding models, there are various studies leveraging external knowledge to update word embeddings with post processing or supervised objectives ().", "labels": [], "entities": []}, {"text": "However, these approaches are limited by reliable semantic resources, which are hard to obtain or annotate.", "labels": [], "entities": []}, {"text": "To overcome such limitations, there are many approaches to further exploiting the characteristics of the running text, e.g., internal structure of the context.", "labels": [], "entities": []}, {"text": "These approaches include enlarging the projection layer with consideration of word orders (), learning context words with different weights (), etc.", "labels": [], "entities": []}, {"text": "They are advantageous of learning word embeddings in an end-to-end unsupervised manner without requiring additional resources.", "labels": [], "entities": []}, {"text": "Yet, they are also restricted in their implementation such as that they normally require a larger hidden layer or additional weights, which demand higher computation burden and could result in gradient explosion when embedding dimensions are enlarged.", "labels": [], "entities": []}, {"text": "Another issue is that when considering word orders, they may suffer from data sparsity problem since n-gram coverage is much less than word, especially in the cold start scenario fora new domain where training data is limited.", "labels": [], "entities": []}, {"text": "To address the aforementioned issues, in this paper, we propose a simple, but effective adaptation of the SG model, namely, directional skipgram (DSG), with consideration of not only the word co-occurrence patterns, but also their relative positions modeled by a special \"direction\" vector, which indicates whether the word to be predicted is on the left or right side of the given word.", "labels": [], "entities": []}, {"text": "Although similarly motivated as the structured skip-gram (SSG) model (), DSG produces word embeddings of higher quality with lower space and time complexities.", "labels": [], "entities": []}, {"text": "Empirical study shows that DSG can be trained efficiently (as fast as SG, while much faster than SSG).", "labels": [], "entities": []}, {"text": "To test the effectiveness of the embeddings produced by DSG, we conduct experiments on semantic (word similarity evaluation) and syntactic (part-of-speech tagging) tasks.", "labels": [], "entities": [{"text": "word similarity evaluation) and syntactic (part-of-speech tagging) tasks", "start_pos": 97, "end_pos": 169, "type": "TASK", "confidence": 0.6720026758584109}]}, {"text": "The results confirm the superiority of DSG to other models.", "labels": [], "entities": [{"text": "DSG", "start_pos": 39, "end_pos": 42, "type": "DATASET", "confidence": 0.7311176061630249}]}], "datasetContent": [{"text": "We use intrinsic and extrinsic evaluations to evaluate the effectiveness of different embeddings.", "labels": [], "entities": []}, {"text": "To test and verify our analysis in \u00a72.4, the efficiencies of aforementioned SG models are investigated based on their training speed.", "labels": [], "entities": []}, {"text": "The setups for all experiments are illustrated as follows.", "labels": [], "entities": []}, {"text": "The embeddings were trained on the latest dump of Wikipedia articles 2 , which contains approximately 2 billion word tokens.", "labels": [], "entities": [{"text": "Wikipedia articles 2", "start_pos": 50, "end_pos": 70, "type": "DATASET", "confidence": 0.8617099523544312}]}, {"text": "Since the focus of this paper is to enhance the SG model, we mainly consider the SG model (), SSG model () and its simplified version SSSG model, as baselines for comparison.", "labels": [], "entities": [{"text": "SG", "start_pos": 48, "end_pos": 50, "type": "TASK", "confidence": 0.9668161273002625}]}, {"text": "Different models share the same hyperparameters in training word embeddings, which are presented in. illustrates the training speed of different SG models, i.e., SG, SSG, SSSG, and DSG, given various size of context window.", "labels": [], "entities": []}, {"text": "Compared to the original SG model, SSG model shows a relatively large drop of speed when enlarging the context window, while there is much less drop observed for the DSG model.", "labels": [], "entities": [{"text": "speed", "start_pos": 78, "end_pos": 83, "type": "METRIC", "confidence": 0.9805707335472107}]}, {"text": "Overall, the curves of four models roughly comply with the qualitative analysis in  As a conventional intrinsic evaluation, word similarity testis performed on the MEN-3k (), SimLex-999 (  and) datasets for quantitative comparisons among different embeddings.", "labels": [], "entities": [{"text": "MEN-3k", "start_pos": 164, "end_pos": 170, "type": "DATASET", "confidence": 0.9177340865135193}]}, {"text": "The Spearman's rank correlation (\u03c1)) is adopted to measure how close the similarity scores to human judgments on the three datasets.", "labels": [], "entities": [{"text": "Spearman's rank correlation (\u03c1))", "start_pos": 4, "end_pos": 36, "type": "METRIC", "confidence": 0.8270449808665684}]}, {"text": "Besides SG, SSG and SSSG, we also include CBOW and CWin 5 as reference baselines in this word similarity evaluation.", "labels": [], "entities": [{"text": "word similarity evaluation", "start_pos": 89, "end_pos": 115, "type": "TASK", "confidence": 0.7267371416091919}]}, {"text": "reports word similarity results when the embeddings are trained on the entire Wiki corpus.", "labels": [], "entities": [{"text": "Wiki corpus", "start_pos": 78, "end_pos": 89, "type": "DATASET", "confidence": 0.8925807476043701}]}, {"text": "Besides, we created a small corpus by sampling 0.1% Wiki data to simulate the cold-start scenario that limited data is used to train word embeddings.", "labels": [], "entities": [{"text": "Wiki data", "start_pos": 52, "end_pos": 61, "type": "DATASET", "confidence": 0.8647457659244537}]}, {"text": "The word similarity performance of all models on this small corpus is reported in.", "labels": [], "entities": []}, {"text": "Overall, the results of all models are worse when trained on the small dataset, especially the models taking structure information of context into account, such as CWin and SSG.", "labels": [], "entities": []}, {"text": "The reason maybe largely due to that modeling order dependence is sensitive to data sparsity, hence CWin model fails to generate meaningful representations for low-frequency words, which are prevalent on small corpus.", "labels": [], "entities": []}, {"text": "This observation indicates that data sparsity problem is critical in learning word embeddings.", "labels": [], "entities": []}, {"text": "Nevertheless, DSG yields robust results on different scale of training data, which suggests that our model provides an effective solution to learn embeddings with exploiting the structure in context, while not severely suffered from the data sparsity problem.", "labels": [], "entities": []}, {"text": "Particularly among all SG models, DSG produces the best performance when trained on either the large or the small corpus.", "labels": [], "entities": []}, {"text": "This fact further proves) taking the produced embeddings as input.", "labels": [], "entities": []}, {"text": "LSTM state size is setting to 200.", "labels": [], "entities": [{"text": "LSTM state size", "start_pos": 0, "end_pos": 15, "type": "METRIC", "confidence": 0.5846744775772095}]}, {"text": "For WSJ, we use the aforementioned embeddings trained from the Wiki corpus.", "labels": [], "entities": [{"text": "WSJ", "start_pos": 4, "end_pos": 7, "type": "DATASET", "confidence": 0.6402066349983215}, {"text": "Wiki corpus", "start_pos": 63, "end_pos": 74, "type": "DATASET", "confidence": 0.9261034727096558}]}, {"text": "For ARK, we prepare a Twitter corpus (TWT) to build embeddings.", "labels": [], "entities": []}, {"text": "This data contains 100 million tweets collected through Twitter streaming API 6 , followed by preprocessing using the toolkit described in.", "labels": [], "entities": []}, {"text": "The TWT embeddings are trained under the same procedure as the Wiki embeddings.", "labels": [], "entities": [{"text": "TWT", "start_pos": 4, "end_pos": 7, "type": "DATASET", "confidence": 0.889540433883667}]}, {"text": "Similar to word similarity task, we use CBOW, SG, CWin, SSG and SSSG as baselines in this task.", "labels": [], "entities": [{"text": "word similarity task", "start_pos": 11, "end_pos": 31, "type": "TASK", "confidence": 0.8166974186897278}]}, {"text": "Results are reported in  useful in predicting POS tags.", "labels": [], "entities": [{"text": "predicting POS tags", "start_pos": 35, "end_pos": 54, "type": "TASK", "confidence": 0.811651865641276}]}, {"text": "Although embeddings trained on TWT could be affected by the noisiness and informal nature of tweets, POS taggers with DSG embeddings achieve the best accuracy on ARK data.", "labels": [], "entities": [{"text": "TWT", "start_pos": 31, "end_pos": 34, "type": "DATASET", "confidence": 0.8809171319007874}, {"text": "accuracy", "start_pos": 150, "end_pos": 158, "type": "METRIC", "confidence": 0.9984228610992432}, {"text": "ARK data", "start_pos": 162, "end_pos": 170, "type": "DATASET", "confidence": 0.8985552191734314}]}, {"text": "This observation indicates that, when learning word embeddings with context structures on noisy data, DSG has its superiority to other models such as SSG and SSSG.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 2: Model settings for training embeddings.", "labels": [], "entities": []}, {"text": " Table 3: Word similarity results (\u03c1 \u00d7 100) from em- beddings trained on the large corpus.", "labels": [], "entities": []}, {"text": " Table 4: Word similarity results (\u03c1 \u00d7 100) from em- beddings trained on the small corpus.", "labels": [], "entities": []}, {"text": " Table 5: POS tagging results (accuracy) on WSJ and  ARK datasets.", "labels": [], "entities": [{"text": "POS tagging", "start_pos": 10, "end_pos": 21, "type": "TASK", "confidence": 0.7336381375789642}, {"text": "accuracy", "start_pos": 31, "end_pos": 39, "type": "METRIC", "confidence": 0.9992228746414185}, {"text": "WSJ and  ARK datasets", "start_pos": 44, "end_pos": 65, "type": "DATASET", "confidence": 0.7245882153511047}]}]}