{"title": [{"text": "Non-Projective Dependency Parsing with Non-Local Transitions", "labels": [], "entities": [{"text": "Non-Projective Dependency Parsing", "start_pos": 0, "end_pos": 33, "type": "TASK", "confidence": 0.5430853267510732}]}], "abstractContent": [{"text": "We present a novel transition system, based on the Covington non-projective parser, introducing non-local transitions that can directly create arcs involving nodes to the left of the current focus positions.", "labels": [], "entities": []}, {"text": "This avoids the need for long sequences of No-Arc transitions to create long-distance arcs, thus alleviating error propagation.", "labels": [], "entities": []}, {"text": "The resulting parser outper-forms the original version and achieves the best accuracy on the Stanford Dependencies conversion of the Penn Treebank among greedy transition-based parsers.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 77, "end_pos": 85, "type": "METRIC", "confidence": 0.999363362789154}, {"text": "Penn Treebank", "start_pos": 133, "end_pos": 146, "type": "DATASET", "confidence": 0.8841886222362518}]}], "introductionContent": [{"text": "Greedy transition-based parsers are popular in NLP, as they provide competitive accuracy with high efficiency.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 80, "end_pos": 88, "type": "METRIC", "confidence": 0.9822250008583069}]}, {"text": "They syntactically analyze a sentence by greedily applying transitions, which read it from left to right and produce a dependency tree.", "labels": [], "entities": []}, {"text": "However, this greedy process is prone to error propagation: one wrong choice of transition can lead the parser to an erroneous state, causing more incorrect decisions.", "labels": [], "entities": []}, {"text": "This is especially crucial for long attachments requiring a larger number of transitions.", "labels": [], "entities": []}, {"text": "In addition, transition-based parsers traditionally focus on only two words of the sentence and their local context to choose the next transition.", "labels": [], "entities": []}, {"text": "The lack of a global perspective favors the presence of errors when creating arcs involving multiple transitions.", "labels": [], "entities": []}, {"text": "As expected, transition-based parsers build short arcs more accurately than long ones . Previous research such as and proves that the widely-used projective arc-eager transition-based parser of benefits from shortening the length of transition sequences by creating non-local attachments.", "labels": [], "entities": []}, {"text": "In particular, they augmented the original transition system with new actions whose behavior entails more than one arc-eager transition and involves a context beyond the traditional two focus words. and also extended the arc-standard transition-based algorithm with the same success.", "labels": [], "entities": []}, {"text": "In the same vein, we present a novel unrestricted non-projective transition system based on the well-known algorithm by that shortens the transition sequence necessary to parse a given sentence by the original algorithm, which becomes linear instead of quadratic with respect to sentence length.", "labels": [], "entities": []}, {"text": "To achieve that, we propose new transitions that affect non-local words and are equivalent to one or more Covington actions, in a similar way to the transitions defined by based on the arc-eager parser.", "labels": [], "entities": []}, {"text": "Experiments show that this novel variant significantly outperforms the original one in all datasets tested, and achieves the best reported accuracy fora greedy dependency parser on the Stanford Dependencies conversion of the WSJ Penn Treebank.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 139, "end_pos": 147, "type": "METRIC", "confidence": 0.9988658428192139}, {"text": "Stanford Dependencies conversion", "start_pos": 185, "end_pos": 217, "type": "DATASET", "confidence": 0.8745547731717428}, {"text": "WSJ Penn Treebank", "start_pos": 225, "end_pos": 242, "type": "DATASET", "confidence": 0.9039740562438965}]}], "datasetContent": [{"text": "We use 9 datasets 2 from the CoNLL-X) and all datasets from the CoNLL-XI shared task ( . To compare our system to the current state-of-theart transition-based parsers, we also evaluate it on the Stanford Dependencies (de Marneffe and Manning, 2008) conversion (using the Stanford parser v3.3.0) 3 of the WSJ Penn Treebank (Marcus et al., 1993), hereinafter PT-SD, with standard splits.", "labels": [], "entities": [{"text": "CoNLL-X", "start_pos": 29, "end_pos": 36, "type": "DATASET", "confidence": 0.9111731648445129}, {"text": "WSJ Penn Treebank (Marcus et al., 1993)", "start_pos": 304, "end_pos": 343, "type": "DATASET", "confidence": 0.9383198738098144}, {"text": "PT-SD", "start_pos": 357, "end_pos": 362, "type": "METRIC", "confidence": 0.8043901920318604}]}, {"text": "Labelled and Unlabelled Attachment Scores (LAS and UAS) are computed excluding punctuation only on the PT-SD, for comparability.", "labels": [], "entities": [{"text": "Unlabelled Attachment Scores (LAS and UAS)", "start_pos": 13, "end_pos": 55, "type": "METRIC", "confidence": 0.7451188415288925}]}, {"text": "We repeat each experiment with three independent random initializations and report the average accuracy.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 95, "end_pos": 103, "type": "METRIC", "confidence": 0.9968641400337219}]}, {"text": "Statistical significance is assessed by a paired test with 10,000 bootstrap samples.", "labels": [], "entities": [{"text": "Statistical significance", "start_pos": 0, "end_pos": 24, "type": "METRIC", "confidence": 0.7574305534362793}]}], "tableCaptions": [{"text": " Table 1: Parsing accuracy (UAS and LAS, in- cluding punctuation) of the Covington and NL- Covington non-projective parsers on CoNLL-XI  (first block) and CoNLL-X (second block) data- sets. Best results for each language are shown in  bold. All improvements in this table are statistic- ally significant (\u03b1 = .05).", "labels": [], "entities": [{"text": "Parsing", "start_pos": 10, "end_pos": 17, "type": "METRIC", "confidence": 0.8774552941322327}, {"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.8833047151565552}, {"text": "LAS", "start_pos": 36, "end_pos": 39, "type": "METRIC", "confidence": 0.8625532388687134}, {"text": "CoNLL-X (second block) data- sets", "start_pos": 155, "end_pos": 188, "type": "DATASET", "confidence": 0.7205510474741459}]}, {"text": " Table 2: Accuracy comparison of state-of-the- art transition-based dependency parsers on PT-SD.  The \"Type\" column shows the type of parser: gs  is a greedy parser trained with a static oracle, gd a  greedy parser trained with a dynamic oracle, b(n)  a beam search parser with beam size n, dp a parser  that employs global training with dynamic pro- gramming, and c a constituent parser with conver- sion to dependencies.", "labels": [], "entities": [{"text": "PT-SD", "start_pos": 90, "end_pos": 95, "type": "DATASET", "confidence": 0.9175025820732117}]}, {"text": " Table 3: Parsing accuracy (UAS and LAS, with  punctuation) of the arc-swift and NL-Covington  parsers on CoNLL-XI (1st block) and CoNLL-X  (2nd block) datasets. Best results for each lan- guage are in bold. * indicates statistically signi- ficant improvements (\u03b1 = .05).", "labels": [], "entities": [{"text": "Parsing", "start_pos": 10, "end_pos": 17, "type": "METRIC", "confidence": 0.9565470814704895}, {"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9412224292755127}, {"text": "UAS", "start_pos": 28, "end_pos": 31, "type": "METRIC", "confidence": 0.939241349697113}, {"text": "CoNLL-XI", "start_pos": 106, "end_pos": 114, "type": "DATASET", "confidence": 0.9176830649375916}, {"text": "CoNLL-X  (2nd block) datasets", "start_pos": 131, "end_pos": 160, "type": "DATASET", "confidence": 0.7352337042490641}]}, {"text": " Table 4: Average transitions executed per sentence  (trans./sent.) when analyzing each dataset by the  original Covington and NL-Covington algorithms.", "labels": [], "entities": []}]}