{"title": [{"text": "Argument Mining with Structured SVMs and RNNs", "labels": [], "entities": [{"text": "Argument Mining", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.8115355968475342}]}], "abstractContent": [{"text": "We propose a novel factor graph model for argument mining, designed for settings in which the argumentative relations in a document do not necessarily form a tree structure.", "labels": [], "entities": [{"text": "argument mining", "start_pos": 42, "end_pos": 57, "type": "TASK", "confidence": 0.8471934199333191}]}, {"text": "(This is the casein over 20% of the web comments dataset we release.)", "labels": [], "entities": []}, {"text": "Our model jointly learns elementary unit type classification and argumentative relation prediction.", "labels": [], "entities": [{"text": "unit type classification", "start_pos": 36, "end_pos": 60, "type": "TASK", "confidence": 0.7545549074808756}, {"text": "argumentative relation prediction", "start_pos": 65, "end_pos": 98, "type": "TASK", "confidence": 0.6476527055104574}]}, {"text": "Moreover, our model supports SVM and RNN parametrizations, can enforce structure constraints (e.g., transitivity), and can express dependencies between adjacent relations and propositions.", "labels": [], "entities": []}, {"text": "Our approaches outperform unstruc-tured baselines in both web comments and argumentative essay datasets.", "labels": [], "entities": []}], "introductionContent": [{"text": "Argument mining consists of the automatic identification of argumentative structures in documents, a valuable task with applications in policy making, summarization, and education, among others.", "labels": [], "entities": [{"text": "Argument mining", "start_pos": 0, "end_pos": 15, "type": "TASK", "confidence": 0.8960383832454681}, {"text": "automatic identification of argumentative structures in documents", "start_pos": 32, "end_pos": 97, "type": "TASK", "confidence": 0.7602177560329437}, {"text": "policy making", "start_pos": 136, "end_pos": 149, "type": "TASK", "confidence": 0.7785823047161102}, {"text": "summarization", "start_pos": 151, "end_pos": 164, "type": "TASK", "confidence": 0.9846943020820618}]}, {"text": "The argument mining task includes the tightly-knit subproblems of classifying propositions into elementary unit types and detecting argumentative relations between the elementary units.", "labels": [], "entities": [{"text": "argument mining", "start_pos": 4, "end_pos": 19, "type": "TASK", "confidence": 0.8056273758411407}]}, {"text": "The desired output is a document argumentation graph structure, such as the one in, where propositions are denoted by letter subscripts, and the associated argumentation graph shows their types and support relations between them.", "labels": [], "entities": []}, {"text": "Most annotation and prediction efforts in argument mining have focused on tree or forest structures (, constraining argument structures to form one or more trees.", "labels": [], "entities": [{"text": "argument mining", "start_pos": 42, "end_pos": 57, "type": "TASK", "confidence": 0.8700827658176422}]}, {"text": "This makes the problem computationally easier by enabling the use of maximum spanning tree-style parsing ap- proaches.", "labels": [], "entities": []}, {"text": "However, argumentation in the wild can be less well-formed.", "labels": [], "entities": []}, {"text": "The argument put forth in, for instance, consists of two components: a simple tree structure and a more complex graph structure (c jointly supports band d).", "labels": [], "entities": []}, {"text": "In this work, we design a flexible and highly expressive structured prediction model for argument mining, jointly learning to classify elementary units (henceforth propositions) and to identify the argumentative relations between them (henceforth links).", "labels": [], "entities": [{"text": "argument mining", "start_pos": 89, "end_pos": 104, "type": "TASK", "confidence": 0.8052051961421967}]}, {"text": "By formulating argument mining as inference in a factor graph (), our model (described in Section 4) can account for correlations between the two tasks, can consider second order link structures (e.g., in 1, c \u2192 b \u2192 a), and can impose arbitrary constraints (e.g., transitivity).", "labels": [], "entities": [{"text": "argument mining", "start_pos": 15, "end_pos": 30, "type": "TASK", "confidence": 0.7204952239990234}]}, {"text": "To parametrize our models, we evaluate two alternative directions: linear structured SVMs (, and recurrent neural networks with structured loss, extending.", "labels": [], "entities": []}, {"text": "Interestingly, RNNs perform poorly when trained with classification losses, but become competitive with the featureengineered structured SVMs when trained within our proposed structured learning model.", "labels": [], "entities": []}, {"text": "We evaluate our approach on two argument mining datasets.", "labels": [], "entities": []}, {"text": "Firstly, on our new Cornell eRulemaking Corpus -CDCP, 2 consisting of argument annotations on comments from an eRulemaking discussion forum, where links don't always form trees shows an abridged example comment, and Section 3 describes the dataset in more detail).", "labels": [], "entities": [{"text": "Cornell eRulemaking Corpus -CDCP, 2", "start_pos": 20, "end_pos": 55, "type": "DATASET", "confidence": 0.9400039144924709}]}, {"text": "Secondly, on the UKP argumentative essays v2 (henceforth UKP), where argument graphs are annotated strictly as multiple trees.", "labels": [], "entities": [{"text": "UKP argumentative essays v2", "start_pos": 17, "end_pos": 44, "type": "DATASET", "confidence": 0.9179248958826065}, {"text": "UKP", "start_pos": 57, "end_pos": 60, "type": "DATASET", "confidence": 0.808082103729248}]}, {"text": "In both cases, the results presented in Section 5 confirm that our models outperform unstructured baselines.", "labels": [], "entities": []}, {"text": "On UKP, we improve link prediction over the best reported result in, which is based on integer linear programming postprocessing.", "labels": [], "entities": [{"text": "UKP", "start_pos": 3, "end_pos": 6, "type": "DATASET", "confidence": 0.9648528099060059}, {"text": "link prediction", "start_pos": 19, "end_pos": 34, "type": "TASK", "confidence": 0.7030843943357468}]}, {"text": "For insight into the strengths and weaknesses of the proposed models, as well as into the differences between SVM and RNN parameterizations, we perform an error analysis in Section 5.1.", "labels": [], "entities": []}, {"text": "To support argument mining research, we also release our Python implementation, Marseille.", "labels": [], "entities": [{"text": "argument mining", "start_pos": 11, "end_pos": 26, "type": "TASK", "confidence": 0.8079553842544556}, {"text": "Marseille", "start_pos": 80, "end_pos": 89, "type": "DATASET", "confidence": 0.7126485109329224}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 2: Test set F 1 scores for link and proposition classification, as well as their average, on the two  datasets. The number of test instances is shown in parentheses; best scores on overall tasks are in bold.", "labels": [], "entities": [{"text": "Test set F 1", "start_pos": 10, "end_pos": 22, "type": "METRIC", "confidence": 0.668530635535717}, {"text": "proposition classification", "start_pos": 43, "end_pos": 69, "type": "TASK", "confidence": 0.7072358578443527}]}]}