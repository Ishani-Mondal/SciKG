{"title": [{"text": "Semantic Dependency Parsing via Book Embedding", "labels": [], "entities": [{"text": "Semantic Dependency Parsing", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6570895910263062}]}], "abstractContent": [{"text": "We model a dependency graph as a book, a particular kind of topological space, for semantic dependency parsing.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 83, "end_pos": 110, "type": "TASK", "confidence": 0.7229079604148865}]}, {"text": "The spine of the book is made up of a sequence of words, and each page contains a subset of noncrossing arcs.", "labels": [], "entities": []}, {"text": "To build a semantic graph fora given sentence, we design new Maximum Subgraph algorithms to generate noncrossing graphs on each page, and a Lagrangian Relaxation-based algorithm to combine pages into a book.", "labels": [], "entities": []}, {"text": "Experiments demonstrate the effectiveness of the book embedding framework across a wide range of conditions.", "labels": [], "entities": []}, {"text": "Our parser obtains comparable results with a state-of-the-art transition-based parser.", "labels": [], "entities": []}], "introductionContent": [{"text": "Dependency analysis provides a lightweight and effective way to encode syntactic and semantic information of natural language sentences.", "labels": [], "entities": [{"text": "Dependency analysis", "start_pos": 0, "end_pos": 19, "type": "TASK", "confidence": 0.8617359697818756}]}, {"text": "One of its branches, syntactic dependency parsing has been an extremely active research area, with high-performance parsers being built and applied for practical use of NLP.", "labels": [], "entities": [{"text": "syntactic dependency parsing", "start_pos": 21, "end_pos": 49, "type": "TASK", "confidence": 0.7737537026405334}]}, {"text": "Semantic dependency parsing, however, has only been addressed in the literature recently.", "labels": [], "entities": [{"text": "Semantic dependency parsing", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.8030541936556498}]}, {"text": "Semantic dependency parsing employs a graphstructured semantic representation.", "labels": [], "entities": [{"text": "Semantic dependency parsing", "start_pos": 0, "end_pos": 27, "type": "TASK", "confidence": 0.6843400597572327}]}, {"text": "On the one hand, it is flexible enough to provide analysis for various semantic phenomena (.", "labels": [], "entities": []}, {"text": "This very flexibility, on the other hand, brings along new challenges for designing parsing algorithms.", "labels": [], "entities": [{"text": "parsing algorithms", "start_pos": 84, "end_pos": 102, "type": "TASK", "confidence": 0.9162179231643677}]}, {"text": "For graph-based parsing, no previously defined Maximum Subgraph algorithm has simultaneously a high coverage and a polynomial complexity to low degrees.", "labels": [], "entities": []}, {"text": "For transition-based parsing, no principled decoding algorithms, e.g. dynamic programming (DP), has been developed for existing transition systems.", "labels": [], "entities": [{"text": "transition-based parsing", "start_pos": 4, "end_pos": 28, "type": "TASK", "confidence": 0.6691233217716217}]}, {"text": "In this paper, we borrow the idea of book embedding from graph theory, and propose a novel framework to build parsers for flexible dependency representations.", "labels": [], "entities": []}, {"text": "In graph theory, a book is a kind of topological space that consists of a spine and a collection of one or more half-planes.", "labels": [], "entities": []}, {"text": "In our \"book model\" of semantic dependency graph, the spine is made up of a sequence of words, and each half-plane contains a subset of dependency arcs.", "labels": [], "entities": []}, {"text": "In particular, the arcs on each page compose a noncrossing dependency graph, a.k.a. planar graph.", "labels": [], "entities": []}, {"text": "Though a dependency graph in general is very flexible, its subgraph on each page is rather regular.", "labels": [], "entities": []}, {"text": "Under the new perspective, semantic dependency parsing can be cast as a two-step task: Each page is first analyzed separately, and then all the pages are bound coherently.", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 27, "end_pos": 54, "type": "TASK", "confidence": 0.761974056561788}]}, {"text": "Our work is motivated by the extant low-degree polynomial time algorithm for first-order Maximum Subgraph parsing for noncrossing dependency graphs (.", "labels": [], "entities": [{"text": "first-order Maximum Subgraph parsing", "start_pos": 77, "end_pos": 113, "type": "TASK", "confidence": 0.6661156862974167}]}, {"text": "We enhance existing work with new exact second-and approximate higher-order algorithms.", "labels": [], "entities": []}, {"text": "Our algorithms facilitate building with high accuracy the partial semantic dependency graphs on each page.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 45, "end_pos": 53, "type": "METRIC", "confidence": 0.9795901775360107}]}, {"text": "To produce a full semantic analysis, we also need to integrate partial graphs on all pages into one coherent book.", "labels": [], "entities": []}, {"text": "To this end, we formulate the problem as a combinatorial optimization problem, and propose a Lagrangian Relaxation-based algorithm for solutions.", "labels": [], "entities": []}, {"text": "We implement a practical parser in the new framework with a statistical disambiguation model.", "labels": [], "entities": []}, {"text": "We evaluate this parser on four data sets: those used in, and the dependency graphs extracted from: A fragment of a semantic dependency graph.", "labels": [], "entities": []}, {"text": "On all data sets, we find that our higher-order parsing models are more accurate than the first-order baseline.", "labels": [], "entities": []}, {"text": "Experiments also demonstrate the effectiveness of our page binding algorithm.", "labels": [], "entities": [{"text": "page binding", "start_pos": 54, "end_pos": 66, "type": "TASK", "confidence": 0.7455697953701019}]}, {"text": "Our new parser can betaken as a graph-based parser extended for more general dependency graphs.", "labels": [], "entities": [{"text": "betaken", "start_pos": 19, "end_pos": 26, "type": "TASK", "confidence": 0.9483641386032104}]}, {"text": "It parallels the state-of-the-art transition-based system of in performance.", "labels": [], "entities": []}, {"text": "The implementation of our parser is available at http://www.icst.pku.edu.cn/ lcwm/grass.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Coverage in terms of complete graphs  with respect to different pagenumbers (\"PN\" for  short). \"DM,\" \"PAS,\" \"CCD\" and \"PSD\" are short  for DeepBank, Enju HPSGBank, CCGBank and  Prague Dependency Treebank.", "labels": [], "entities": [{"text": "Prague Dependency Treebank", "start_pos": 187, "end_pos": 213, "type": "DATASET", "confidence": 0.9502794941266378}]}, {"text": " Table 2: Parsing accuracy evaluated on the development sets. \"MS\" is short for Maximum Subgraph  parsing. \"NC\" and \"LR\" are short for naive combination and Lagrangian Relaxation.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9845972657203674}, {"text": "Subgraph  parsing", "start_pos": 88, "end_pos": 105, "type": "TASK", "confidence": 0.6514338999986649}]}, {"text": " Table 3: Parsing accuracy evaluated on the test sets.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9611949920654297}]}]}