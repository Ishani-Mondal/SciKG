{"title": [{"text": "A Neural Architecture for Generating Natural Language Descriptions from Source Code Changes", "labels": [], "entities": []}], "abstractContent": [{"text": "We propose a model to automatically describe changes introduced in the source code of a program using natural language.", "labels": [], "entities": []}, {"text": "Our method receives as input a set of code commits, which contains both the modifications and message introduced by an user.", "labels": [], "entities": []}, {"text": "These two modalities are used to train an encoder-decoder architecture.", "labels": [], "entities": []}, {"text": "We evaluated our approach on twelve real world open source projects from four different programming languages.", "labels": [], "entities": []}, {"text": "Quantitative and qualitative results showed that the proposed approach can generate feasible and semantically sound descriptions not only in standard in-project settings, but also in a cross-project setting.", "labels": [], "entities": []}], "introductionContent": [{"text": "Source code, while conceived as a set of structured and sequential instructions, inherently reflects human intent: it encodes the way we command a machine to perform a task.", "labels": [], "entities": []}, {"text": "In that sense, it is expected that it follows to some extent the same distributional regularities that a proper natural language manifests (.", "labels": [], "entities": []}, {"text": "Moreover, the unambiguous nature of source code, comprised in plain and human-readable format, allows an indirect way of communication between developers, a phenomenon boosted in recent years given the current software development paradigm, where billions of lines code are written in a distributed and asynchronous way ().", "labels": [], "entities": []}, {"text": "The scale and complexity of software systems these days has naturally led to explore automated ways to support developers' code comprehension from a linguistic perspective.", "labels": [], "entities": []}, {"text": "One of these attempts is automatic summarization, which aims to generate a compact representation of the source code in a portion of natural language (.", "labels": [], "entities": [{"text": "summarization", "start_pos": 35, "end_pos": 48, "type": "TASK", "confidence": 0.7002381086349487}]}, {"text": "While existing code summarization methods are able to provide relevant insights about the purpose and functional features of the code, their scope is inherently static.", "labels": [], "entities": []}, {"text": "In contrast, software development can be seen as a sequence of incremental changes, intended to either generate anew functionality or to repair an existing one.", "labels": [], "entities": []}, {"text": "Source code changes are critical for understanding program evolution, which motivated us to explore if it is possible to extend the notion of summarization to encode code changes into natural language representations, i.e., develop a model able to explain a source code level modification.", "labels": [], "entities": []}, {"text": "With this, we envision a tool for developers that is able to i) ease the comprehension of the dynamics of the system, which could be useful for debugging and repairing purposes and ii) automate the documentation of source code changes.", "labels": [], "entities": []}, {"text": "To this end, we rely on the concept of code commit, the standard contribution procedure implemented in modern subversion systems, which provides both the actual change and a short explanatory paragraph.", "labels": [], "entities": [{"text": "code commit", "start_pos": 39, "end_pos": 50, "type": "TASK", "confidence": 0.6786075085401535}]}, {"text": "Our model consists of an encoder-decoder architecture which is trained on a set of triples conformed by the version of a system before and after the change, along with the comment.", "labels": [], "entities": []}, {"text": "Given the high heterogeneity of the modalities involved, we rely on an attention mechanism to efficiently learn the parts of the sequences that are more expressive and have more explanatory power.", "labels": [], "entities": []}, {"text": "We performed an empirical study on twelve real world software systems, from which we obtained the commit activity to evaluate our model.", "labels": [], "entities": []}, {"text": "Our experiments explored in-project and crossproject scenarios, and our results showed that the proposed model is able to generate semantically sound descriptions.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Summary of our collected data.", "labels": [], "entities": [{"text": "Summary", "start_pos": 10, "end_pos": 17, "type": "METRIC", "confidence": 0.6761424541473389}]}, {"text": " Table 3: Results on the atomic and full datasets.", "labels": [], "entities": []}]}