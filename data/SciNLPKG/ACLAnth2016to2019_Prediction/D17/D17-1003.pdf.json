{"title": [{"text": "Quasi-Second-Order Parsing for 1-Endpoint-Crossing, Pagenumber-2 Graphs", "labels": [], "entities": []}], "abstractContent": [{"text": "We propose anew Maximum Subgraph algorithm for first-order parsing to 1-endpoint-crossing, pagenumber-2 graphs.", "labels": [], "entities": []}, {"text": "Our algorithm has two characteristics: (1) it separates the construction for noncross-ing edges and crossing edges; (2) in a single construction step, whether to create anew arc is deterministic.", "labels": [], "entities": []}, {"text": "These two characteristics make our algorithm relatively easy to be extended to incorpo-riate crossing-sensitive second-order features.", "labels": [], "entities": []}, {"text": "We then introduce anew algorithm for quasi-second-order parsing.", "labels": [], "entities": []}, {"text": "Experiments demonstrate that second-order features are helpful for Maximum Subgraph parsing.", "labels": [], "entities": [{"text": "Maximum Subgraph parsing", "start_pos": 67, "end_pos": 91, "type": "TASK", "confidence": 0.697086900472641}]}], "introductionContent": [{"text": "Previous work showed that treating semantic dependency parsing as the search for Maximum Subgraphs is not only elegant in theory but also effective in practice ().", "labels": [], "entities": [{"text": "semantic dependency parsing", "start_pos": 35, "end_pos": 62, "type": "TASK", "confidence": 0.7322090069452921}]}, {"text": "In particular, our previous work showed that 1-endpoint-crossing, pagenumber-2 (1EC/P2) graphs are an appropriate graph class for modelling semantic dependency structures ).", "labels": [], "entities": []}, {"text": "On the one hand, it is highly expressive to cover a majority of semantic analysis.", "labels": [], "entities": [{"text": "semantic analysis", "start_pos": 64, "end_pos": 81, "type": "TASK", "confidence": 0.817988932132721}]}, {"text": "On the other hand, the corresponding Maximum Subgraph problem with an arc-factored disambiguation model can be solved in low-degree polynomial time.", "labels": [], "entities": []}, {"text": "Defining disambiguation models on wider contexts than individual bi-lexical dependencies improves various syntactic parsers in different architectures.", "labels": [], "entities": []}, {"text": "This paper studies exact algorithms for second-order parsing for 1EC/P2 graphs.", "labels": [], "entities": []}, {"text": "The existing algorithm, viz.", "labels": [], "entities": []}, {"text": "our previous algorithm (GCHSW, hereafter), has two properties that make it hard to incorporate higher-order features in a principled way.", "labels": [], "entities": [{"text": "GCHSW", "start_pos": 24, "end_pos": 29, "type": "DATASET", "confidence": 0.842471718788147}]}, {"text": "First, GCHSW does not explicitly consider the construction of noncrossing arcs.", "labels": [], "entities": [{"text": "GCHSW", "start_pos": 7, "end_pos": 12, "type": "DATASET", "confidence": 0.8661743998527527}]}, {"text": "We will show that incorporiating higher-order factors containing crossing arcs without increasing time and space complexity is extremely hard.", "labels": [], "entities": []}, {"text": "An effective strategy is to only include higher-order factors containing only noncrossing arcs.", "labels": [], "entities": []}, {"text": "But this crossing-sensitive strategy is incompatible with GCHSW.", "labels": [], "entities": [{"text": "GCHSW", "start_pos": 58, "end_pos": 63, "type": "DATASET", "confidence": 0.866611897945404}]}, {"text": "Second, all existing higherorder parsing algorithms for projective trees, including (, require that which arcs are created in a construction step be deterministic.", "labels": [], "entities": [{"text": "higherorder parsing", "start_pos": 21, "end_pos": 40, "type": "TASK", "confidence": 0.6541281044483185}]}, {"text": "This design is also incompatible with In summary, it is not convenient to extend GCHSW to incorporate higher-order features while keeping the same time complexity.", "labels": [], "entities": [{"text": "GCHSW", "start_pos": 81, "end_pos": 86, "type": "DATASET", "confidence": 0.8016578555107117}]}, {"text": "In this paper, we introduce an alternative Maximum Subgraph algorithm for first-order parsing to 1EC/P2 graphs.", "labels": [], "entities": []}, {"text": "while keeping the same time and space complexity to GCHSW, our new algorithm has two characteristics that make it relatively easy to be extended to incorporate crossingsensitive, second-order features: (1) it separates the construction for noncrossing edges and possible crossing edges; (2) whether an edge is created is deterministic in each construction rule.", "labels": [], "entities": [{"text": "GCHSW", "start_pos": 52, "end_pos": 57, "type": "DATASET", "confidence": 0.8705845475196838}]}, {"text": "We then introduce anew algorithm to perform secondorder parsing.", "labels": [], "entities": []}, {"text": "When all second-order scores are greater than or equal to 0, it exactly solves the corresponding optimization problem.", "labels": [], "entities": []}, {"text": "We implement a practical parser with a statistical disambiguation model and evaluate it on four data sets: those used in, and the dependency graphs extracted from.", "labels": [], "entities": []}, {"text": "On all data sets, we find that our second-order parsing models are more ac-curate than the first-order baseline.", "labels": [], "entities": []}, {"text": "If we do not use features derived from syntactic trees, we get an absolute unlabeled F-score improvement of 1.3 on average.", "labels": [], "entities": [{"text": "F-score", "start_pos": 85, "end_pos": 92, "type": "METRIC", "confidence": 0.9928609728813171}]}, {"text": "When syntactic analysis is used, we get an improvement of 0.4 on average.", "labels": [], "entities": [{"text": "syntactic analysis", "start_pos": 5, "end_pos": 23, "type": "TASK", "confidence": 0.801218569278717}]}], "datasetContent": [], "tableCaptions": [{"text": " Table 1: Parsing accuracy evaluated on the development sets.", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9725965261459351}]}, {"text": " Table 2: Parsing accuracy evaluated on the test sets. \"SJW\" denotes the book embedding parser intro- duced in", "labels": [], "entities": [{"text": "accuracy", "start_pos": 18, "end_pos": 26, "type": "METRIC", "confidence": 0.9887416958808899}]}, {"text": " Table 3: Coverage of second-order factors on the  developmenet data.", "labels": [], "entities": [{"text": "developmenet data", "start_pos": 51, "end_pos": 68, "type": "DATASET", "confidence": 0.9237352609634399}]}]}