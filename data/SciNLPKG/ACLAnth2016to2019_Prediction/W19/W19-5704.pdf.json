{"title": [{"text": "Dependently-Typed Montague Semantics in the Proof Assistant Agda-flat", "labels": [], "entities": [{"text": "Agda-flat", "start_pos": 60, "end_pos": 69, "type": "DATASET", "confidence": 0.48225218057632446}]}], "abstractContent": [{"text": "We apply the Agda-flat proof assistant (Vez-zosi, 2019) to computational semantics.", "labels": [], "entities": []}, {"text": "Computational semantics in Agda-flat is distinguished from the approach based on Coq (Chatzikyriakidis and Luo, 2014) in that it allows an implementation of the classical, inten-sional semantic analyses of Montague (1973).", "labels": [], "entities": [{"text": "Computational semantics", "start_pos": 0, "end_pos": 23, "type": "TASK", "confidence": 0.8041629195213318}]}, {"text": "That is, it synthesizes the modern dependent type theory and Montague intensional logic traditions in the computational semantics setting.", "labels": [], "entities": []}, {"text": "To demonstrate this, we show how to replicate Montague's analyses in the type theory of Zwanziger (2018), which closely corresponds to the Agda-flat system.", "labels": [], "entities": []}, {"text": "Accompanying code type-checks these analyses in Agda-flat.", "labels": [], "entities": [{"text": "Agda-flat", "start_pos": 48, "end_pos": 57, "type": "DATASET", "confidence": 0.870025634765625}]}], "introductionContent": [{"text": "Proof assistants, e.g. Coq, have been applied in computational semantics to support natural language inference.", "labels": [], "entities": [{"text": "natural language inference", "start_pos": 84, "end_pos": 110, "type": "TASK", "confidence": 0.6252312560876211}]}, {"text": "By translating (declarative) sentences of a natural language into the language of a proof assistant, the problem of whether one natural language sentence implies another is reduced to finding a proof of implication in that proof assistant.", "labels": [], "entities": []}, {"text": "Ideally, both the translation and the proof search are automated.", "labels": [], "entities": []}, {"text": "While proof assistants like Coq and the similar system Agda are adequate for implementing most semantic analyses given in the modern dependent type theory tradition, they do not provide an obvious implementation of the classical intensional semantic analyses of.", "labels": [], "entities": []}, {"text": "The criterion that a computational semantics system be general enough to capture Montague's analyses has been termed the \"Montague Test\".", "labels": [], "entities": []}, {"text": "The present work introduces computational semantics in the Agda-flat proof assistant.", "labels": [], "entities": []}, {"text": "Agda-flat) is a variation on ordinary Agda implementing a so-called comonadic modal dependent type theory.", "labels": [], "entities": []}, {"text": "Agda-flat was created by) as a tool for verifying mathematical theorems in type-theoretical foundations.", "labels": [], "entities": []}, {"text": "The logic behind the most recent mode of Agda-flat is essentially similar to CHoTT, which was isolated by as a natural dependently-typed, optionally hyperintensional analog of Montague's simply-typed intensional logic.", "labels": [], "entities": []}, {"text": "As such, Agda-flat passes (the relevant incarnation of) the Montague Test.", "labels": [], "entities": [{"text": "Agda-flat", "start_pos": 9, "end_pos": 18, "type": "METRIC", "confidence": 0.6968336701393127}, {"text": "Montague Test", "start_pos": 60, "end_pos": 73, "type": "DATASET", "confidence": 0.9486502408981323}]}, {"text": "Furthermore, CHoTT can be used as a readable notation for Agda-flat.", "labels": [], "entities": []}, {"text": "Below, we develop enough of natural language semantics in CHoTT and Agda-flat to pass the Montague Test.", "labels": [], "entities": [{"text": "Montague Test", "start_pos": 90, "end_pos": 103, "type": "DATASET", "confidence": 0.8376772105693817}]}, {"text": "In Section 2, we review the type theory CHoTT of, which closely corresponds to the Agda-flat system, and is seen to provide a dependently-typed version of Montague intensional logic.", "labels": [], "entities": []}, {"text": "In Section 3, the Montague Test sentences are translated into CHoTT.", "labels": [], "entities": [{"text": "Montague Test sentences", "start_pos": 18, "end_pos": 41, "type": "DATASET", "confidence": 0.9610083103179932}, {"text": "CHoTT", "start_pos": 62, "end_pos": 67, "type": "DATASET", "confidence": 0.8548994064331055}]}, {"text": "In Section 4, we discuss the Agda-flat system, and in particular the straightforward rendering of CHoTT sentences therein.", "labels": [], "entities": []}, {"text": "Pursuant to the translations given in Section 3, an auxiliary repository is provided type-checking the translations of all Montague Test sentences.", "labels": [], "entities": [{"text": "Montague Test sentences", "start_pos": 123, "end_pos": 146, "type": "DATASET", "confidence": 0.8893244862556458}]}], "datasetContent": [], "tableCaptions": []}