{"title": [{"text": "A Machine Learning Approach for Identifying Compound Words from a Sanskrit Text", "labels": [], "entities": [{"text": "Identifying Compound Words from a Sanskrit Text", "start_pos": 32, "end_pos": 79, "type": "TASK", "confidence": 0.8875906467437744}]}], "abstractContent": [{"text": "In this paper, we propose a classification framework for finding the compound words from a given Sanskrit text.", "labels": [], "entities": []}, {"text": "The compound word identification plays a significant role in learning the elucidations of verses in Ayurveda text books which are written in Sanskrit.", "labels": [], "entities": [{"text": "compound word identification", "start_pos": 4, "end_pos": 32, "type": "TASK", "confidence": 0.7690713802973429}]}, {"text": "This process was modelled using several classification algorithms and we examined their efficacy with varying word embedding dimensions.", "labels": [], "entities": []}, {"text": "Sanskrit words were vector-ized using fastText word embedding method.", "labels": [], "entities": [{"text": "fastText", "start_pos": 38, "end_pos": 46, "type": "DATASET", "confidence": 0.8741317391395569}]}, {"text": "The results show that the performance of K-Nearest Neighbor is better than other classifiers and the prediction accuracy is 90.38%.", "labels": [], "entities": [{"text": "prediction", "start_pos": 101, "end_pos": 111, "type": "METRIC", "confidence": 0.9224444031715393}, {"text": "accuracy", "start_pos": 112, "end_pos": 120, "type": "METRIC", "confidence": 0.7842384576797485}]}], "introductionContent": [{"text": "Compound words (\u0938\u092e\u093e\u0938) are abundant in Sanskrit.", "labels": [], "entities": []}, {"text": "These words are formed by joining two or more nominal words together and it is even possible to have a sequence of more than 10 words in a compound word.", "labels": [], "entities": []}, {"text": "Computational analysis of a compound word is hard because of its productive nature, unexpressed relationship between the component words and the semantics of a compound word often rely on the contexts (.", "labels": [], "entities": [{"text": "Computational analysis of a compound word", "start_pos": 0, "end_pos": 41, "type": "TASK", "confidence": 0.8324189484119415}]}, {"text": "Generally, compound words in any language is an open set of words and can be constructed by obeying the sandhi rules in that language.", "labels": [], "entities": []}, {"text": "However, the sandhi splitting does not impart the underlying meaning of a compound.", "labels": [], "entities": [{"text": "sandhi splitting", "start_pos": 13, "end_pos": 29, "type": "TASK", "confidence": 0.7470833957195282}]}, {"text": "To know the meaning of a compound, it is essential to identify the constituent words which in turn helps to learn the relationship between the words () ().", "labels": [], "entities": []}, {"text": "This can be achieved with the help of word segmentation algorithms,,.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 38, "end_pos": 55, "type": "TASK", "confidence": 0.737103134393692}]}, {"text": "These algorithms can segment all the words including compound words and it affects the understanding of texts written inverse (\ue242\u094b\u0915) form.", "labels": [], "entities": []}, {"text": "Ayurveda has along history and almost all the texts are written in Sanskrit.", "labels": [], "entities": []}, {"text": "Approximately 67% of the compendium were framed inverse form with the motivation to memorize it easily.", "labels": [], "entities": []}, {"text": "Despite this advantage, it is difficult fora novice to understand the meaning of averse accurately.", "labels": [], "entities": []}, {"text": "Usually, most of the students who join for Ayurveda course have little knowledge in interpreting such verses.", "labels": [], "entities": [{"text": "interpreting such verses", "start_pos": 84, "end_pos": 108, "type": "TASK", "confidence": 0.8644031087557474}]}, {"text": "In addition to that, a substantial number of words in each verse belong to the category of compound words.", "labels": [], "entities": []}, {"text": "The difficulty level of interpreting the meaning of averse again increases due to the presence of these complex words.", "labels": [], "entities": [{"text": "interpreting the meaning of averse", "start_pos": 24, "end_pos": 58, "type": "TASK", "confidence": 0.8652716994285583}]}, {"text": "This hardness can be lessened by splitting the compound words into its constituents using aforementioned computational algorithms.", "labels": [], "entities": []}, {"text": "However, one can elucidate the whole meaning of averse only after achieving the Anvaya (\u0905\ue1a8\u092f) form.", "labels": [], "entities": []}, {"text": "When we split the compounds before reordering the words may lead to the scattering of the constituent words and hence the reader loses the connection between the words as well as the meaning of the verse.", "labels": [], "entities": []}, {"text": "Therefore, a computational tool for identifying the compound words before performing the word segmentation is required for an Ayurveda student to learn the concepts and meaning of averse precisely.", "labels": [], "entities": [{"text": "word segmentation", "start_pos": 89, "end_pos": 106, "type": "TASK", "confidence": 0.7515308856964111}]}, {"text": "In this paper, we propose a machine learning tool for distinguishing compound words from non-compound words.", "labels": [], "entities": []}, {"text": "This task is modelled as a binary classification problem.", "labels": [], "entities": []}, {"text": "Various classification algorithms,) such as Na\u00efve Bayes, K-Nearest Neighbor, Decision Tree, Random Forest, Support Vector Machine, Multi-Layer Perceptron, Logistic Regression and Adaboost were used for the classification.", "labels": [], "entities": []}, {"text": "Input to the classifier is a word or a sequence of words and output is the class label which is either compound or non-compound.", "labels": [], "entities": []}, {"text": "Input words are represented as vectors using fastText) word embedding algorithm.", "labels": [], "entities": []}, {"text": "We didn't use any linguistic features for this classification.", "labels": [], "entities": []}, {"text": "2 Sanskrit compounds and non-compound words In English, words can be formed in multiple ways like compounding, prefixation, suffixation etc.,).", "labels": [], "entities": []}, {"text": "However, Sanskrit extensively uses compounding and affixation methods for the formation of words.", "labels": [], "entities": []}, {"text": "Phrasal construction is also commonly used as a word formation scheme.", "labels": [], "entities": [{"text": "Phrasal construction", "start_pos": 0, "end_pos": 20, "type": "TASK", "confidence": 0.7397797554731369}, {"text": "word formation", "start_pos": 48, "end_pos": 62, "type": "TASK", "confidence": 0.7566163241863251}]}, {"text": "A compound is typically formed by combining two or more entities.", "labels": [], "entities": []}, {"text": "These entities have their own existence when they occur independently.", "labels": [], "entities": []}, {"text": "Affixation is a different way of word formation in which morphemes are added to a root word to obtain various word forms and is not a productive process.", "labels": [], "entities": [{"text": "word formation", "start_pos": 33, "end_pos": 47, "type": "TASK", "confidence": 0.7196910232305527}]}, {"text": "Unlike the components of a compound, constituent morphemes of an affixed word do not exhibit the properties of a normal word.", "labels": [], "entities": []}, {"text": "In addition to that, compound words have the following characteristics (),", "labels": [], "entities": []}], "datasetContent": [{"text": "The compound word classification problem is a binary class problem and the words were represented using Fasttext word embedding algorithm.", "labels": [], "entities": [{"text": "compound word classification", "start_pos": 4, "end_pos": 32, "type": "TASK", "confidence": 0.6143950819969177}]}, {"text": "In this paper, we didn't use any linguistic information for representing the words.", "labels": [], "entities": []}, {"text": "We collected the tagged dataset from University of Hyderabad website 1 which contained decomposed compound words along with undecomposed non-compound words.", "labels": [], "entities": [{"text": "tagged dataset from University of Hyderabad website 1", "start_pos": 17, "end_pos": 70, "type": "DATASET", "confidence": 0.7559527046978474}]}, {"text": "The dataset contains 32,183 tokens and among which 17,479 are unique.", "labels": [], "entities": []}, {"text": "The statistics of the dataset is given in and 2.", "labels": [], "entities": []}], "tableCaptions": [{"text": " Table 3: Performance Evaluation of various classification algorithms.", "labels": [], "entities": []}, {"text": " Table 4. A grid  search method was used to fix the optimal parameters of KNN whereas the fastText hyper  parameters were determined after a series of runs with varying embedding dimensions.", "labels": [], "entities": [{"text": "KNN", "start_pos": 74, "end_pos": 77, "type": "DATASET", "confidence": 0.9049137830734253}]}, {"text": " Table 4: Parameters and their values used with KNN classifer and Fasttext word embedding  algorithms.", "labels": [], "entities": []}]}