{"title": [{"text": "Weighted parsing for grammar-based language models", "labels": [], "entities": []}], "abstractContent": [{"text": "We develop a general framework for weighted parsing which is built on top of grammar-based language models and employs flexible weight algebras.", "labels": [], "entities": [{"text": "weighted parsing", "start_pos": 35, "end_pos": 51, "type": "TASK", "confidence": 0.6840409338474274}]}, {"text": "It generalizes previous work in that area (semiring parsing, weighted de-ductive parsing) and also covers applications outside the classical scope of parsing, e.g., algebraic dynamic programming.", "labels": [], "entities": [{"text": "semiring parsing", "start_pos": 43, "end_pos": 59, "type": "TASK", "confidence": 0.6972079575061798}, {"text": "algebraic dynamic programming", "start_pos": 165, "end_pos": 194, "type": "TASK", "confidence": 0.6680918534596761}]}, {"text": "We show an algorithm which terminates and is correct fora large class of weighted grammar-based language models.", "labels": [], "entities": []}], "introductionContent": [{"text": "The weighted parsing problem takes as input a weighted language model (LM) and a syntactic object a.", "labels": [], "entities": [{"text": "weighted parsing", "start_pos": 4, "end_pos": 20, "type": "TASK", "confidence": 0.6326108574867249}]}, {"text": "For instance, the LM can be given by some grammar G, e.g., a context-free grammar (CFG) or a linear context-free rewriting system (LCFRS), and a can be some string.", "labels": [], "entities": []}, {"text": "Each ruler of G has a value (weight of r); the weight is an element of some weight algebra K.", "labels": [], "entities": []}, {"text": "That algebra has a binary commutative and associative operation \u2295 on its carrier set, which is used to handle ambiguity of G.", "labels": [], "entities": []}, {"text": "As output we expect an element k \u2208 K which is the \u2295-accumulation of the weight wt(d) K of each abstract syntax tree (AST) d of a in G, i.e., where wt(d) K is computed by other operations of the algebra K (using the weights of the occurring rules) and \u2295 is an extension of \u2295 to infinitely many summands (infinitary sum operation).", "labels": [], "entities": []}, {"text": "For instance, if K = is the set of probabilities, \u2295 = max, \u2295 = sup, and wt(d) K is the product of all weights of occurrences of rules ind, then k is the maximal probability of an AST of a in G.", "labels": [], "entities": [{"text": "AST", "start_pos": 179, "end_pos": 182, "type": "TASK", "confidence": 0.9405795931816101}]}, {"text": "Goodman (1999) developed a formal framework for weighted parsing, called semiring parsing.", "labels": [], "entities": [{"text": "semiring parsing", "start_pos": 73, "end_pos": 89, "type": "TASK", "confidence": 0.7057136297225952}]}, {"text": "As weight algebras he used complete semirings (K, \u2295, \u2297, 0, 1, \u2295 ), i.e., \u2295 is the infinitary sum operation extending \u2295.", "labels": [], "entities": []}, {"text": "The binary operation \u2297 is used to compute wt(d) K . By appropriate choices of the complete semiring, he formalized the following problems as weighted parsing problems fora CFG G and a: the calculation of recognition, string probabilities, number of derivations, derivation forests, probability of best derivation, best derivation, and best n derivations.", "labels": [], "entities": [{"text": "CFG", "start_pos": 172, "end_pos": 175, "type": "DATASET", "confidence": 0.9324687123298645}]}, {"text": "The algorithm which he proposed for solving the weighted parsing problem is a pipeline with two phases.", "labels": [], "entities": [{"text": "weighted parsing problem", "start_pos": 48, "end_pos": 72, "type": "TASK", "confidence": 0.6260546346505483}]}, {"text": "In the first phase, the CFG G, a deduction system I (, and the syntactic object a (i.e., a string) are combined into a single CFG G (using a construction idea of).", "labels": [], "entities": [{"text": "CFG", "start_pos": 24, "end_pos": 27, "type": "DATASET", "confidence": 0.8881208896636963}]}, {"text": "In the second phase, the value k (from above) is calculated, if G is acyclic.", "labels": [], "entities": []}, {"text": "1 Nederhof (2003) developed a similar framework, called weighted deductive parsing.", "labels": [], "entities": [{"text": "weighted deductive parsing", "start_pos": 56, "end_pos": 82, "type": "TASK", "confidence": 0.5587073763211569}]}, {"text": "As weight algebras he employed algebras of the form (K, min, 0, \u2126, min ) where K is a totally ordered set, min = inf (infimum), inf(K) \u2208 K, and \u2126 is a set of superior functions; a superior function f is an operation on K which is monotone nondecreasing in each argument and f (k 1 , . .", "labels": [], "entities": []}, {"text": ", km ) \u2265 max(k 1 , . .", "labels": [], "entities": []}, {"text": "The algorithm which he proposed for solving the weighted parsing problem is again a pipeline with two phases, where the first phase is the same as in the framework of and the resulting CFG G is denoted by c(G, a).", "labels": [], "entities": [{"text": "weighted parsing problem", "start_pos": 48, "end_pos": 72, "type": "TASK", "confidence": 0.6306864619255066}]}, {"text": "In the second phase, he employed the algorithm of, which generalizes the shortest distance algorithm of from graphs to hypergraphs and also works if G is cyclic.", "labels": [], "entities": []}, {"text": "If the CFG G is non-branching, i.e., a linear grammar, then in the second phase a graph algorithm can be used as an alternative to Knuth's algorithm; e.g., the single source shortest distance algorithm of if the weight algebra K is a complete semiring which is closed for G . In this paper, we generalize the two-phase pipeline approach of and as follows.", "labels": [], "entities": [{"text": "CFG", "start_pos": 7, "end_pos": 10, "type": "DATASET", "confidence": 0.923493504524231}]}, {"text": "We specify the LM by using the general approach of initial algebra semantics (.", "labels": [], "entities": []}, {"text": "For this, we employ weighted regular tree grammars (wRTG) and evaluate the generated trees (by the unique homomorphism) in some language algebra L, which provides the set of syntactic objects as carrier set.", "labels": [], "entities": []}, {"text": "This approach is very flexible and covers LMs for strings (CFG, LCFRS), but also trees and graphs.", "labels": [], "entities": [{"text": "CFG", "start_pos": 59, "end_pos": 62, "type": "DATASET", "confidence": 0.9433538317680359}]}, {"text": "Our second generalization concerns the weight algebra.", "labels": [], "entities": []}, {"text": "We consider complete multioperator monoids) which are algebras of the form (K, \u2295, 0, \u2126, \u2295 ), where \u2126 is a set of operations on K and \u2295 is the infinitary sum operation which extends \u2295.", "labels": [], "entities": []}, {"text": "We call the combination of such an LM and weight algebra weighted RTG-based language model (wRTG-LM).", "labels": [], "entities": []}, {"text": "These combinations are very general and even exceed the scope of parsing; e.g., each algebraic dynamic programming problem (), like minimum edit distance or matrix chain multiplication, can be formalized within this framework.", "labels": [], "entities": [{"text": "matrix chain multiplication", "start_pos": 157, "end_pos": 184, "type": "TASK", "confidence": 0.6343968013922373}]}, {"text": "For solving the weighted parsing problem, given a wRTG-LM and a syntactic object a, we formalize the first phase as canonical weighted deduction system, which uses a CYK-like deduction system.", "labels": [], "entities": [{"text": "weighted parsing problem", "start_pos": 16, "end_pos": 40, "type": "TASK", "confidence": 0.6719833612442017}]}, {"text": "For the second phase (value computation algorithm), we propose a generalization of Mohri's approach to hypergraphs, in the spirit of Knuth's generalization of Dijkstra's algorithm.", "labels": [], "entities": []}, {"text": "We prove (in sketches) that our weighted parsing algorithm is terminating and solves the weighted parsing problem for every closed wRTG-LM with a finitely decomposing language algebra.", "labels": [], "entities": []}, {"text": "This covers the approaches of Goodman (1999) and; our value computation algorithm subsumes the algorithms of and.", "labels": [], "entities": []}, {"text": "Due to space restrictions, we cannot show our detailed proofs of the theorems in this paper.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}