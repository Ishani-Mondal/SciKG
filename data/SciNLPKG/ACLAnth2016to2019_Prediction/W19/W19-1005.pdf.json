{"title": [{"text": "Computational Syntax-Semantics Interface with Type-Theory of Acyclic Recursion for Underspecified Semantics", "labels": [], "entities": []}], "abstractContent": [{"text": "The paper provides a technique for algorithmic syntax-semantics interface in computational grammar with underspecified semantic representations of human language.", "labels": [], "entities": []}, {"text": "The technique is introduced for expressions that contain NP quantifiers, by using computational, generalised Constraint-Based Lexicalised Grammar (GCBLG) that represents major, common syntactic characteristics of a variety of approaches to formal grammar and natural language processing (NLP).", "labels": [], "entities": []}, {"text": "Our solution can be realised by any of the grammar formalisms in the CBLG class, e.g., Head-Driven Phrase Structure Grammar (HPSG), Lexical Functional Grammar (LFG), Categorial Grammar (CG).", "labels": [], "entities": []}, {"text": "The type-theory of acyclic recursion L \u03bb ar , provides facility for representing major semantic ambiguities, as under-specification, at the object level of the formal language of L \u03bb ar , without recourse of metalanguage variables.", "labels": [], "entities": []}, {"text": "Specific semantic representations can be obtained by instantiations of underspecified L \u03bb ar-terms, in context.", "labels": [], "entities": []}, {"text": "These are subject to constraints provided by a newly introduced feature-structure description of syntax-semantics interface in GCBLG.", "labels": [], "entities": [{"text": "GCBLG", "start_pos": 127, "end_pos": 132, "type": "DATASET", "confidence": 0.9435337781906128}]}], "introductionContent": [{"text": "Ambiguity permeates human language, in all of its manifestations, by interdependences, across lexicon, syntax, semantics, discourse, context, etc.", "labels": [], "entities": []}, {"text": "Alternative interpretations may persist even when specific context and discourse resolve or discard some specific instances in syntax and semantics.", "labels": [], "entities": []}, {"text": "We present computational grammar that integrates lexicon, syntax, types, constraints, and semantics.", "labels": [], "entities": []}, {"text": "The formal facilities of the grammar have components that integrate syntactic constructions with semantic representations.", "labels": [], "entities": []}, {"text": "The syntax-semantic interface, internally in the grammar, handles some ambiguities as phenomena of underspecification inhuman language.", "labels": [], "entities": []}, {"text": "We employ a computational grammar, which we call Generalised Constraint-Based Lexicalised Grammar (GCBLG).", "labels": [], "entities": []}, {"text": "The formal system GCBLG uses feature-value descriptions and constraints in a grammar with a hierarchy of dependent types, which covers lexicon, phrasal structures, and semantic representations.", "labels": [], "entities": [{"text": "GCBLG", "start_pos": 18, "end_pos": 23, "type": "DATASET", "confidence": 0.9192634224891663}]}, {"text": "In GCBLG, for the syntax, we use feature-value descriptions, similar to that in, which are presented formally in Loukanova (2017a) as a class of formal languages designating mathematical structures of functional domains of linguistics information.", "labels": [], "entities": [{"text": "GCBLG", "start_pos": 3, "end_pos": 8, "type": "DATASET", "confidence": 0.8550339341163635}]}, {"text": "GCBLG is a generalisation from major lexical and syntactic facilities of frameworks in the class of Constraint-Based Lexicalist Grammar (CBLG) approaches.", "labels": [], "entities": [{"text": "GCBLG", "start_pos": 0, "end_pos": 5, "type": "DATASET", "confidence": 0.8532466888427734}]}, {"text": "To some extend, this is reminiscence of.", "labels": [], "entities": []}, {"text": "We lift the idea of extending classic formal grammars to cover semantic representations with semantic underspecification via syntax-semantics interface within computational grammar.", "labels": [], "entities": []}, {"text": "We introduce the technique here for varieties of grammar formalisms from the CBLG approach, in particular: Categorial Grammar (CG), e.g., see; Head-Driven Phrase Structure Grammar (HPSG), e.g., see; Lexical Functional Grammar (LFG), e.g., see,,; Tree-Adjoining Grammar (TAG), e.g., see;; and other grammar approaches, such as the Grammatical Framework GF, see.", "labels": [], "entities": []}, {"text": "The valance features that we use herewith corresponding semantic representations can be translated directly into HPSG, LFG, and Categorial Grammar (CG).", "labels": [], "entities": [{"text": "HPSG", "start_pos": 113, "end_pos": 117, "type": "DATASET", "confidence": 0.7868293523788452}]}, {"text": "The grammar rules and constraints in GCBLG, in syntax and lexicon, carry semantic representations.", "labels": [], "entities": [{"text": "GCBLG", "start_pos": 37, "end_pos": 42, "type": "DATASET", "confidence": 0.8685757517814636}]}, {"text": "The formal language of the semantic representations is a specialised feature-value encoding of terms of the formal language of acyclic recursion L \u03bb ar , see.", "labels": [], "entities": []}, {"text": "Types L \u03bb ar is the smallest set defined recursively, e.g., by presenting the rules in Backus-Naur form: Typed Vocabulary of L \u03bb ar : For each type \u03c4 \u2208 Types, L \u03bb ar has typed constants, and variables.", "labels": [], "entities": []}, {"text": ", n) and pi \u2208 RV \u03c3 i (i = 1, . .", "labels": [], "entities": []}, {"text": ", n) are such that p 1 , . .", "labels": [], "entities": []}, {"text": ", p n are pairwise different, and the sequence { p 1 := A 1 , . .", "labels": [], "entities": []}, {"text": ", p n := A n } satisfies the Acyclicity Constraint, i.e., it is acyclic, then A 0 where {p 1 := A 1 , . .", "labels": [], "entities": [{"text": "Acyclicity", "start_pos": 29, "end_pos": 39, "type": "METRIC", "confidence": 0.9845794439315796}]}, {"text": ", p n := A n } \u2208 Terms \u03c3 0 . The type assignment of the recursion term is denoted by: Acyclicity Constraint (AC): the sequence of assignments {p 1 := A 1 , . .", "labels": [], "entities": [{"text": "Acyclicity Constraint (AC)", "start_pos": 86, "end_pos": 112, "type": "METRIC", "confidence": 0.9486639142036438}]}, {"text": ", p n := A n } is acyclic iff there is a function rank : {p 1 , . .", "labels": [], "entities": []}, {"text": ", p n } \u2212\u2192 N such that, for all pi , p j \u2208 {p 1 , . .", "labels": [], "entities": []}, {"text": ", p n }, We use the meta-symbol \u2261 for identity between expressions, e.g., E 1 \u2261 E 2 , and in abbreviations.", "labels": [], "entities": []}, {"text": "The sets FreeV(A) and BoundV(A), respectively of the free and bound variables of a term A, are defined by structural recursion, in the usual way, with the exception of the recursion terms.", "labels": [], "entities": []}, {"text": "For any given recursion term A \u2261 [A 0 where {p 1 := A 1 , . .", "labels": [], "entities": []}, {"text": ", p n := A n }], all occurrences of p 1 , . .", "labels": [], "entities": []}, {"text": ", p n \u2208 RV in A are bound, and all other free (bound) occurrences of variables (constants) in A 0 , . .", "labels": [], "entities": []}, {"text": ", A n are also free (bound) in A.", "labels": [], "entities": []}, {"text": "The reduction calculus of L \u03bb ar has a set of reduction rules that reduce each L \u03bb ar -term A to its unique, up to congruence, canonical form cf(A), i.e., A \u21d2 cf(A).", "labels": [], "entities": []}, {"text": "Informally, for every A, B \u2208 Terms: A \u2248 B iff (1) A and B are proper terms and their denotations are equal and computed by the same algorithm determined by cf(A) and cf(B); (2) or, A and B are immediate, and A and B have the same denotations.", "labels": [], "entities": []}, {"text": "See and, for details on the denotational and algorithmic semantics of L \u03bb ar . For the first representation of semantic underspecification with the theory of acyclic algorithms, see.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}