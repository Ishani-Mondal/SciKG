{"title": [{"text": "Making sense of conflicting (defeasible) rules in the controlled natural language ACE: design of a system with support for existential quantification using skolemization *", "labels": [], "entities": []}], "abstractContent": [{"text": "We present the design of a system for making sense of conflicting rules expressed in a fragment of the prominent controlled natural language ACE, yet extended with means of expressing defeasi-ble rules in the form of normality assumptions.", "labels": [], "entities": []}, {"text": "The approach we describe is ultimately based on answer-set-programming (ASP); simulating existential quantification by using skolemization in a manner resembling a translation for ASP recently formalized in the context of \u2203-ASP.", "labels": [], "entities": []}, {"text": "We discuss the advantages of this approach to building on the existing ACE interface to rule-systems, ACERules.", "labels": [], "entities": []}], "introductionContent": [{"text": "Attempto Controlled English (ACE) () is a prominent controlled natural language (CNL) for knowledge representation (KR).", "labels": [], "entities": [{"text": "knowledge representation (KR)", "start_pos": 90, "end_pos": 119, "type": "TASK", "confidence": 0.8410823523998261}]}, {"text": "Apart of its appropriateness for basic KR, ACE's attraction comes, first of all, from its ties with formal logic: ACE texts have an unambiguous translation to first order logic (FOL).", "labels": [], "entities": [{"text": "FOL", "start_pos": 178, "end_pos": 181, "type": "METRIC", "confidence": 0.9148670434951782}]}, {"text": "Secondly, there are several open-source tools for ACE; the main one being the parser APE, which translates ACE texts to FOL via discourse representation structures (DRSs)) and also verbalises DRSs.", "labels": [], "entities": [{"text": "APE", "start_pos": 85, "end_pos": 88, "type": "METRIC", "confidence": 0.7321798801422119}]}, {"text": "Our interest is in the adaptation of ACE for handling conflicting information expressed in the form of strict and defeasible rules.", "labels": [], "entities": []}, {"text": "In () we outlined a methodology for this task, which we more recently dubbed the EMIL (\"Extracting Meaning out of Inconsistent Language\") pipeline.", "labels": [], "entities": [{"text": "EMIL", "start_pos": 81, "end_pos": 85, "type": "METRIC", "confidence": 0.9501348733901978}]}, {"text": "The pipeline starts outwith rules expressed in ACE (ACE rules), yet extended with means of expressing defeasible rules; currently, in the form of normality assumptions (\"it is usual that\").", "labels": [], "entities": []}, {"text": "We transform ACE rules to defeasible theories that can be evaluated via the direct stable semantics as defined in . We verbalise possible manners of making sense of the rules (the \"stable sets\"), again, by making use of ACE.", "labels": [], "entities": [{"text": "ACE", "start_pos": 220, "end_pos": 223, "type": "DATASET", "confidence": 0.9019219279289246}]}, {"text": "In () we report on an adaptation of the main existing open-source interface to rule systems for ACE, ACERules, for our purposes . At the back-end we used the ASP encodings for the direct stable semantics reported on in . Here we motivate and sketch the design of an alternative implementation of the EMIL pipeline.", "labels": [], "entities": []}, {"text": "We, first of all, target shortcomings we found in the transformations that ACERules carries out for making APE parses ammenable to handling by rule systems.", "labels": [], "entities": [{"text": "APE parses", "start_pos": 107, "end_pos": 117, "type": "TASK", "confidence": 0.9139256179332733}]}, {"text": "We refer to these in Section 2 and our alternative approach in Section 3.", "labels": [], "entities": []}, {"text": "The main difference between the approach we present here and that based on ACERules is that ACERules attempts to remove existential variables whenever possible and filters-out ACE texts composed of rules it cannot handle.", "labels": [], "entities": []}, {"text": "We here, on the other hand, simulate rules with existential quantification using skolemization in a manner resembling the procedure formalised in the context of \u2203-ASP ( (see Section 3.1).", "labels": [], "entities": []}, {"text": "A second difference is that we use dynamic encodings of the direct-stable-semantics to ASP, optimised for defeasible theories with function symbols.", "labels": [], "entities": []}, {"text": "For an extended presentation we refer to Chapter 4 of.", "labels": [], "entities": []}], "datasetContent": [], "tableCaptions": []}