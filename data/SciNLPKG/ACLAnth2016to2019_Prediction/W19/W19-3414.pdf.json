{"title": [{"text": "Prediction of a Movie's Success From Plot Summaries Using Deep Learning Models", "labels": [], "entities": [{"text": "Prediction of a Movie's Success", "start_pos": 0, "end_pos": 31, "type": "TASK", "confidence": 0.8369880119959513}]}], "abstractContent": [{"text": "As the size of investment for movie production grows bigger, the need for predicting a movie's success in early stages has increased.", "labels": [], "entities": [{"text": "predicting a movie's success", "start_pos": 74, "end_pos": 102, "type": "TASK", "confidence": 0.8584970593452453}]}, {"text": "To address this need, various approaches have been proposed, mostly relying on movie reviews , trailer movie clips, and SNS postings.", "labels": [], "entities": []}, {"text": "However, all of these are available only after a movie is produced and released.", "labels": [], "entities": []}, {"text": "To enable a more earlier prediction of a movie's performance , we propose a deep-learning based approach to predict the success of a movie using only its plot summary text.", "labels": [], "entities": []}, {"text": "This paper reports the results evaluating the efficacy of the proposed method and concludes with discussions and future work.", "labels": [], "entities": []}], "introductionContent": [{"text": "Movie industry is a huge sector within the entertainment industry.", "labels": [], "entities": []}, {"text": "The global movie box office revenue is predicted to reach nearly 50 billion U.S dollars in 2020 (.", "labels": [], "entities": []}, {"text": "With huge capital investments, the movie business is a high-risk venture).", "labels": [], "entities": []}, {"text": "Therefore, an early prediction of a movie's success can make a great contribution to the film industry, when post-production factors are unknown before the film's release.", "labels": [], "entities": []}, {"text": "This task is extremely challenging, as the success of the movie should be determined based on the scenario or plot of the movie without using the post-production drivers such as actor, actress, director, MPAA rating and etc.", "labels": [], "entities": [{"text": "MPAA rating", "start_pos": 204, "end_pos": 215, "type": "METRIC", "confidence": 0.7553337514400482}]}, {"text": "To address this issue, our work attempts to predict a movie's success from its textual summary.", "labels": [], "entities": []}, {"text": "We used the CMU Movie Summary Corpus , which contains crowd-sourced summaries from the real users.", "labels": [], "entities": [{"text": "CMU Movie Summary Corpus", "start_pos": 12, "end_pos": 36, "type": "DATASET", "confidence": 0.9394891113042831}]}, {"text": "The success of a movie is assessed with the review scores of Rotten Tomatoes , an American review-aggregation website for film and television.", "labels": [], "entities": []}, {"text": "The scoring system utilizes two scores: the tomato-meter and the audience score.", "labels": [], "entities": []}, {"text": "The tomato-meter score is estimated by hundreds of film and television critics, appraising the artistic quality of a movie.", "labels": [], "entities": []}, {"text": "The audience score is computed by the collective scores from regular movie viewers.", "labels": [], "entities": []}, {"text": "In this paper we present a deep-learning based approach to classify a movie popularity and quality labels using the movie textual summary data.", "labels": [], "entities": []}, {"text": "The primary hypothesis that we attempted to answer is to predict a movie's success in terms of popularity and artistic quality by analyzing only the textual plot summary.", "labels": [], "entities": []}, {"text": "The contributions of our research are as follows: \u2022 To prepare a data set to define a movie's success \u2022 To incorporate sentiment score in predicting a movie's success \u2022 To evaluate the efficacy of ELMO embedding in predicting a movie's success \u2022 To evaluate merged deep learning models (CNN and residual LSTM) in predicting a movie's success 2 Our Approach illustrates the system architecture that classifies an input text as successful or nonsuccessful based on the critics score and the audience score.", "labels": [], "entities": []}, {"text": "The pre-processing step tokenizes the summary text into sentences.", "labels": [], "entities": []}, {"text": "Then, the list of sentences are given to the ELMO embedding and the sentiment score extraction modules.", "labels": [], "entities": [{"text": "sentiment score extraction", "start_pos": 68, "end_pos": 94, "type": "TASK", "confidence": 0.6390565832455953}]}, {"text": "The ELMO embedding module converts the sentences into word vectors.", "labels": [], "entities": []}, {"text": "The sentiment score extractor generates a sentiment score that combines the positive and negative sentiment score of each sentence.", "labels": [], "entities": []}, {"text": "Lastly, the two  outputs are merged to classify a movie summary into the successor non-success classes.", "labels": [], "entities": []}], "datasetContent": [{"text": "We evaluated the classification performance of our approach for the audience score and for the critics score.", "labels": [], "entities": []}, {"text": "We also inspected the performance based on the movie genre.", "labels": [], "entities": []}, {"text": "We report the performance in terms of recall, precision, and F1 scores.", "labels": [], "entities": [{"text": "recall", "start_pos": 38, "end_pos": 44, "type": "METRIC", "confidence": 0.9997288584709167}, {"text": "precision", "start_pos": 46, "end_pos": 55, "type": "METRIC", "confidence": 0.9994331002235413}, {"text": "F1 scores", "start_pos": 61, "end_pos": 70, "type": "METRIC", "confidence": 0.9821153879165649}]}, {"text": "shows the performance result for the audience score.", "labels": [], "entities": []}, {"text": "We use the F1 score as the primary metric for comparison as it is the harmonic means of recall and precision.", "labels": [], "entities": [{"text": "F1 score", "start_pos": 11, "end_pos": 19, "type": "METRIC", "confidence": 0.9868659973144531}, {"text": "recall", "start_pos": 88, "end_pos": 94, "type": "METRIC", "confidence": 0.9977293610572815}, {"text": "precision", "start_pos": 99, "end_pos": 108, "type": "METRIC", "confidence": 0.9965266585350037}]}, {"text": "Overall, the classification performance of 'not popular ' movies better than that of 'popular ' ones.", "labels": [], "entities": []}, {"text": "The CNN model performed best in 'all genre ' with F1 of 0.79, which is 0.17 higher than the majority class baseline (F1 of 0.62).", "labels": [], "entities": [{"text": "CNN model", "start_pos": 4, "end_pos": 13, "type": "DATASET", "confidence": 0.9546203911304474}, {"text": "F1", "start_pos": 50, "end_pos": 52, "type": "METRIC", "confidence": 0.9997087121009827}, {"text": "F1", "start_pos": 117, "end_pos": 119, "type": "METRIC", "confidence": 0.9954324960708618}]}, {"text": "The ELMO model outperformed best in the genres of drama, thriller, comedy, and romance.", "labels": [], "entities": []}, {"text": "On the contrary, the ELMO model had the highest performance for 'popular' at 0.58 and 0.62 in overall and romance genre respectively, while LSTM and CNN had the highest performance in the rest of the genre summarizes the evaluation results for the critics score.", "labels": [], "entities": [{"text": "LSTM", "start_pos": 140, "end_pos": 144, "type": "DATASET", "confidence": 0.8976902365684509}, {"text": "CNN", "start_pos": 149, "end_pos": 152, "type": "DATASET", "confidence": 0.8968146443367004}]}], "tableCaptions": [{"text": " Table 4: The evaluation results for the audience & critics score. The best performances in F1 score are in bold.", "labels": [], "entities": [{"text": "F1 score", "start_pos": 92, "end_pos": 100, "type": "METRIC", "confidence": 0.9493849277496338}]}]}